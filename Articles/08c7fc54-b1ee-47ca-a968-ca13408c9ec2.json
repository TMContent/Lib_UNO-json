{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "08c7fc54-b1ee-47ca-a968-ca13408c9ec2"
        ],
        "Id_History": [
          "08c7fc54-b1ee-47ca-a968-ca13408c9ec2,aa2359a3-06d7-4d99-a973-75b06453c8d8,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Use Helper Classes to Assure Input Validation"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Web Application"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use Helper Classes to Assure Input Validation"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\r\n\r\n* Web Applications\r\n\r\n==What to Do==\r\n\r\nUse helper classes to assure input validation.\r\n\r\n==Why==\r\n\r\nHelper classes may help make sure that user input has been validated.\r\n\r\n==How==\r\n\r\nPerform the following actions to assure that user input is validated: \r\n\r\n# **Define a helper class.** Define a container class for user input. Since user input is most likely to be in the form of a string, declare a private string member. Declare an accessor for retrieving the value of the string member.\r\n# **Define a validation function.** Define a private validation function as a member of the helper class. This validation function may call other validation functions that are implemented in the input validation class or library.\r\n# **Define a modifier.** Define a modifier for the helper class that takes user input as an argument. Call the private validation function on user input. Return an error if user input is not valid. If user input is valid, assign user input as the value for the private string member. Now, whenever an instance of this helper class has data assigned to it, there is assurance that the data it contains has been validated.\r\n# **Use the helper class.** Identify all locations where user input is handled. Replace direct operations on user input with operations using the helper class."
        ]
      }
    ]
  }
}