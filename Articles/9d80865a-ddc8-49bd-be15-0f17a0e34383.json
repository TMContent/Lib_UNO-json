{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "9d80865a-ddc8-49bd-be15-0f17a0e34383"
        ],
        "Id_History": [
          "9d80865a-ddc8-49bd-be15-0f17a0e34383,1d9b3851-c0e3-4756-85c3-e9c39ababa02,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Force Password Renewal"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Scala Play"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Force Password Renewal"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <p>Scala and Play Framework 2.1.0+<br /></p>\r\n  <ul>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Force users to renew their passwords after a given period of time.</p>\r\n  <h1>Why</h1>\r\n  <p>Forcing users to renew their passwords reduces the risk of valid credentials becoming exposed. This technique can prevent attackers from obtaining valid credentials through the use of a Credentials Brute Force Attack or a Credentials Dictionary Attack. It can also reduce the business risk associated with any instances of discovered or leaked valid credentials.</p>\r\n  <h1>When</h1>\r\n  <p>Always force users to change their passwords after a given time period.</p>\r\n  <h1>How</h1>\r\n  <p>Use the following steps to force users to change their passwords:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Define a password change policy.&nbsp;</strong>Establish a maximum password age for your application's users. For example, require that users must change passwords every 60 days and privileged users must change passwords every 30 days.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Design a password change mechanism.&nbsp;</strong>Track the password age, and prompt the user to change their password when the password expires. For example, the following SQL transaction will help the application to determine whether a user's password has expired:</p>\r\n      <pre>sql&gt; select * from passHistory<br />      where userid = {{username}} and<br />            last_changed </pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Enforce the password change policy.&nbsp;</strong>Embed the change of password mechanism into the authentication routine. The routine should check if the current user is logged in, and if the password has not been changed since a long interval, the user should be forced to change the&nbsp;password.</p>\r\n    </li>\r\n  </ol>\r\n  <p>\r\n    <strong>Note:</strong>&nbsp;PCI DSS requirements state that a user's password must be renewed at most every 90 days and that the new password cannot be the same as the previous four.</p>\r\n  <br />"
        ]
      }
    ]
  }
}