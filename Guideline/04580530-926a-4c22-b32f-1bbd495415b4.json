{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-2060251485",
      "Content_Hash": "403751606"
    },
    "Metadata": [
      {
        "Id": [
          "04580530-926a-4c22-b32f-1bbd495415b4"
        ],
        "Id_History": [
          "04580530-926a-4c22-b32f-1bbd495415b4,268cbcb5-bf9e-4625-82e7-ac79e35344bb,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Separate Administration Privileges"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Web Application"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Separate Administration Privileges"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Alex Mackman, Michael Dunner, Srinath Vasireddy, Ray Escamilla and Anandha Murukan"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>\r\n      <div>Web Application</div>\r\n    </li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Verify that your administration interfaces support role-based authorization to differentiate between content developers and operators or system administrators.</p>\r\n  <h1>Why</h1>\r\n  <p>Inadequate separation of privileges causes no accountability or ability to perform per-user authorization.</p>\r\n  <h1>When</h1>\r\n  <p>This is important guideline and follow it all the time.&nbsp;</p>\r\n  <h1>How</h1>\r\n  <p>If the functionality supported by the features of your application's configuration management varies based on the role of the administrator, consider authorizing each role separately by using role-based authorization. For example, the person responsible for updating a site's static content should not necessarily be allowed to change a customer's credit limit.</p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}