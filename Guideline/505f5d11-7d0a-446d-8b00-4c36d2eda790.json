{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-701753144",
      "Content_Hash": "1881740928"
    },
    "Metadata": [
      {
        "Id": [
          "505f5d11-7d0a-446d-8b00-4c36d2eda790"
        ],
        "Id_History": [
          "505f5d11-7d0a-446d-8b00-4c36d2eda790,22bcde99-5156-4aeb-a67a-4eb2e7ecea86,"
        ],
        "Library_Id": [
          "26bd1a04-beed-4a66-917d-b6ab0a7d634c"
        ],
        "Title": [
          "Assign a New Session ID on Reauthentication"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Assign a New Session ID on Reauthentication"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Assign a new session ID on reauthentication.</p>\r\n  <h1>Why</h1>\r\n  <p>Assigning a new session ID on reauthentication makes it more difficult to attack the authentication system.</p>\r\n  <h1>When</h1>\r\n  <p>Assign a new session ID on reauthentication in all web applications that implement authentication.</p>\r\n  <h1>How</h1>\r\n  <p>To assign a new session ID on reauthentication:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify authentication functionality.</strong> Find code that is responsible for reauthentication.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Generate a new, strong session ID.</strong> Use a <em>SessionIDManager</em> object to manage session IDs. Call the <em>CreateSessionID</em> method to generate a unique, strong session ID for the current session.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Create the session ID cookie.</strong> Create a cookie called <em>ASP.NET_SessionId</em> and assign the cryptographically strong session ID to it. This can be done by using code similar to this:</p>\r\n          <pre>Response.Cookies.Add(new HttpCookie(\"ASP.NET_SessionId\", StrongSessionID));</pre>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information about ASP.NET session state, please see \"ASP.NET Session State Overview \" at <a href=\"http://msdn.microsoft.com/en-us/library/ms178581.aspx\">http://msdn.microsoft.com/en-us/library/ms178581.aspx</a></li>\r\n  </ul>"
        ]
      }
    ]
  }
}