{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "258487219",
      "Content_Hash": "608307018"
    },
    "Metadata": [
      {
        "Id": [
          "beba024d-f1f5-40fd-9e90-000e41a20612"
        ],
        "Id_History": [
          "beba024d-f1f5-40fd-9e90-000e41a20612,1d6b6f9d-7463-49e1-9d7f-fbe6a23281d8,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Encrypt Configuration Sections That Contain Sensitive Data"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "Encrypt Configuration Sections That Contain Sensitive Data"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft&#174; Windows Communication Foundation </li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Encrypt configuration sections that contain sensitive data such as SQL connection strings. </p>\r\n  <h1>Why</h1>\r\n  <p>Configuration sections typically contain privacy sensitive resource access credentials (e.g., a connection string for a SQL server resource includes a username and password.) As a precautionary measure, they should not be stored in plaintext, because an attacker that can compromise a server will be able to read those values if they are not adequately protected.&nbsp;</p>\r\n  <h1>When</h1>\r\n  <p>This guideline is applicable whenever configuration sections are utilized. </p>\r\n  <h1>How</h1>\r\n  <p>&nbsp;Use DPAPI to encrypt the sensitive data in the configuration file on your WCF server machine. </p>\r\n  <p>To encrypt the &lt;connectionStrings&gt; section by using the DPAPI provider with the machine-key store (the default configuration), run the following command from a command window:</p>\r\n  <pre>aspnet_regiis -pe \"connectionStrings\" -app \"/MachineDPAPI\" -prov \"DataProtectionConfigurationProvider\"</pre>\r\n  <p>The aspnet_regiis options are:</p>\r\n  <ul>\r\n    <li>-pe: Specifies the configuration section to encrypt.<li>-app: Specifies your Web application's virtual path. If your application is nested, you need to specify the nested path from the root directory; for example, \"/test/aspnet/MachineDPAPI\".<li>-prov: Specifies the provider name.</li></li></li>\r\n  </ul>\r\n  <p>\r\n    <strong>Note</strong>: If you need to encrypt configuration file data on multiple servers in a Web farm, use the RSA protected configuration provider because of the ease with which you can export RSA key containers.<br /></p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>"
        ]
      }
    ]
  }
}