{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1954781695",
      "Content_Hash": "-502124444"
    },
    "Metadata": [
      {
        "Id": [
          "3f725650-1e28-4ee0-810c-133cd5912c91"
        ],
        "Id_History": [
          "3f725650-1e28-4ee0-810c-133cd5912c91,f0348aa6-208a-4807-b7d8-3a8299c37f47,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Do Not Use Dangerous APIs"
        ],
        "Category": [
          "Dangerous APIs"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Do Not Use Dangerous APIs"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "C++"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "html"
        },
        "Data": [
          "<h1>What to Do</h1>\r\n  <p>Do not use&nbsp;dangerous&nbsp;Win32 APIs in your code. If&nbsp;you must use the API or if the API already exists in your code, inspect carefully to ensure the API is not being misused. Some dangerous APIs are very easy to misuse and it is almost always less effort to replace the API with a&nbsp;safe alternative rather than prove that the dangerous API is being used safely.</p>\r\n  <h1>Why</h1>\r\n  <p>The use of dangerous APIs may result in buffer overflows and other serious security vulnerabilities. </p>\r\n  <h1>When</h1>\r\n  <p>Any time you are writing C or C++ code that calls into Win32 APIs, be careful not to use any from the set of dangerous APIs listed below.</p>\r\n  <h1>How</h1>\r\n  <p>Review your code for the use of potentially dangerous APIs such as <b>strcpy</b> and <b>strcat</b>. A complete list of potentially dangerous APIs is listed in the table below.</p>\r\n  <p />Potentially dangerous unmanaged functions can be categorized as follows: <ul><li><b>Unbound Functions (UF).</b> These functions do not expect an explicit bound parameter for the number of bytes that might be modified for one of their parameters. These are typically the most potentially dangerous functions and should never be used. </li><li><b>NULL Terminated Functions (NTF).</b> These functions require a NULL terminated string. If they are provided a string without NULL termination, they could overwrite memory. If the code uses NULL terminated functions, make sure that the loop does not have an additional placeholder for NULL; for example, for(i = 0; i &lt;= 512; i++) should be &lt; 512 not &lt;= 512. </li><li><b>Non-NULL Terminated Functions (NNTF).</b> The output of most string functions is NULL terminated; however, the output of a few is not. These require special treatment to avoid programming defects. If the code uses non-NULL terminated functions, make sure that the loop does have an additional placeholder for NULL. </li><li><b>Format Functions (FF).</b> Format string functions allow a programmer to format their input and output. If the format is not provided, data can be manipulated and can lead to programming defects. </li></ul><p>The table below shows a range of potentially dangerous unmanaged APIs and the associated categories into which they fall.</p><p><b>Potentially Dangerous Unmanaged APIs</b></p><p /><table><tbody><tr><th>Functions</th><th>Category</th></tr><tr><td>Strcpy</td><td>UF, NTF</td></tr><tr><td>Strcat</td><td>UF, NTF</td></tr><tr><td>Strcat</td><td>NTF</td></tr><tr><td>Strlen</td><td>NTF</td></tr><tr><td>Strncpy</td><td>NNTF</td></tr><tr><td>Strncat</td><td>NTF</td></tr><tr><td>Strcmp</td><td>NTF</td></tr><tr><td>Strcmp</td><td>NTF</td></tr><tr><td>Mbcstows</td><td>NNTF</td></tr><tr><td>_strdup</td><td>NTF</td></tr><tr><td>_strrev</td><td>NTF</td></tr><tr><td>Strstr</td><td>NTF</td></tr><tr><td>Strstr</td><td>NTF</td></tr><tr><td>Sprintf</td><td>FF, NTF</td></tr><tr><td>_snprintf</td><td>FF, NTF</td></tr><tr><td>Printf</td><td>FF, NTF</td></tr><tr><td>Fprintf</td><td>FF, NTF</td></tr><tr><td>Gets</td><td>UF</td></tr><tr><td>Scanf</td><td>FF, NTF</td></tr><tr><td>Fscanf</td><td>FF, NTF</td></tr><tr><td>Sscanf</td><td>FF, NTF, </td></tr><tr><td>Strcspn</td><td>NTF</td></tr><tr><td>MultiByteToWideChar</td><td>NNTF</td></tr><tr><td>WideCharToMultiByte</td><td>NNTF</td></tr><tr><td>GetShortPathNameW</td><td>NTF</td></tr><tr><td>GetLongPathNameW</td><td>NTF</td></tr><tr><td>WinExec</td><td>NTF</td></tr><tr><td>CreateProcessW</td><td>NTF</td></tr><tr><td>GetEnvironmentVariableW</td><td>NTF</td></tr><tr><td>SetEnvironmentVariableW</td><td>NTF</td></tr><tr><td>SetEnvironmentVariableW</td><td>NTF</td></tr><tr><td>ExpandEnvironmentStringsW</td><td>NTF</td></tr><tr><td>SearchPathW</td><td>NTF</td></tr><tr><td>SearchPathW</td><td>NTF</td></tr><tr><td>SearchPathW</td><td>NTF</td></tr><tr><td>Lstrcpy</td><td>UF, NTF</td></tr><tr><td>Wcscpy</td><td>UF, NTF</td></tr><tr><td>_mbscpy</td><td>UF, NTF</td></tr><tr><td>StrCpyA</td><td>UF, NTF</td></tr><tr><td>StrCpyW</td><td>UF, NTF</td></tr><tr><td>lstrcatA</td><td>UF, NTF</td></tr><tr><td>lstrcatW</td><td>UF, NTF</td></tr><tr><td>Wcscat</td><td>UF, NTF</td></tr><tr><td>_mbscat</td><td>UF, NTF</td></tr><tr><td>Wcslen</td><td>NTF</td></tr><tr><td>_mbslen</td><td>NTF</td></tr><tr><td>_mbstrlen</td><td>NTF</td></tr><tr><td>lstrlenA</td><td>NTF</td></tr><tr><td>lstrlenW</td><td>NTF</td></tr><tr><td>Wcsncpy</td><td>NNTF</td></tr><tr><td>_mbsncpy</td><td>NNTF</td></tr><tr><td>StrCpyN</td><td>NNTF</td></tr><tr><td>lstrcpynW</td><td>NTF</td></tr><tr><td>lstrcatnA</td><td>NTF</td></tr><tr><td>lstrcatnW</td><td>NTF</td></tr><tr><td>Wcsncat</td><td>NTF</td></tr><tr><td>_mbsncat</td><td>NTF</td></tr><tr><td>_mbsnbcat</td><td>NTF </td></tr><tr><td>lstrcmpA</td><td>NTF</td></tr><tr><td>lstrcmpW</td><td>NTF</td></tr><tr><td>StrCmp</td><td>NTF</td></tr><tr><td>Wcscmp</td><td>NTF</td></tr><tr><td>_mbscmp</td><td>NTF</td></tr><tr><td>Strcoll</td><td>NTF</td></tr><tr><td>Wcscoll</td><td>NTF</td></tr><tr><td>_mbscoll</td><td>NTF</td></tr><tr><td>_stricmp</td><td>NTF</td></tr><tr><td>lstrcmpiA</td><td>NTF</td></tr><tr><td>lstrcmpiW</td><td>NTF</td></tr><tr><td>_wcsicmp</td><td>NTF</td></tr><tr><td>_mbsicmp</td><td>NTF</td></tr><tr><td>StrCmp</td><td>NTF</td></tr><tr><td>_stricoll</td><td>NTF</td></tr><tr><td>_wcsicoll</td><td>NTF</td></tr><tr><td>_mbsicoll</td><td>NTF</td></tr><tr><td>StrColl</td><td>NTF</td></tr><tr><td>_wcsdup</td><td>NTF</td></tr><tr><td>_mbsdup</td><td>NTF</td></tr><tr><td>StrDup</td><td>NTF</td></tr><tr><td>_wcsrev</td><td>NTF</td></tr><tr><td>_mbsrev</td><td>NTF</td></tr><tr><td>_strlwr</td><td>NTF</td></tr><tr><td>_mbslwr</td><td>NTF</td></tr><tr><td>_wcslwr</td><td>NTF</td></tr><tr><td>_strupr</td><td>NTF</td></tr><tr><td>_mbsupr</td><td>NTF</td></tr><tr><td>_wcsupr</td><td>NTF</td></tr><tr><td>Wcsstr</td><td>NTF</td></tr><tr><td>_mbsstr</td><td>NTF</td></tr><tr><td>Strspn</td><td>NTF</td></tr><tr><td>Wcsspn</td><td>NTF</td></tr><tr><td>_mbsspn</td><td>NTF</td></tr><tr><td>Strpbrk</td><td>NTF</td></tr><tr><td>Wcspbrk</td><td>NTF</td></tr><tr><td>_mbspbrk</td><td>NTF</td></tr><tr><td>Wcsxfrm</td><td>NTF</td></tr><tr><td>Wcscspn</td><td>NTF</td></tr><tr><td>_mbcscpn</td><td>NTF</td></tr><tr><td>Swprintf</td><td>FF</td></tr><tr><td>wsprintfA</td><td>FF</td></tr><tr><td>wsprintfW</td><td>FF</td></tr><tr><td>Vsprintf</td><td>FF</td></tr><tr><td>Vswprintf</td><td>FF</td></tr><tr><td>_snwprintf</td><td>FF</td></tr><tr><td>_vsnprintf</td><td>FF</td></tr><tr><td>_vsnwprintf</td><td>FF</td></tr><tr><td>Vprintf</td><td>FF</td></tr><tr><td>Vwprintf</td><td>FF</td></tr><tr><td>Vfprintf</td><td>FF</td></tr><tr><td>Vwfprintf</td><td>FF</td></tr><tr><td>_getws</td><td>UF</td></tr><tr><td>Fwscanf</td><td>FF</td></tr><tr><td>Wscanf</td><td>FF</td></tr><tr><td>Swscanf</td><td>FF</td></tr><tr><td>OemToCharA</td><td>UF, NTF</td></tr><tr><td>OemToCharW</td><td>UF, NTF</td></tr><tr><td>CharToOemA</td><td>UF, NTF</td></tr><tr><td>CharToOemW</td><td>UF, NTF</td></tr><tr><td>CharUpperA</td><td>NTF</td></tr><tr><td>CharUpperW</td><td>NTF</td></tr><tr><td>CharUpperBuffW</td><td>NTF</td></tr><tr><td>CharLowerA</td><td>NTF</td></tr><tr><td>CharLowerW</td><td>NTF</td></tr><tr><td>CharLowerBuffW</td><td>NTF</td></tr></tbody></table><p />"
        ]
      }
    ]
  }
}