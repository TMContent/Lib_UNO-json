{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1284194634",
      "Content_Hash": "1061837705"
    },
    "Metadata": [
      {
        "Id": [
          "2b2cfc77-07f3-4947-87d6-43b4414e1c45"
        ],
        "Id_History": [
          "2b2cfc77-07f3-4947-87d6-43b4414e1c45,4ffacecd-bccb-4868-8ca8-281cb12c3d7b,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "Secure Encryption Keys"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Web Application"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Secure Encryption Keys"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Alex Mackman, Michael Dunner, Srinath Vasireddy, Ray Escamilla and Anandha Murukan"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>\r\n      <div>Web Application</div>\r\n    </li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Examine how your application secures its encryption keys. </p>\r\n  <h1>Why</h1>\r\n  <p>The encrypted data is only as secure as the key. To decipher encrypted data, an attacker must be able to retrieve the key and the cipher text. Therefore, examine your design to ensure that the encryption keys and the encrypted data are secured. </p>\r\n  <h1>When</h1>\r\n  <p>If you use DPAPI, the platform manages the key for you. Otherwise, the application is responsible for key management. A good approach is to use DPAPI to encrypt the encryption keys that are required by other forms of encryption. Then securely store the encrypted key, for example, by placing it in the registry beneath a key configured with a restricted ACL.</p>\r\n  <h1>How</h1>\r\n  <p>An encryption key is a secret number used as input to the encryption and decryption processes. For encrypted data to remain secure, the key must be protected. If an attacker compromises the decryption key, your encrypted data is no longer secure.</p>\r\n  <p />The following practices help secure your encryption keys: <ul><li><b>Use DPAPI to avoid key management</b>. <li><b>Cycle your keys periodically</b>. </li></li></ul><h3>Use DPAPI to Avoid Key Management</h3><p>As mentioned previously, one of the major advantages of using DPAPI is that the key management issue is handled by the operating system. The key that DPAPI uses is derived from the password that is associated with the process account that calls the DPAPI functions. Use DPAPI to pass the burden of key management to the operating system.</p><h3>Cycle Your Keys Periodically</h3><p>Generally, a static secret is more likely to be discovered over time. Questions to keep in mind are: Did you write it down somewhere? Did Bob, the administrator with the secrets, change positions in your company or leave the company? Do not overuse keys.</p><h1>Additional Resources</h1><ul><li>For more information see, \"Chapter 4 - Design Guidelines for Secure Web Applications\" at <a href=\"http://msdn2.microsoft.com/en-us/library/aa302420.aspx\">http://msdn2.microsoft.com/en-us/library/aa302420.aspx</a></li></ul><hr /><p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}