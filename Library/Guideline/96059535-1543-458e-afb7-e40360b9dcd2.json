{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1407482355",
      "Content_Hash": "-1704815794"
    },
    "Metadata": [
      {
        "Id": [
          "96059535-1543-458e-afb7-e40360b9dcd2"
        ],
        "Id_History": [
          "96059535-1543-458e-afb7-e40360b9dcd2,edfe9d54-7cfa-44ae-9386-891419373c57,"
        ],
        "Library_Id": [
          "26bd1a04-beed-4a66-917d-b6ab0a7d634c"
        ],
        "Title": [
          "Use ASP.NET Session Management"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use ASP.NET Session Management"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 4.0,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Use ASP.NET session management.</p>\n  <h1>Why</h1>\n  <p>Use ASP.NET session management, because it is well implemented and fully functional. Using it prevents potential vulnerabilities introduced in a custom session management solution.</p>\n  <h1>When</h1>\n  <p>Use ASP.NET session management in all web applications that require authentication.</p>\n  <h1>How</h1>\n  <p>To use ASP.NET session management:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Configure ASP.NET session state.</strong> Configure the <em>sessionState</em> element in the <em>system.web</em> session of the <em>Web.config</em> file. The exact settings depend on your application and a lot depends on the settings you choose here. Please see the related article in the \"Additional Resources\" section for more information about configuring the <em>sessionState</em> element.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Generate a strong session ID.</strong> Use a <em>SessionIDManager</em> object to manage session IDs. Call the <em>CreateSessionID</em> method to generate a unique, strong session ID for the current session.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Create the session ID cookie.</strong> Create a cookie called <em>ASP.NET_SessionId</em> and assign the cryptographically strong session ID to it. This can be done by using code similar to this:</p>\n      <pre>Response.Cookies.Add(new HttpCookie(\"ASP.NET_SessionId\", StrongSessionID));</pre>\n    </li>\n    <li>\n      <p>\n        <strong>Manage the user session.</strong> Each ASP.NET page can access session variables through the <em>Session</em> property of the page. For more information about using session state, please see the relevant article in the \"Additional Resources\" section.</p>\n    </li>\n  </ol>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information about the ASP.NET session state, please see \"ASP.NET Session State Overview\" at <a href=\"http://msdn.microsoft.com/en-us/library/ms178581.aspx\">http://msdn.microsoft.com/en-us/library/ms178581.aspx</a></li>\n  </ul>"
        ]
      }
    ]
  }
}