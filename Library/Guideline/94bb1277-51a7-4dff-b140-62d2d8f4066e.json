{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-864198864",
      "Content_Hash": "-1447927339"
    },
    "Metadata": [
      {
        "Id": [
          "94bb1277-51a7-4dff-b140-62d2d8f4066e"
        ],
        "Id_History": [
          "94bb1277-51a7-4dff-b140-62d2d8f4066e,cfd53239-8a04-4f51-83c3-44f5a4f75dc4,"
        ],
        "Library_Id": [
          "51eb81c3-1d23-4146-ba83-8a6bb9233c11"
        ],
        "Title": [
          "Monitor the Use of Privileged Accounts"
        ],
        "Category": [
          "Auditing and Logging"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Monitor the Use of Privileged Accounts"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "C++"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\n  <p>Monitor actions taken by privileged accounts, such as administrator and root users.</p>\n  <h1>Why</h1>\n  <p>Attackers usually want to use privileged accounts, so monitoring privileged accounts provides a lot of valuable information in the event of a successful penetration. This information is also useful for detecting insider attacks.</p>\n  <h1>How</h1>\n  <p>Perform the following actions to implement monitoring the use of privileged user accounts:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify privileged user roles.</strong> Identify the types of privileged user accounts available in your application. Some example are: administrator, root, power user, manager, etc. Make a list of privileged user roles.</p>\n      <li>\n        <p>\n          <strong>Identify functionality unique to privileged users. </strong>For each type of privileged user account, make a list of functionality that this type of account can use that&nbsp; a regular user cannot. Some examples are: adding or removing user accounts, changing passwords for other users, changing application settings, shutting down the application, etc. Make a list of functionality that is unique to privileged users.</p>\n        <li>\n          <p>\n            <strong>Identify code that implements functions unique to privileged users.</strong> Use the list of actions available exclusively to privileged users to identify the functions that implement these actions. Make a list of these functions.</p>\n          <li>\n            <p>\n              <strong>Identify the logging subsystem.</strong> The logging subsystem should provide an API that allows generating log entries from application code. If this API or the logging subsystem don't exist, write them. Make a list of functions that may be used to generate log entries and collect documentation about how to use them.</p>\n            <li>\n              <p>\n                <strong>Implement monitoring of privileged accounts.</strong> Use the list of functions that perform actions unique to privileged accounts to add code that generates log entries to each of those functions. Use the list of functions in the logging subsystem when writing code that generates log entries.</p>\n            </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>Related Items</h1>\n  <ul>\n    <li>\n      <a href=\"/article/7af4efea-59f5-468a-b5a1-c423cd29744a\">Centralize Logging</a>\n    </li>\n  </ul>"
        ]
      }
    ]
  }
}