{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1222565173",
      "Content_Hash": "204032953"
    },
    "Metadata": [
      {
        "Id": [
          "4888ef0b-253e-4b1f-9f19-59bbc4cb5fdd"
        ],
        "Id_History": [
          "4888ef0b-253e-4b1f-9f19-59bbc4cb5fdd,8ab5675b-e3f8-4285-8c93-752988dcb5f5,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] Choose Windows Authentication When Possible"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Choose Windows Authentication When Possible"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "ASP.NET 3.5"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\n  <p>Whenever possible, use windows authentication instead of forms authentication. </p>\n  <h1>Why</h1>\n  <p>By using Windows authentication with Active Directory, you benefit from a unified identity store, centralized account administration, enforceable account and password policies, and strong authentication that avoids sending passwords over the network. </p>\n  <h1>When</h1>\n  <p />Use Windows authentication when you can because it provides secure credential management, password policies, and user account management tools. <p /><b>To choose between Windows authentication and forms authentication:</b><ul><li>If your user accounts are in Active Directory or are local accounts, use Windows authentication if you can. </li><li>If you cannot use Windows authentication to your Active Directory store, use forms authentication to Active Directory, and use the <b>ActiveDirectoryMembershipProvider</b>. </li><li>If your user accounts are in a SQL Server database, use forms authentication to SQL Server, by using the <b>SqlMembershipProvider</b>. </li><li>If your user accounts are in ADAM, use forms authentication to ADAM, by using the <b>ActiveDirectoryMembershipProvider</b>. </li><li>If your user accounts are in a store other than the previously listed stores, create a custom membership provider and configure forms authentication to use it. </li></ul><h1>How</h1><p />To use Windows authentication in ASP.NET, you must use Microsoft Internet Information Services (IIS) to disable anonymous access and configure a Windows-based authentication method for your Web application's virtual directory. You are generally recommended to use Windows integrated authentication, but you can also use Basic, Digest, or client certificate authentication. You must also ensure that the <b>mode</b> attribute on the &lt;<b>authentication</b>&gt; element is set to \"Windows\" (the default setting) in your Web.config file. <p /><hr /><p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}