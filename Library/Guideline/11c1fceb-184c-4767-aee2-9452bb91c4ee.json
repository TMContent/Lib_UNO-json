{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "616127395",
      "Content_Hash": "1989615734"
    },
    "Metadata": [
      {
        "Id": [
          "11c1fceb-184c-4767-aee2-9452bb91c4ee"
        ],
        "Id_History": [
          "11c1fceb-184c-4767-aee2-9452bb91c4ee,2e99eec6-ad7a-47b9-b1e9-59b1620e41d2,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "If You Store Role Information in a Custom Store, Create a Custom Authorization Policy"
        ],
        "Category": [
          "Authorization"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF 3.5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "If You Store Role Information in a Custom Store, Create a Custom Authorization Policy"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft&#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&#174; 2008</li></li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>If your application stores authorization data in a custom store such as a SQL Server database, create a custom authorization policy to authorize your users.</p>\r\n  <h1>How</h1>\r\n  <p>To create a custom authorization policy, you will implement a class derived from IAuthorizationPolicy along with an Evaluate method that you can customize for your user authorization policy.</p>\r\n  <p>The Policy library is configured in the config file or in code.&nbsp; The following example configures the policy location in the config file:</p>\r\n  <pre>&lt;serviceAuthorization serviceAuthorizationManagerType=\"Microsoft.ServiceModel.Samples.MyServiceAuthorizationManager, service\"&gt;<br />&lt;&#33;-- The serviceAuthorization behavior allows one to specify custom authorization policies. --&gt;<br />&lt;authorizationPolicies&gt;<br />&nbsp;&lt;add policyType=\"Microsoft.ServiceModel.Samples.CustomAuthorizationPolicy.MyAuthorizationPolicy, PolicyLibrary\" /&gt;<br />&lt;/authorizationPolicies&gt;<br />&lt;/serviceAuthorization&gt;</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information on custom authorization policies, see &#8220;How to: Create a Custom Authorization Policy&#8221; at <a href=\"http://msdn2.microsoft.com/en-us/library/ms733071.aspx\">http://msdn2.microsoft.com/en-us/library/ms733071.aspx</a><li>For more information on authorization, see &#8220;Authorization&#8221; at <a href=\"http://msdn2.microsoft.com/en-us/library/ms733071.aspx\">http://msdn2.microsoft.com/en-us/library/ms733071.aspx</a></li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}