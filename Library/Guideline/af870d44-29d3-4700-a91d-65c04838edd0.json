{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "703033710",
      "Content_Hash": "1313665871"
    },
    "Metadata": [
      {
        "Id": [
          "af870d44-29d3-4700-a91d-65c04838edd0"
        ],
        "Id_History": [
          "af870d44-29d3-4700-a91d-65c04838edd0,c5dc1256-0b6a-4265-ac48-107d5f54e6b5,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Check for Errors During Memory Allocation"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Check for Errors During Memory Allocation"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <ul>\n    <li>C&#43;&#43;</li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Check for errors during memory allocation.</p>\n  <h1>Why</h1>\n  <p>If memory allocation fails and the error is not handled, the result may be unpredictable and dangerous behavior of the program.</p>\n  <h1>When</h1>\n  <p>Check for and handle errors whenever allocating memory.</p>\n  <h1>How</h1>\n  <p>Perform the following actions to assure that errors during memory allocation are handled:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify memory allocation code.</strong> Find all code that allocates memory for objects. Search for calloc(), malloc(), realloc() function calls, and the new operator.</p>\n      <li>\n        <p>\n          <strong>Check return values.</strong> Calloc(), malloc(), and realloc() return null pointers when they fail. Add code that checks the return values of these functions and handles error conditions appropriately.</p>\n        <li>\n          <p>\n            <strong>Handle exceptions.</strong> The new operator throws a std::bad_alloc exception when it fails. Add code that handles the std::bad_alloc exception when the new operator is used.</p>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information about checking errors during memory allocation, please see <a href=\"https://www.securecoding.cert.org/confluence/display/cplusplus/MEM32-CPP.&#43;Detect&#43;and&#43;handle&#43;memory&#43;allocation&#43;errors\">https://www.securecoding.cert.org/confluence/display/cplusplus/MEM32-CPP.&#43;Detect&#43;and&#43;handle&#43;memory&#43;allocation&#43;errors</a></li>\n  </ul>\n  <h1>Related Items</h1>\n  <ul>\n    <li>\n      <a href=\"/article/e4a3052e-13f2-4062-9a83-49185ff14b0a\">Centralize Error Handling</a>\n    </li>\n  </ul>"
        ]
      }
    ]
  }
}