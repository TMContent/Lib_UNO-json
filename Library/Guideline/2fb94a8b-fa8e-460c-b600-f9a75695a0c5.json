{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1577077455",
      "Content_Hash": "165655733"
    },
    "Metadata": [
      {
        "Id": [
          "2fb94a8b-fa8e-460c-b600-f9a75695a0c5"
        ],
        "Id_History": [
          "2fb94a8b-fa8e-460c-b600-f9a75695a0c5,7fa55cbc-88fa-4042-9bb3-61ec471270ab,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Allow Managing User Accounts"
        ],
        "Category": [
          "Administration"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Implement Authentication And Authorization Administration"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 4.0,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "markdown"
        },
        "Data": [
          "## What to Do ##\r\n\r\nImplement an administrative interface that allows managing user accounts.\r\n\r\n\r\n## Why ##\r\n\r\nAn interface to manage user accounts is essential for performing essential security-related administrative tasks and enabling role-based authorization. Authorization controls typically need to be configured during deployment according to the principle of least privilege and an administrative interface is essential for this.\r\n\r\n\r\n## How ##\r\n\r\nTo implement an administrative interface that allows managing user accounts.\r\n\r\n1. **Identify application requirements.** Define options for configuring access control and authentication policies. At the very least, there should be an administration interface for managing user accounts and role membership, and an interface for users to manage their own accounts.\r\n2. **Make application code configurable.** Find all code responsible for authentication and authorization features. Modify this code to read settings configured by the administrative interface.\r\n3. **Design the administrative interface.** Design the interface to be used for configuring user role membership.\r\n4. **Implement the administrative interface.** Write code for the administrative interface. The administration interface should be able to read and write settings to a secure location, where the application code may access them. The saved settings should be protected with access controls to prevent unauthorized disclosure and tampering.\r\n"
        ]
      }
    ]
  }
}