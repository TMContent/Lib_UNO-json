{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1577077455",
      "Content_Hash": "165655733"
    },
    "Metadata": [
      {
        "Id": [
          "2fb94a8b-fa8e-460c-b600-f9a75695a0c5"
        ],
        "Id_History": [
          "2fb94a8b-fa8e-460c-b600-f9a75695a0c5,7fa55cbc-88fa-4042-9bb3-61ec471270ab,"
        ],
        "Library_Id": [
          "26bd1a04-beed-4a66-917d-b6ab0a7d634c"
        ],
        "Title": [
          "Implement Authentication And Authorization Administration"
        ],
        "Category": [
          "Administration"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Implement Authentication And Authorization Administration"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Implement authentication and authorization administration.</p>\r\n  <h1>Why</h1>\r\n  <p>The authentication and authorization policies should be configurable to make it possible for the users to adapt the application to their environment.</p>\r\n  <h1>When</h1>\r\n  <p>Implement authentication and authorization administration in all web applications that use authentication or authorization.</p>\r\n  <h1>How</h1>\r\n  <p>To implement authentication and authorization administration:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify application requirements.</strong> Define options for configuring access control and authentication policies. At the very least, there should be an administration panel for managing user accounts, and a page for users to manage their own accounts.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Make authentication and authorization code configurable.</strong> Find all code responsible for authentication and authorization features. Modify this code to read settings defined in the application requirements.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Design the administrative pages.</strong> Design the pages to be used for configuring access control and authentication policies based on the requirements for your application.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Implement the administration interface.</strong> Write code for the administrative pages to interface with authentication and authorization code. The administration interface should be able to read and write settings to a secure location, where the authentication and authorization code may access them. The saved settings should be protected with access controls to prevent unauthorized disclosure and tampering.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>\r\n      <p>For more information about ASP.NET role management, please see \"Understanding Role Management\" at <a href=\"http://msdn.microsoft.com/en-us/library/5k850zwb.aspx\">http://msdn.microsoft.com/en-us/library/5k850zwb.aspx</a></p>\r\n    </li>\r\n  </ul>"
        ]
      }
    ]
  }
}