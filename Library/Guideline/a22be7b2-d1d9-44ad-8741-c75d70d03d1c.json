{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1688950443",
      "Content_Hash": "753966246"
    },
    "Metadata": [
      {
        "Id": [
          "a22be7b2-d1d9-44ad-8741-c75d70d03d1c"
        ],
        "Id_History": [
          "a22be7b2-d1d9-44ad-8741-c75d70d03d1c,bc9f47da-a074-4f12-b0d2-cc1048f9fe39,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Instrument Application for User Management Events"
        ],
        "Category": [
          "Auditing and Logging"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Instrument Application for User Management Events"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\r\n  <p>Instrument your application for all user management events, including authentication successes and failures, password resets or changes, account lockouts, etc. </p>\r\n  <h1>Why</h1>\r\n  <p>Doing this helps you to detect and react to potentially suspicious behavior.&nbsp; It also enables you to gather operations data; for example, to track who is accessing your application and when user account passwords need to be reset.&nbsp;&nbsp;</p>\r\n  <h1>When</h1>\r\n  <p>All systems with authentication components should log when those components are used, both successfully and unsuccessfully. </p>\r\n  <h1>How</h1>\r\n  <p>By default, ASP.NET health monitoring records all <b>WebFailureAuditEvents</b>, which ASP.NET raises when user authentication fails in forms authentication with the membership system.&nbsp; ASP.NET also raises a <b>WebFailureAuditEvent</b> when authorization is not granted to a resource protected by file authorization and URL authorization. </p>\r\n  <p />\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
        ]
      }
    ]
  }
}