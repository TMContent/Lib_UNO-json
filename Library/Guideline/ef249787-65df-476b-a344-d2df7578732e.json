{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1470221192",
      "Content_Hash": "-418754753"
    },
    "Metadata": [
      {
        "Id": [
          "ef249787-65df-476b-a344-d2df7578732e"
        ],
        "Id_History": [
          "ef249787-65df-476b-a344-d2df7578732e,37604ebe-1ad7-4eab-a610-093d36889629,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Use Strong Cryptographic Algorithms to Secure Sensitive Data"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use Strong Cryptographic Algorithms to Secure Sensitive Data"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "C++"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\r\n  <p>Encrypt sensitive data using strong cryptographic algorithms.</p>\r\n  <h1>Why</h1>\r\n  <p>As commercially available computing power rapidly increases and new threats emerge, it becomes more and more important to use strong cryptographic algorithms to secure sensitive data. Strong cryptographic algorithms assure that an attacker cannot break encryption in a timely manner.</p>\r\n  <h1>When</h1>\r\n  <p>Use this guideline whenever your application handles sensitive data.</p>\r\n  <h1>How</h1>\r\n  <p>Perform the following actions to encrypt sensitive data:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify sensitive data.</strong> Review your application design to determine what kinds of sensitive data your application handles.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Choose cryptographic algorithms.</strong> Strong symmetric algorithms are AES and, to a lesser extent, 3-DES. Strong assymetric encryption algorithms are RSA, Elliptic Curve, and NTRU. The recommended key strengths are: 256-bit for AES, 3-DES key length is fixed at 168-bit, 1024-bit or more for RSA, 384-bit for Elliptic Curve cryptography, and 80-bit for NTRU.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Choose libraries and APIs.</strong> Find libraries that implement your chosen cryptographic algorithms. In some cases, they may be implemented by the platform. Find out the APIs for using these algorithms.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Implement encryption.</strong> Add functions to your applications that uses your chosen cryptographic APIs to encrypt and decrypt all the types of sensitive data that your application handles.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Use encryption.</strong> Find code that handles sensitive data. Add code that calls your new encryption functions to encrypt and decrypt sensitive data as appropriate.</p>\r\n    </li>\r\n  </ol>"
        ]
      }
    ]
  }
}