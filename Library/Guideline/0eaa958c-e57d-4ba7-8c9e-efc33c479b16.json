{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1510273035",
      "Content_Hash": "1166489282"
    },
    "Metadata": [
      {
        "Id": [
          "0eaa958c-e57d-4ba7-8c9e-efc33c479b16"
        ],
        "Id_History": [
          "0eaa958c-e57d-4ba7-8c9e-efc33c479b16,9b45a2ad-71d0-4057-8d2b-d640fda2d86d,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "Implement BeforeSendReply Method to Validate Outbound Messages on the Service"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Implement BeforeSendReply Method to Validate Outbound Messages on the Service"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 \r\n<li>Microsoft Visual Studio® 2008</li></li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>If you need to perform validation on service of outbound messages, implement the BeforeSendReply of the interface IDispatchMessageInspector of the message inspector. </p>\r\n  <h1>Why</h1>\r\n  <p>This will validate the message before sending the response to the client and the service operation invocation and serialization.</p>\r\n  <h1>When</h1>\r\n  <p>Outbound message validation will be required if you want to validate the message, before sending the response to the client, so you can validate output parameters, message and data contracts.</p>\r\n  <h1>How</h1>\r\n  <p>Following code example shows how to implement the BeforeSendReply method.</p>\r\n  <pre>void IDispatchMessageInspector.BeforeSendReply(ref System.ServiceModel.Channels.Message reply, object correlationState)<br />{<br />    try<br />    {<br />        validateMessage(ref reply);                <br />    }<br />    catch (FaultException fault)<br />    {<br />        // if a validation error occurred, the message is replaced<br />        // with the validation fault.<br />        reply = Message.CreateMessage(reply.Version, new FaultException(\"validation error in reply message\").CreateMessageFault() , reply.Headers.Action);<br />    }<br />}</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information, see “How to: Inspect and Modify Messages on the Service” at <a href=\"http://msdn2.microsoft.com/en-us/library/ms733104.aspx\">http://msdn2.microsoft.com/en-us/library/ms733104.aspx</a><li>For more information, see “How to: Inspect or Modify Parameters” at <a href=\"http://msdn2.microsoft.com/en-us/library/ms733747.aspx\">http://msdn2.microsoft.com/en-us/library/ms733747.aspx</a></li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}