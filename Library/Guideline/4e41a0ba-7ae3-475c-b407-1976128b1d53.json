{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1955406914",
      "Content_Hash": "1192968517"
    },
    "Metadata": [
      {
        "Id": [
          "4e41a0ba-7ae3-475c-b407-1976128b1d53"
        ],
        "Id_History": [
          "4e41a0ba-7ae3-475c-b407-1976128b1d53,0fd809ae-c453-4502-be44-55408e795f1b,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "Use a Fault Contract to Return Error Information to Clients"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF 3.5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use a Fault Contract to Return Error Information to Clients"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 \r\n<li>Microsoft Visual Studio® 2008</li></li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Use a fault contract to define the exceptions in your service and return error information to clients. </p>\r\n  <h1>Why</h1>\r\n  <p>By using the FaultContract attribute in a service contract you can specify the possible faults that can occur in your WCF service.</p>\r\n  <h1>When</h1>\r\n  <p>If there is an exception in your WCF service operation, use the FaultContract attribute to generate a specific SOAP fault message that will be sent back to the client application. The FaultContract attribute can only be used in operations that return a response. You cannot use this attribute on a one-way operation.</p>\r\n  <h1>How</h1>\r\n  <p>The following code snippet shows how to use the FaultContract attribute to return error information.</p>\r\n  <ol>\r\n    <li>Define the type to pass the details of SOAP faults as exceptions from a service back to a client \r\n<ol><pre>[DataContract]<br />public class DatabaseFault<br />{<br />    [DataMember]<br />    public string DbOperation;<br />    [DataMember]<br />    public string DbReason<br />    [DataMember]<br />    public string DbMessage;<br />}</pre></ol><li><div>Use the FaultContract attribute in the ListCustomers method to generate SOAP faults.</div><ol><pre>[ServiceContract]<br />public interface ICustomerService<br />{<br />    // Get the list of customers<br />    [FaultContract(typeof(DatabaseFault))]<br />    [OperationContract]<br />    List&lt;string&gt; ListCustomers();<br />    …<br />}</pre></ol><li>Create and populate the DatabaseFault object with the details of the exception in the Service implementation class and then throw a FaultException object with the DatabaseFault object details. \r\n<ol><pre>catch(Exception e)<br />{    DatabaseFault df = new DatabaseFault();<br />    df.DbOperation = \"ExecuteReader\";<br />    df.DbReason = \"Exception in querying the Northwind database.\";<br />    df.DbMessage = e.Message;<br />    throw new FaultException&lt;DatabaseFault&gt;(df);<br />}</pre></ol></li></li></li>\r\n  </ol>\r\n  <h1>\r\n    <a href=\"http://www.codeplex.com/WCFSecurity/Wiki/View.aspx?title=Questions%20and%20Answers&referringTitle=Home\">\r\n    </a>\r\n  </h1>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}