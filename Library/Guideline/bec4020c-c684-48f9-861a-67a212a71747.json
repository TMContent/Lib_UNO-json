{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1449736641",
      "Content_Hash": "1499703071"
    },
    "Metadata": [
      {
        "Id": [
          "bec4020c-c684-48f9-861a-67a212a71747"
        ],
        "Id_History": [
          "bec4020c-c684-48f9-861a-67a212a71747,8beb17f0-e2b0-43db-8bce-352023939083,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Protect Sensitive Data in Your Configuration Files"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Protect Sensitive Data in Your Configuration Files"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft&#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&#174; 2008</li></li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Protect the sensitive data, such as SQL connection strings, in your configuration files by encrypting it.&nbsp;</p>\r\n  <h1>Why</h1>\r\n  <p>Connection strings stored in plaintext are dangerous, because an attacker that can compromise a server will be able to read those connection strings. Even if a machine is not compromised, connection strings stored in plaintext are accessible to administrators and any other users with sufficient privileges on the host machine and/or Windows domain.</p>\r\n  <h1>How</h1>\r\n  <p>Use DPAPI to encrypt the sensitive data in the configuration file on your WCF server machine. To encrypt the &lt;connectionStrings&gt; section by using the DPAPI provider with the machine-key store (the default configuration), run the following command from a command window:</p>\r\n  <pre>aspnet_regiis -pe \"connectionStrings\" -app \"/MachineDPAPI\" -prov \"DataProtectionConfigurationProvider\"</pre>\r\n  <p>The aspnet_regiis options are:</p>\r\n  <ul>\r\n    <li>-pe - Specifies the configuration section to encrypt.</li>\r\n    <li>-app - Specifies your Web application&#8217;s virtual path. If your application is nested, you need to specify the nested path from the root directory; for example, \"/test/aspnet/MachineDPAPI\".</li>\r\n    <li>-prov - Specifies the provider name.<br /></li>\r\n  </ul>\r\n  <p>If you need to encrypt configuration file data on multiple servers in a Web farm, use the RSA protected configuration provider because of the ease with which you can export RSA key containers.<br /></p>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information on using DPAPI, see &#8220;How To: Encrypt Configuration Sections in ASP.NET 2.0 Using DPAPI&#8221; at <a href=\"http://msdn2.microsoft.com/en-us/library/ms998280.aspx\">http://msdn2.microsoft.com/en-us/library/ms998280.aspx</a><li>For more information on using RSA, see &#8220;How To: Encrypt Configuration Sections in ASP.NET 2.0 Using RSA&#8221; at <a href=\"http://msdn2.microsoft.com/en-us/library/ms998283.aspx\">http://msdn2.microsoft.com/en-us/library/ms998283.aspx</a></li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}