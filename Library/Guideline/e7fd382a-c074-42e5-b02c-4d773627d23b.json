{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1640756633",
      "Content_Hash": "804612464"
    },
    "Metadata": [
      {
        "Id": [
          "e7fd382a-c074-42e5-b02c-4d773627d23b"
        ],
        "Id_History": [
          "e7fd382a-c074-42e5-b02c-4d773627d23b,61645ddf-942b-4ef2-84ae-4b84ecfb5f4f,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Don't Use User Input in Format Strings"
        ],
        "Category": [
          "Dangerous APIs"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Don't Use User Input in Format Strings"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>C&#43;&#43;</li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Don't use user input in format strings. Use C&#43;&#43; stream functions to avoid using formatted input-output functions, if possible. (Re-)Write code to guarantee that user input is never used in format strings.</p>\r\n  <h1>Why</h1>\r\n  <p>An attacker that can control the contents of a format string may be able to execute arbitrary code.</p>\r\n  <h1>When</h1>\r\n  <p>Avoid using user input in format strings when using formatted input-output functions.</p>\r\n  <h1>How</h1>\r\n  <p>Perform the following actions to assure that user input is not used in format strings:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify code that uses&nbsp;formatted input-output functions.</strong> The following is a list of formatted input-output functions:</p>\r\n      <ul>\r\n        <li>sprintf <li>_snprintf <li>printf <li>fprintf <li>scanf&nbsp; <li>fscanf<li>sscanf<li>swprintf <li>wsprintfA <li>wsprintfW <li>vsprintf <li>vswprintf <li>_snwprintf <li>_vsnprintf <li>_vsnwprintf <li>vprintf <li>vwprintf <li>vfprintf <li>vwfprintf <li>fwscanf <li>wscanf <li>swscanf</li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li>\r\n      </ul>\r\n      <li>\r\n        <p>\r\n          <strong>Avoid using formatted functions.</strong> Consider replacing formatted input-output functions with iostream C&#43;&#43; functions, which are not prone to format string vulnerabilities.</p>\r\n        <li>\r\n          <p>\r\n            <strong>(Re-)Write code to exclude user input from format strings.</strong> Place user input in separate variables and pass it as variadic arguments to the formatted input-output functions, instead of placing it in a format strings.</p>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information about excluding user input from format strings, please see&nbsp;<a href=\"https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.&#43;Exclude&#43;user&#43;input&#43;from&#43;format&#43;strings\">https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.&#43;Exclude&#43;user&#43;input&#43;from&#43;format&#43;strings</a></li>\r\n  </ul>\r\n  <h1>Related Items</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/4c14cec5-2f6c-41e6-8f4e-e6135dd2b745\">Protect Against Format String Problems</a>\r\n    </li>\r\n  </ul>"
        ]
      }
    ]
  }
}