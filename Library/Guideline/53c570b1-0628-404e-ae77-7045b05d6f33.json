{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1483727213",
      "Content_Hash": "-76361518"
    },
    "Metadata": [
      {
        "Id": [
          "53c570b1-0628-404e-ae77-7045b05d6f33"
        ],
        "Id_History": [
          "53c570b1-0628-404e-ae77-7045b05d6f33,3350d79e-c415-4897-87bf-ee0bd9c4ff6d,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Minimize the Exposure of Secrets in Memory"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Minimize the Exposure of Secrets in Memory"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "C++"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\n  <p>When manipulating secrets, consider how the secret data is stored in memory. How long is the secret data retained in clear text format?</p>\n  <h1>Why</h1>\n  <p>Clear text secrets held in your process address space are vulnerable if an attacker is able to probe your application's address space. Also, if the page of memory containing the secret is swapped out to the page file, the secret data is vulnerable if someone gains access to the page file. Similarly, clear text secrets held in memory appear in the crash dump file if a process crashes.</p>\n  <h1>When</h1>\n  <p>When working with sensitive data within your application.</p>\n  <h1>How</h1>\n  <p>To minimize the exposure of secrets in memory, consider the following measures: </p>\n  <ol>\n    <li>\n      <p>\n        <b>Avoid creating multiple copies of the secret</b>. Having multiple copies of the secret data increases your attack surface. Pass references to secret data instead of making copies of the data. </p>\n      <li>\n        <p>\n          <b>Keep the secret encrypted for as long as possible</b>. Decrypt the data at the last possible moment before you need to use the secret. </p>\n        <li>\n          <p>\n            <b>Clean the clear text version of the secret as soon as you can</b>. Replace the clear text copy of the secret data with zeros as soon as you have finished with it.</p>\n        </li>\n      </li>\n    </li>\n  </ol>"
        ]
      }
    ]
  }
}