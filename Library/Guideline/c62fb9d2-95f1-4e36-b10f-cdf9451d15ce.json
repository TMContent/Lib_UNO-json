{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1061822124",
      "Content_Hash": "32850559"
    },
    "Metadata": [
      {
        "Id": [
          "c62fb9d2-95f1-4e36-b10f-cdf9451d15ce"
        ],
        "Id_History": [
          "c62fb9d2-95f1-4e36-b10f-cdf9451d15ce,47bf9abc-9580-47d7-8138-112197f1aa41,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Allocate Enough Buffer Space for Copying Data"
        ],
        "Category": [
          "Memory Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Allocate Enough Buffer Space for Copying Data"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "C++"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <ul>\n    <li>C&#43;&#43;</li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Only copy the amount of data that can fit in the array or string. Make sure that the array or string is large enough to fit all the data, including the possible trailing null.</p>\n  <h1>Why</h1>\n  <p>Copying more data than an array or string can fit results in a buffer overflow.</p>\n  <h1>When</h1>\n  <p>Allocate enough buffer space for copying data, when data is being copied to an array or a string.</p>\n  <h1>How</h1>\n  <p>Perform the following steps to assure that your code allocates enough buffer space when copying data to prevent buffer overflows:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify all functions that copy data to strings or arrays.</strong> List the components, modules, and libraries that do the most amount of data handling. Usually there exists some code heavy on manipulating data that copies many buffers or constructs various strings.</p>\n      <li>\n        <p>\n          <strong>Calculate the amount of memory that is used by data being copied or set a maximum size limit for valid data.</strong> Make sure to include a trailing null if a null-terminated string is being copied. When calculating the size of data, count the amount of memory it uses, not the amount of elements in the array. Be careful when using the sizeof() function, because it returns the size of a pointer when an array containing data is passed as a parameter to the function. The memory size of data should be calculated beforehand, ideally in the same scope in which the data structure containing data is declared, and passed as an argument to the function that does the copying.</p>\n        <li>\n          <p>\n            <strong>Allocate memory for the buffer.</strong> Once the amount of memory needed to fit all the data is determined, allocate an array or a string of a sufficient size. Write code to handle possible memory allocation errors.</p>\n          <li>\n            <p>\n              <strong>Check bounds when copying.</strong> Use the size of the allocated array or string when copying to assure that only the amount of data that fits into the array is copied. This should always be the case if the amount of memory to allocate is calculated correctly, but for extra security it is a good idea to write code in a way that truncates data if it doesn't fit into the buffer.</p>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information about assuring that data is copied to sufficiently large storage, please see \"ARR33-C. Guarantee that copies are made into storage of sufficient size\" at <a href=\"https://www.securecoding.cert.org/confluence/display/seccode/ARR33-C.&#43;Guarantee&#43;that&#43;copies&#43;are&#43;made&#43;into&#43;storage&#43;of&#43;sufficient&#43;size\">https://www.securecoding.cert.org/confluence/display/seccode/ARR33-C.&#43;Guarantee&#43;that&#43;copies&#43;are&#43;made&#43;into&#43;storage&#43;of&#43;sufficient&#43;size</a></li>\n  </ul>\n  <h1>Related Items</h1>\n  <ul>\n    <li>\n      <a href=\"/article/54ee5a30-738f-4ca6-a1eb-ab6e58152f7b\">Get the Size of an Array Correctly</a>\n      <li>\n        <a href=\"/article/bf5f6cb5-4a28-496f-9023-9e521e7dac6d\">How to Test for Buffer Overflow Vulnerabilities</a>\n      </li>\n    </li>\n  </ul>"
        ]
      }
    ]
  }
}