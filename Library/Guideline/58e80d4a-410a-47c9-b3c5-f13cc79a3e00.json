{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-125997273",
      "Content_Hash": "-1653062883"
    },
    "Metadata": [
      {
        "Id": [
          "58e80d4a-410a-47c9-b3c5-f13cc79a3e00"
        ],
        "Id_History": [
          "58e80d4a-410a-47c9-b3c5-f13cc79a3e00,1249c76c-49f7-4ccf-8f44-8645bb495e9f,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Partition the Application Between Public And Private Domains"
        ],
        "Category": [
          "Authorization"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Partition the Application Between Public And Private Domains"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <ul>\n    <li>Applications written using Servlets or JSP.</li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Define a boundary between public and restricted content.</p>\n  <h1>Why</h1>\n  <p>Defining a boundary between public and restricted content helps establish the check points&nbsp;where access will be allowed&nbsp;to the restricted content.</p>\n  <h1>When</h1>\n  <p>If your application has access control that&nbsp;restricts certain users to specific resources, then define a boundary between those resources. For instance, anonymous users are restricted&nbsp;to one part of the application, while&nbsp;authenticated users can access both parts.</p>\n  <h1>How</h1>\n  <p>Defining the boundary requires:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Determine roles. </strong>Define the various types of users and their rights. Build a security policy for the restricted content and base the user groups' privileges around it. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Define the boundary. </strong>Structure the content according to access and logical orders. Try to use a modular approach when establishing the boundary. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Separate on disk. </strong>Once the boundaries have been established, reflect these boundaries onto the local file system. Separate the restricted content from the public content on disk. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Set proper permissions. </strong>Set proper permissions to the restricted content. Dedicate a special directory for the restricted content and require valid access before accessing content within this directory. These permissions can be enforced at the application, server and operating system levels, depending on the environment in use.</p>\n    </li>\n  </ol>\n  <br />"
        ]
      }
    ]
  }
}