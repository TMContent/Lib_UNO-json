{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1797799726",
      "Content_Hash": "-390816996"
    },
    "Metadata": [
      {
        "Id": [
          "30abc3c9-d288-4e8a-a614-fd1a1f331270"
        ],
        "Id_History": [
          "30abc3c9-d288-4e8a-a614-fd1a1f331270,38db3d39-f5e7-4df4-a57c-b0447336a5db,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Java Do Not Disclose Valuable Information During Authentication Errors"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Do Not Disclose Valuable Information During Authentication Errors"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n* Servlets or JSP\r\n\r\n\r\n## Summary ##\r\n\r\nDisplay a generic message when authentication fails. Disclosing information regarding invalid usernames and passwords can help an attacker obtain a list of valid users.\r\n\r\n\r\n## Problem Example ##\r\n\r\nThe following code authenticates a user. Unfortunately, the code reveals through its error messages whether the credentials sent represent a valid user or an invalid user:\r\n\r\n~~~~\r\npublic void login() throws AuthenticationException\r\n{\r\n      if (!validUser())\r\n      {\r\n            throw new AuthenticationException(\"User not found.\");\r\n      }\r\n\r\n      if (!validPass())\r\n      {\r\n            throw new AuthenticationException(\"Wrong password.\");\r\n      }\r\n\r\n      commit();\r\n}\r\n~~~~\r\n\r\n\r\n## Solution Example ##\r\n\r\nThe following code authenticates a user. Since it presents the same error message regardless of why the authentication failed, an attacker can't determine if the credentials tried represent a valid user or not.\r\n\r\n~~~~\r\npublic void login() throws AuthenticationException\r\n{\r\n      if (!validUser() || !validPass())\r\n      {\r\n            throw new AuthenticationException(\"Authentication failed.\");\r\n      }\r\n\r\n      commit();\r\n}\r\n~~~~"
        ]
      }
    ]
  }
}