{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-739137994",
      "Content_Hash": "646633777"
    },
    "Metadata": [
      {
        "Id": [
          "3aef9249-12f2-44cd-bffa-2d88bcf3ce13"
        ],
        "Id_History": [
          "3aef9249-12f2-44cd-bffa-2d88bcf3ce13,58bd5e4b-8e33-4fdf-a5e2-2ea14eb1ac84,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Log Important Event Details"
        ],
        "Category": [
          "Auditing and Logging"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "PHP"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Log Important Event Details"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>PHP</li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Write applications that include important details in log entries.</p>\r\n  <h1>Why</h1>\r\n  <p>Log event entries should include important details so that the contents of the logs are useful for forensics and system administration.</p>\r\n  <h1>How</h1>\r\n  <p>Perform the following actions to add code that logs important event details:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify existing logging functionality.</strong> Look for libraries or classes that are designed specifically for logging. Make a list of functions used to generate log entries and document them.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Centralize logging.</strong> If a dedicated logging library or class doesn't exist, design and write one. </p>\r\n        <li>\r\n          <p>\r\n            <strong>Implement logging.</strong> Dedicated logging functions exist in PHP. Please, see the \"Centralized Logging\" guideline for more information. Add code that records the following details in log entries:</p>\r\n          <ul>\r\n            <li>User identification <li>Type of event <li>Date and time stamp <li>Success or failure indication <li>Source of event <li>Names or other identifiers of affected data or resources </li></li></li></li></li></li>\r\n          </ul>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>"
        ]
      }
    ]
  }
}