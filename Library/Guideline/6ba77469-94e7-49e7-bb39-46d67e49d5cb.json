{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-850158993",
      "Content_Hash": "1127965205"
    },
    "Metadata": [
      {
        "Id": [
          "6ba77469-94e7-49e7-bb39-46d67e49d5cb"
        ],
        "Id_History": [
          "6ba77469-94e7-49e7-bb39-46d67e49d5cb,01946c03-6e41-4363-b644-de6e0c9432c7,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "When Impersonating Programmatically Be Sure to Revert to Original Context"
        ],
        "Category": [
          "Impersonation and Delegation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "When Impersonating Programmatically Be Sure to Revert to Original Context"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft&#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&#174; 2008</li></li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>When using programmatic impersonation, revert to the original security context as soon as possible.</p>\r\n  <h1>Why</h1>\r\n  <p>If you do not remember to revert, your application&#8217;s attack surface will be increased as it will be running under higher privileges than necessary. Use the using statement to revert impersonation automatically.</p>\r\n  <h1>How </h1>\r\n  <p>The following code snippet shows how to impersonate programmatically:</p>\r\n  <pre>public string GetData(int value)<br />&#123; <br /> using (ServiceSecurityContext.Current.WindowsIdentity.Impersonate())<br /> &#123;<br />     // return the impersonated user (original users identity)<br />     return string.Format(\"Hi, &#123;0&#125;, you have entered: &#123;1&#125;\",<br />          WindowsIdentity.GetCurrent().Name, value);<br /> &#125;<br />&#125;</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information, see &#8220;Delegation and Impersonation with WCF&#8221; at <a href=\"http://msdn2.microsoft.com/en-us/library/ms730088.aspx\">http://msdn2.microsoft.com/en-us/library/ms730088.aspx</a><li>For impersonation and delegation Q&A, see the Impersonation/Delegation section of &#8220;WCF 3.5 Questions and Answers&#8220; at <a href=\"http://www.codeplex.com/WCFSecurity/Wiki/View.aspx?title=Questions&#37;20and&#37;20Answers&referringTitle=Home\">http://www.codeplex.com/WCFSecurity/Wiki/View.aspx?title=Questions&#37;20and&#37;20Answers&referringTitle=Home</a></li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}