{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1648725944",
      "Content_Hash": "506244354"
    },
    "Metadata": [
      {
        "Id": [
          "556c8ebc-e406-4050-a1f1-bc6240f8cdd4"
        ],
        "Id_History": [
          "556c8ebc-e406-4050-a1f1-bc6240f8cdd4,b4010c57-74bf-4d75-9c77-4ee8f586874e,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] Use Membership Providers Instead of Custom Authentication"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use Membership Providers Instead of Custom Authentication"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\r\n  <p>Use ASP.NET membership providers instead of writing custom forms authentication code. </p>\r\n  <h1>Why</h1>\r\n  <p>The membership feature helps protect credentials, can enforce strong passwords, and provides consistent APIs for user validation and secure user management.&amp;nbsp; The membership feature also automatically creates the authentication ticket for you.&amp;nbsp; </p>\r\n  <h1>When</h1>\r\n  <p>Use membership providers if your applicaiton uses forms authentication. You can use the existing membership providers if your user store is in SQL, Active Directory, or Active Directory Application Mode (ADAM).</p>\r\n  <p>If you want to use an existing user store, such as a non-Active Directory LDAP directory, or a user store on another platform, create a custom membership provider inheriting from the <b>MembershipProvider</b> abstract base class.</p>\r\n  <h1>How</h1>\r\n  <p>The membership feature has built-in providers for user stores including SQL Server, Active Directory, and Active Directory Application Mode (ADAM).&amp;nbsp; If you want to use an existing user store, such as a non-Active Directory LDAP directory, or a user store on another platform, create a custom membership provider inheriting from the <b>MembershipProvider</b> abstract base class.&amp;nbsp; By doing this, your application can still benefit from using the standard membership features and API and login controls.&amp;nbsp; </p>\r\n  <p />To configure membership, you need to define a connection string to point to the provider store and configure your provider definition in the Web.config file. <p /><b>To configure membership:</b><ol><li>Configure your application for forms authentication by setting<b></b>&lt;<b>authentication mode=\"Forms\"/</b>&gt; <li>Add a connection string to the &lt;<b>connectionStrings/</b>&gt; section to point to your user store. If you are using the <b>ActiveDirectoryMembershipProvider</b>, this is a Lightweight Directory Access Protocol (LDAP) query string pointing to your user container in Active Directory or ADAM. If you are using the <b>SqlMembershipProvider</b>, this is a database connection string that points to your user store database. <li>Add a &lt;<b>membership</b>&gt;<b></b>section to configure your chosen membership provider. <li>Configure the specific provider by creating a<b></b>&lt;<b>providers</b>&gt; section beneath the &lt;<b>membership</b>&gt;<b></b>element in your application's Web.config. The membership system supports a number of different providers: <li>If your user accounts are in Active Directory or ADAM, use the <b>ActiveDirectoryMembershipProvider</b>. <li>If your user accounts are in SQL Server, use <b>SqlMembershipProvider</b>. <li>If your user accounts are in a store other than those previously listed, create a custom membership provider by inheriting from the <b>MembershipProvider</b> base class. <li>Set the <b>defaultProvider</b> attribute on the &lt;<b>membership</b>&gt; element to your chosen provider. </li></li></li></li></li></li></li></li></ol><p />To validate and manage users, use the Membership API (for example, <b>Membership.CreateUser </b>and <b>Membership.ValidateUser</b>) or use the <b>Login</b> controls, which automatically use your membership configuration. <p /><h1>Related Items</h1><ul><li><div><a href=\"/article/9491b1b1-cd90-4daf-88c8-a3cd5a584fef\">Membership Providers are used Instead of Custom Authentication</a></div></li></ul><p /><hr /><p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}