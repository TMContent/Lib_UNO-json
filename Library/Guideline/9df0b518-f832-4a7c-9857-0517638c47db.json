{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1655607170",
      "Content_Hash": "1712994302"
    },
    "Metadata": [
      {
        "Id": [
          "9df0b518-f832-4a7c-9857-0517638c47db"
        ],
        "Id_History": [
          "9df0b518-f832-4a7c-9857-0517638c47db,bfee012f-2493-448e-a547-dad5f9c99c38,"
        ],
        "Library_Id": [
          "c4b9cb6a-4561-4451-9b6c-4e59d73584f6"
        ],
        "Title": [
          "Do Not Make Security Decisions Based on Client-Accessible Parameters"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Do Not Make Security Decisions Based on Client-Accessible Parameters"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Applications written using Servlets or JSP.</li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Avoid making security decisions based on parameters that are sent by the client. </p>\r\n  <h1>Why</h1>\r\n  <p>Using client-accessible data to make security decisions allows the users to access and modify it. Therefore, an attacker would be able to bypass security measures.</p>\r\n  <h1>When</h1>\r\n  <p>If your application accepts and processes client-side information, avoid using that information to make security decisions.</p>\r\n  <h1>How</h1>\r\n  <p>Security decisions should not be based on any data that the client has control over. Common mistakes include relying on data inside unprotected cookies, hidden fields or query strings. </p>\r\n  <p>Use the following steps to ensure that no security decisions are based on client-accessible data:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify security decision points. </strong>Carefully examine the points in the code that are related to your application's security model. It is critical that no decision points are placed in the client. Because this is a design issue, it is recommended to use threat modeling to determine and evaluate the security decision points.</p>\r\n      <p />\r\n      <li>\r\n        <p>\r\n          <strong>Trace data that influences security decisions. </strong>Tracing the data that influences security decisions helps&nbsp;determine if the data is vulnerable to any client-based attacks. Make sure that the client cannot modify or influence this data. </p>\r\n        <p />\r\n        <li>\r\n          <p>\r\n            <strong>Prove that security-related data cannot be tampered with by the client. </strong>Use cryptography or your application's design to ensure that security related data cannot be tampered with by the client. </p>\r\n          <li>\r\n            <p>\r\n              <strong>Mark all exceptions to this guideline. </strong>Note all exceptions made to this guideline. Thoroughly examine the code associated with such instances. Verify that all instances are provided in the business logic and are intended.</p>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>The following code illustrates a servlet that accepts user-supplied input. Unfortunately, the application obtains the user's ID from the client which allows&nbsp;an attacker to tamper withj&nbsp;data that influences security decisions.</p>\r\n  <pre>public void doGet(HttpServletRequest request,<br />      HttpServletResponse response) throws ServletException, IOException&#123;<br />      String userID = request.getParameter(\"userid\");<br />       ...<br /> &#125;</pre>\r\n  <h1>Solution Example</h1>\r\n  <p>The following code illustrates a servlet that accepts user-supplied input. Because the application obtains the user's ID from the user's session, it is not possible for an attacker to tamper with such data.</p>\r\n  <pre>public void doGet(HttpServletRequest request,<br />      HttpServletResponse response) throws ServletException, IOException&#123;<br />      Session sess = request.getSession();<br />      String userID = (String)sess.getAttribute(\"userid\");<br /><br />      ...<br /><br />&#125;</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>To learn more about parameter manipulation and ways to prevent it, see: <a href=\"http://www.cgisecurity.com/owasp/html/ch11s04.html\">Parameter Manipulation</a>.</li>\r\n  </ul>\r\n  <h1>Java Session Management Guidelines</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/42276b64-f51d-4b89-8c33-0ffd9b098890\">Use Session Management Offered by the Framework</a>\r\n      <li>\r\n        <a href=\"/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a\">Protect Session IDs</a>\r\n        <li>\r\n          <a href=\"/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717\">Protect Session Cookies</a>\r\n          <li>\r\n            <a href=\"/article/7a517ad5-8640-4bc7-9e84-ccc313a71901\">Set the Domain and Path Values of Session Cookies</a>\r\n            <li>\r\n              <a href=\"/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b\">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a>\r\n              <li>\r\n                <a href=\"/article/6c470029-5c62-4394-99a9-8990bc48b0a8\">Change Session IDs During Authentication</a>\r\n                <li>\r\n                  <a href=\"/article/a223c2d8-ab42-47fb-81a2-86ad677a5632\">Invalidate Sessions when Users Log Out</a>\r\n                  <li>\r\n                    <a href=\"/article/acfe1a16-3f00-4383-ada4-bebafc98a836\">Make Inactive Sessions Time-out</a>\r\n                    <li>\r\n                      <a href=\"/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e\">Include Unique Tokens in HTTP Requests</a>\r\n                      <li>\r\n                        <a href=\"/article/9df0b518-f832-4a7c-9857-0517638c47db\">Do Not Make Security Decisions Based on Client-Accessible Parameters</a>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Checklists</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b\">Session Management Offered by the Framework Is Used</a>\r\n      <li>\r\n        <a href=\"/article/1de62774-3392-4da7-9bae-065fb15b4a2b\">Session IDs Are Protected</a>\r\n        <li>\r\n          <a href=\"/article/59132a30-2bae-45e9-9d85-8de26441be29\">Session Cookies are Protected</a>\r\n          <li>\r\n            <a href=\"/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b\">The Domain and Path Values of Session Cookies Are Strict</a>\r\n            <li>\r\n              <a href=\"/article/d8922a46-a943-4ae0-b8af-b88eb01d6997\">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a>\r\n              <li>\r\n                <a href=\"/article/58df5418-8c03-4121-83e0-bc68247c5d7b\">Session IDs Are Changed During Authentication</a>\r\n                <li>\r\n                  <a href=\"/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac\">Sessions Are Invalidated When Users Log Out</a>\r\n                  <li>\r\n                    <a href=\"/article/c486eeb2-f64f-480b-9823-48bd7d21047d\">Inactive Sessions Time-out</a>\r\n                    <li>\r\n                      <a href=\"/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0\">Unique Tokens Are Included in HTTP Requests</a>\r\n                      <li>\r\n                        <a href=\"/article/4436e342-64d9-4b1b-ae9b-3e00696053fb\">Security Decisions are Not Made Based on Client-Accessible Parameters</a>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Code Examples</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/7d647e95-e47f-42e3-bb84-fd0dd727245c\">Add Unique Tokens to HTTP Requests Using ESAPI</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/25e3943b-a651-42c5-9e19-76077de05e90\">Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/986c7161-0a76-430a-8d0e-80d4615ab5db\">Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6\">Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/63deed1a-6df4-4e04-9f61-898f190e1fe1\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 2</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Testing</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/40771780-be59-4d4c-b283-5ec3cc286357\">How to Test for Session Prediction Bugs in Java</a>\r\n    </li>\r\n  </ul>"
        ]
      }
    ]
  }
}