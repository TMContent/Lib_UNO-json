{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-807358298",
      "Content_Hash": "1589157030"
    },
    "Metadata": [
      {
        "Id": [
          "989e27ec-ffdf-4006-88bd-1c09fc991a28"
        ],
        "Id_History": [
          "989e27ec-ffdf-4006-88bd-1c09fc991a28,fc56f299-35ca-41a5-b5a1-07cc329bffbc,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Centralize Authentication Controls"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Centralize Authentication Controls"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <ul>\n    <li>Java</li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Centralize authentication controls.</p>\n  <h1>Why</h1>\n  <p>Implementing a single set of centralized authentication controls helps implement them correctly, use them correctly in the application, and manage them later on.</p>\n  <h1>How</h1>\n  <p>To centralize authentication controls:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify application requirements.</strong> Consider the following aspects of authentication controls:</p>\n      <ul>\n        <li>Authentication should be required for all private pages. </li>\n        <li>All password fields should be masked. </li>\n        <li>Accounts should be locked after multiple failed authentication attempts. </li>\n        <li>Authentication should be implemented on the server-side. </li>\n        <li>Authentication controls should be centralized. </li>\n        <li>Authentication controls should fail securely. </li>\n        <li>Strong authentication credentials (passwords) should be enforced. </li>\n        <li>Account management functions should be protected. </li>\n        <li>User credential (password) changing functions should be protected. </li>\n        <li>Re-authentication should be required for sensitive operations. </li>\n        <li>Authentication credentials (passwords) should expire. </li>\n        <li>Authentication events should be logged. </li>\n        <li>Passwords should be hashed and salted. </li>\n        <li>Authentication credentials (connection strings) for external resources should be protected. </li>\n        <li>Authentication with external services.</li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Consider using authentication controls provided by the framework.</strong> Most frameworks offer authentication controls. Since there are many Java frameworks, we cannot examine them all in depth here. However, most frameworks should have authentication controls that are worth considering and may be sufficient for you application requirements. Even if authentication controls provided by the framework are used, it may be a good idea to write your own wrapper classes to centralize the authentication controls and to simplify using them.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Define authentication control APIs.</strong> Make the exposed APIs simple to use for developers. Define authentication APIs to satisfy all application requirements. Include functionality to authenticate with external services.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Implement and document authentication controls.</strong> It may be a good idea to write your own wrapper classes for authentication even if using controls provided by the framework or a third-party library. Implement and document authentication APIs to satisfy all application requirements. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Use authentication controls in the application.</strong> Developers should use the centralized authentication controls whenever authentication is necessary.</p>\n    </li>\n  </ol>\n  <br />"
        ]
      }
    ]
  }
}