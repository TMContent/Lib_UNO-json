{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1072882775",
      "Content_Hash": "38961884"
    },
    "Metadata": [
      {
        "Id": [
          "fd675679-e8ad-40fc-bac4-d56fc440bc00"
        ],
        "Id_History": [
          "fd675679-e8ad-40fc-bac4-d56fc440bc00,77f30e49-4a4e-4e06-80b2-91f22d841762,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Disable Directory Browsing"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "Disable Directory Browsing"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n* Applications written using Servlets or JSP.\r\n\r\n\r\n## What to Do ##\r\n\r\nDisable directory browsing for your application's web directories.\r\n\r\n\r\n## Why ##\r\n\r\nDirectory browsing allows an attacker to browse your application's directory structure in search of unprotected files and components.\r\n\r\n\r\n## When ##\r\n\r\nDisable directory browsing at all times.\r\n\r\n\r\n## How ##\r\n\r\nUse the following steps to successfully disable directory browsing:\r\n\r\n1. **Identify if directory browsing is enabled.** Navigate to your application's directories. Identify whether your application's server correctly returns an HTTP error message. If it incorrectly returns the directory contents, continue with the following steps.\r\n2. **Locate the default servlet's configuration.** Open your application's deployment descriptor (e.g. web.xml), and locate the default servlet's configuration. If the default servlet is present, it is mapped to the root directory of your application. Example:\r\n\t~~~~\r\n\t<servlet>\r\n\t\t  <servlet-name>default_servlet</servlet-name>\r\n\t\t  <servlet-class>\r\n\t\t\t\torg.apache.catalina.servlets.DefaultServlet\r\n\t\t  </servlet-class>\r\n\t</servlet>\r\n\t<servlet-mapping>\r\n\t\t  <servlet-name>default_servlet</servlet-name>\r\n\t\t  <url-pattern>/</url-pattern>\r\n\t</servlet-mapping>\r\n\t~~~~\r\n3. **Deny directory browsing in the default servlet's configuration.** Initialize the default servlet with the parameter listings set to false. Example:\r\n\t~~~~\r\n\t<servlet>\r\n\t\t  <servlet-name>default_servlet</servlet-name>\r\n\t\t  <servlet-class>\r\n\t\t\t\torg.apache.catalina.servlets.DefaultServlet\r\n\t\t  </servlet-class>\r\n\t<init-param>\r\n\t\t\t\t<param-name>listings</param-name>\r\n\t\t\t\t<param-value>false</param-value>\r\n\t\t  </init-param>\r\n\t</servlet>\r\n\t<servlet-mapping>\r\n\t\t  <servlet-name>default_servlet</servlet-name>\r\n\t\t  <url-pattern>/</url-pattern>\r\n\t</servlet-mapping>\r\n\t~~~~\r\n4. **Ensure your JSP files are located under the WEB-INF/ directory of your web application.** This ensures that an attacker cannot directly access those pages, however your application can perform internal forwards to these pages.\r\n\r\n\r\n## Problem Example ##\r\n\r\nAn application is deployed on a production server. Unfortunately, the developers did not disable directory browsing. This allows an attacker to search for unprotected configuration files.\r\n\r\n\r\n## Solution Example ##\r\n\r\nAn application is deployed on a production server. Because the developers have disabled directory browsing, it is difficult for an attacker to use HTTP browsing to search for unprotected configuration files."
        ]
      }
    ]
  }
}