{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1270660772",
      "Content_Hash": "1548106628"
    },
    "Metadata": [
      {
        "Id": [
          "a8a03491-4da8-4ab1-af04-90f80167ce2e"
        ],
        "Id_History": [
          "a8a03491-4da8-4ab1-af04-90f80167ce2e,410e0d4f-4eec-49ed-a271-85d1e48ec0c3,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Log Important Security Operations"
        ],
        "Category": [
          "Auditing and Logging"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Log Important Security Operations"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "C++"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\r\n  <p>Log important security operations, such as:</p>\r\n  <ul>\r\n    <li>Authentication attempts</li>\r\n    <li>Creating user accounts</li>\r\n    <li>Removing user accounts</li>\r\n    <li>Changing user access privileges</li>\r\n    <li>Changing group membership</li>\r\n  </ul>\r\n  <h1>Why</h1>\r\n  <p>Logging security operations may help detect an attacker's presence if he tries to create unauthorized user accounts or make other unauthorized changes to the system.</p>\r\n  <h1>When</h1>\r\n  <p>Use this guideline if your application implements authentication.</p>\r\n  <h1>How</h1>\r\n  <p>Perform the following actions to implement logging of important security operations:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Define logging requirements.</strong> Make a list of critical security events that should be logged. Some examples are:</p>\r\n      <ul>\r\n        <li>Authentication attempts</li>\r\n        <li>Creating user accounts</li>\r\n        <li>Locking and unlocking user accounts</li>\r\n        <li>Removing user accounts</li>\r\n        <li>Changing user access privileges</li>\r\n        <li>Changing group membership</li>\r\n        <li>Changing passwords</li>\r\n        <li>Changing user account details</li>\r\n        <li>Financial transactions</li>\r\n        <li>Making changes to the application configuration</li>\r\n        <li>Starting the application</li>\r\n        <li>Terminating the application</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify log entry details.</strong> For each important security operation on the list, make a list of details that should be included in the log entries. Some examples are:</p>\r\n      <ul>\r\n        <li>User identification</li>\r\n        <li>Type of event</li>\r\n        <li>Date and time stamp</li>\r\n        <li>Success or failure indication</li>\r\n        <li>Source of event</li>\r\n        <li>Names or other identifiers of affected data or resources</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify code that implements security operations.</strong> For each important security operation on the list, make a list of functions that implement this operation.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify the logging subsystem.</strong> The logging subsystem should provide an API that allows generating log entries from application code. If this API or the logging subsystem don't exist, write them. Make a list of functions that may be used to generate log entries and collect documentation about how to use them.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Add code that logs important security operations.</strong> Use the list of functions that implement important security operations to add code that generates log entries whenever these operations take place. Log both successful and failed events. Use the list of logging APIs when writing code that generates log entries. Use the list of log entry details when writing code that generates log entries to make sure that the log entries include all the relevant information.</p>\r\n    </li>\r\n  </ol>"
        ]
      }
    ]
  }
}