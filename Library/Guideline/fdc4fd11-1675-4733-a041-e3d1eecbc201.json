{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-145160790",
      "Content_Hash": "-151336619"
    },
    "Metadata": [
      {
        "Id": [
          "fdc4fd11-1675-4733-a041-e3d1eecbc201"
        ],
        "Id_History": [
          "fdc4fd11-1675-4733-a041-e3d1eecbc201,61f4905b-3d5a-48ce-9011-c0efcdc5ef46,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "1sink junk Use Server-side Authentication"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "PHP"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use Server-side Authentication"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>PHP</li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Implement authentication on the server-side.</p>\r\n  <h1>Why</h1>\r\n  <p>Server-side authentication should be used, because client-side authentication is easy to bypass.</p>\r\n  <h1>How</h1>\r\n  <p>Most PHP developers write their own authentication functions. The typical solution is to use MySQL to store password hashes in a table, but there are other options. The important part is performing authentication on the server.</p>\r\n  <br />"
        ]
      }
    ]
  }
}