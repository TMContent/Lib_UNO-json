{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1011659444",
      "Content_Hash": "-1978591808"
    },
    "Metadata": [
      {
        "Id": [
          "31c28d09-e21a-4b9e-bc5c-c8a677e6ab2e"
        ],
        "Id_History": [
          "31c28d09-e21a-4b9e-bc5c-c8a677e6ab2e,7083958b-9d0c-4dd4-bef0-adca8ec926c6,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] Only Persist Dynamically Created Assemblies If Necessary"
        ],
        "Category": [
          "Dangerous APIs"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Only Persist Dynamically Created Assemblies If Necessary"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\n  <p>Where possible, avoid persisting dynamically generated assemblies created with <strong>Reflection.Emit</strong>, using the <strong>AssemblyBuilderAccess </strong>flag.</p>\n  <h1>Why</h1>\n  <p>To avoid the risk of the code being called by code external to your application, keep the generated assembly memory resident only and do not persist it.</p>\n  <h1>When</h1>\n  <p>When your application dynamically generates code through the use of <b>Reflection.Emit</b></p>\n  <h1>How</h1>\n  <p>While creating a dynamic assembly you can define the access level which will decide if the dynamically created assembly can be saved or not. If you just have to execute the dynamically generated assembly and not save it, set the <strong>AssemblyBuilderAccess</strong> flag to <strong>Run. </strong>Here is code snippet which shows creation of a dynamic assembly which can&amp;nbsp;be executed, but not saved.</p>\n  <pre>...</pre>\n  <pre>AssemblyName assemblyName = new AssemblyName();<br />assemblyName.Name = \"Hello\";<br />AssemblyBuilder assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(assemblyName, AssemblyBuilderAccess.Run);</pre>\n  <pre>...</pre>\n  <p>In case you have to execute and save the dynamically created asembly set the <strong>AssemblyBuilderAccess</strong> flag to <strong>RunAndSave. </strong></p>\n  <pre>...</pre>\n  <pre>AssemblyName assemblyName = new AssemblyName();<br />assemblyName.Name = \"Hello\";<br />AssemblyBuilder assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(assemblyName, AssemblyBuilderAccess.RunAndSave);</pre>\n  <p>The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <strong>Save</strong> method of <strong>AssemblyBuilder</strong> class.</p>\n  <pre>...<br />// Save the dynamic assembly<br />assemblyBuilder.Save(name);<br />....</pre>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information see, \"AssemblyBuilderAccess Enumeration\" at <a href=\"http://msdn2.microsoft.com/en-gb/library/system.reflection.emit.assemblybuilderaccess.aspx\">http://msdn2.microsoft.com/en-gb/library/system.reflection.emit.assemblybuilderaccess.aspx</a><li>For more information see, \"AssemblyBuilder Class\" at <a href=\"http://msdn2.microsoft.com/en-us/library/system.reflection.emit.assemblybuilder.aspx\">http://msdn2.microsoft.com/en-us/library/system.reflection.emit.assemblybuilder.aspx</a>&amp;nbsp; </li></li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>"
        ]
      }
    ]
  }
}