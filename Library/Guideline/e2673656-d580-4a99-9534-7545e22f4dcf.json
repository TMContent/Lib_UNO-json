{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "880831363",
      "Content_Hash": "-1797246225"
    },
    "Metadata": [
      {
        "Id": [
          "e2673656-d580-4a99-9534-7545e22f4dcf"
        ],
        "Id_History": [
          "e2673656-d580-4a99-9534-7545e22f4dcf,c949568c-7cc7-4f74-95be-288877894a26,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Do Not Reveal Exception Details to the Client"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Do Not Reveal Exception Details to the Client"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "ASP.NET 3.5"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<br />\r\n  <br />\r\n  <h1>What to Do</h1>\r\n  <p>When exceptions occur, return concise error messages to the client and log specific details on the server. Do not reveal internal system or application details, such as stack traces, SQL statement fragments, and table or database names to the client. Ensure that this type of information is not allowed to propagate to the end user or beyond your current trust boundary. </p>\r\n  <h1>Why</h1>\r\n  <p>A malicious user could use system-level diagnostic information to learn about your application and probe for weaknesses to exploit in future attacks. </p>\r\n  <h1>When</h1>\r\n  <p>This guideline is applicable to any application pages capable of generating errors.</p>\r\n  <h1>How</h1>\r\n  <p>Prevent detailed error messages from displaying by setting the <strong>mode</strong> attribute of the &lt;<strong>CustomErrors</strong>&gt;&nbsp;&lt;CUSTOMERRORS&gt;element to <strong>On</strong>, so that all callers receive filtered exception information. Do not use <strong>mode=\"Off\"</strong> because this allows detailed error pages intended for application developers that contain system-level information to be returned to the client.&nbsp; </p>\r\n  <p>You should also use the &lt;<strong>customErrors</strong>&gt; section of the Web.config file as shown in the following code example to specify a default error page to display, along with other required error pages for specific HTTP response codes that indicate errors.</p>\r\n  <pre>&lt;customErrors mode=\"On\" defaultRedirect=\"ErrDefault.aspx\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;error statusCode=\"401\" redirect=\"ErrUnauthorized.aspx\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;error statusCode=\"404\" redirect=\"ErrPageNotFound.aspx\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;error statusCode=\"500\" redirect=\"ErrServer.htm\" /&gt;<br />&lt;/customErrors&gt;</pre>\r\n  <p>The <strong>defaultRedirect</strong> attribute allows you to use a custom error page for your application, which. for example, might include support contact details. Use these application-wide error pages to provide user-friendly responses for errors that are not caught in a structured event handling.&nbsp;</p>\r\n  <h1>Problem Example</h1>\r\n  <p>The developers of an ASP.NET application change the <strong>mode</strong> attribute of the &lt;<strong>CustomErrors</strong>&gt;&nbsp;&lt;CUSTOMERRORS&gt;element to <strong>Off </strong>in order to display detailed error messages on both the local machine and remote clients for debugging purposes.&nbsp; When the application goes into production this setting remains and detailed error messages are displayed to all users.</p>\r\n  <h1>Solution Example</h1>\r\n  <p>During development an ASP.NET application sets the <strong>mode</strong> attribute of the &lt;<strong>CustomErrors</strong>&gt;&nbsp;&lt;CUSTOMERRORS&gt;element to <strong>RemoteOnly </strong>to aid debugging by displaying error messages on the local machine. Once the application is deployed the <strong>mode</strong> attribute is set to <strong>On </strong>to ensure that detailed error messages are not sent to any client.&nbsp; The <strong>defaultRedirect</strong> element is used to specify a generic error page while &lt;<strong>error</strong>&gt; elements are used to specify more specific error pages.</p>\r\n  <pre>&lt;customErrors mode=\"On\" defaultRedirect=\"ErrDefault.aspx\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;error statusCode=\"401\" redirect=\"ErrUnauthorized.aspx\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;error statusCode=\"404\" redirect=\"ErrPageNotFound.aspx\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;error statusCode=\"500\" redirect=\"ErrServer.htm\" /&gt;<br />&lt;/customErrors&gt;</pre>\r\n  <h1>Related Items</h1>\r\n  <ul>\r\n    <li>Checklist Item: <a href=\"/article/bc10306c-f37c-4780-a096-847070ae67da\">Structured exception handling is used</a><li>Checklist Item: <a href=\"/article/209b61a1-022d-4574-ad70-293b9a1a5a86\">Generic error pages with harmless messages are returned to the client</a></li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
        ]
      }
    ]
  }
}