{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1808044375",
      "Content_Hash": "-918018660"
    },
    "Metadata": [
      {
        "Id": [
          "c98695c5-cf02-44a1-96bf-1f8046b8ad9d"
        ],
        "Id_History": [
          "c98695c5-cf02-44a1-96bf-1f8046b8ad9d,9531b837-344a-432e-83fa-2f61bf5bb503,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Java Validate Input"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Validate Input for Length, Range, Format, And Type"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "1"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n* Java \r\n\r\n\r\n## Solution Example ##\r\n\r\n~~~~\r\npublic boolean validateData(String input)\r\n{\r\n      String goodPattern = \"(\\\\w|\\\\d)+\";\r\n      int goodLength = 10;\r\n      if(input.length() > goodLength)\r\n      {\r\n            return false;\r\n      }\r\n      Pattern p = Pattern.compile(goodPattern);\r\n      Matcher m = p.matcher(input);\r\n            if(!m.matches())\r\n      {\r\n            return false;\r\n      }\r\n      else\r\n      {\r\n            return true;\r\n      }\r\n}\r\n~~~~\r\n\r\n\r\n## Guideline ##\r\n\r\n* [Validate All Input](11a15f3a-7fe8-4e4c-be5e-309ab7227b3d)"
        ]
      }
    ]
  }
}