{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-435447099",
      "Content_Hash": "-1113763567"
    },
    "Metadata": [
      {
        "Id": [
          "10f126b4-a75a-4d26-82e8-b419579942b1"
        ],
        "Id_History": [
          "10f126b4-a75a-4d26-82e8-b419579942b1,f5d02354-6ec3-4c5b-8a78-0bfdf3fde9f4,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Open Files Safely on UN*X"
        ],
        "Category": [
          "File I/O"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "Open Files Safely on UN*X"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "C++"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>C&#43;&#43;<li>UN&#42;X<br /></li></li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Open files carefully.</p>\r\n  <h1>Why</h1>\r\n  <p>When opening files, use open() instead of fopen(). fopen() does not indicate if an existing file was opened for writing or if a new file was created. As a result, a program could overwrite or access an unintended file. open() provides the control that fopen() does not.</p>\r\n  <h1>When</h1>\r\n  <p>Use this guideline whenever creating files programmatically on UN&#42;X systems.</p>\r\n  <h1>How</h1>\r\n  <p>Perform the following actions to open files safely on UN&#42;X systems:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Review code.</strong> Search for all calls to the fopen() function.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Use open() instead of fopen().</strong> Replace calls to fopen() with open(). Use open() with the following flags:</p>\r\n        <ul>\r\n          <li>\r\n            <p>\r\n              <strong>O_CREAT &#124; O_EXCL.</strong> When creating a new file, the call will fail if the file already exists. This prevents the call from overwriting an existing file.</p>\r\n            <li>\r\n              <p>\r\n                <strong>O_NOFOLLOW.</strong> Ensures that the system will not follow a symlink thereby accessing another file unexpectedly.</p>\r\n            </li>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n    </li>\r\n  </ol>"
        ]
      }
    ]
  }
}