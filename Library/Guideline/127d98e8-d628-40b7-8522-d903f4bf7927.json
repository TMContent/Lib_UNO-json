{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1431891757",
      "Content_Hash": "1375201635"
    },
    "Metadata": [
      {
        "Id": [
          "127d98e8-d628-40b7-8522-d903f4bf7927"
        ],
        "Id_History": [
          "127d98e8-d628-40b7-8522-d903f4bf7927,78852dd8-1030-411c-bd01-1347631770a9,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Java Use Role-based Authorization"
        ],
        "Category": [
          "Authorization"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Perform Role-based Security Checks"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n* Java\r\n\r\n\r\n## Summary ##\r\n\r\nDefine the different types of users and create specific roles for them. When authorizing access to a resource, build the security checks on a per-role basis rather than on a per-user basis.\r\n\r\nApplication roles allow multiple users to play the same role and provides a clear way to manage the least privileges necessary for the execution of a given task. It provides a more robust and flexible way of managing the application's users.\r\n\r\n\r\n## Problem Example ##\r\n\r\nThe following segment illustrates a JAAS policy. Because the application does not enforce role-based security, it has a policy entry for each separate user; therefore, changing the users' access rights can be quite difficult as each user needs to be modified individually.\r\n\r\n~~~~\r\ngrant Principal application.auth.UserToken \"joe\"\r\n{\r\n  permission java.security.SecurityPermission \"AccessApp\";\r\n};\r\ngrant Principal application.auth.UserToken \"steve\"\r\n{\r\n  permission java.security.SecurityPermission \"AccessApp\";\r\n};\r\ngrant Principal application.auth.UserToken \"julie\" \r\n{\r\n  permission java.security.SecurityPermission \"AccessApp\";\r\n};\r\n~~~~\r\n\r\n\r\n## Solution Example ##\r\n\r\nThe following segment illustrates a JAAS policy. Because the application enforces role-based security, it has a policy entry for each group of users; therefore changing the users' access rights is easy as only the group needs to be modified.\r\n\r\n~~~~\r\ngrant Principal application.auth.GroupToken \"users\"\r\n{\r\n  permission java.security.SecurityPermission \"AccessApp\";\r\n};\r\n~~~~"
        ]
      }
    ]
  }
}