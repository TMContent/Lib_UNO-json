{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1435785727",
      "Content_Hash": "617287204"
    },
    "Metadata": [
      {
        "Id": [
          "8c84d25d-28cd-4919-9ab2-fc49eea90858"
        ],
        "Id_History": [
          "8c84d25d-28cd-4919-9ab2-fc49eea90858,a8586ab4-25ee-418e-bd2d-fe88264c7eba,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "0sink junk Restrict Authentication Cookies to HTTPS Connections"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Restrict Authentication Cookies to HTTPS Connections"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Do</h1>\r\n  <p>Use the <b>requireSSL</b> attribute to restrict authentication cookies to HTTPS connections only. </p>\r\n  <h1>Why</h1>\r\n  <p>Sending cookies out exclusively over SSL makes it much harder for an attacker to sniff the cookie values off the wire.&amp;nbsp; If an attacker can get a copy of an authentication cookie, they can potentially emulate that user, compromising their account. </p>\r\n  <h1>When</h1>\r\n  <p>All systems which use authentication cookies should use SSL for those cookies if possible.&amp;nbsp; Systems which deal with any personally identifiable information or monetary transaction should use SSL in all circumstances without exception. </p>\r\n  <h1>How</h1>\r\n  <p>Set the <b>secure</b> property of the authentication cookie to ensure that browsers only send authentication cookies over HTTPS connections.&amp;nbsp; By using SSL, you prevent an attacker from capturing the authentication cookie to gain spoofed access to your application.&amp;nbsp; Set the <b>secure</b> property by using <b>requireSSL=\"true\"</b> on the <b>&lt;forms&gt;</b> element as shown here. </p>\r\n  <pre>&lt;forms loginUrl=\"Secure\\Login.aspx\"<br />        requireSSL=\"true\" ... /&gt;</pre>\r\n  <h1>Problem Example</h1>\r\n  <p>An online brokerage provides a large amount of reference content.&amp;nbsp; As this content is not specific to any user and is publicly available, it is not protected by SSL for performance reasons like the trading interface is.&amp;nbsp; However, the site is not configured to restrict authentication cookies to SSL only, so they're sent with all requests.&amp;nbsp; An attacker positions themself on the same network segment as a user (someone using the public network in an internet cafe), sniffs the user's traffic, steals their cookie, and uses it to access their accounts.</p>\r\n  <h1>Solution Example</h1>\r\n  <p>An online brokerage provides a large amount of reference content.&amp;nbsp; As this content is not specific to any user and is publicly available, it is not protected by SSL for performance reasons like the trading interface is.&amp;nbsp; The site is&amp;nbsp;correctly configured to restrict authentication cookies to SSL only, so they're only sent with requests protected by SSL.&amp;nbsp; An attacker positions themself on the same network segment as a user (someone using the public network in an internet cafe) and sniffs the user's traffic, but because the cookies are only sent via SSL, they cannot retrieve them.</p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}