{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "5625eb5f-c32f-4f60-a0ea-ada6177163ef"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Deploy an IDS Inside the VPC"
        ],
        "Category": [
          "System Hardening"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          "AWS"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "\r\n##Applies To##\r\n\r\n- Amazon Web Services (AWS)\r\n\r\n\r\n##What to Do##\r\n\r\nDeploy an Intrusion Detection System (IDS) appliance in your cloud. The IDS may be installed within your Virtual Private Cloud (VPC), or at your premises' VPC end point. The preferred location is within the Amazon VPC.\r\n\r\n\r\n##Why##\r\n\r\nAn IDS monitors your cloud environment and alerts you about detected intrusions. The IDS logs give you important information about API access such as:\r\n\r\n- Who made the API call\r\n- When was the call made\r\n- What was the API call\r\n- What resources were accessed\r\n- Where was the call made from?\r\n\r\nWith this information you can update IDS settings and policies. The IDS is also important for monitoring and managing changes, and detecting AWS-specific environment changes.\r\n\r\n\r\n##How##\r\n\r\n1. **Install IDS.** Choose an IDS with the required features. Traditional rack-based and virtual IDS's are available. Deploy the IDS in your VPC using documentation supplied with the system. \r\n\r\n2. **Create Security Audit Role.** Create a named security audit role (such as *secaudit*) with IAM. Make this a role with cross-account access. Enter the ID of the AWS account. Set the access permissions to Read Only for policies and configurations that will be monitored. Credentials are not required. Your policy establishes who or what can assume this role.\r\n\r\n3. **Create Security Role Policy.**\r\n\r\n4. **Configure Write Once Storage.** Configure versioning on a bucket with the console or AWS SDKs. Optionally, add MFA Delete for an additional security layer by requiring MFA on the bucket. \r\n\r\n5. **Turn On AWS CloudTrail.** When you enable CloudTrail, create a new S3 bucket. Name the bucket. If you already have a centralized write-only store, that can be used.\r\n\r\n6. **Detect Unauthorized Credentials.** Manual steps to investigate access and credentials for public, non-public, and cross-account users can be performed with the console. Go to the dashboard and select a user. View the user access keys, date and time for security. \r\n"
        ]
      }
    ]
  }
}