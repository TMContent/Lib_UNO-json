{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "e965b187-1e4b-450c-859a-2f066eaa6bcc"
        ],
        "Id_History": [
          "e965b187-1e4b-450c-859a-2f066eaa6bcc,a4a23664-98a7-4223-bc2d-4b46361a2c5b,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Require Authentication And Authorization for All Sensitive Pages"
        ],
        "Category": [
          "Authorization"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Scala Play"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Require Authentication And Authorization for All Sensitive Pages"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <p>Scala and Play Framework 2.1.0+</p>\n  <h1>What to Do</h1>\n  <p>Require authentication and authorization for all sensitive pages. Use role-based authorization policies.</p>\n  <h1>Why</h1>\n  <p>All pages that have private information should require authentication and authorization to prevent unauthorized information disclosure. Use role-based authorization policies because they are relatively simple to manage correctly.</p>\n  <h1>How</h1>\n  <p>To require authentication and authorization for all sensitive pages:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify all sensitive pages.</strong>&nbsp;Make a list of all pages that handle sensitive or private information.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Define roles.</strong>&nbsp;Define access roles for your application. These roles should include administrative users and various types of users specific to your application.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Implement authentication and role-based access control.&nbsp;</strong>In Play framework 2.1.0+, you can use&nbsp;<a href=\"https://github.com/schaloner/deadbolt-2\"> DeadBolt-2</a> as an authorization system that defines the access rights to certain controller methods or parts of a view. You can use <a href=\"https://github.com/jaliss/securesocial\">SecureSocial</a> to verify the authorization of the logged in user to access the restricted section/URL of the website.&nbsp;</p>\n      <p>Make sure the user is authorized to access the page before granting him access. When using a critical resource such as a configuration file, check to see if the resource has insecure permissions (such as being modifiable by any regular user), and generate an error or even exit the software if there is a possibility that the resource could have been modified by an unauthorized party. For this, make use of an Access Control Library such as&nbsp;<a href=\"https://www.owasp.org/index.php/ESAPI_Access_Control\">OWASP ESAPI Access Control</a>.&nbsp;</p>\n    </li>\n  </ol>\n  <br />"
        ]
      }
    ]
  }
}