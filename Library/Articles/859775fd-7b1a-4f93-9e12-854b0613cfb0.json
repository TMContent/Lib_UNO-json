{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "859775fd-7b1a-4f93-9e12-854b0613cfb0"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Cryptographic Keys Are Protected"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          "AWS"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "##What to Check For##\r\n\r\nVerify that cryptographic keys are protected.\r\n\r\n##Why##\r\n\r\nKeys should remain in the key vault at all times. If the cryptographic keys are unavailable, any compromised data is unusable by a thief. PCI DSS Requirement 3.5 requires that you:\r\n> Document and implement procedures to protect keys used to secure stored cardholder data against disclosure and misuse.\r\n\r\n\r\n##When##\r\n\r\nAny crypto key used must be protected from unauthorized access. Define a key lifecycle so that it is rekeyed, and then removed from use on a prescribed schedule. The lifecycle you define for security of crypto keys will tell you when to remove the key from use.\r\n\r\nWhen your application uses multiple keys, their makeup must be independent, and not related. All keys must be stored away from the data, so that a compromise will not result in the theft of the key and data.\r\n\r\n\r\n##How to Check##\r\n\r\nTo verify that cryptographic keys are protected:\r\n\r\n1. **Find encryption and decryption code.** Find the code that is responsible for performing encryption and decryption in your application.\r\n\r\n2. **Identify cryptographic storage.** Examine the cryptographic code to determine where the cryptographic keys are stored.\r\n\r\n3. **Examine cryptographic storage.** Verify that cryptographic keys are protected when they are stored. HSM is an acceptable solution. If some other secure storage mechanism is used, verify that it is up to your organization's standards. Storing cryptographic keys in plain-text is not acceptable.\r\n\r\n\r\n##How to Fix##\r\n\r\nAWS encourages the use of a hardware security module (HSM). Such an appliance provides secure key storage and cryptographic operations in the cloud. This is an overview of steps you will take to get started with the HSM. For more information about these steps, see http://docs.aws.amazon.com/cloudhsm/latest/userguide/.\r\n\r\n1. **Set up the HSM environment.** Setup your account in the administrators group and generate your access key. Create an IAM policy to use CloudHSM and attach it to users. Setup private and public subnets, IAM role, EC2 instance, and security group in your VPC environment. Now generate SSH key pair and setup the CLI tools.\r\n\r\n2. **Provision the HSM.** Use the CLI to create an HSM from your control instance with the `create-hsm` command. You will need to supply `subnet_id`, `public_key_file`, `iam_role_arn`, and `syslog_ip_address` from the previous step.\r\n\r\n3. **Configure the HSM.** With the CLI, use `list-hsms` and `describe-hsm` to get the HSM ENI Identifier and IP Address. Apply the security group through the EC2 console. In the CLI use `initialize-hsm` and required parameters.\r\n\r\n4. **Connect the HSM.** Connect the on-premises HSM appliances to your HSM VPC.\r\n\r\n5. **Configure the HSM client.** Download and install a Linux or Windows client with required options for the appliance.\r\n\r\n6. **Configure HA.** For information about high availability and load balancing options and setup, see http://docs.aws.amazon.com/cloudhsm/latest/userguide/.\r\n\r\n7. **Integrate CloudHSM with the application.** For information about using transparent data encryption with third-party software applications, see http://docs.aws.amazon.com/cloudhsm/latest/userguide/. A complete sample application is provided at the link.\r\n\r\n\r\n##Additional Resources##\r\n\r\n- [Amazon Web Services: Overview of Security Processes](http://aws.amazon.com/compliance/aws-whitepapers/ \"Amazon Web Services: Overview of Security Processes\")\r\n- [AWS CloudHSM User Guide](http://docs.aws.amazon.com/cloudhsm/latest/userguide/ \"AWS CloudHSM User Guide\")\r\n- [AWS Security Best Practices](http://aws.amazon.com/security/ \"AWS Security Best Practices\")\r\n- [Payment Card Industry (PCI) Data Security Standard (DSS) - Requirements and Security Assessment Procedures](https://www.pcisecuritystandards.org/security_standards/index.php \"PCI DSS Requirements and Security Assessment Procedures\")\r\n\r\n\r\n\r\n"
        ]
      }
    ]
  }
}