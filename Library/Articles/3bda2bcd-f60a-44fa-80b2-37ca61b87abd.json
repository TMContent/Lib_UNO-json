{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "3bda2bcd-f60a-44fa-80b2-37ca61b87abd"
        ],
        "Id_History": [
          "3bda2bcd-f60a-44fa-80b2-37ca61b87abd,7aef0fcd-309b-4554-81d2-dbd41cd82489,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Insufficient Authentication"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Vulnerability"
        ],
        "DirectLink": [
          "Insufficient Authentication"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Description==\n\nInsufficient authentication vulnerabilities occur when the application allows users to perform sensitive operations or access sensitive information without properly checking their authentication credentials. The result is that attackers will be able to use application functionality that should only be available to authenticated users.\n\nAll applications that use authentication are potentially affected by insufficient authentication vulnerabilities.\n\n\n==Impact==\n\nThe impact of insufficient authentication vulnerabilities is usually that attackers that don't have legitimate application accounts will be able to perform operations that only legitimate users should be able to perform. In an extreme case, insufficient authentication might allow attackers to change user passwords and then take over their accounts. A more common example is that an attacker might be able to access or download content, such as music, without creating an account.\n\nIn some cases, insufficient authentication vulnerabilities will allow attackers to perform administrative actions that allow them to take over the application. For example, an application might have a feature for executing administratorsâ€™ system commands (this is a dangerous feature to have, but some hosting panels have such functionality). If the application doesn't check authentication credentials properly before executing system commands, the attacker will be able to execute system commands and take over the applications.\n\n\n==Countermeasures==\n\nTo prevent insufficient authentication vulnerabilities, require authentication for all sensitive pages and operations.\n\n* [[8eba2142-4a6e-4f2c-9648-3ba1cadf9621|Force Reauthentication for Sensitive Operations]]\n\n\n==Application Check==\n\nTo verify that insufficient authentication vulnerabilities are prevented, make sure that authentication is required for all sensitive pages and operations.\n\n* [[0c6a261a-14e8-4c36-838d-17b4a8b6532c|Reauthentication Is Required for Sensitive Operations]]\n\n\n==Computer Based Training Links==\n\nUse the following Computer Based Training course(s) for more background information about this type of vulnerabilities.\n\n===OWASP Top Threats & Mitigations===\n\nThis course examines in depth the vulnerabilities, threats, and mitigations described in the OWASP Top 10 2013. Upon completion of this class, participants will be able to identify and mitigate the greatest threats that web application developers face, including: Injection, Broken Authentication and Session Management, Cross-Site Scripting (XSS), Insecure Direct Object References, Security Misconfiguration, Sensitive Data Exposure, Missing Function Level Access Control, Cross-Site Request Forgery (CSRF), Using Components with Known Vulnerabilities, and Unvalidated Redirects and Forwards.\n\n[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/139631|DES 221 OWASP Top Threats & Mitigations]]\n\n//Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.//"
        ]
      }
    ]
  }
}