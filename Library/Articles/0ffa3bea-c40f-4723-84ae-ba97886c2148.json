{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "0ffa3bea-c40f-4723-84ae-ba97886c2148"
        ],
        "Id_History": [
          "0ffa3bea-c40f-4723-84ae-ba97886c2148,68cfb0b2-110d-4b71-9b95-2814b960c269,"
        ],
        "Library_Id": [
          "51eb81c3-1d23-4146-ba83-8a6bb9233c11"
        ],
        "Title": [
          "All System Resources Are Released After Being Used"
        ],
        "Category": [
          "File I/O"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "All System Resources Are Released After Being Used"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\n\n* C++\n\n==What to Check For==\n\nVerify that all system resources are released after being used.\n\n\n==Why==\n\nRelease system resources after using them to prevent resource exhaustion. If the program does not diligently release resources after using them, the attacker might be able to manipulate the application to use up a large amount of system resources, potentially causing the application or even the system it is running on to become slow or unusable.\n\n==How to Check==\n\nTo verify that all system resources are released after being used:\n\n# **Identify all resources used by the application.** Make a spreadsheet of all system resources used by each source code file in the application. Examples of system resources are filesystem objects, sockets, process handles, and database connections.\n# **Verify that code that uses resources releases them.** Examine each piece of code that uses a system resource and make sure that the system resource is released after it has been used.\n\n==How to Fix==\n\nTo release all system resources after using them:\n\n# **Identify all resources used by the application.** Make a spreadsheet of all system resources used by each source code file in the application. Examples of system resources are filesystem objects, sockets, process handles, and database connections.\n# **Verify that code that uses resources releases them.** Examine each piece of code that uses a system resource and add code that releases the system resource after it has been used.\n"
        ]
      }
    ]
  }
}