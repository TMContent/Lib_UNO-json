{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "829e3767-afca-4485-9fbb-8c7ab3be3061"
        ],
        "Id_History": [
          "829e3767-afca-4485-9fbb-8c7ab3be3061,320c5825-7a05-413e-8703-c473bd745e26,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6204f2d47eb7"
        ],
        "Title": [
          "System Information Leak"
        ],
        "Category": [
          "Error Handling"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "PHP"
        ],
        "Type": [
          "Vulnerability"
        ],
        "DirectLink": [
          "System Information Leak"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "=Description=\r\nA system information leak occurs when either the application or the application server discloses information about the web application platform that might be useful to the attacker. Some examples of information that might benefit the attacker are: the file system path of the application, the name and version of the operating system, the name and version of the web server software, and the name and version of the web application platform and its configuration options. \r\n\r\nThe danger of system information leaks is that they make other attacks easier to carry out. In general, the application should volunteer as little information as possible about the platform on which it is running. \r\n\r\nAll applications are affected by this vulnerability type.\r\n\r\n=Impact=\r\nSystem information leaks can be used by attackers to exploit other vulnerabilities, if other vulnerabilities are present. By itself, a system information leak doesn't give an attacker any additional abilities. System information leaks have to be combined with other vulnerabilities to result in a compromise. For example, the operating system used by the application server might be outdated and vulnerable, but the attacker won't know that until the application tells him that the server is outdated. At that point, the attacker can use an exploit targeting the server operating system to compromise the application. \r\n\r\n=Countermeasures=\r\nTo prevent system information leaks, make sure to handle all errors, use simple error messages, and disable platform banners.\r\n\r\n* [[a706450d-653c-4928-84ea-b9f754db8644|Use Structured Exception Handling]]\r\n\r\n* [[fd1d911e-c8ad-4951-a047-62e5b422f094|Display Simple Error Messages]]\r\n\r\n* [[7f064998-a562-4e03-abef-676230e80d7c|Disable Platform Banners]]\r\n\r\n=Application Check=\r\nTo verify that system information leaks are prevented, make sure that all errors are handled, simple error messages are used, and platform banners are disabled.\r\n\r\n* [[3fcd2a1c-d362-4a89-954d-b31a7c93df7f|Structured Exception Handling Is Used]]\r\n\r\n* [[7e9f8f71-a09e-44c2-adf6-80261985ed26|Simple Error Messages Are Used]]\r\n\r\n* [[e235601d-39dd-4235-b638-2321eb014f15|Platform Banners Are Disabled]]\r\n"
        ]
      }
    ]
  }
}