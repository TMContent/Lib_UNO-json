{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "eb60ea56-2208-42b8-a502-ae41a2a41cda"
        ],
        "Id_History": [
          "eb60ea56-2208-42b8-a502-ae41a2a41cda,bb647fc4-da51-48b8-9d5e-3c55b527c193,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Scala Do Not Disclose Valuable Information During Authentication Errors"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Scala Play"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Do Not Disclose Valuable Information During Authentication Errors"
        ],
        "Tag": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n* Scala and Play Framework 2.1.0+\r\n\r\n\r\n## Summary ##\r\n\r\nDisplay a generic message when authentication fails. Disclosing information regarding invalid usernames and passwords can help an attacker obtain a list of valid users.\r\n\r\n\r\n## Problem Example ##\r\n\r\nThe following code authenticates a user. Unfortunately, the code reveals through its error messages whether the credentials sent represent a valid user or an invalid user:\r\n\r\n~~~~\r\n  def login(p1:Integer) = Action{ implicit request =>\r\n    if (p1==0)\r\n      {\r\n            val message=\"Wrong Username\"\r\n            Ok(html.message.main(message))\r\n      }else if (p1==1){\r\n            val message=\"Wrong Password\"\r\n            Ok(html.message.main(message))\r\n      }else {....}\r\n  }\r\n~~~~\r\n\r\n\r\n## Solution Example ##\r\n\r\nThe following code authenticates a user. Since it presents the same error message regardless of why the authentication failed, an attacker can't determine if the credentials tried represent a valid user or not.\r\n\r\n~~~~\r\n  def login(p1:Integer) = Action{ implicit request =>\r\n    if ((p1==0) || (p1==1){\r\n            val message=\"Authentication failed\"\r\n            Ok(html.message.main(message))\r\n      }else {....}\r\n  }\r\n~~~~"
        ]
      }
    ]
  }
}