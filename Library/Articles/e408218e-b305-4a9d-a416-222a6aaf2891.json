{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "e408218e-b305-4a9d-a416-222a6aaf2891"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Python 2.7 Create a Temporary Directory Safely"
        ],
        "Category": [
          ""
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Python"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          ""
        ],
        "Tag": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n* Python 2.7\r\n\r\n\r\n## Solution Example ##\r\n\r\n~~~~\r\n#! /usr/bin/env python\r\nimport os\r\nimport stat\r\nimport shutil\r\nimport sys\r\n\r\ntmpdir = './mytmp'\r\n# Create secure temp directory on startup\r\ntry:\r\n\tos.mkdir(tmpdir)\r\nexcept OSError:\r\n\tprint \"Temporary directory already exists.\"\r\n\tsys.exit()\r\n\r\n# Restrict access to directory making it a secure location for temp files\r\nos.chmod(tmpdir, stat.S_IRWXU)\r\n\r\n\r\ntmpfile = tmpdir + \"/temporary_file\"\r\nwith open(tmpfile, 'w') as f:\r\n\tf.write(\"Some temporary content here.\")\r\n\r\n# Cleanup temporary file once done\r\nos.unlink(tmpfile)\r\n\r\n# Remove temp directory on exit\r\nshutil.rmtree(tmpdir)\r\n~~~~"
        ]
      }
    ]
  }
}