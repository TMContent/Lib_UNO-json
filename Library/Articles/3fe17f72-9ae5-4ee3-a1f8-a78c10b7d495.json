{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "3fe17f72-9ae5-4ee3-a1f8-a78c10b7d495"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Use Platform Session Management"
        ],
        "Category": [
          ""
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "## What to Do ##\r\n\r\nUse session management offered by the platform.\r\n\r\n## Why ##\r\n\r\nThe platform works on a lower level than the application and is therefore better suited to provide session management. Most mature web application platforms offer secure session management functionality.\r\n\r\n## How ##\r\n\r\nTo use platform-provided session management:\r\n\r\n1. **Identify session management requirements.** Determine whether the application maintains information about user sessions between requests. Even just making sure the user is authenticated requires session management of some sort. Most web applications use session management.\r\n2. **Use platform-provided session management.** Session management is required functionality for most web applications, so most web application platforms provide solid implementations of this functionality. Learning how to use session management is one of the basics of learning how to develop for that platform and most developers are likely already familiar with how to do it.\r\n\r\n"
        ]
      }
    ]
  }
}