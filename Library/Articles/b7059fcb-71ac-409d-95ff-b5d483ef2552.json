{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "b7059fcb-71ac-409d-95ff-b5d483ef2552"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Centralize Authentication"
        ],
        "Category": [
          ""
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "## What to Do ##\r\n\r\nCentralize authentication controls.\r\n\r\n## Why ##\r\n\r\nImplementing a single set of centralized authentication controls helps implement them correctly, use them correctly in the application, and manage them later on.\r\n\r\n## How ##\r\n\r\nTo centralize authentication controls:\r\n\r\n1. **Identify application requirements.** Consider the following aspects of authentication controls:\r\n - Authentication should be required for all protected functionality.\r\n - All password fields should be masked.\r\n - Accounts should be locked after multiple failed authentication attempts.\r\n - Authentication should be implemented on the server-side.\r\n - Authentication controls should be centralized.\r\n - Authentication controls should fail securely.\r\n - Strong authentication credentials (passwords) should be enforced.\r\n - Account management functions should be protected.\r\n - User credential (password) changing functions should be protected.\r\n - Re-authentication should be required for sensitive operations.\r\n - Authentication credentials (passwords) should expire.\r\n - Authentication events should be logged.\r\n - Authentication attempts should be throttled.\r\n - Passwords should be hashed and salted using an iterative hashing algorithm.\r\n - Authentication credentials (connection strings) for external resources should be protected.\r\n - Authentication with external services.\r\n2. **Define authentication control APIs.** Make the exposed APIs simple to use for developers. Define authentication APIs to satisfy all application requirements. Include functionality to authenticate with external services.\r\n3. **Implement and document authentication controls.** Implement and document authentication APIs to satisfy all application requirements.\r\n4. **Use authentication controls in the application.** Developers should use the centralized authentication controls whenever authentication is necessary.\r\n\r\n"
        ]
      }
    ]
  }
}