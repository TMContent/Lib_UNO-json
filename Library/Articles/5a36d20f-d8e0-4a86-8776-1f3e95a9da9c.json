{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "5a36d20f-d8e0-4a86-8776-1f3e95a9da9c"
        ],
        "Id_History": [
          "5a36d20f-d8e0-4a86-8776-1f3e95a9da9c,bb2fafa0-1261-4d34-977a-a99951e51a2c,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Disable Directory Browsing"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          "Scala Play"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Disable Directory Browsing"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <p>Applications written using Scala and Play Framework 2.1.0 using Nginx as front-end in reverse proxy mode.<br /></p>\n  <h1>What to Do</h1>\n  <p>Disable directory browsing for your application's web directories.</p>\n  <h1>Why</h1>\n  <p>Directory browsing allows an attacker to browse your application's directory structure in search of unprotected files and components.</p>\n  <h1>When</h1>\n  <p>Disable directory browsing at all times.</p>\n  <h1>How</h1>\n  <p>Use the following steps to successfully disable directory browsing:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify if directory browsing is enabled.&nbsp;</strong>Navigate\n to your application's directories. Identify&nbsp;whether your application's \nserver correctly returns an HTTP error message. If it incorrectly \nreturns&nbsp;the directory contents, continue with the following steps.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Locate the default Nginx configuration.&nbsp;</strong>In Nginx, the default configuration file is located at <i>/etc/nginx/sites-availabe/default</i>.\n In the default \"server\" block, look for the presence of the \"location\" \nelement that is mapped to the directory for which directory browsing is \nto be disabled. Example:</p>\n      <pre>server {\n        listen   80;\n        server_name  domain.com www.domain.com;\n        access_log  /var/...........................;\n        root   /path/to/root;\n        location / {\n                index  index.html index.htm;\n        }\n        location /somedir {\n               autoindex on;\n        }\n}</pre>\n    </li>\n    <li>\n      <p>\n        <strong>Deny directory browsing in the default Nginx configuration.&nbsp;</strong>Initialize the <i>HttpAutoindexModule </i>with \"<i>off</i>\" to disable directory listing. Example:</p>\n      <pre>server {\n        listen   80;\n        server_name  domain.com www.domain.com;\n        access_log  /var/...........................;\n        root   /path/to/root;\n        location / {\n                index  index.php index.html index.htm;\n        }\n        location /somedir {\n               autoindex off;\n        }\n}</pre>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>An application is deployed on a production server. Unfortunately, the developers did not disable directory browsing. This allows an attacker to search for unprotected configuration files.</p>\n  <h1>Solution Example</h1>\n  <p>An application is deployed on a production server. Because the developers have disabled directory browsing, it is difficult for an attacker to use HTTP browsing to search for unprotected configuration files.</p>"
        ]
      }
    ]
  }
}