{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "1bfe1486-3f89-41e6-ba80-a0f321e317ed"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Protect Session Cookies"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Ruby"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          ""
        ],
        "Tag": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n- Ruby\r\n\r\n\r\n## What to Do ##\r\n\r\nSet the *Secure* and *HttpOnly* flags on session cookies.\r\n\r\n\r\n## Why ##\r\n\r\nSet the *Secure* flag on all sensitive cookies to protect the contents of the sensitive cookies from eavesdropping attacks. When the *Secure* flag on sensitive cookies is enabled, they are only transferred over connections that are secured by TLS. The *HttpOnly* flag prevents the contents of the marked cookie from being accessed by a client-side script. When the *HttpOnly* flag is set, this helps reduce the potential damage of Cross-Site Scripting attacks.\r\n\r\n\r\n## When ##\r\n\r\nIf your application uses cookies with sensitive information, then use this guideline to protect the session cookie.\r\n\r\n\r\n##How##\r\n\r\nTo set the *Secure* and *HttpOnly* flags on all sensitive cookies:\r\n\r\n1. **Verify that TLS is available.** The *Secure* flag forces cookies to be sent over TLS. TLS must be available for this to work. Please refer to the documentation for your web platform for information about enabling and configuring TLS on the web server.\r\n\r\n2. **Identify sensitive cookies.** Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.\r\n\r\n3. **Identify code that creates sensitive cookies.** For each sensitive cookie in the list, find the application code that creates the cookie.\r\n\r\n4. **Set the *Secure* and *HttpOnly* flags for each sensitive cookie.** For each piece of code that creates a sensitive cookie, add code that sets\r\nthe *Secure* and *HttpOnly* flags for the cookie. For example:\r\n\r\n\t\tcookies[:key] = {\r\n\t\t  :value => 'some_value',\r\n\t\t  :httponly => true,\r\n\t\t  :secure => true\r\n\t\t}\r\n\r\n"
        ]
      }
    ]
  }
}