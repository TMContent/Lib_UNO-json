{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "c82d2c60-211c-4c18-abbc-6af81b922991"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Log Logging Events"
        ],
        "Category": [
          "Auditing and Logging"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==What to Do==\r\n\r\nLog events associated with the logging subsystem, such as the beginning and the end of logging.\r\n\r\n==Why==\r\n\r\nLog events such as the initialization of the logging subsystem to help detect when logs have been stopped to conceal malicious activity.\r\n\r\n==How==\r\n\r\nTo log events associated with the logging subsystem:\r\n\r\n# **Identify code used to start and stop logging.** Make a spreadsheet of code that initializes, pauses, or stops logging. This code should naturally be a part of the logging subsystem itself, so it should be easy to find.\r\n# **Add code that generates log entries.** To each piece of code that starts or stops logging, add code that generates log entries indicating that the logging subsystem has been started or stopped.\r\n"
        ]
      }
    ]
  }
}