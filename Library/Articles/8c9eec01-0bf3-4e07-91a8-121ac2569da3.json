{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "8c9eec01-0bf3-4e07-91a8-121ac2569da3"
        ],
        "Id_History": [
          "8c9eec01-0bf3-4e07-91a8-121ac2569da3,a9a0534c-30f7-438e-9b79-535213357315,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Protect the Encryption Keys"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "PHP"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Protect the Encryption Keys"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\r\n\r\n* PHP\r\n\r\n==What to Do==\r\n\r\nUse a trusted third-party solution to protect your application's encryption keys, especially if it is necessary to meet regulatory requirements.\r\n\r\n==Why==\r\n\r\nProtect the encryption keys to prevent your encrypted data from being compromised. If the encryption keys are stored together with the data, then the attacker may be able to get the keys together with the data and use them to decrypt the data. Therefore, keeping the keys together with the encrypted data defeats the purpose of encrypting the data. \r\n\r\nThere is no practical encryption key management method available natively in PHP. The only practical way to implement key management in PHP in a manner that will satisfy regulatory requirements is to use a third-party solution that has been found acceptable by various regulatory agencies.\r\n\r\n==How==\r\n\r\nTo use a trusted third-party for key management in PHP:\r\n\r\n# **Identify a trusted third-party key management solution.** There are very few options available. One option is linked to at the bottom of this page.\r\n# **Use the third-party key management solution.** Work together with the vendor of the third-party key management solution to use it in your application.\r\n\r\n==Additional Resources==\r\n\r\n* For information about a third-party PHP key management solution, see http://townsendsecurity.com/developers/languages/PHP-Developer-Solutions\r\n"
        ]
      }
    ]
  }
}