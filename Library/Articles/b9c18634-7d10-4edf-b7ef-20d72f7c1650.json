{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "b9c18634-7d10-4edf-b7ef-20d72f7c1650"
        ],
        "Library_Id": [
          "de693015-55c9-4328-bbc8-42db82ae8b7a"
        ],
        "Title": [
          "Platform-specific Guidance"
        ],
        "Category": [
          ""
        ],
        "Phase": [
          ""
        ],
        "Technology": [
          ""
        ],
        "Type": [
          ""
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "For the most widely used languages and software, industry leaders and individual users alike have created programming best practices. These best practices exist to help minimize the chance of vulnerabilities or programming errors being pushed into production code. By learning these best practices and implementing them while creating software, you can avoid some of the most commonly found security mistakes. Enter each room below to learn more about the most widely held best practices for each topic covered.\n\n  * [[83e4a444-7c23-4ef2-8686-4825a8fb2b99|PHP Security]] - PHP is a widely used server side scripting language that allows websites to deliver dynamic content to users. Because of its wide use, many security experts and individuals have created best practices for how to code in PHP without creating security vulnerabilities. View this room to best understand some of the most widely held standards for coding securely in PHP.\n  * [[47b5a0ef-63f2-4048-816b-0a47af09d657|ASP.NET Security]] - ASP.NET is an open source web application framework that allows developers to produce dynamic web sites and applications. First released in 2002, it is relatively newer than some other server side scripting languages. Developers have created best practices for programming in ASP.NET that guide both new and experienced programmers away from including common security vulnerabilities in their code. Enter this room to view some of the most widely followed practices for ASP.NET security.\n  * [[fde8dc81-a0fa-4c99-8261-d585442ddb12|Java Web Application Security]] - Java web applications are most commonly affected by SQL Injection, Command Injection, Cross-Site Scripting and Cross-Site Request Forgery vulnerabilities. Following best practices helps prevent these vulnerability types and a few other, less common classes of vulnerabilities.\n  * [[cc74632e-540e-4b71-b340-a40696cc2084|C/C++ Security]] - C and C++ have been used by many developers for over 30 years, and are widely used languages for projects ranging from small applications to wide scale deployments. Due to the amount of experience gained by developers over this period, many best practices have been developed to prevent common vulnerabilities from being included in production code. View this room to better understand the most common best practices used by C and C++ developers.\n\n[[5ad388f4-ed2d-4f44-a7d1-3ba87749c921|Back to the Main Gateway]]"
        ]
      }
    ]
  }
}