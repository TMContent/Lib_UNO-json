{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "ac20a446-7eec-4a71-97fd-b6a0c8b57c42"
        ],
        "Id_History": [
          "ac20a446-7eec-4a71-97fd-b6a0c8b57c42,1cf36358-4c4c-42db-8470-eccb8914d5a1,"
        ],
        "Library_Id": [
          "c4b9cb6a-4561-4451-9b6c-4e59d73584f6"
        ],
        "Title": [
          "Uploaded Files Are Stored Outside of Web Root"
        ],
        "Category": [
          "Other"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Uploaded Files Are Stored Outside of Web Root"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\r\n\r\n* Java\r\n\r\n==What to Check For==\r\n\r\nVerify that uploaded files are stored in a location that is not web accessible.\r\n\r\n==Why==\r\n\r\nStoring uploaded files in a location that is not web accessible prevents shell upload vulnerabilities. Even if an attacker manages to upload a malicious script, they won't be able to execute it if the malicious script is stored in a location that is not accessible from the web.\r\n\r\n==How to Check==\r\n\r\nTo verify that uploaded files are stored in a location that is not web accessible:\r\n\r\n# **Determine where the application stores uploaded files.** Examine the application design and file structure to determine where the application stores uploaded files. Uploaded files might be stored in a database, in which case they won't show up on the filesystem, and storing files in a database passes this checklist item.\r\n# **Verify that the location where uploaded files are stored is not web accessible.** If uploaded files are stored on the filesystem, determine their relative path in the application. Attempt to access some uploaded files and the uploads directory using HTTP requests on a deployed application to make sure that the location where uploaded files are stored is not web accessible. \r\n\r\n\r\n==How to Fix==\r\n\r\nTo store uploaded files in a location that is not web accessible:\r\n\r\n# **Find all code used to upload files.** Search your application for code that is used to upload files. Make a spreadsheet that enumerates this code. \r\n# **Determine where to store uploaded files.** It's possible to store uploaded files in a folder outside of the web root or in a database.\r\n## Storing uploaded files outside the web root is a strong and easy to implement measure. However, it makes installing the application on a large amount of servers slightly more difficult, because the servers then need to be configured to allow storing files outside of the web root by creating a folder to store the uploaded files and granting the web server permissions to write to that folder. This additional configuration work is why many commercial applications store uploaded files in a web accessible location, and subsequently suffer from shell upload vulnerabilities. If you are using this approach, in the application installation instructions, document any special server configuration settings required to protect the uploads directory, and explain the risks of not protecting it. The main risk is that a web accessible uploads directory makes it easier for attackers to upload malicious code.\r\n## Another mitigation method is to store uploaded files in a database. Files stored in a database cannot be accessed directly via HTTP requests, so even if an attacker is able to upload a shell, they won't be able to access it. If the application is already using a database, there is no additional end-user configuration required. However, this method is harder to code, and there is some maintenance overhead because the database and backups might become quite large. \r\n# **Change code to store uploaded files outside web root.** Change each piece of code that is used to handle uploaded files so that the uploaded files are stored in the chosen location that is not accessible from the web.\r\n"
        ]
      }
    ]
  }
}