{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "f444a350-bd69-4193-9d03-ccbc0512e8b9"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "4.1 Encrypt Communication Channels"
        ],
        "Category": [
          "Communication Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Requirement"
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\n\n* PCI DSS Requirement 4.1\n\n==Policy Statement==\n\nEncrypt network traffic when sending cardholder data over open, public networks, such as the Internet.\n\nUse TLS for web pages that handle cardholder data. Design the site in such a way that https:// is always visible in the URL of those pages.\n\nAccept only trusted TLS certificates, if TLS is being used.\n\nUse only strong configurations and cipher suites with communication security technologies such as TLS.\n\n==Policy Purpose==\n\nEncrypt the cardholder data when transmitting to prevent it from being read if intercepted by an attacker.\n\nHTTPS in the URL tells the user that the session is encrypted with TLS. If frames are used in a web application, then the URL may not accurately reflect whether TLS is used.\n\nUsing a trusted key or certificate prevents an attacker from posing as a trusted party or substituting the key to be able to decrypt the transmission.\n\nUsing strong cypher suites and configurations assures that the risk of cryptographic vulnerabilities the communication security solution is low. Old versions of SSL and TLS have known vulnerabilities in them, making them unacceptable. The latest TLS version has addressed these vulnerabilities. New vulnerabilities may be found in the future, requiring a newer version of TLS to be used. \n\n==Related Guidance==\n\n* [[bd139cdc-59b2-4da0-9bdf-2205cc402266|Encrypt Communication Channels]]\n\n==Related Checklist Items==\n\n* [[5339bbde-f2ec-43a3-a689-7652dc6ae151|Communication Channels Are Encrypted]]"
        ]
      }
    ]
  }
}