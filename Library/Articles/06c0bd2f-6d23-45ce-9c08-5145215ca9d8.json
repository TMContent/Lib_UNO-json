{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "06c0bd2f-6d23-45ce-9c08-5145215ca9d8"
        ],
        "Id_History": [
          "06c0bd2f-6d23-45ce-9c08-5145215ca9d8,0a045e0b-bd32-4e50-ba98-b5fb91ed0bec,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Sensitive Data Is Not Cached"
        ],
        "Category": [
          "Communication Security"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Scala Play"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Sensitive Data Is Not Cached"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <p>Scala with Play Framework 2.1.0+<br /></p>\r\n  <h1>What to Check For</h1>\r\n  <p>Ensure that caution is exercised when manipulating sensitive data, and that the data is not cached on the client.</p>\r\n  <h1>Why</h1>\r\n  <p>Sensitive data that is cached on the client can cause significant problems:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Loss of synchronization with the server.&nbsp;</strong>The server's data might change and become inconsistent with the cached data. This is not a security risk but could cause issues with the application's performance.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>The cache may reside on the client following the application's lifespan.&nbsp;</strong>Once the application is closed, the cache may&nbsp;be readable by an attacker, leaking sensitive information. This is especially serious in cases where the client is a non-trusted environment, such as a shared computer. Attackers may look up the \"<em>Temporary Internet Files</em>\" or corresponding browser cache and uncover useful fragments of information pertaining to the last logged on user.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Check</h1>\r\n  <p>Caching is a mechanism of storing temporary data to avoid frequent server access, which improves&nbsp;an application's performance. There are&nbsp;three types of web caches:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Browser caches</strong>: Browser caches let your application's users set aside a section of their computersâ€™ hard disk to store any web data that they have previously obtained. This type of caching is typically useful when a user is reviewing previously visited pages or performing offline browsing.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Proxy caches</strong>: Web proxy caches perform like the browser caches but on a larger scale. Typically deployed by network administrators, proxy servers allow hundreds or thousands of users to improve their browsing experience by caching data that is common for all users. Because proxy caches are shared, they are very good at reducing latency and network traffic.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Gateway caches</strong>: Also known as \"<em>reverse proxy caches</em>\" or \"<em>surrogate caches</em>\", gateway caches improve the performance of your application at the server level. Typically deployed by application administrators, these caches serve to make web applications more scalable and&nbsp;reliable, as well as&nbsp;improve performance.</p>\r\n    </li>\r\n  </ol>\r\n  <p>Because caching is a very useful mechanism, developers try to cache as much data as possible. However, this&nbsp;is a downfall when your application serves sensitive data. Use the following steps to ensure that your application does not perform caching when handling sensitive data:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify sensitive data.&nbsp;</strong>Sensitive data is any information that is kept secret and should be disclosed only to authorized parties. Common examples of sensitive data include, but are not limited to, customer names, government issued ID numbers, credit card and other financial information, passwords, and private keys. Some industries, such as health care and banking, have regulatory standards that define sensitive information. Use regulatory requirements as they apply to your application to identify sensitive data. Sensitive data can be defined as follows:</p>\r\n      <ul>\r\n        <li>Information that either contains personally identifiable information or can be used to derive personally identifiable information that should not be shared with others.</li>\r\n        <li>Information that a user provides that they would not want shared with other users of the application.</li>\r\n        <li>Information that comes from an external trusted source that is not designed to be shared with users.</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure&nbsp;</strong>\r\n        <strong>that HTTP headers and meta tags are used to prevent caching.</strong>&nbsp;Ensure that the following techniques are used&nbsp;:</p>\r\n      <ul>\r\n        <li>\r\n          Verify that pages containing sensitive content have the appropriate cache control tags set.</li>\r\n        <li>Verify that your application includes the appropriate cache control HTTP headers in the outputted HTTP response.</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that sensitive data is not stored in hidden fields or script variables.&nbsp;</strong>Check all hidden fields and client-side scripts in your application. Verify that no sensitive data is stored in a hidden field or a script variable. Ensure all sensitive data that needs to be passed back to the application is stored inside server-side sessions.<br /><br />An example of storing sensitive data into hidden fields:        </p>\r\n      <pre>\r\n        <pre>    &lt;input type=\"hidden\" name=\"ccNum\" value=\"4111111111111111\"&gt;          </pre>\r\n      </pre>\r\n    </li>\r\n    <li>\r\n      <p />\r\n      <strong>Verify that autocomplete attributes are used.</strong>&nbsp;Autocomplete should be disabled for input fields used for sensitive information. This will prevent users' browsers from&nbsp;caching the information. To disable autocomplete, set the \"<em>autocomplete</em>\" attribute to \"<em>off</em>\".&nbsp;For example:</li>\r\n  </ol>\r\n  <blockquote>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;input type=\"password\" name=\"pass\" autocomplete=\"off\" /&gt;<br /></blockquote>\r\n  <h1>How to Fix</h1>\r\n  <p>Javascript variables and hidden input fields must not be used to store sensitive data, which may be rendered invalid. The only thing that may be stored on the client side across browser requests should be the Session ID. Session IDs are most often stored in an HTTP cookie, though other solutions exist.</p>\r\n  <p>Autocomplete should be disabled for input fields used for sensitive information. This will prevent users' browsers from&nbsp;caching the information. To disable autocomplete, set the \"<em>autocomplete</em>\" attribute to \"<em>off</em>\".&nbsp;For example:</p>\r\n  <blockquote>\r\n    <pre style=\"font-family: Arial, Verdana; font-size: 10pt; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal;\">\r\n      <span style=\"font-size: 10pt;\">&lt;input type=\"password\" name=\"pass\" autocomplete=\"off\" /&gt;</span>\r\n      <br />\r\n    </pre>\r\n  </blockquote>\r\n  <p>Web pages containing sensitive data should be marked as such, using appropriate meta tags, to prevent caching. When generating/serving the web page, add the appropriate HTTP headers. This will serve as a guideline to proxies and browsers alike that the data must not be cached. A possibly negative impact of this is the invalidation of the browser \"back\" button.</p>\r\n  <p>Examples of the appropriate&nbsp;<em>META</em>&nbsp;tags and HTTP headers are below:</p>\r\n  <ul>\r\n    <li>Caching&nbsp;<em>META</em>&nbsp;tags<pre><pre>&lt;HTML&gt;<br />  &lt;HEAD&gt;<br />    &lt;META HTTP-EQUIV=\"CACHE-CONTROL\" CONTENT=\"NO-CACHE\"&gt;<br />    &lt;META HTTP-EQUIV=\"PRAGMA\" CONTENT=\"NO-CACHE\"&gt;<br />    &lt;META HTTP-EQUIV=\"EXPIRES\" CONTENT=\"-1\"&gt;<br />    ...<br />  &lt;/HEAD&gt;<br />  &lt;BODY&gt;<br />    ...<br />  &lt;/BODY&gt;<br />&lt;/HTML&gt;</pre><br /></pre></li>\r\n    <li>Caching HTTP Headers. Caching HTTP Headers: Your Global.scala class should look something like below:<pre><p>import play.api._\r\nimport play.api.mvc._\r\nimport play.api.http.HeaderNames._\r\n\r\n/**\r\n * Global application settings.\r\n */\r\nobject Global extends GlobalSettings {\r\n\r\n  /**\r\n   * Global action composition.\r\n   */\r\n  override def doFilter(action: EssentialAction): EssentialAction = EssentialAction { request =&gt;\r\n    action.apply(request).map(_.withHeaders(\r\n      PRAGMA -&gt; \"no-cache\"\r\n      Cache-Control -&gt; \"no-cache\"\r\n      Expires -&gt; \"-1\"\r\n    ))\r\n  }\r\n}</p></pre></li>\r\n  </ul>\r\n  <h1 style=\"margin: 0px; padding: 10px 0px 0px; font-size: 17px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">Communication Security Guidelines</h1>\r\n  <ul style=\"margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);\">\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"52624de3-7c13-4456-974b-23c4588eef0d\">Encrypt Communication Links</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"10886993-6dcd-4905-b577-2032edd530c5\">Use SSL</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"8a5cb8a0-d7f9-4372-bae6-2d680bb498ad\">Use SSL for All Sensitive Pages</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"5de9c87b-5678-4810-8636-65b720e023bf\">Use SSL When Transmitting Credentials</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"189c97b5-78ac-4b3b-812d-587ea2a895e4\">Use Valid SSL Certificates</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"0e774522-7d2e-4a14-b3cf-850d127c3895\">Use Only Strong SSL Algorithms</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"f9d523ec-7328-4be5-93c6-00e671ecd068\">Do Not Cache Sensitive Data</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"7718e002-fad0-4114-b51f-f46397cd3921\">Do Not Place Sensitive Data in Parameters</a>\r\n      </b>\r\n    </li>\r\n  </ul>\r\n  <h1 style=\"margin: 0px; padding: 10px 0px 0px; font-size: 17px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">Communication Security Checklists</h1>\r\n  <ul style=\"margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);\">\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"d9212a71-9f66-4d55-91ad-40af4792f414\">Communication Links are Encrypted</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"0c11e362-82d1-4132-ba66-8431eb02da94\">SSL Is Used</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"60459daa-5678-45f7-834f-72ef487aaf2b\">SSL Is Used for All Sensitive Pages</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"24771ceb-219a-41c5-8877-c040969a6933\">SSL is Used When Transmitting Credentials</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"ec353b5b-901b-404b-811e-922561c1e632\">Valid SSL Certificates Are Used</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"d4cad587-c5d7-4ccf-ad50-4e178154a70b\">Only Strong SSL Algorithms Are Used</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"06c0bd2f-6d23-45ce-9c08-5145215ca9d8\">Sensitive Data Is Not Cached</a>\r\n      </b>\r\n    </li>\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"3b87b42e-a1cd-4b62-85e9-c26337b04bdf\">Sensitive Data Is Not Placed in Parameters</a>\r\n      </b>\r\n    </li>\r\n  </ul>\r\n  <h1 style=\"margin: 0px; padding: 10px 0px 0px; font-size: 17px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; background-color: rgb(255, 255, 255);\">Communication Security Testing</h1>\r\n  <ul style=\"margin: 10px 0px 10px 25px; padding: 0px 0px 0px 30px; font-family: 'Segoe UI', 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: small; background-color: rgb(255, 255, 255);\">\r\n    <li style=\"margin: 0px; padding: 0px;\">\r\n      <b>\r\n        <a href=\"b928e4bf-8dc9-4e64-bbec-ad642f375ab4\">How to Test for Network Credential Sniffing Bugs in Scala</a>\r\n      </b>\r\n    </li>\r\n  </ul>"
        ]
      }
    ]
  }
}