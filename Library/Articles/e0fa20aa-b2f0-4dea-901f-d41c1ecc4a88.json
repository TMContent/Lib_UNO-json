{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "e0fa20aa-b2f0-4dea-901f-d41c1ecc4a88"
        ],
        "Id_History": [
          "e0fa20aa-b2f0-4dea-901f-d41c1ecc4a88,e9d6e542-74b6-4745-963d-95e09b5ed23d,"
        ],
        "Library_Id": [
          "f215ceee-9a08-41d9-b2c1-bbcc058a8f32"
        ],
        "Title": [
          "Use the clearCache() Method to Delete Sensitive Information from the Cache "
        ],
        "Category": [
          "Privacy"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Android"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use the clearCache() Method to Delete Sensitive Information from the Cache "
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\n\n* Google Android applications that use an instance of the //WebView// class to process sensitive or personal information.\n\n==What to Do==\n\nWhen using the //WebView// class, call the //clearCache()// method after a session finishes to remove any sensitive information from the cache.\n\n==Why==\n\nYour application maintains its own cache for cookies and session information. If users access a //WebView// that allows sensitive information to enter the cache, clear the cache database to prevent information leakage.\n\n==When==\n\nWhen accessing sensitive information in a //WebView//.\n\n==How==\n\nTo clear sensitive information from cache:\n\n# **Call the clearCache() method.** After initializing a reference to the //WebView// (i.e., //myWebView//), call the //clearCache()// method: //final WebView myWebView = (WebView) findViewById (R.id.webView_name); myWebView.clearCache (boolean includeDiskFiles);// Typically include true on the //clearCache()// method to wipe any cache files on the drive. Call this method in the activities’ //onPause()// or //onDestroy()// method to ensure that the cache data is removed upon exiting the application. Note that doing so could cause a performance issue if the screen is reoriented during use and the site must reload the //onResume()// method for the activity, call //myWebView.reload()// so that the user does not have to reinitiate the URL load.\n# **Clear the cache database.** You can also call //getApplicationContext().deleteDatabase(web.getSettings().getDatabasePath())// to completely delete the cache database. However, this should be unnecessary if the cache files are properly deleted.\n# **Disable loading data from the cache.** Enforce no loading from the cache on a //WebView//. When creating the //WebView//, invoke: //myWebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);//\nNote that this call only prevents loading from the cache and does not prevent or clear cached data.\n\n==Problem Example==\n\nAs the MyApp developer, you are using a //WebView// to allow users to purchase items off the company’s auctioning website. The application uses cookies that contain personal information.\n\nYou clear the cache each time a user clicks a button to load the page. You use an //onClick// listener with the following code:\n\n{{{\nprivate static final String WEB_SITE = www.myapp.com;\n\npublic void onClick(View v) {\t\t\t\n  myWebView.getSettings().setJavaScriptEnabled(false);\n  myWeb.loadUrl(WEB_SITE);\n  myWeb.clearCache(true);\n}\n}}}\n\nTo continually refresh the page content with new auction updates, you instantiate a thread that calls //myWeb.reload()// every 60 seconds. A few months after running this code in production, a user loses his Android device. During an incident investigation, the development team discovers that cached data, including the user’s personal information, is still resident in the application’s cache database.\n\n==Solution Example==\n\nYou made the mistake of not clearing the cache each time a user left the application. Although the //clearCache// method was enforced each time a user-initiated URL lookup occurred, the thread reloading the application continued to create cached data.\nTo remedy this, create two methods within the activity:\n\n{{{\npublic void onResume() {\n  super.onResume();\n  if (myWeb!=null) {web.reload();}\n}\n\t\npublic void onDestroy() {\n  super.onDestroy();\n  web.clearCache(true);\n}\n}}}\n\nThis code allows the application to clear the cache for each user session.\n"
        ]
      }
    ]
  }
}