{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "ba64e4ba-9d14-4054-a99e-b6594f9698d6"
        ],
        "Id_History": [
          "ba64e4ba-9d14-4054-a99e-b6594f9698d6,e711e1a0-dfb3-4b82-9e4a-561175046fe7,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Scala Validate Usernames Before Processing Them"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Scala Play"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Validate Usernames Before Processing Them"
        ],
        "Tag": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n* Scala and Play Framework 2.1.0+\r\n\r\n\r\n## Summary ##\r\n\r\nValidate user credentials before processing them. Failure to validate user credentials could cause improper authentication. This can allow an attacker to authenticate as another user without the need to steal credentials.\r\n\r\n\r\n## Solution Example ##\r\n\r\n~~~~\r\nval pid = UserForm.empid\r\nval uname = UserForm.username\r\nval name = Name.findname(pid,uname)\r\n\r\nval whitelistPattern = \"(\\\\w|\\\\d)+\"\r\nval issafe = whitelistPattern.pattern.matcher(uname).matches\r\nif(issafe){\r\n...\r\n//Code for Action\r\n}\r\nelse\r\n{\r\n...\r\n//Code for Exception\r\n}\r\n~~~~"
        ]
      }
    ]
  }
}