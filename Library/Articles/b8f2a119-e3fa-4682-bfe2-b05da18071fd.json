{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "b8f2a119-e3fa-4682-bfe2-b05da18071fd"
        ],
        "Id_History": [
          "b8f2a119-e3fa-4682-bfe2-b05da18071fd,b965f5d4-ee42-4a21-9599-4389243426be,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "The Secure And HTTPOnly Flags Are Set on All Sensitive Cookies"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Scala Play"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "The Secure And HTTPOnly Flags Are Set on All Sensitive Cookies"
        ],
        "Tag": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n* Scala and Play Framework 2.1.0+\r\n\r\n\r\n## What to Check For ##\r\n\r\nVerify that the \"Secure\" and \"HTTPOnly\" flags are set on all sensitive cookies, especially cookies containing session IDs.\r\n\r\n\r\n## Why ##\r\n\r\nSet the \"Secure\" flag on all sensitive cookies to protect the contents of the sensitive cookies from eavesdropping attacks. Setting the \"Secure\" flag on sensitive cookies ensures they are only transferred over connections that are secured by TLS. The \"HTTPOnly\" flag prevents the contents of the marked cookie from being accessed by client-side script. This helps protect against Cross-Site Scripting attacks.\r\n\r\n\r\n## How to Check ##\r\n\r\nTo verify that the \"Secure\" and \"HTTPOnly\" flags are set on all sensitive cookies:\r\n\r\n1. **Verify that TLS is available.** The \"Secure\" flag forces cookies to be sent over TLS. TLS has to be available for this to work.\r\n2. **Identify sensitive cookies.** Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.\r\n3. **Identify code that creates sensitive cookies.** For each sensitive cookie in the list, find the code that creates that cookie.\r\n4. **Verify that the \"Secure\" and \"HTTPOnly\" flags are set for each sensitive cookie.** For each piece of code that creates a sensitive cookie, verify that code exists that sets the \"Secure\" and \"HTTPOnly\" flags, as follows: In the \"application.conf\" file, “application.session.httpOnly=true” and \"application.session.secure=true”\" should be set.\r\n\r\n\r\n## How to Fix ##\r\n\r\nTo set the \"Secure\" and \"HTTPOnly\" flags on all sensitive cookies:\r\n\r\n1. **Verify that TLS is available.** The \"Secure\" flag forces cookies to be sent over TLS. TLS has to be available for this to work.\r\n2. **Identify sensitive cookies.** Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.\r\n3. **Identify code that creates sensitive cookies.** For each sensitive cookie in the list, find the code that creates that cookie.\r\n4. **Set the \"Secure\" and \"HTTPOnly\" flags for each sensitive cookie.**  Enable the HTTPOnly flag using “application.session.httpOnly=true” in the “application.conf” file. Enable the Secure flag on the cookie using “application.session.secure=true” in the “application.conf” file."
        ]
      }
    ]
  }
}