{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "e2f97ef0-6ced-4f3d-bdce-7a72e359eb7b"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Vulnerabilities"
        ],
        "Category": [
          ""
        ],
        "Phase": [
          ""
        ],
        "Technology": [
          ""
        ],
        "Type": [
          ""
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "As software grows more complex, tracking down problematic code that creates security vulnerabilities can become increasingly difficult. This can lead to production software being shipped with vulnerabilities if the creator is inexperienced or does not know the commons signs of exploitable code. For languages and frameworks that are used regularly, the most common security issues are frequently compiled into easy to reference lists. View each room below to become familiar with the most widely found security vulnerabilities, and use them when programming as reference.\n\n  * [[754da6c4-f305-4112-b3e2-d34b81475a5b|Vulnerability Taxonomies]] - Vulnerability taxonomies help programmers best manage their security priorities based on numerous factors of classification. Enter the Vulnerability taxonomies area to find existing taxonomies and learn how each is managed. Pay attention to which vulnerabilities regularly show up between lists.\n  * [[e3d00fdc-baf6-49d5-97a9-40e003407146|Most Exploited Vulnerabilities]] - Some vulnerabilities are exploited more than others, whether due to prevalence in the industry or the level of technical knowledge required to successfully exploit the flaw. Enter this room to view which vulnerabilities are most exploited in the real world and the software they apply to.\n  * [[2f4a6a39-0932-4c76-88fd-921eacfc9e44|Common PHP Vulnerabilities]] - PHP is one of the most widely used server side scripting languages on the Internet. Even though a typical user may not even know they are interacting with PHP generated content, its frequent deployment has seen it targeted and researched by many third parties. Enter this room to see which vulnerabilities are commonly found and exploited by nefarious individuals.\n  * [[eea7e1d6-e603-4d72-8c9a-dacfbb55d6f1|Common ASP.NET Vulnerabilities]] - ASP.NET is a service side web application framework developed by Microsoft. This framework allows developers to build dynamic content and web applications for both PC and Mobile devices. Enter this room to view some of the most commonly found vulnerabilities used against ASP.NET applications.\n  * [[655e852d-2acb-44f3-8865-389d40bb12b9|Common Java Vulnerabilities]] - Java has become one of the most widely deployed languages due to its portability to almost any system, regardless of hardware configuration or architecture. While security measures such as the Java Virtual Machine are in place to add an extra layer of security, Java's wide install base has seen it the target of many attacks. Enter this room to see which vulnerabilities are commonly found in the Java language.\n  * [[95e5c97e-4ee6-4c27-8986-2c7f5f66ba4b|Common C/C++ Vulnerabilities]] - C and C++ are two of the most widely used languages, and also have relatively low level access to the system. Because of this, successfully exploiting a C or C++ application can lead to attackers gaining powerful access to system memory and other crucial tasks. Enter this room to view some of the most commonly found C and C++ vulnerabilities.\n\n[[5ad388f4-ed2d-4f44-a7d1-3ba87749c921|Back to the Welcome Page]]"
        ]
      }
    ]
  }
}