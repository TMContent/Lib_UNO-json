{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "1bbc222d-0440-4fcf-b67f-331aa351a577"
        ],
        "Library_Id": [
          "de693015-55c9-4328-bbc8-42db82ae8b7a"
        ],
        "Title": [
          "Security Engineering"
        ],
        "Category": [
          ""
        ],
        "Phase": [
          ""
        ],
        "Technology": [
          ""
        ],
        "Type": [
          ""
        ],
        "DirectLink": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "There is no better time to plan a system’s security measures and practices than when it is first being designed. By building a secure system from the bottom up, you greatly increase the chance of the final product being hardened from attacks both through software implementation and policy. Once a product is shipped, responsibility for keeping the system secure does not end, and measures should be in place to prevent the system from becoming vulnerable to exploits later on down the line. View each topic below to better understand how security measures can be implemented in the design process, from initial creation to deployment. \n\n  * [[aa8c7d56-1d7f-40d4-9313-ec50df1ad4ae|Integrate Security Activities into the Development Lifecycle]] - Integrate security into your application development life cycle to design, build, and deploy secure applications.\n  * [[93a54578-f9ad-414c-8f19-2ef7fbb53b7e|Identify Security Objectives]] - Identification of security objectives is the first, best step you can take to help ensure the security of your application. The objectives, once created, can be used to direct all the subsequent security activities that you perform. Security objectives do not remain static, but are influenced by later design and implementation activities.\n  * [[b5a68610-752a-4154-be82-6cbc4ab40866|Conduct Security Architecture And Design Reviews]] - If you spend time and effort at the beginning of your project to analyze and review your application architecture and design, you can eliminate design-related vulnerabilities and improve your application’s overall security. It is much easier and less expensive to fix vulnerabilities at design time than it is later in the development cycle when substantial re-engineering might be required. Use the architecture and design review as a checkpoint to ensure compliance with your team’s design guidelines. The review should cover both deployment and design considerations. By considering your design in relation to the target deployment environment and the security policies defined by that environment, you can help to ensure a smoother and more secure application deployment. Perform architecture and design reviews iteratively as your design evolves or as you learn more about the design and architecture of your applications. If your application has already been created, the architecture and design review is still an important part of the security assessment process that can help you to fix vulnerabilities and improve future designs.\n  * [[5589885e-6287-4979-a158-13eff06027cc|Perform a Control Flow Analysis]] - Use control flow analysis to find vulnerabilities caused by logic errors.\n  * [[1a155f9e-6a46-4a67-b4ad-dc2c501966f2|Perform a Dataflow Analysis]] - Use dataflow analysis to find vulnerabilities that are related to input validation.\n  * [[e72d0afe-72eb-4605-a815-b6b8f4234a4b|Conduct a Security Deployment Review]] - A deployment review helps to ensure that application security is not compromised by poor configuration of the network or host. Even the most securely designed and implemented application can be compromised by an error during deployment. \n  * [[429edd20-ad22-4593-8a8a-833abfd6d731|Perform Penetration Testing]] - Penetration testing helps discover vulnerabilities before someone else does.\n\n\n[[bcbbe5c7-95c3-468d-9371-6eb42f9b93e6|Back to the Programming Best Practices Area]]"
        ]
      }
    ]
  }
}