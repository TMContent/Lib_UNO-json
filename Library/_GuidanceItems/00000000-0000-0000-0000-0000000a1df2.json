{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-0000000a1df2"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-0000000a1df2,3248a72d-1b97-41e9-b137-29cc9b25022b,"
        ],
        "Library_Id": [
          "f215ceee-9a08-41d9-b2c1-bbcc058a8f32"
        ],
        "Title": [
          "Use SSL to Protect Communications"
        ],
        "Category": [
          "Communication Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Android"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use SSL to Protect Communications"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "WikiText"
        },
        "Data": [
          "==Applies To==\r\n\r\n* Android applications that transmit sensitive data over the network.\r\n* Android applications that authenticate to a remote server.\r\n\r\n==What to Do==\r\n\r\nUse SSL to secure network communications.\r\n\r\n==Why==\r\n\r\nUsing SSL to secure network communications prevents eavesdropping attacks.\r\n\r\n==How==\r\n\r\nTo use SSL to protect network connections:\r\n\r\n# **Identify all communications performed by the application.** Review the application design to identify all network communications that are performed by the application.\r\n# **Define communication security requirements.** Define which network communications need to be encrypted. All transmissions that include sensitive data should be encrypted, including authentication credentials and session tokens. In some cases, it might be practical to encrypt all network connections.\r\n# **Identify code that sends data over the network.** Identify the code responsible for each network communication that needs to be encrypted.\r\n# **Add code that uses SSL.** There are multiple methods for using SSL in Android to choose from, depending on application requirements. Using the //SSLSocketFactory// class is one of the most common solutions.\r\n\r\n==Communication Security Guidelines==\r\n\r\n* [[00000000-0000-0000-0000-000000657ab9|Disable Self-signed SSL Certificates]]\r\n* [[00000000-0000-0000-0000-0000000a1df2|Use SSL to Protect Communications]]\r\n\r\n==Communication Security Checklists==\r\n\r\n* [[00000000-0000-0000-0000-0000001fdc3e|Self-signed SSL Certificates Are Disabled]]\r\n* [[00000000-0000-0000-0000-0000002b164a|SSL Is Used to Protect Communications]]\r\n\r\n==Additional Resources==\r\n\r\n* For information about the Android SSL API, see http://developer.android.com/reference/javax/net/ssl/package-summary.html\r\n* For information about the //SSLEngine// class, see http://developer.android.com/reference/javax/net/ssl/SSLEngine.html\r\n* For information about the //SSLSocketFactory// class, see http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html\r\n* For information about the //javax.net.ssl// package, see http://developer.android.com/reference/javax/net/ssl/package-summary.html\r\n* For information on proper SSL configuration in general, see https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet"
        ]
      }
    ]
  }
}