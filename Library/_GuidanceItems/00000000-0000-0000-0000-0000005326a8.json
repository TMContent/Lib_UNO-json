{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-0000005326a8"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-0000005326a8,fe077324-0739-4771-b278-72134f2d2f4c,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Use the Latest WebSocket RFC 6455 Standard"
        ],
        "Category": [
          "WebSockets"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "HTML5"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use the Latest WebSocket RFC 6455 Standard"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\n\nApplications written in HTML5 that use Websockets.\n\n\n==What to Do==\n\nUse the latest WebSockets standard, Internet Engineering Task Force (IETF) Request for Comments (RFC) 6455.  Do not use versions hixie-76/hybi-00 and below.\n\n==Why==\n\nVersions hixie-76/hybi-00 and below are considered insecure. Using the latest RFC 6455 standard can reduce the risk of vulnerabilities such as cache poisoning.\n\n==When==\n\nUse this guideline in HTML5 applications that use WebSockets. \n\n==How==\n\nTo use the latest RFC 6455 standard to prevent WebSocket stealth attacks:\n\n# **Upgrade the WebSockets serverâ€™s libraries with the latest stable release that uses the RFC 6455 standard.** For example, Tornado, a popular web framework written in Python, has WebSockets libraries that many use as part of their WebSockets server implementation. If you are using Tornado, upgrade to at least Tornado version 2.2, as that version and later provide support for RFC 6455.\n# **Ensure that backward compatibility is not enabled.** A server implementation that supports RFC 6455 might be configured to be backward compatible with older WebSockets versions in order to support older browsers. In the case of Tornado, backward compatibility is enabled with a line of code: {{{WebSocketHandler.allow_draft76().}}} Search the server code or configuration to see if backward compatibility is enabled. If it is, disable it by removing (or commenting out) that line of code. This will ensure the server only allows the RFC 6455 protocol.\n\n==Problem Example==\n\nA chat application uses WebSockets to allow its users to communicate in real-time. The application is written using Tornado version 2.2, a web framework written for the Python language that includes a WebSockets library. While this version provides support for RFC 6455, the developers have enabled backward compatibility for users of older browsers by adding the following line of Python code to the application:\n\n{{{\nWebSocketHandler.allow_draft76()\n}}}\n\n\\\\\n==Solution Example==\n\nThe chat application is made more secure by removing the following code:\n\n{{{\nWebSocketHandler.allow_draft76() \n}}}\n\n\n"
        ]
      }
    ]
  }
}