{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-0000002a5e0d"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-0000002a5e0d,12f344d2-919c-48ba-b24f-eefb25e66718,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Encrypt Stored Sensitive Data"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "iOS"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "Encrypt Stored Sensitive Data"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "WikiText"
        },
        "Data": [
          "==Applies To==\n\n* iOS applications that store sensitive data.\n\n==What to Do==\n\nEncrypt sensitive data stored in files.\n\n==Why==\n\nEncrypt sensitive data stored in files to prevent attackers from gaining access to it if the device is lost or compromised.\n\n==How==\n\nTo encrypt sensitive data stored in files:\n\n# **Identify sensitive data.** Make a list of all sensitive information handled by your application.\n# **Identify sensitive data storage locations.** Sensitive data may be stored in the following locations:\n#* Application-created files\n#* Temporary files\n#* Cached data\n#* Cookies\n#* Databases\n#* Logs\n#* Plists\n#* Keychain\n# **Define encryption requirements for sensitive data that is stored in files.** Choose the level of protection that is the most appropriate for each type of stored sensitive data handled by the application. The iOS Data Protection API provides the following protection levels:\n#* //FileProtectionNone// - no encryption.\n#* //FileProtectionComplete// - encrypt the file and deny access when the device is locked.\n#* //FileProtectionCompleteUnlessOpen// - encrypt the file until it is open, leave it decrypted while it is open even if the device is locked.\n#* //FileProtectionCompleteUntilFirstUserAuthentication// - encrypt the file until the device is unlocked for the first time after a reboot.\n# **Define encryption requirements for sensitive data that is stored in the keychain.** Choose the level of protection that is the most appropriate for each type of sensitive data handled by the application that is stored in the keychain. The keychain provides the following protection levels:\n#* //kSecAttrAccessibleAlways// - the item is always available.\n#* //kSecAttrAccessibleWhenUnlocked// - the item is only available when the device is unlocked.\n#* //kSecAttrAccessibleAfterFirstUnlock// - the item is only available after the device is unlocked for the first time after a reboot.\n#* //kSecAttrAccessibleAlwaysThisDeviceOnly// - the item is always available, but is not moved to other devices.\n#* //kSecAttrAccessibleWhenUnlockedThisDeviceOnly// - the item is only available when the device is unlocked and is not moved to other devices.\n#* //kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly// - the item is only available after the device is unlocked for the first time after a reboot and is not moved to other devices.\n# **Encrypt sensitive files.** Use the appropriate APIs to encrypt stored sensitive data. Data stored in the keychain is always encrypted.\n\n"
        ]
      }
    ]
  }
}