{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-00000051c329"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-00000051c329,2c5b5ada-1990-4cdd-b217-0e3a8433e68d,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Validate All Input"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "iOS"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Validate All Input"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "WikiText"
        },
        "Data": [
          "==Applies To==\n\n* iOS applications that accept any user input.\n\n==What to Do==\n\nValidate all user input using whitelist/positive input validation. Whitelist input validation allows only input that is explicitly defined as valid, as opposed to blacklist input validation, which filters out known bad input.\n\n==Why==\n\nProperly implemented input validation mitigates many types of injection vulnerabilities, such as Cross-Site Scripting and SQL injection.\n\n==How==\n\nTo validate all user input using whitelist input validation:\n\n# **Identify all entry points for user input.** Make a list of all possible sources of user input in your application.\n# **Identify all types of input accepted by the application.** For each source of user input on the list, define valid characters, length, format, and range (for numerical values).\n# **Define an input validation subsystem.** Define a set of validator functions to validate each type of input handled by the application. Input should be validated on the server.\n# **Validate characters.** Restrict the acceptable range of characters in text input using regular expressions.\n# **Validate length.** Check that the length of the user input is valid.\n# **Validate format.** If the input type has a specific pattern, such as a date or a phone number, use regular expressions to make sure user input matches the input type specified by the application. Use regular expressions to enforce strong password requirements.\n# **Validate range.** Restrict the acceptable range of numerical input by comparing the input to the maximum and minimum acceptable values.\n# **(Optional) Reject and respond to known bad input.** This step does not add much actual security, but it may provide defense in depth. The input validation subsystem may check for known attack strings and respond to these likely attacks by alerting the user. The options for responding to invalid input are: reject invalid input, log invalid input, take evasive action.\n# **(Optional) Encode input.** If the input is going to be displayed back through the web application, consider encoding it to prevent Cross-Site Scripting attacks.\n\n==Data Validation Guidelines==\n* [[00000000-0000-0000-0000-000000866d55|Canonicalize File Names and Paths]]\n* [[00000000-0000-0000-0000-000000590dce|Check File Paths and Names for Null Bytes]]\n* [[00000000-0000-0000-0000-00000051c329|Validate All Input]]\n* [[00000000-0000-0000-0000-0000005804d8|Validate and Encode Data Inserted into XML Documents]]\n* [[00000000-0000-0000-0000-000000410a08|Validate and Encode Data Passed to UIWebView Controls]]\n* [[00000000-0000-0000-0000-00000049bb5e|Validate File Formats]]\n\n==Data Validation Checklists==\n* [[00000000-0000-0000-0000-0000004d996e|File Names and Paths Are Canonicalized]]\n* [[00000000-0000-0000-0000-0000004446d0|File Paths and Names Are Checked for Null Bytes]]\n* [[00000000-0000-0000-0000-000000396c19|All Input Is Validated]]\n* [[00000000-0000-0000-0000-0000008c53b6|Data Inserted into XML Documents Is Validated and Encoded]]\n* [[00000000-0000-0000-0000-000000647d44|Data Passed to UIWebView Controls Is Validated and Encoded]]\n* [[00000000-0000-0000-0000-000000066105|File Formats Are Validated]]\n\n==Additional Resources==\n* For more a guide to input validation, please see https://www.owasp.org/index.php/Input_Validation_Cheat_Sheet"
        ]
      }
    ]
  }
}