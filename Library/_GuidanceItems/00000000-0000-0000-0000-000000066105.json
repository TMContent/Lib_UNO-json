{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-000000066105"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-000000066105,02ed1e9f-aefe-4faf-a4b2-d4608c3eb244,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "File Formats Are Validated"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "File Formats Are Validated"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "WikiText"
        },
        "Data": [
          "==What to Check For==\n\nVerify that file formats are validated.\n\n==Why==\n\nMany vulnerabilities are exploited via malformed documents supplied to the application. Attackers will frequently embed malformed documents in web pages - some applications are integrated into the web browser and will open malicious documents automatically. Making sure the file format is valid before loading files into the application makes it harder to embed exploit code into documents.\n\n==How to Check==\n\n# **Identify the functions that open data files.** \n# **Review validation code.** Verify that these functions include provisions for validating the input data file format before passing it on to other functions.**\n\n==How to Fix==\n\nPerform the following actions to validate file formats before loading files into the application:\n\n# **Define the file format.** Specify valid values for all possible fields in all document types used by your applications. This information should be a part of project documentation and the developers may already have it.\n# **Review code.** Search for code that loads saved files into the application. Examine the extent of the validation already being performed by the application. If some validation is already being performed, some code may be recycled for a more thorough validation routine.\n# **Implement validation.** Write validation functions for all fields in all document types supported by the application.\n# **Centralize validation.** Move the validation functions for all document fields to the centralized input and data validation class or library. Write a master file format validation function that calls all individual data field validation functions.\n# **Use validation.** Go back to code that loads data files into the application. Remove any old validation code. Call the master file format validation function on all files before loading them into the application.\n\n"
        ]
      }
    ]
  }
}