{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-00000060779f"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-00000060779f,d00e5e57-9ca7-4118-b0d9-05be302f8d00,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Use TLS to Protect Communications"
        ],
        "Category": [
          "Communication Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "iOS"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Use SSL to Protect Communications"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\n\n* iOS applications that send or receive sensitive data over the network.\n\n==What to Do==\n\nUse TLS to protect network communications.\n\n==Why==\n\nProperly using TLS to encrypt network communications prevents eavesdropping attacks and other types of man-in-the-middle attacks.\n\n==How==\n\nTo use TLS to protect communications:\n\n# **Identify all communications performed by the application.** Review the application design to identify all network communications performed by the application.\n# **Define communication security requirements.** Define which network communications need to be encrypted. All transmissions that include sensitive data, including authentication credentials and session IDS, should be encrypted. In some cases, it might be practical to encrypt all network connections.\n# **Identify code that uses the network.** Identify code that is responsible for each network communication that needs to be encrypted.\n# **Add code that uses TLS.** Rewrite code that performs sensitive network communications to use TLS. The //NSURLRequest// and //NSURLConnection// classes support TLS with an acceptably secure default configuration starting with iOS 5 - this is the most practical way to use TLS on iOS and should be sufficient for most applications. \n\n==Additional Resources==\n\n* For more information about the //NSURLRequest// class, please see http://developer.apple.com/library/ios/#DOCUMENTATION/Cocoa/Reference/Foundation/Classes/NSURLRequest_Class/Reference/Reference.html\n* For more information about the //NSURLConnection// class, please see https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Classes/nsurlconnection_Class/Reference/Reference.html\n* For the \"URL Loading System Programming Guide\", please see http://developer.apple.com/library/ios/#DOCUMENTATION/Cocoa/Conceptual/URLLoadingSystem/URLLoadingSystem.html\n* For more information on proper TLS configuration in general, please see https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet"
        ]
      }
    ]
  }
}