{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-000000010f15"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-000000010f15,2bf9dc42-c5eb-409d-a7a6-d2219188281b,"
        ],
        "Library_Id": [
          "7d2d0571-e542-45cd-9335-d7a0556c2bea"
        ],
        "Title": [
          "URLs Passed to the EventSource Constructor are Validated"
        ],
        "Category": [
          "Server-Sent Events"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "HTML5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "URLs Passed to the EventSource Constructor are Validated"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "==Applies To==\r\n\r\nHTML5 and Javascript\r\n\r\n==What to Check For==\r\n\r\nVerify that URLs passed to the EventSource constructor are validated.\r\n\r\n==Why==\r\nIf you fail to validate a URL passed to the EventSource constructor, you could potentially receive messages that contain malicious or incorrect data.\r\n\r\n==How To Check==\r\n\r\nTo verify that URLs passed to the EventSource constructur are validated:\r\n\r\n# **Locate the instances in your JavaScript that use the EventSource constructor**. Search the application code for {{{EventSource}}} to find all code that uses the EventSource constructor. Create a spreadsheet to list all such code.\r\n# **Review code that uses the EventSource constructor.** Examine each piece of code that uses the EventSource constructor to make sure that the URL passed to the constructor is validated first.\r\n\r\n==How To Fix==\r\n\r\nWhen using the EventSource object, use a regular expression (RegEx object) to make sure that no scheme is included in the URL. This will force the URL to be relative to the current web page or script, which will also ensure that the event source is not from another site. To perform this validation, follow these steps:\r\n\r\n# **Locate the instances in your JavaScript that use the EventSource constructor.** The usage of the EventSource constructor is as follows: {{{ var source = new EventSource(\"eventsource.php\"); }}} Pay particular attention if this code is inside a function where the URL of the source may be provided as an argument from other code. \r\n# **Determine a policy for allowing sources.** Do not allow an EventSource that includes a scheme (“http:” or “https:”) at the beginning of the value, because this means the EventSource may come from a different site. Instead, you should consider only allowing relative URLs, which will not start with the scheme.\r\n# **Check the length of the URL before validating it.** Use the length property to ensure the size of the domain is not so large that it will cause a RegEx denial of service (DoS). \r\n# **Write a regular expression that validates the URL.** Make sure that no scheme is included in the URL, and make sure it is a relative path. The following example uses a negative look-ahead group in the format {{{(?!<expression>) }}}. {{{ ^(?!https?:) }}}\r\nThe {{{s?}}} part of this expression allows it to capture both HTTP and HTTPS over Secure Sockets Layer (HTTPS). The {{{?}}} character matches if the preceding expression(s) occurs either not at all or at most one time.\r\n# **Include the expression to validate URLs before they are passed to the EventSource constructor.** For example, the following code validates the {{{sourceUrl}}} variable to make sure it is valid before using it:   \\\\{{{ if (pattern.test(sourceUrl)) }}}\r\n# **Test the expression thoroughly to make sure only relative URLs are allowed.** Perform thorough testing using both positive and negative conditions to verify the functionality.\r\n\r\n==Server-sent Events Guideline==\r\n\r\n* [[00000000-0000-0000-0000-00000069528c|Validate URLs Passed to the EventSource Constructor]]\r\n\r\n==Server-sent Events Checklist Item==\r\n\r\n* [[00000000-0000-0000-0000-000000010f15|URLs Passed to the EventSource Constructor are Validated]]"
        ]
      }
    ]
  }
}