{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-000000590dce"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-000000590dce,8bfff6fa-0eca-4604-9b13-34909056af54,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Check File Paths and Names for Null Bytes"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "iOS"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "Check File Paths and Names for Null Bytes"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "WikiText"
        },
        "Data": [
          "==Applies To==\n\n* iOS applications where Obj-C code passes file names and paths to C code.\n\n==What to Do==\n\nCheck //NSString// objects that are used for file names or paths to make sure they don't contain null bytes.\n\n==Why==\n\nChecking file names and paths for null bytes helps prevent unauthorized file access. Code written in C uses null bytes to terminate strings. If a string containing null bytes is passed to C code, the C code will only read the string up to the first null byte. Attackers often exploit this fact by inserting null bytes into file names in order to access unintended files. Objective-C //NSString// objects are not terminated by null bytes, so an attacker may use them to pass paths and names containing null bytes to native C code.\n\n==How==\n\nTo check file paths and names for null bytes:\n# **Identify all input used for file access.** Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.\n# **Remove null bytes from paths.** If a //NSString// object contains a file name or path and includes a null byte, an incorrect resource may be accessed. Verify that there are no null bytes in strings that are used for file names or paths. If null bytes are detected, it is safer to abort the operation than to strip the null bytes, because the presence of null bytes almost certainly indicates an attack.\n\n"
        ]
      }
    ]
  }
}