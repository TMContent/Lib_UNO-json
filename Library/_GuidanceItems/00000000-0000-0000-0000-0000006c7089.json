{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-0000006c7089"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-0000006c7089,eee72590-f1ee-4dd8-8cc1-b7b047389840,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Validate and Encode Data Inserted into XML Documents"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Android"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Validate and Encode Data Inserted into XML Documents"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "WikiText"
        },
        "Data": [
          "==Applies To==\r\n\r\n* Android applications that handle XML documents.\r\n\r\n==What to Do==\r\n\r\nValidate and encode data inserted into XML documents.\r\n\r\n==Why==\r\n\r\nValidating and encoding data inserted into XML documents helps prevent XML injection vulnerabilities.\r\n\r\n==How==\r\n\r\nTo validate and encode data inserted into XML documents:\r\n\r\n# **Identify XML documents used by the application.** Examine the application design to identify all XML documents and XML document types used by the application.\r\n# **Identify code that handles XML documents.** Review application to find code that uses XML documents.\r\n# **Add data validation methods.** Add methods that validate all the data types stored in XML documents and used by the application.\r\n# **Use validation methods.** Call the data validation methods from the previous step whenever loading XML documents. Validation should be performed before encoding.\r\n# **Add encoding methods.** Add methods that escape XML entities. Unfortunately, there are no stable libraries available for Android to escape XML entities. When writing methods that escape XML entities, consider the following: \r\n#* Data must first be converted to a uniform character encoding. \r\n#* XML entities have to be escaped properly. \r\n#* Code that loads XML documents should be able to restore the original data from the encoded data.\r\n# **Use encoding methods.** Call encoding methods wherever the application processes XML documents. \r\n\r\n==Data Validation Guidelines==\r\n\r\n* [[00000000-0000-0000-0000-0000008d3cec|Canonicalize File Names and Paths]]\r\n* [[00000000-0000-0000-0000-0000008149ca|Validate All Input]]\r\n* [[00000000-0000-0000-0000-0000006c7089|Validate and Encode Data Inserted into XML Documents]]\r\n* [[00000000-0000-0000-0000-0000007635ae|Validate File Formats]]\r\n\r\n==Data Validation Checklists==\r\n\r\n* [[00000000-0000-0000-0000-0000009763b8|File Names and Paths Are Canonicalized]]\r\n* [[00000000-0000-0000-0000-0000004f2fec|All Input Is Validated]]\r\n* [[00000000-0000-0000-0000-00000071b4f0|Data Inserted into XML Documents Is Validated and Encoded]]\r\n* [[00000000-0000-0000-0000-00000080c790|File Formats Are Validated]]"
        ]
      }
    ]
  }
}