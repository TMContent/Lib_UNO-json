{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "00000000-0000-0000-0000-00000081be72"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-00000081be72,9e63ab45-8022-409e-b663-7111a8248f5a,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Avoid Using URL Handlers for Sensitive Operations"
        ],
        "Category": [
          "Dangerous APIs"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "iOS"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "Avoid Using URL Handlers for Sensitive Operations"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "WikiText"
        },
        "Data": [
          "==Applies To==\n\n* iOS applications that use URL handlers.\n\n==What to Do==\n\nAvoid using URL handlers for sensitive operations.\n\n==Why==\n\nURL handlers may be abused in Cross-Site Scripting attacks. If URL handlers are used for sensitive operations, such sensitive operations may be exploited in Cross-Site Scripting attacks.\n\n==How==\n\nTo avoid using URL handlers for sensitive operations:\n\n# **Identify all URL handlers used by the application.** Examine the application .plist file for //URL Types// defined by the application. These //URL Types// correspond to URL handlers used by the application.\n# **Identify the operations associated with the URL handlers.** The developers should know what each //URL Type// is responsible for. Consider each one and decide if it is safe to keep.\n# **Remove dangerous URL handlers.** Sometimes URL handlers are used for testing. Remove any URL handlers that may be too dangerous from the production release.\n# **Verify the origin of the URL request**. Use the //openURL// method to make sure the URL request came from within the application itself or from a trusted application for any remaining URL handlers.\n\n\n==Additional Resources==\n\n* For more information about the //openURL// method, please see http://developer.apple.com/library/ios/#DOCUMENTATION/UIKit/Reference/UIApplication_Class/Reference/Reference.html"
        ]
      }
    ]
  }
}