{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-324235840",
      "Content_Hash": "307963132"
    },
    "Metadata": [
      {
        "Id": [
          "73c2f6fa-3c97-452e-8163-7215bd995d58"
        ],
        "Id_History": [
          "73c2f6fa-3c97-452e-8163-7215bd995d58,f8705b5a-0c62-4307-97be-3ef75bb8d0c2,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Strong SQL Passwords Are Enforced"
        ],
        "Category": [
          "Database Security"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Strong SQL Passwords Are Enforced"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\n  <p>Ensure your application uses a strong password to connect to a backend database server. </p>\n  <h1>Why</h1>\n  <p>Enforcing strong passwords minimizes the risk of an attacker successfully performing a&nbsp;dictionary attack or guessing the credentials of an application's accounts.</p>\n  <h1>How to Check</h1>\n  <p>Use the following steps to ensure a strong password policy is enforced in your application for database access:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Review your application's password policy. </strong>Verify that your application&nbsp;has a password policy. Ensure that the password policy addresses basic considerations that define a strong password:</p>\n      <ul>\n        <li>\n          <strong>Length</strong>: The policy provides length requirements for passwords. For example, the application can require&nbsp;a password must be at least 10 characters long. <li><strong>Input Set</strong>: The policy provides requirements regarding the input set of passwords. For instance, the requirement can be that a password must contain letters, numbers, and special characters. If your organization has special restrictions for passwords, check if the policy adopts these requirements. For example, the application could require that a password must not match the user's&nbsp;six previous passwords. <li><strong>Expiration</strong>: The policy provides requirements for a password's lifetime. For example, a prequirement can be that a password will expire after 45 days. <li><strong>Extra Requirements</strong>: Check if the policy provides extra requirements for passwords. For instance, a password must not be trivial and easily guessed.</li></li></li></li>\n      </ul>\n      <strong>\n      </strong>\n      <li>\n        <p>\n          <strong>Verify that strong passwords are enforced. </strong>If possible, check if your application's database servers implement a password policy similar to your application's password policy. Ensure that your application's password policy is enforced when creating your application's database accounts.</p>\n      </li>\n    </li>\n  </ol>\n  <h1>How to Fix</h1>\n  <p>What constitutes a strong password varies from organization to organization; however, there are generally agreed upon minimum requirements for length and input character sets:</p>\n  <ul>\n    <li>The password must be at least 10 characters long. <li>It must contain letters, numbers, and special characters. <li>Use the following steps to enforce strong passwords: </li></li></li>\n  </ul>\n  <ol>\n    <li>\n      <p>\n        <strong>Define password requirements. </strong>Pick the schema that all passwords must follow. Check them for length and certain patterns. All passwords should be long (e.g. 8&#43; characters in length) and include a large input set (e.g. alpha-numeric and special character values). </p>\n      <li>\n        <p>\n          <strong>Enforce password requirements. </strong>The password requirements should be enforced while creating and modifying accounts. Consult the database manual on setting up the appropriate password policy. </p>\n        <li>\n          <p>\n            <strong>Enforce password lifetime. </strong>Determine a lifetime of a password. Once a password is expired, make sure the new password varies from the old password. Consult the database manual on how to properly set the password lifetime. </p>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>MyApp is a multi-user financial tool. Unfortunately, it does not enforce strong passwords for its database access; therefore, it is easier for an attacker to obtain the application's database credentials by guessing or conducting a dictionary attack.</p>\n  <h1>Solution Example</h1>\n  <p>MyApp is a multi-user financial tool. Because it enforces strong passwords for its database access, it is harder for an attacker to obtain the application's database credentials via guessing or through a dictionary attack.</p>\n  <h1>Java Data Access Guidelines</h1>\n  <ul>\n    <li>\n      <a href=\"/article/d2809cce-1af2-4896-a45c-b4b56deae282\">Use Parameterized APIs for Data Access</a>\n      <li>\n        <a href=\"/article/bcfcbcbb-4bd6-4011-9e24-efa70d4a3724\">Parameterize Dynamic SQL in Stored Procedures</a>\n        <li>\n          <a href=\"/article/5427d358-17f6-4ef6-948f-d670c5aefc38\">Enforce Strong SQL Passwords</a>\n          <li>\n            <a href=\"/article/697891eb-5d97-44fa-a6eb-625f247f622d\">Use Least Privileged Accounts for Database Access</a>\n            <li>\n              <a href=\"/article/159a8710-263c-4612-b9d8-ba3943f8286f\">Allow Only Trusted Hosts to Connect to Database Server</a>\n              <li>\n                <a href=\"/article/0aaa1b15-8bdb-4486-9171-4eb3c2159829\">Protect Connection Strings</a>\n              </li>\n            </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ul>\n  <h1>Java Data Access Checklists</h1>\n  <ul>\n    <li>\n      <a href=\"/article/d5a1c94b-601e-4e2a-9ad8-33461792a8bb\">Parameterized APIs Are Used for Data Access</a>\n      <li>\n        <a href=\"/article/93d15ca4-c950-4370-8de5-cdb2cc2974fe\">Dynamic SQL in Stored Procedures Is Parameterized</a>\n        <li>\n          <a href=\"/article/73c2f6fa-3c97-452e-8163-7215bd995d58\">Strong SQL Passwords Are Enforced</a>\n          <li>\n            <a href=\"/article/61af51d9-58f8-4ddf-a373-0b67ea8e6d4b\">Least Privileged Accounts Are Used for Database Access</a>\n            <li>\n              <a href=\"/article/54026187-bcbd-433b-a895-21d66b543052\">\n                <a href=\"/article/54026187-bcbd-433b-a895-21d66b543052\">Only Trusted Hosts Are Allowed to Connect to Database Server</a>\n              </a>\n              <li>\n                <a href=\"/article/9fdc12bc-4208-4d0e-a56c-62e12b660bc0\">Connection Strings Are Protected</a>\n              </li>\n            </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ul>\n  <h1>Java Data Access Code Examples</h1>\n  <ul>\n    <li>\n      <a href=\"/article/5f55ac00-bb90-439e-a5fd-a85e9a327175\">Use Stored Procedures</a>\n      <li>\n        <a href=\"/article/e3d7a7be-68a1-47ab-a515-54053d9171a4\">Use Named Queries with Hibernate</a>\n        <li>\n          <a href=\"/article/d4645b55-6da1-4c3c-9e9f-bed1d021ed56\">Use Named Queries with Java Persistence API (JPA)</a>\n        </li>\n      </li>\n    </li>\n  </ul>"
        ]
      }
    ]
  }
}