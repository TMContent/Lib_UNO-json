{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1445224016",
      "Content_Hash": "-823014687"
    },
    "Metadata": [
      {
        "Id": [
          "9491b1b1-cd90-4daf-88c8-a3cd5a584fef"
        ],
        "Id_History": [
          "9491b1b1-cd90-4daf-88c8-a3cd5a584fef,d21f3331-6797-400f-b4f4-44393e33ed5a,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] Membership Providers Are Used Instead of Custom Authentication"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Membership Providers Are Used Instead of Custom Authentication"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\n  <p>Ensure that&amp;nbsp;ASP.NET membership providers are used to authenticate your users.</p>\n  <h1>Why</h1>\n  <p>The membership feature helps protect credentials, can enforce strong passwords, and provides consistent APIs for user validation and secure user management.&amp;nbsp; The membership feature also automatically creates the authentication ticket for you.&amp;nbsp;</p>\n  <h1>How to Check</h1>\n  <p>To check if your application is using Membership Providers, use the following steps:</p>\n  <ol>\n    <li>\n      <div>Check your web.config or machine.config file for a &lt;<strong>membership</strong>&gt; section.</div>\n      <li>\n        <div>Within the &lt;<strong>membership</strong>&gt; section check that there is a &lt;<b>providers</b>&gt; section configured to the provider supporting your application's users.</div>\n        <li>\n          <div>Check&amp;nbsp;that the &lt;<strong>connectionStrings</strong>&gt; section contains connection information to the store pointed to in the &lt;<b>providers</b>&gt; section.</div>\n          <li>\n            <div>Check that the <strong>defaultProvider</strong> attribute on the &lt;<b>membership</b>&gt; element points to your chosen provider.</div>\n            <li>\n              <div>Ensure that your application uses the Membership API or the <strong>Login</strong> controls to authenticate users.</div>\n            </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <p>For example, a properly set up configuration file for a <strong>SqlMembershipProvider</strong> would look like:</p>\n  <pre>&lt;connectionStrings&gt;<br />&amp;nbsp; &lt;add name=\"MySqlConnection\" connectionString=\"Data Source=MySqlServer;<br />&amp;#9;&amp;#9;Initial Catalog=aspnetdb;Integrated Security=SSPI;\" /&gt;<br />&lt;/connectionStrings&gt;<br />&lt;system.web&gt;<br />...<br />&amp;nbsp; &lt;membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"15\"&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;providers&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;clear /&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;add <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; name=\"SqlProvider\" <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; type=\"System.Web.Security.SqlMembershipProvider\" <br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; connectionStringName=\"MySqlConnection\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; applicationName=\"MyApplication\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; enablePasswordRetrieval=\"false\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; enablePasswordReset=\"true\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; requiresQuestionAndAnswer=\"true\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; requiresUniqueEmail=\"true\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; passwordFormat=\"Hashed\" /&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/providers&gt;<br />&amp;nbsp; &lt;/membership&gt;<br /></pre>\n  <h1>How to Fix</h1>\n  <p>The membership feature has built-in providers for user stores including SQL Server, Active Directory and Active Directory Application Mode (ADAM).</p>\n  <p>If you want to use an existing user store, such as a non-Active Directory LDAP directory or a user store on another platform, create a custom membership provider inherited from the <b>MembershipProvider</b> abstract base class. By doing this, your application can still benefit from using the standard membership features and API and login controls.&amp;nbsp; </p>\n  <p />To configure membership, you need to define a connection string to point to the provider store and configure your provider definition in the Web.config file. <p /><b>To configure membership:</b><ol><li>Configure your application for forms authentication by setting<b></b>&lt;<b>authentication mode=\"Forms\"/</b>&gt; <li>Add a connection string to the &lt;<b>connectionStrings/</b>&gt; section to point to your user store.<br />If you are using the <b>ActiveDirectoryMembershipProvider</b>, this is a Lightweight Directory Access Protocol (LDAP) query string pointing to your user container in Active Directory or ADAM.<br />If you are using the <b>SqlMembershipProvider</b>, this is a database connection string that points to your user store database. <li>Add a &lt;<b>membership</b>&gt;<b></b>section to configure your chosen membership provider. <li>Configure the specific provider by creating a<b></b>&lt;<b>providers</b>&gt; section beneath the &lt;<b>membership</b>&gt;<b></b>element in your application's Web.config. The membership system supports a number of different providers: <ul><li>If your user accounts are in Active Directory or ADAM, use the <b>ActiveDirectoryMembershipProvider</b>. <li>If your user accounts are in SQL Server, use <b>SqlMembershipProvider</b>. <li>If your user accounts are in a store other than those previously listed, create a custom membership provider by inheriting from the <b>MembershipProvider</b> base class. </li></li></li></ul><li>Set the <b>defaultProvider</b> attribute on the &lt;<b>membership</b>&gt; element to your chosen provider. </li></li></li></li></li></ol><p>To validate and manage users, use the Membership API (for example, <b>Membership.CreateUser </b>and <b>Membership.ValidateUser</b>) or use the <b>Login</b> controls, which automatically use your membership configuration. </p><h1>Related Items</h1><ul><li><a href=\"/article/556c8ebc-e406-4050-a1f1-bc6240f8cdd4\">Guideline: Use Membership Providers Instead of Custom Authentication</a></li></ul><hr /><p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}