{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1538918383",
      "Content_Hash": "7935280"
    },
    "Metadata": [
      {
        "Id": [
          "c70e4224-33d8-4f17-a5b4-26adee72ba6e"
        ],
        "Id_History": [
          "c70e4224-33d8-4f17-a5b4-26adee72ba6e,d9247682-7f53-4e33-ae70-874adb5aaef9,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Protected File Types Are Blocked Using HttpForbiddenHandler"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Protected File Types Are Blocked Using HttpForbiddenHandler"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "ASP.NET 3.5"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<br />\r\n  <br />\r\n  <h1>What to Check For</h1>\r\n  <p>Check to ensure that your application blocks protected file types by using HttpForbiddenHandler.</p>\r\n  <h1>How to Fix</h1>\r\n  <p>To prevent protected files being downloaded over HTTP, map them to the ASP.NET <b>HttpForbiddenHandler</b>. HTTP handlers are located in the machine-level Web.config file beneath the &lt;<b>httpHandlers</b>&gt; element. HTTP handlers are responsible for processing Web requests for specific file extensions. </p>\r\n  <p>Many well-known file extensions are already mapped to <b>System.Web.HttpForbiddenHandler</b>. For .NET Framework resources, if you do not use a particular file extension, map the extension to <b>System.Web.HttpForbiddenHandler</b> in the machine-level Web.config file, as shown here.</p>\r\n  <div>\r\n    <pre>&lt;add verb=\"&#42;\" path=\"&#42;.asmx\" type=\"System.Web.HttpForbiddenHandler\" /&gt;  </pre>\r\n  </div>\r\n  <p>This example assumes that your Web server does not host Web services, so the .asmx file extension is mapped to <b>System.Web.HttpForbiddenHandler</b>. If a client requests a path that ends with .asmx, ASP.NET returns a message that says, \"This type of page is not served.\" If your application uses other files with extensions not already mapped, also map these to <b>System.Web.HttpForbiddenHandler</b>.</p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
        ]
      }
    ]
  }
}