{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-101090760",
      "Content_Hash": "-1554267589"
    },
    "Metadata": [
      {
        "Id": [
          "a5498075-d530-437d-9cc1-11697b3be564"
        ],
        "Id_History": [
          "a5498075-d530-437d-9cc1-11697b3be564,08395c40-517e-4c00-9064-f64b8b8fdf49,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "Threading Issues Should Be Considered If Impersonation Is Used"
        ],
        "Category": [
          "Impersonation and Delegation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Threading Issues Should Be Considered If Impersonation Is Used"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\n  <p>Check that your application considers the Threading issues when using impersonation. Make&nbsp;sure that the ASPNET.config is configured correctly when&nbsp;passing impersonation token to the newly created threads.</p>\n  <h1>How to Fix</h1>\n  <p>Losing an impersonated security context because of thread switches is a common vulnerability. The common language runtime (CLR) automatically propagates impersonation tokens to threads that you create using any of the managed threading techniques, such as <b>Thread.Start</b>, an asynchronous delegate, or <b>QueueUserWorkItem</b>. However, it is easy to drop the thread impersonation token if you use COM interop with components that have incompatible threading models, or if you use unmanaged techniques to create new threads such as the Win32 <b>CreateThread</b> API.</p>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
        ]
      }
    ]
  }
}