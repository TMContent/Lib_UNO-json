{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1489302196",
      "Content_Hash": "-1599549843"
    },
    "Metadata": [
      {
        "Id": [
          "b457b105-99b2-4ddc-858f-aabd70b3857f"
        ],
        "Id_History": [
          "b457b105-99b2-4ddc-858f-aabd70b3857f,a88e86c4-8729-40b7-b058-469f7fca9d3f,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Mapping Values Are Used for Redirects And Forwards"
        ],
        "Category": [
          "Redirects and Forwards"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Mapping Values Are Used for Redirects And Forwards"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "OWASP"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Web Applications</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that mapping values are used to determine destinations of redirects and forwards.</p>\r\n  <h1>Why</h1>\r\n  <p>Using mapping values when performing redirects or forwards prevents malicious users from creating hyperlinks that use the redirects or forwards to point to pages other than those intended by the application design.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to make sure that mapping values are used for redirects and forwards:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify redirects and forwards.</strong> Review code to find all redirects and forwards.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Examine redirects and forwards.</strong> Look for code that handles parameters. Verify that this code does not accept fully qualified URLs as input for calculating destinations of redirects or forwards. If code uses parameters to calculate destinations of redirects or forwards, verify that only short-hand keywords defined by the application are accepted as input to map to valid and authorized destinations.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>Perform the following actions to calculate destinations of redirects and forwards based on mapping values:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify redirects and forwards.</strong> Review code to find all redirects and forwards.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Enumerate destinations.</strong> Make a list of all destinations pointed to by redirects and forwards.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Define mapping values.</strong> Define mapping values for all destinations used by redirects and forwards. A mapping value is a short identifying string that symbolically represents a resource.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Rewrite redirects and forwards.</strong> Rewrite redirects and forwards to use mapping values as input to calculate the final destinations of redirects or forwards.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>Consider an on-line banking application that has an insecure redirect:</p>\r\n  <pre>http://www.onlinebank.com/redirect.asp?url=[destination]</pre>\r\n  <p>A phisher may create the following hyperlink to point to his own site and send it in spam messages to millions of people:</p>\r\n  <pre>http://www.onlinebank.com/redirect.asp?url=www.phisher.com</pre>\r\n  <p>When a user sees a link that appears to point to his bank at onlinebank.com in an e-mail message, he clicks that link and sees a web site that looks exactly like the bank's, but is actually a phishing web site used to steal authentication credentials. The user enters his account number and PIN into the web page, receives an error message telling him to try again, and is redirected to the bank's real site. After entering his credentials again, the user successfuly views his account. However, the phisher now has the user's online banking information.</p>\r\n  <h1>Solution Example</h1>\r\n  <p>The simplest solution&nbsp;is to get rid of the redirect altogether, but if it is necessary for application design, then mapping values may be used to mitigate this vulnerability. For example, if redirect.asp is used by the application to redirect to balance.asp, a mapping value called \"balance\" may be created to signify balance.asp. The page redirect.asp should then be rewritten to accept mapping values as input, instead of urls. The following url should then redirect to balance.asp:</p>\r\n  <pre>http://www.onlinebank.com/redirect.asp?map=balance</pre>\r\n  <p>However, the following malicious hyperlink will no longer work, because supplied input will not match any mapping value defined in the application:</p>\r\n  <pre>http://www.onlinebank.com/redirect.asp?url=www.phisher.com</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information about unvalidated redirects and forwards, please see <a href=\"http://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards\">http://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards</a></li>\r\n  </ul>\r\n  <br />"
        ]
      }
    ]
  }
}