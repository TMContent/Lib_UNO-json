{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "832831310",
      "Content_Hash": "-2054647843"
    },
    "Metadata": [
      {
        "Id": [
          "6ed224f2-d15b-48ec-a3d3-adb18ee2c7fb"
        ],
        "Id_History": [
          "6ed224f2-d15b-48ec-a3d3-adb18ee2c7fb,38bc37de-a78f-4e2d-a423-55e707c9692a,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "In Full Trust Scenarios, StrongNameIdentityPermission Is Not Relied upon to Restrict Code That Can Call the Assembly."
        ],
        "Category": [
          "Other"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "In Full Trust Scenarios, StrongNameIdentityPermission Is Not Relied upon to Restrict Code That Can Call the Assembly."
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\n  <p>Check to ensure that StrongNameIdentityPermission is not relied upon to restrict code that can call the assembly in full trust scenarios.</p>\n  <p />\n  <h1>How to Fix</h1>\n  <p>If you protect your code with a link demand for a <b>StrongNameIdentityPermission</b> to restrict the code that can call your code, be aware that this only works for partial trust callers. The link demand will always succeed for full trust callers, regardless of the strong name of the calling code.</p>\n  <p>In the .NET Framework, any fully trusted assembly will satisfy any demand, including a link demand for an identity permission that the assembly does not satisfy. The only protection against fully trusted code is to put it in a separate process and run that process with a restricted token so that its limits are enforced by the operating system. This applies whether code marks its interfaces as internal or private, or places link demands for <b>StrongNameIdentityPermission</b> on them.</p>\n  <p>The following code sample shows a method decorated with a link demand for a specific <b>StrongNameIdentityPermission</b>.</p>\n  <div>\n    <pre>public sealed class Utility&#123;<br />  // Although SomeOperation() is a public method, the following<br />   // permission demand means that it can only be called by partial trust<br />   // assemblies with the specified public key OR by any fully trusted code.<br />   &#91;StrongNameIdentityPermission(SecurityAction.LinkDemand,<br />                                 PublicKey=\"00240000048...97e85d098615\")&#93;<br />  public static void SomeOperation()<br /> &#123;&#125;<br />&#125;</pre>\n  </div>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}