{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "830329510",
      "Content_Hash": "1191567133"
    },
    "Metadata": [
      {
        "Id": [
          "c7e3ea7d-a8fa-44d0-880e-a6059873bc16"
        ],
        "Id_History": [
          "c7e3ea7d-a8fa-44d0-880e-a6059873bc16,0c8d81d6-3808-47d9-9f77-1869cd76a67b,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Exception Details Are Logged on the Server"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Exception Details Are Logged on the Server"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\r\n  <p>Ensure that exceptions are logged to the server to allow further analysis and debugging.</p>\r\n  <h1>Why</h1>\r\n  <p>Malicious attacks may result in application exceptions. Exceptions contain critical information on problems which occur in production systems.&nbsp;Logging them will help track down problems faster. </p>\r\n  <h1>How to Check</h1>\r\n  <p>Ensure that&nbsp;your application uses structured exception handling and employs a global error handler. See:</p>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/4d3f994b-3be7-4e3d-8183-e213612cf5c4\">Checklist Item: A Global Exception Handler is used for Unhandled Exceptions</a>\r\n      <li>\r\n        <a href=\"/article/bc10306c-f37c-4780-a096-847070ae67da\">Checklist Item: Structured Exception Handling is Used</a>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <p>Ensure that in all exception handlers and the global error handler, code exists to log exception details to the server.&nbsp;Code will be similar to this:</p>\r\n  <pre>    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry(\"My Web Application\",<br />      \"MESSAGE: \" &#43; ex.Message &#43;<br />       \"\\nSOURCE: \" &#43; ex.Source,<br />       EventLogEntryType.Error);</pre>\r\n  <h1>How to Fix</h1>\r\n  <p>You should log all exceptions in the event log to record them for tracking and later analysis.&nbsp;Event logging should occur in <strong>Try</strong>/<strong>Catch</strong>/<strong>Finally</strong> blocks in code as well as in the global error handler. Use code similar to the following:</p>\r\n  <pre>&lt;&#37;&#64; Application Language=\"C#\" &#37;&gt;<br /> &lt;&#37;&#64; Import Namespace=\"System.Diagnostics\" &#37;&gt;<br />  &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> &#123;<br />    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry(\"My Web Application\",<br />      \"MESSAGE: \" &#43; ex.Message &#43;<br />       \"\\nSOURCE: \" &#43; ex.Source,<br />       EventLogEntryType.Error);<br />     // Optional e-mail or other notification here...<br /> &#125;<br />   &lt;/script&gt;</pre>\r\n  <h1>Problem Example</h1>\r\n  <p>An ASP.NET application is under attack by a malicious user. One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&nbsp;Unfortunately the application doesn't log exception details to the server, so this debugging and auditing information is lost forever.</p>\r\n  <h1>Solution Example</h1>\r\n  <p>An ASP.NET application is under attack by a malicious user. One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&nbsp;Fortunately the application logs exception details to the server, so this debugging and auditing information is discovered by the site admin and delivered to the development team for further analysis.</p>\r\n  <pre>&lt;&#37;&#64; Application Language=\"C#\" &#37;&gt;<br /> &lt;&#37;&#64; Import Namespace=\"System.Diagnostics\" &#37;&gt;<br />  &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> &#123;<br />    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry(\"My Web Application\",<br />      \"MESSAGE: \" &#43; ex.Message &#43;<br />       \"\\nSOURCE: \" &#43; ex.Source,<br />       EventLogEntryType.Error);<br />     // Optional e-mail or other notification here...<br /> &#125;<br />   &lt;/script&gt;</pre>\r\n  <h1>Related Items</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/201ecd28-c916-4c83-92ea-7416fbf52987\">Log Exception Details to the Server</a>\r\n      <li>\r\n        <a href=\"/article/2e16a65a-25d2-4ea9-a513-e020d2408241\">Checklist Item: Global Error Handlers are Used to Catch Unhandled Exceptions</a>\r\n        <li>\r\n          <a href=\"/article/bc10306c-f37c-4780-a096-847070ae67da\">Checklist Item: Structured Exception Handling is Used</a>\r\n          <li>\r\n            <a href=\"/article/b24a7dd0-a01a-4cbb-8559-6d566f54bd6c\">Checklist Item: Health Monitoring is Used for Logging and Auditing Events</a>\r\n            <li>\r\n              <a href=\"/article/8d30acbe-f771-40fa-976d-3c5376d7bf08\">Checklist Item: Sensitive User Data is Not Logged </a>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
        ]
      }
    ]
  }
}