{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-2036475089",
      "Content_Hash": "-1099930211"
    },
    "Metadata": [
      {
        "Id": [
          "b6152bf7-294d-448b-9af0-149b2c994980"
        ],
        "Id_History": [
          "b6152bf7-294d-448b-9af0-149b2c994980,6d9db93e-9918-43d8-ac8f-7a212400bb2e,"
        ],
        "Library_Id": [
          "51eb81c3-1d23-4146-ba83-8a6bb9233c11"
        ],
        "Title": [
          "Unallocated Memory Is Not Accessed"
        ],
        "Category": [
          "Unmanaged Code"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "C++"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Unallocated Memory Is Not Accessed"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <p>C&#43;&#43;</p>\n  <h1>What to Check For</h1>\n  <p>Verify that unallocated memory is not accessed.</p>\n  <h1>Why</h1>\n  <p>Accessing memory that has been deallocated may result in an exploitable vulnerability. This type of vulnerability is called a \"dangling pointer vulnerability\". The unallocated memory is accessed via a pointer that has been used to free the memory earlier - this pointer is the \"dangling pointer\".</p>\n  <h1>How to Check</h1>\n  <p>Identify all code that unallocates memory. Verify that pointers are never used after the objects they reference have been deleted.</p>\n  <h1>How to Fix</h1>\n  <p>Code has to be rewritten in a way that does not access unallocated memory. </p>\n  <h1>Related Items</h1>\n  <ul>\n    <li>\n      <a href=\"/article/b8b0d075-5aa2-4095-a441-210f38fc3b3e\">Don't Access Unallocated Memory</a>\n    </li>\n  </ul>"
        ]
      }
    ]
  }
}