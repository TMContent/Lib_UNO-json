{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1024265561",
      "Content_Hash": "154133188"
    },
    "Metadata": [
      {
        "Id": [
          "93d15ca4-c950-4370-8de5-cdb2cc2974fe"
        ],
        "Id_History": [
          "93d15ca4-c950-4370-8de5-cdb2cc2974fe,2b70799d-acef-4f07-913d-e12f8fdf7c42,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Dynamic SQL in Stored Procedures Is Parameterized"
        ],
        "Category": [
          "Database Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Dynamic SQL in Stored Procedures Is Parameterized"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\r\n  <p>Verify that dynamic SQL in stored procedures is parameterized.</p>\r\n  <h1>Why</h1>\r\n  <p>Using dynamic SQL in stored procedures to build queries that include user input may result in SQL injection vulnerabilities, unless user input is explicitly parameterized inside the stored procedures themselves. </p>\r\n  <h1>How to Check</h1>\r\n  <p>To verify that dynamic SQL in stored procedures is parameterized:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all stored procedures that use dynamic SQL.</strong> Review the database to identify all stored procedures that use dynamic SQL. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Review all stored procedures that use dynamic SQL.</strong> Examine each stored procedure that uses dynamic SQL to make sure that user input is separated from the SQL statement. Pay particular attention to the lines that include the <em>EXEC</em> or the <em>EXECUTE</em> statements. These lines should pass user input as parameters to the stored procedures. </p>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>To parameterize dynamic SQL in stored procedures:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all stored procedures that use dynamic SQL.</strong> Review the database to identify all stored procedures that use dynamic SQL. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Review all stored procedures that use dynamic SQL.</strong> Examine each stored procedure that uses dynamic SQL to make sure that user input is separated from the SQL statement. Pay particular attention to the lines that include the <em>EXEC</em> or the <em>EXECUTE</em> statements. These lines should pass user input as parameters to the stored procedures. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Rewrite affected stored procedures.</strong> Rewrite each stored procedure that does not explicitly parameterize untrusted data. The exact syntax for this is different for different platforms. Please, refer to your database server vendor's documentation for information about using parameterized stored procedures. </p>\r\n    </li>\r\n  </ol>\r\n  <br />"
        ]
      }
    ]
  }
}