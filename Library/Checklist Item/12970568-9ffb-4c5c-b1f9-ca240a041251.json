{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-391475846",
      "Content_Hash": "2109742320"
    },
    "Metadata": [
      {
        "Id": [
          "12970568-9ffb-4c5c-b1f9-ca240a041251"
        ],
        "Id_History": [
          "12970568-9ffb-4c5c-b1f9-ca240a041251,69bae0e3-8c62-4f86-9a4d-d93f05ca630d,"
        ],
        "Library_Id": [
          "26bd1a04-beed-4a66-917d-b6ab0a7d634c"
        ],
        "Title": [
          "Only Trusted Hosts Are Allowed to Connect to the Database Server"
        ],
        "Category": [
          "Database Security"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Only Trusted Hosts Are Allowed to Connect to the Database Server"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 4.0,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Ensure that direct access to your database server is prevented.</p>\r\n  <h1>Why</h1>\r\n  <p>Direct access allows an attacker to use tools such as Query Analyzer (Isqlw.exe) and establish a connection to the SQL Server and issue commands. This could lead to unauthorized access to data.</p>\r\n  <h1>How To Check</h1>\r\n  <p>Follow these steps to restrict access to the SQL server to prevent unauthorized use:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure access from the external network is prevented.</strong> Check that the firewall is configured such that the SQL server and its ports (TCP 1433 and UDP 1434 by default) are not directly accessible outside the network perimeter. Verify this using a port scanning tool such as Nmap.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that access from within the perimeter is restricted. </strong>Access to the SQL server, even from within the internal network, should be restricted by the use of internal firewalls and IPSec. IPSec can be used to provide server authentication and can help ensure that only the middle-tier application server can connect to the SQL database server. This ensures that the SQL server is protected in cases when hosts on the internal network have been compromised. IPSec also can be used to restrict the ports on which your database server accepts incoming connections. Use a network sniffer to check if all packets between the specified hosts and the SQL server contain an Authentication Header (AH) and Encapsulating Security Payload (ESP) fields after the IP headers to ensure that IPSec has been implemented properly.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure that exposure of the SQL server is minimized.</strong> Ensure that access to the production database server is restricted to the production application server(s) and a minimum set of maintenance systems for the purpose of logging, backup, monitoring and administration. The production database server should not be accessible to development systems, and a separate database server should be used for development.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How To Fix</h1>\r\n  <p>Perform the following actions to restrict access to your SQL Server:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Restrict access from the outside.</strong> Configure the firewall to make sure that SQL Server ports (TCP 1433 and UDP 1434 by default) are not visible from outside of the perimeter network. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Restrict access from within the perimeter.</strong> Restrict direct access by unauthorized internal hosts via internal firewalls when available, and by using IPSec and port filtering. IPSec can be used for computer authentication in addition to encryption and can be used to ensure that only the specific application server can connect to the database server, in order to prevent attacks from other computers.&nbsp; </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Minimize exposure.</strong> The production database server should only be accessible from the application server(s) it works with and a minimum set of other maintenance systems for monitoring, external logging, backup, and administration. Development and production systems should not share the same database server, and development machines should not have access to the production servers.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Disable the session state service.</strong> If the session state service is not needed, disable it. The session state can be&nbsp;turned off&nbsp;for an individual application by setting the <b>mode</b> attribute to \"off\" on the <b>&lt;sessionState&gt;</b> element in Web.config as follows.</p>\r\n      <pre>&lt;sessionState mode=\"off\" /&gt;</pre>\r\n    </li>\r\n  </ol>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>\r\n  <h1>\r\n  </h1>\r\n  <h1>\r\n  </h1>"
        ]
      }
    ]
  }
}