{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "332577165",
      "Content_Hash": "-472435058"
    },
    "Metadata": [
      {
        "Id": [
          "4ca15745-847b-426a-a4c1-6d97db50bb68"
        ],
        "Id_History": [
          "4ca15745-847b-426a-a4c1-6d97db50bb68,224b8706-1547-495d-8749-ff64d412bb2d,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] The Authorization Cookie Is Protected for Tampering And Reading Information"
        ],
        "Category": [
          "Authorization"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "The Authorization Cookie Is Protected for Tampering And Reading Information"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\r\n  <p>Ensure that your application protects roles data in the&amp;nbsp;authorization cookie to stop users from modifying the list of roles to which they belong, and to stop intruders from gaining information about the roles used by your application. </p>\r\n  <h1>How to Fix</h1>\r\n  <p>Protect the authorization cookie by appropriately configuring the &lt;<b>roleManager</b>&gt; element as follows: </p>\r\n  <ul>\r\n    <li>Set the <b>cookieProtection</b> attribute to <b>All</b>. This ensures that the role names in the cookie are digitally signed and encrypted to prevent unauthorized viewing and modification of the role data. <li>Set the <b>cookieSlidingExpiration</b> attribute to <b>true</b> and the <b>cookieTimeout</b> attribute to an integer number of minutes (for example, 10 to 20 or fewer). The cookie expires when the timeout expires and must be renewed. <li>Set the <b>cookieRequireSSL</b> attribute to <b>true</b> to specify that the authorization cookie with the role information should only be returned to the server over HTTPS connections. <li>Set the <b>createPersistentCookie</b> attribute to <b>false</b> to ensure that the roles cookie is session-based and not a persistent cookie. <li>If you cannot use SSL, consider reducing the <b>cookieTimeout</b> to 10 minutes. If you are concerned with cookie hijacking, consider setting the <b>cookieSlidingExpiration</b> attribute to false. This causes the cookie to expire after the fixed timeout period and must be renewed. </li></li></li></li></li>\r\n  </ul>\r\n  <p>The following example shows a &lt;<b>roleManager</b>&gt; element configured to protect the authorization cookie:</p>\r\n  <p>\r\n    <pre>&lt;roleManager enabled=\"true\"<br />             cacheRolesInCookie=\"true\"<br />             cookieName=\".ASPROLES\"<br />             cookieTimeout=\"30\"<br />             cookiePath=\"/\"<br />             cookieRequireSSL=\"true\"<br />             cookieSlidingExpiration=\"true\"<br />             cookieProtection=\"All\"<br />             createPersistentCookie=\"false\"&gt;<br />&lt;/roleManager&gt;</pre>\r\n  </p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}