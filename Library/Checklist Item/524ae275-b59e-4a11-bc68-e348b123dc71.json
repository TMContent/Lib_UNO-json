{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "802203720",
      "Content_Hash": "487961965"
    },
    "Metadata": [
      {
        "Id": [
          "524ae275-b59e-4a11-bc68-e348b123dc71"
        ],
        "Id_History": [
          "524ae275-b59e-4a11-bc68-e348b123dc71,80d70119-2feb-4287-87a7-88775a35ee6a,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "0sink junk Strong SQL Passwords Are Enforced"
        ],
        "Category": [
          "Database Security"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Strong SQL Passwords Are Enforced"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "1"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\r\n  <p>Ensure that strong passwords are enforced for accounts used to connect to a database server.</p>\r\n  <h1>Why</h1>\r\n  <p>Enforcing strong passwords minimizes the risk of a dictionary attack against accounts on the database server.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to ensure a strong password policy is enforced in your application for database access:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Review your application's password policy. </strong>Verify that your application&amp;nbsp;has a password policy and&amp;nbsp;addresses the following basic considerations that define a strong password:</p>\r\n      <ul>\r\n        <li>\r\n          <strong>Length</strong>: Check if the policy provides length requirements for passwords. For example, a password must be at least 8 characters long. </li>\r\n        <li>\r\n          <strong>Input Set</strong>: Check if the policy provides requirements regarding the input set of passwords. For instance, a password must contain letters, numbers, and special characters. If your organization has special restrictions for passwords, check if the policy adopts these requirements. For example, a password must not match the user's 6 previous passwords. </li>\r\n        <li>\r\n          <strong>Expiration</strong>: Check if the policy provides requirements for a password's lifetime. For example, a password will expire after 90 days. </li>\r\n        <li>\r\n          <strong>Extra Requirements</strong>: Check if the policy provides extra requirements for passwords. For example, a password must not be trivial and easily guessable.</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <strong>Verify that strong passwords are enforced.</strong> If possible, check if your application's database servers implement a password policy similar to your application's password policy. Ensure that your application's password policy is enforced when creating your application's database accounts. If Windows authentication is being used to authenticate to the database server, group policy can enforce password strength requirements. In some cases, there may be no way to programmatically enforce password strength, and it will instead of have to be done as an aspect of operational policy and procedure.</li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>MyApp is a multi-user financial tool. Unfortunately, it does not enforce strong passwords for its database access. The administrator, tired of having to deal with a long password for the database server, sets it to a simple password and doesn't change it. The database server, although protected against outside attack, isn't properly segmented from the internal network, and an inside attacker discovers it and starts trying to crack the password. The Credentials Brute Force Attack succeeds, allowing the attacker access to the database server and the confidential data stored on it. Because the password was simply guessed, there was little other evidence of an attack, and it was not detected for some time.</p>\r\n  <br />\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}