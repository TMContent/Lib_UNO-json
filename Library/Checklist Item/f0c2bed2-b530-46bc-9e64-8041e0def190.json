{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "297587840",
      "Content_Hash": "-1475939640"
    },
    "Metadata": [
      {
        "Id": [
          "f0c2bed2-b530-46bc-9e64-8041e0def190"
        ],
        "Id_History": [
          "f0c2bed2-b530-46bc-9e64-8041e0def190,b5227770-20a9-4c30-a4ec-4f4d6fb9e267,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Global Error Handlers Are Used to Catch Unhandled Exceptions"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Global Error Handlers Are Used to Catch Unhandled Exceptions"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 4.0,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Ensure a global error handler has been defined for your application to catch any exceptions that are not handled in the code.</p>\n  <h1>Why</h1>\n  <p>Unhandled exceptions can be a serious stumbling block to an application's performance and security. Unhandled exceptions must be avoided as they can result in the application entering an unknown state and/or revealing sensitive internal application details. Using a global exception handler will prevent unhandled exceptions.</p>\n  <h1>How To Check</h1>\n  <p>Check <em>Global.asax</em> the ensure an application-level global error handler has been defined. Check to ensure <em>Application_Error</em> has been overridden and implemented. The error handler will look similar to the following code:</p>\n  <pre>&lt;%@ Application Language=\"C#\" %&gt;<br />&lt;%@ Import Namespace=\"System.Diagnostics\" %&gt;<br />&lt;script language=\"C#\" runat=\"server\"&gt;<br />&nbsp;void Application_Error(object sender, EventArgs e)<br />&nbsp;{<br />&nbsp;&nbsp;&nbsp; //get reference to the source of the exception chain<br />&nbsp;&nbsp;&nbsp; Exception ex = Server.GetLastError().GetBaseException();<br />&nbsp;&nbsp;&nbsp; // log the details of the exception and page state to the<br />&nbsp;&nbsp;&nbsp; // event log.<br />&nbsp;&nbsp;&nbsp; EventLog.WriteEntry(\"My Web Application\",<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"MESSAGE: \" + ex.Message +<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\\nSOURCE: \" + ex.Source,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EventLogEntryType.Error);<br />&nbsp;&nbsp;&nbsp;&nbsp; // Optional e-mail or other notification here...<br />&nbsp;}<br />&lt;/script&gt; </pre>\n  <h1>How To Fix</h1>\n  <p>Global exception handlers will catch exceptions that are not otherwise handled in your code. Define an application-level global error handler in <em>Global.asax</em> to catch all exceptions that are not handled in the code. Do this to avoid returning detailed error information to the client. You should record all exceptions in the event log for tracking purposes and later analysis. Use code similar to the following.</p>\n  <pre>&lt;%@ Application Language=\"C#\" %&gt;<br />&lt;%@ Import Namespace=\"System.Diagnostics\" %&gt;<br /> &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> {<br />     // Add the appropriate logging code<br />     Response.Write(\"We are sorry, but we cannot complete your request. Please try again later!\");<br />     Server.ClearError();<br /> }<br /> &lt;/script&gt;</pre>\n  <h1>Related Items</h1>\n  <em>You may find these additional articles useful</em>\n  <ul>\n    <li>\n      <a href=\"/article/10118a37-669a-4973-9d86-98c65730b153\">Use Global Error Handlers to Catch Unhandled Exceptions</a>\n    </li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>\n  <h1>\n  </h1>\n  <h1>\n  </h1>"
        ]
      }
    ]
  }
}