{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1357335895",
      "Content_Hash": "807617280"
    },
    "Metadata": [
      {
        "Id": [
          "a35428c2-00d6-4b96-b846-96bdb3dfb015"
        ],
        "Id_History": [
          "a35428c2-00d6-4b96-b846-96bdb3dfb015,775125d7-7353-4a88-a298-d2916f086f43,"
        ],
        "Library_Id": [
          "26bd1a04-beed-4a66-917d-b6ab0a7d634c"
        ],
        "Title": [
          "A New ID Is Assigned on Login"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "A New ID Is Assigned on Login"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 4.0,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that a new session ID is assigned on login.</p>\r\n  <h1>Why</h1>\r\n  <p>Assigning a new session ID on login makes it harder for an attacker to hijack a user's session.</p>\r\n  <h1>How To Check</h1>\r\n  <p>To verify that a new session ID is assigned on login:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify login functionality.</strong> Find code that is responsible for performing user authentication, specifically logging in.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that session IDs are strong.</strong> A <em>SessionIDManager</em> object should be used to manage session IDs. Verify that the <em>CreateSessionID</em> method is used to generate cryptographically strong session IDs.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that strong session IDs are assigned to cookies.</strong> Find code that assigns the session ID to the session ID cookie by searching for <em>ASP.NET_SessionId</em>. <em>ASP.NET_SessionId</em> is the default name of the session ID cookie. Verify that the unique session ID is assigned to the session ID cookie with code such as the following:</p>\r\n      <pre>Response.Cookies.Add(new HttpCookie(\"ASP.NET_SessionId\", StrongSessionID));</pre>\r\n    </li>\r\n  </ol>\r\n  <h1>How To Fix</h1>\r\n  <p>To assign a new session ID on login:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify login functionality.</strong> Find code that is responsible for performing user authentication, specifically logging in.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Generate a strong session ID.</strong> Use a <em>SessionIDManager</em> object to manage session IDs. Call the <em>CreateSessionID</em> method to generate a unique, strong session ID for the current session.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Create the session ID cookie.</strong> Create a cookie called <em>ASP.NET_SessionId</em> and assign the cryptographically strong session ID to it. This can be done by using code similar to this:</p>\r\n      <pre>Response.Cookies.Add(new HttpCookie(\"ASP.NET_SessionId\", StrongSessionID));</pre>\r\n    </li>\r\n  </ol>\r\n  <ul>\r\n  </ul>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>\r\n      <p>For more information about ASP.NET session state functionality, please see \"ASP.NET Session State Overview\" at <a href=\"http://msdn.microsoft.com/en-us/library/ms178581.aspx\">http://msdn.microsoft.com/en-us/library/ms178581.aspx</a>&nbsp; </p>\r\n    </li>\r\n  </ul>"
        ]
      }
    ]
  }
}