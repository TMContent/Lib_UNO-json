{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "354035656",
      "Content_Hash": "1723479488"
    },
    "Metadata": [
      {
        "Id": [
          "5f786a98-c099-4762-8d14-71909fe5a6a0"
        ],
        "Id_History": [
          "5f786a98-c099-4762-8d14-71909fe5a6a0,144428ee-bbe1-4e07-bdd3-f00b116cd9e4,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Logging Is Centralized"
        ],
        "Category": [
          "Auditing and Logging"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "PHP"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Logging Is Centralized"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>PHP</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that logging is centralized.</p>\r\n  <h1>Why</h1>\r\n  <p>A centralized logging subsystem is simpler to maintain and implement correctly.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to verify that logging is centralized:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify the logging subsystem.</strong> The logging subsystem should provide an API that allows generating log entries from application code. Make a list of functions that may be used to generate log entries.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Examine log entries.</strong> Find out where log entries are stored and examine them. This should give you clues about the functionality of the logging subsystem.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Review code.</strong> Find code that generates log entries. Make sure this code uses the centralized logging subsystem.</p>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>Perform the following actions to centralize logging: </p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify existing logging functionality.</strong> Examine the application architecture to identify logging facilities, such as the logging API and where audit trails are actually stored. Make a list of APIs used to log events, document how to use them, and where they store logs.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Design the logging subsystem.</strong> Design and implement a class or library specifically for logging. When designing the logging subsystem, consider sending logs to a remote log server. Consider the following factors when designing the logging subsystem:</p>\r\n        <ul>\r\n          <li>Log throttling <li>Logging important event details for both successful and failed operations <li>Logging important security operations <li>Logging important business operations <li>Monitoring the use of privileged accounts <li>Logging user management events <li>Avoiding including sensitive information in logs <li>Logging unusual activity <li>Sending logs to a centralized server </li></li></li></li></li></li></li></li></li>\r\n        </ul>\r\n        <li>\r\n          <p>\r\n            <strong>Implement the logging subsystem.</strong> Write code that generates log entries according to your design. Use PHP's <em>trigger_error()</em> function in conjunction with a custom error handler, which uses <em>error_log()</em>. </p>\r\n          <li>\r\n            <p>\r\n              <strong>Use the logging subsystem.</strong> Use the logging class or library whenever logs are generated. If earlier code exists that generates log entries, replace it with calls to the new logging subsystem API.</p>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information about the <em>error_log</em> function, see <a href=\"http://www.php.net/manual/en/function.error-log.php\">http://www.php.net/manual/en/function.error-log.php</a></li>\r\n  </ul>"
        ]
      }
    ]
  }
}