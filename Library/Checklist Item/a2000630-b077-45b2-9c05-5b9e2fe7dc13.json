{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-113951355",
      "Content_Hash": "822196314"
    },
    "Metadata": [
      {
        "Id": [
          "a2000630-b077-45b2-9c05-5b9e2fe7dc13"
        ],
        "Id_History": [
          "a2000630-b077-45b2-9c05-5b9e2fe7dc13,fdc8a4da-e07a-4835-b747-6ac2cddc85a2,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "TLS Is Used When Transmitting Credentials"
        ],
        "Category": [
          "Communication Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "SSL Is Used When Transmitting Credentials"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\n  <p>Ensure that TLS&amp;nbsp;is used when transmitting credentials and never unencrypted connections.</p>\n  <h1>Why</h1>\n  <p>Using TLS prevents the credentials from being&amp;nbsp;identified or tampered with as they are transmitted over the network.</p>\n  <h1>How to Check</h1>\n  <ol>\n    <li>\n      <p>\n        <strong>Verify that a dedicated TLS-enabled server is used for the authentication component of your application. </strong>Ensure that your application's authentication component runs on a dedicated subdomain and a server that accepts only HTTPS traffic. Disallowing unencrypted HTTP connections will prevent accidental or malicious unsecured connections. \n</p>\n    </li>\n    <li>\n      <p>\n        <strong>Identify forms that send credentials. </strong>Forms are defined by a <em>&lt;form&gt;</em> tag in the HTML document, such as the one below:</p>\n      <pre>&lt;form method=\"POST\" action=\"https://login.example.com/myapp/login\"&gt;</pre>\n      <p>Forms that include credentials usually, but won't always, include an input field with a <em>TYPE</em> attribute set to <em>password</em>:</p>\n      <pre>&lt;input <strong>type</strong>=\"<strong>password</strong>\" name=\"pass\" size=25&gt;</pre>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure that form data is sent using HTTPS. </strong>Examine the <em>ACTION</em> attribute of the <em>&lt;form&gt;</em> tag and ensure it posts to an absolute URL path and includes HTTPS in the URL, as shown below: </p>\n      <pre>&lt;form method=\"POST\" <strong>action</strong>=\"<strong>https</strong>://login.example.com/myapp/login\"&gt;</pre>\n    </li>\n  </ol>\n  <h1>How to Fix</h1>\n  <p>Using HTTPS requires the following steps:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Create a certificate request.</strong> Using your hosting server or OpenSSL, generate an TLS certificate request. \n</p>\n    </li>\n    <li>\n      <p>\n        <strong>Present the request to a Certification Authority (CA).</strong> If all conditions for obtaining an TLS certificate are met, the CA will produce a new TLS certificate based on the certificate request. Because the requirements for obtaining an TLS certificate depend on the Certification Authority, consult with the Certification Authority in regards to the administrative steps necessary for obtaining such certificate.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Install the certificate.</strong> Consult with the hosting server's documentation on how to install the TLS certificate.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure credentials are sent over TLS.</strong> Place the authentication portion of your application on a dedicated subdomain. Configure the server to accept only HTTPS traffic for the authentication subdomain. Ensure that form posts containing credentials are sent over HTTPS. This is accomplished by using absolute URL paths in the action field. Example:</p>\n      <pre>&lt;form method=\"POST\" action=\"https://login.example.com/myapp/login\"&gt;</pre>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>In the following snippet, the credentials are transmitted over unprotected HTTP. This allows an attacker to easily steal credentials from sniffed traffic.</p>\n  <pre>&lt;html&gt;<br />  &lt;head&gt;<br />    &lt;title&gt;login form&lt;/title&gt;<br />  &lt;/head&gt;<br />  &lt;body&gt;<br />    &lt;form method=\"POST\" action=\"http://login.example.com/myapp/login\"&gt;<br />    &lt;input type=\"text\" name=\"user\" size=25&gt;&lt;br&gt;<br />    &lt;input type=\"password\" name=\"pass\" size=25&gt;&lt;br&gt;<br />    &lt;input type=\"submit\" name=\"submit\" value=\"log in\"&gt;<br />    &lt;/form&gt;<br />  &lt;/body&gt;<br />&lt;/html&gt;</pre>\n  <h1>Solution Example</h1>\n  <p>In the following snippet, the credentials are transmitted over HTTPS. This makes it difficult for an attacker to steal credentials from sniffed traffic:</p>\n  <pre>&lt;html&gt;<br />  &lt;head&gt;<br />    &lt;title&gt;login form&lt;/title&gt;<br />  &lt;/head&gt;<br />  &lt;body&gt;<br />    &lt;form method=\"POST\" action=\"https://login.example.com/myapp/login\"&gt;<br />    &lt;input type=\"text\" name=\"user\" size=25&gt;&lt;br&gt;<br />    &lt;input type=\"password\" name=\"pass\" size=25&gt;&lt;br&gt;<br />    &lt;input type=\"submit\" name=\"submit\" value=\"log in\"&gt;<br />    &lt;/form&gt;<br />  &lt;/body&gt;<br />&lt;/html&gt;</pre>"
        ]
      }
    ]
  }
}