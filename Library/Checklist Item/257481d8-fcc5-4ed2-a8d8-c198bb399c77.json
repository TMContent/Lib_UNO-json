{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1017278182",
      "Content_Hash": "-391647950"
    },
    "Metadata": [
      {
        "Id": [
          "257481d8-fcc5-4ed2-a8d8-c198bb399c77"
        ],
        "Id_History": [
          "257481d8-fcc5-4ed2-a8d8-c198bb399c77,8cd671c2-63d2-4b42-bfed-929e6d9e1ef0,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "A Security Policy Is Defined"
        ],
        "Category": [
          "Code Access Security"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "A Security Policy Is Defined"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\r\n  <p>Ensure that&nbsp;a security policy is defined for your application that uses the Principle of Least Privilege. Verify that&nbsp;your application is allowed to execute only the minimum set of necessary actions.</p>\r\n  <h1>Why</h1>\r\n  <p>Defining a security policy is a defense in-depth mechanism for restricting your application from performing tasks that the operating system would otherwise allow. This is especially important in cases where your application becomes compromised by an attacker.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Take the following steps to ensure that the application is granted only the Code Access Security permissions that are required for its proper functioning:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify the permissions required by the application. </strong>ASP.NET web services and applications run in the full trust mode by default. However, an application rarely needs the entire set of permissions. Determine the permissions necessary for the application by analyzing your code to determine the types of resources it accesses, the kind of resource access it requires (such as read/write), and the privileged operations it performs. This practice can be aided by using the Permissions Calculator tool (Permcalc.exe). </p>\r\n      <li>\r\n        <p>\r\n          <strong>Verify that an appropriate trust level has been identified.</strong> Check that the standard trust levels with the&nbsp;capabilities and restrictions most closely match the permissions required by the application have been identified.</p>\r\n        <ul>\r\n          <li>\r\n            <p>Compare the required permissions with those offered by the highest trust level.</p>\r\n            <li>\r\n              <p>Move to the the next lower level if the highest trust level grants permissions not needed by the application.</p>\r\n              <li>\r\n                <p>Continue this process till you find an appropriate trust level.</p>\r\n                <p>\r\n                  <strong>Note:</strong> If none of the predefined trust levels match the required permissions exactly, you might need to create a custom trust level for your application. For example, you would need to create a custom trust level when your application needs more permissions than Medium trust provides but fewer permissions than High trust provides. Take the following steps to create a custom trust level:</p>\r\n                <ul>\r\n                  <li>Copy one of the existing trust level policy files to create a custom policy file <li>Add the required permissions to the custom policy file <li>Configure your application to run using the custom policy</li></li></li>\r\n                </ul>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </ul>\r\n        <li>\r\n          <p>\r\n            <strong>Verify that the correct trust level has been implemented. </strong>Once the most appropriate trust level has been identified or custom trust level created, ensure that it has been implemented by setting the <strong>level</strong> attribute of the <strong>trust</strong> element in the <strong>web.config</strong> file:</p>\r\n          <pre>&lt;trust level=\"Full&#124;High&#124;Medium&#124;Low&#124;Minimal\" /&gt;</pre>\r\n          <p>Also check that these trust levels are locked so they cannot be modified by setting the <strong>allowOverride</strong> attribute to \"false\" in the <strong>location</strong> element, which encloses the trust element in the machine-level <strong>web.config</strong> file. </p>\r\n          <pre>...<br />&lt;location allowOverride=\"false\"&gt;<br />   &lt;system.web&gt;<br />     ...<br />    &lt;trust level=\"Medium\" originUrl=\"\"/&gt;<br />    ...<br />   &lt;/system.web&gt;<br />...<br />&lt;/location&gt;       <br />...</pre>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>A developer creates an ASP.NET application that requires file system access outside of the directory that is allocated for the application. The default Full Trust level does allow for file-system access in the way that the application needs; however, it also gives several unnecessary privileges such as socket access and the ability to call unmanaged code. These additional privileges increase the amount of damage an attacker can do if the application is compromised.</p>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>To learn more about ASP.NET trust levels and policy files, see <a href=\"http://msdn2.microsoft.com/en-us/library/wyts434y(VS.80).aspx\">ASP.NET Trust Levels and Policy Files</a><li>To learn more about the Permissions Calculator tool, see <a href=\"http://msdn2.microsoft.com/en-us/library/ms165077.aspx\">The Permissions Calculator Tool website</a><li>To learn more about custom trust levels, see <a href=\"http://msdn2.microsoft.com/en-us/library/ms998326.aspx#paght000017_step4\">Optionally Create a Custom Trust Level</a></li></li></li>\r\n  </ul>\r\n  <h1>Related Guideline</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/0c6693ed-e3c2-4640-a795-c7c9c2a63cbc\">Guideline: Define a Security Policy (ASP.NET)</a>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
        ]
      }
    ]
  }
}