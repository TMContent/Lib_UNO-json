{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "230332063",
      "Content_Hash": "-1441152826"
    },
    "Metadata": [
      {
        "Id": [
          "b86e8b47-30ac-41a1-b5ae-a95dba1f9ba0"
        ],
        "Id_History": [
          "b86e8b47-30ac-41a1-b5ae-a95dba1f9ba0,e4cb545a-023e-4e87-84c9-cabba919957b,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "The Mode Attribute in CustomErrors Is Set to On to Prevent Displaying Detailed Error Messages to the Caller"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Deployment"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "The Mode Attribute in CustomErrors Is Set to On to Prevent Displaying Detailed Error Messages to the Caller"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\n  <p>Check to ensure that your application sets the <b>customErrors</b> mode attribute to <strong>On</strong> to prevent detailed error messages from reaching the caller.</p>\n  <h1>How to Fix</h1>\n  <p>Use the following steps to prevent detailed error messages:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Set CustomErrors. </strong>Prevent detailed error messages from being displayed by setting the <b>mode</b> attribute of the <b>&lt;customErrors&gt;</b> element to <strong>On. </strong>This will ensure that&nbsp;callers receive only filtered exception information.&nbsp; Do not use <b>mode=\"Off\"</b> because this allows detailed error pages intended for application developers that contain system-level information to be returned to the client. </p>\n      <li>\n        <p>\n          <strong>Choose a default error page.</strong> Use the <b>&lt;customErrors&gt;</b> section of the Web.config file as shown in the following code example to specify a default error page to display, along with other required error pages for specific HTTP response codes that indicate errors. </p>\n        <p>The following example shows <b>&lt;customErrors&gt;</b> set correctly, with custom error pages specified:</p>\n        <pre>&lt;customErrors mode=\"On\" defaultRedirect=\"ErrDefault.aspx\"&gt;<br />    &lt;error statusCode=\"401\" redirect=\"ErrUnauthorized.aspx\" /&gt;<br />    &lt;error statusCode=\"404\" redirect=\"ErrPageNotFound.aspx\" /&gt;<br />    &lt;error statusCode=\"500\" redirect=\"ErrServer.htm\" /&gt;<br />&lt;/customErrors&gt;</pre>\n        <p>The <b>defaultRedirect</b> attribute allows you to use a custom error page for your application, which, for example, might include support contact details.&nbsp; Use these application-wide error pages to provide user-friendly responses for errors that are not caught in a structured event handling. </p>\n      </li>\n    </li>\n  </ol>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
        ]
      }
    ]
  }
}