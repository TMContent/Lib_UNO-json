{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-219423763",
      "Content_Hash": "1395329071"
    },
    "Metadata": [
      {
        "Id": [
          "17439dea-7a0b-40e6-a7ae-d6d6b7080d41"
        ],
        "Id_History": [
          "17439dea-7a0b-40e6-a7ae-d6d6b7080d41,7442eda4-e690-4dbe-a2ac-ac542525a998,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] Least-privileged Accounts Are Used for Database Access"
        ],
        "Category": [
          "Database Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Least-privileged Accounts Are Used for Database Access"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\r\n  <p>Ensure that the application connects to databases using the least-privileged account possible.</p>\r\n  <h1>Why</h1>\r\n  <p>Connecting to the database with a least privilege account limits the damage that can be done in the event of a SQL injection attack or in the event of an attacker obtaining your account's credentials. </p>\r\n  <h1>How to Check</h1>\r\n  <p>The principle of least privilege requires that users are granted enough privileges to complete their respective tasks. If your application uses a backend database server, take the following steps to ensure that your application applies the principle of least privilege:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all database accounts that the application uses.</strong> List all of the application's database accounts existing on the various servers it uses. The database account information can usually be obtained from the connection strings in the web.config file. If hard-coded account details are found in the application code, they should be changed to refer to configurable connection strings.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Identify the roles associated with each database account.</strong> Identify the database actions that each account performs. Using a matrix, identify the minimum set of privileges that each account requires:</p>\r\n        <ul>\r\n          <li>\r\n            <p>\r\n              <strong>Identify the minimum set of privileges that each account/role requires:</strong> Determine the tables and stored procedures accessed and the actions(read, write, drop, create, etc) performed on the tables by each account/role. This can be determined from the sections of code where the application accesses the back-end database. Use this information to create a matrix:</p>\r\n            <pre>Accounts     Actions    Stored Proc     Users Table<br />------------------------------------------------------<br />app_admin    Connect    Always          Always<br />             Read       Always          Always<br />             Use        Always          Occasionally<br />             Modify     Never           Occasionally <br />app_normal   Connect    Always          Always<br />             Read       Always          Always<br />             Use        Always          Always<br />             Modify     Never           Never</pre>\r\n            <li>\r\n              <strong>Identify the set of privileges that each account/role actually has.</strong> Determine the actual database access privileges granted to each database account. This information can be obtained from the database server.</li>\r\n          </li>\r\n        </ul>\r\n        <li>\r\n          <p>\r\n            <strong>Ensure that no extra privileges are granted to an account.</strong> Compare each account's intended privileges against its actual privileges. Verify that no account is granted extra privileges.</p>\r\n          <ul>\r\n            <li>No direct table access is provided and access is limited to selected stored procedures only. <li>If table access is needed, only minimum access required is granted <li>A database role is used to avoid granting permissions directly to a fixed user <li>If application is complicated, privileges are separated by partitioning the database access into different accounts</li></li></li></li>\r\n          </ul>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>The following snippet shows a list of database accounts and some of their permissions. Unfortunately, the application's account (myapp) is given more privileges than necessary. If an attacker compromises the application's database account, she can drop tables from the database server.</p>\r\n  <p />\r\n  <pre>&amp;#43;----------------&amp;#43;-------&amp;#43;-------------&amp;#43;-----------&amp;#43;<br />&amp;#124; host           &amp;#124; user  &amp;#124; select      &amp;#124; drop      &amp;#124;<br />&amp;#43;----------------&amp;#43;-------&amp;#43;-------------&amp;#43;-----------&amp;#43;<br />&amp;#124; localhost      &amp;#124; sa    &amp;#124; Y           &amp;#124; Y         &amp;#124;<br />&amp;#124; 192.168.10.220 &amp;#124; myapp &amp;#124; Y           &amp;#124; Y         &amp;#124;<br />&amp;#43;----------------&amp;#43;-------&amp;#43;-------------&amp;#43;-----------&amp;#43;</pre>\r\n  <h1>Related Guideline</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/fab1733c-61d7-46a8-88c6-2617a643c0d9\">Guideline: Use Least Privileged Accounts for Database Access</a>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}