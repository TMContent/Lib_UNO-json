{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "2088277741",
      "Content_Hash": "504138753"
    },
    "Metadata": [
      {
        "Id": [
          "49b38504-c2de-4d5e-8ba3-d72a1bcd3e26"
        ],
        "Id_History": [
          "49b38504-c2de-4d5e-8ba3-d72a1bcd3e26,13cfb997-f2f4-43fd-af63-7438c74dc2e4,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] Session Cookies Are Protected"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Session Cookies Are Protected"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\n  <p>Ensure that the confidentiality of session cookies is protected.</p>\n  <h1>Why</h1>\n  <p>Session cookies are used by an application to identify the session associated with a particular user. Protecting session cookies can help prevent an attacker from hijacking the session and using the application as a legitimate user.</p>\n  <h1>How to Check</h1>\n  <p>Use the following steps to verify that your application's session cookies are handled securely:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Verify that session identifiers cannot be guessed.</strong> Ensure that your application's session identifiers cannot be guessed by an attacker. Verify that your application's session IDs meet the following requirements:</p>\n      <ul>\n        <li>\n          <p>\n            <strong>Length</strong>: Verify that your application uses long session identifiers (e.g. string of length 32).</p>\n        </li>\n        <li>\n          <p>\n            <strong>Triviality</strong>: Verify that your application uses randomly generated session identifiers. </p>\n        </li>\n        <li>\n          <p>\n            <strong>Lifetime</strong>: Verify that your application uses <strong>timeout </strong>attribute to expire sessions. </p>\n          <pre>&lt;sessionState timeout=\"20\"<strong></strong>... &gt;   <br />...&lt;/sessionState&gt;</pre>\n        </li>\n        <li>\n          <p>\n            <strong>Recycling</strong>: Verify that your application does not reuse previously used sessions.</p>\n          <pre>&lt;sessionState regenerateExpiredSessionId=\"false\"<strong></strong>... &gt;   <br />...&lt;/sessionState&gt;</pre>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Verify that users can invalidate their own sessions.</strong> Ensure that your application's uses <strong>Session.Abandon</strong> to allow its users to invalidate their own sessions.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Verify that session cookies are sent over encrypted channels.</strong> Ensure your application transmits session cookies over encrypted channels. Although this is not required for non-sensitive transactions, it is mandatory for any transactions that are sensitive in nature.</p>\n      <pre>&lt;authentication mode=\"Forms\"&gt;  <br />&lt;forms <strong>requireSSL=\"true\" </strong>... /&gt;<br />&lt;/authentication&gt; <br />... <br />&lt;roleManager <strong>cookieRequireSSL=\"true\" ... </strong>&gt;  <br />...<br />&lt;/roleManager&gt;</pre>If session cookies cannot be sent over an encrypted channel, ensure that <strong>cookieSlidingExpiration</strong> is set to <strong>false</strong>.<pre>&lt;authentication mode=\"Forms\"&gt;  <br />&lt;forms <strong>slidingExpiration=\"false\"</strong> ... /&gt;<br />&lt;/authentication&gt; <br />... <br />&lt;roleManager <strong>cookieSlidingExpiration=\"false\" ... </strong>&gt;  <br />...<br />&lt;/roleManager&gt;</pre></li>\n    <li>\n      <p>\n        <strong>Verify that sensitive cookies are marked httpOnly.</strong> Ensure that cookies are marked as <strong>httpOnly</strong>. <br /></p>\n      <pre>&lt;system.web&gt;  <br />...   <br /><strong>&lt;httpCookies httpOnlyCookies=\"true\" ... /&gt; </strong><br />...<br />&lt;/system.web&gt;</pre>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>A web application uses SSL to provide a secure connection for user data, generates strong, new session IDs for each user, and times out and terminates sessions appropriately. However, it is susceptible to cross-site scripting flaws, and despite having a user base which mostly uses IE, does not set <strong>httpOnlyCookies</strong> on its cookies. The web.config file for this application looks like this:</p>\n  <pre>&lt;system.web&gt;<br />...  <br />&lt;httpCookies httpOnlyCookies=\"<strong>false</strong>\" requireSSL=\"true\" topic=\"\" /&gt;<br />...<br />&lt;/system.web&gt;</pre>\n  <p>\n    <br />\n  </p>\n  <br />\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
        ]
      }
    ]
  }
}