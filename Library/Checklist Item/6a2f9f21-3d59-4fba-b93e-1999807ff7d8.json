{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1972226342",
      "Content_Hash": "592945383"
    },
    "Metadata": [
      {
        "Id": [
          "6a2f9f21-3d59-4fba-b93e-1999807ff7d8"
        ],
        "Id_History": [
          "6a2f9f21-3d59-4fba-b93e-1999807ff7d8,a43551b7-e61e-4298-8688-7d29d2c3be6b,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Authentication Controls Are Centralized"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "PHP"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Authentication Controls Are Centralized"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>PHP</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that authentication controls are centralized.</p>\r\n  <h1>Why</h1>\r\n  <p>Implementing a single set of centralized authentication controls helps implement them correctly, use them correctly in the application, and manage them later on.</p>\r\n  <h1>How to Check</h1>\r\n  <p>To verify that authentication controls are centralized:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify application requirements.</strong> Consider the following aspects of authentication controls:</p>\r\n      <ul>\r\n        <li>Authentication should be required for all private pages. </li>\r\n        <li>All password fields should be masked. </li>\r\n        <li>Accounts should be locked after multiple failed authentication attempts. </li>\r\n        <li>Authentication should be implemented on the server-side. </li>\r\n        <li>Authentication controls should be centralized. </li>\r\n        <li>Authentication controls should fail securely. </li>\r\n        <li>Strong authentication credentials (passwords) should be enforced. </li>\r\n        <li>Account management functions should be protected. </li>\r\n        <li>User credential (password) changing functions should be protected. </li>\r\n        <li>Re-authentication should be required for sensitive operations. </li>\r\n        <li>Authentication credentials (passwords) should expire. </li>\r\n        <li>Authentication events should be logged. </li>\r\n        <li>Authentication attempts should be throttled. </li>\r\n        <li>Passwords should be hashed and salted. </li>\r\n        <li>Authentication credentials (connection strings) for external resources should be protected. </li>\r\n        <li>Authentication with external services.</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify authentication controls.</strong> Find code that provides authentication controls used by the application. A good place to start looking is by looking at the code that handles the login functionality.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that authentication controls are centralized.</strong> Examine the code that provides authentication controls. Make sure that authentication controls are centralized and satisfy application requirements.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>To centralize authentication controls:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify application requirements.</strong> Consider the following aspects of authentication controls:</p>\r\n      <ul>\r\n        <li>Authentication should be required for all private pages. </li>\r\n        <li>All password fields should be masked. </li>\r\n        <li>Accounts should be locked after multiple failed authentication attempts. </li>\r\n        <li>Authentication should be implemented on the server-side. </li>\r\n        <li>Authentication controls should be centralized. </li>\r\n        <li>Authentication controls should fail securely. </li>\r\n        <li>Strong authentication credentials (passwords) should be enforced. </li>\r\n        <li>Account management functions should be protected. </li>\r\n        <li>User credential (password) changing functions should be protected. </li>\r\n        <li>Re-authentication should be required for sensitive operations. </li>\r\n        <li>Authentication credentials (passwords) should expire. </li>\r\n        <li>Authentication events should be logged. </li>\r\n        <li>Authentication attempts should be throttled. </li>\r\n        <li>Passwords should be hashed and salted. </li>\r\n        <li>Authentication credentials (connection strings) for external resources should be protected. </li>\r\n        <li>Authentication with external services.</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Define authentication control APIs.</strong> Make the exposed APIs simple to use for developers. Define authentication APIs to satisfy all application requirements. Include functionality to authenticate with external services.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Implement and document authentication controls. </strong>Implement and document authentication APIs to satisfy all application requirements. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Use authentication controls in the application.</strong> Developers should use the centralized authentication controls whenever authentication is necessary.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For a discussion about how to throttle login attempts in PHP, please see <a href=\"http://stackoverflow.com/questions/2090910/how-can-i-throttle-user-login-attempts-in-php\">http://stackoverflow.com/questions/2090910/how-can-i-throttle-user-login-attempts-in-php</a></li>\r\n  </ul>\r\n  <br />"
        ]
      }
    ]
  }
}