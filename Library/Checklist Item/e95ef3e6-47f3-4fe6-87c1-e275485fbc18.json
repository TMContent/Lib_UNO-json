{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "151034689",
      "Content_Hash": "-264634541"
    },
    "Metadata": [
      {
        "Id": [
          "e95ef3e6-47f3-4fe6-87c1-e275485fbc18"
        ],
        "Id_History": [
          "e95ef3e6-47f3-4fe6-87c1-e275485fbc18,f8689f92-fcdc-4c9d-b0b3-ab3c79d0cd6c,"
        ],
        "Library_Id": [
          "26bd1a04-beed-4a66-917d-b6ab0a7d634c"
        ],
        "Title": [
          "A New Session ID Is Assigned on Reauthentication"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "A New Session ID Is Assigned on Reauthentication"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that a new session ID is assigned on reauthentication.</p>\r\n  <h1>Why</h1>\r\n  <p>Assigning a new session ID on reauthentication makes it more difficult to attack the authentication system.</p>\r\n  <h1>How To Check</h1>\r\n  <p>To verify that a new session ID is assigned on reauthentication:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify authentication functionality.</strong> Find code that is responsible for reauthentication.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Verify that session IDs are strong.</strong> Review the mechanism that is used to generate session IDs to make sure it is adequate. A <em>SessionIDManager</em> object should be used to manage session IDs.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Verify that new session IDs are assigned on reauthentication.</strong> Examine reauthentication code to make sure that a new session ID is stored in the session cookie. This should look like the following:</p>\r\n          <pre>Response.Cookies.Add(new HttpCookie(\"ASP.NET_SessionId\", StrongSessionID));</pre>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>How To Fix</h1>\r\n  <p>To assign a new session ID on reauthentication:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify authentication functionality.</strong> Find code that is responsible for reauthentication.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Generate a new, strong session ID.</strong> Use a <em>SessionIDManager</em> object to manage session IDs. Call the <em>CreateSessionID</em> method to generate a unique, strong session ID for the current session.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Create the session ID cookie.</strong> Create a cookie called <em>ASP.NET_SessionId</em> and assign the cryptographically strong session ID to it. This can be done by using code similar to this:</p>\r\n          <pre>Response.Cookies.Add(new HttpCookie(\"ASP.NET_SessionId\", StrongSessionID));</pre>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Related Items</h1>\r\n  <em>You may find these additional articles useful</em>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/505f5d11-7d0a-446d-8b00-4c36d2eda790\">Assign a New Session ID on Reauthentication</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>\r\n      <p>For more information about ASP.NET session state, please see \"ASP.NET Session State Overview \" at <a href=\"http://msdn.microsoft.com/en-us/library/ms178581.aspx\">http://msdn.microsoft.com/en-us/library/ms178581.aspx</a></p>\r\n    </li>\r\n  </ul>"
        ]
      }
    ]
  }
}