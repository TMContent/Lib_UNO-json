{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1545420208",
      "Content_Hash": "1879931679"
    },
    "Metadata": [
      {
        "Id": [
          "4d7ee521-8680-481e-a40b-3afb04c2616d"
        ],
        "Id_History": [
          "4d7ee521-8680-481e-a40b-3afb04c2616d,fa5d8d2c-4679-4780-96a8-447f8bcc0d51,"
        ],
        "Library_Id": [
          "c4b9cb6a-4561-4451-9b6c-4e59d73584f6"
        ],
        "Title": [
          "Use ESAPI HTTPUtilities"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Use ESAPI HTTPUtilities"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Java web-based applications.</li>\r\n  </ul>\r\n  <h1>Summary</h1>\r\n  <span>\r\n    <p>Use the ESAPI library to handle several standard HTTP utility functions in a secure manner.</p>\r\n  </span>\r\n  <h1>Objectives</h1>\r\n  <span>\r\n    <p>The ESAPI library provides a <em>HTTPUtilities</em> control that offers secure alternatives for various HTTP relevant APIs. Use the ESAPI library to handle several standard HTTP utility functions in a secure manner.</p>\r\n  </span>\r\n  <h1>Scenarios</h1>\r\n  <span>\r\n    <p>There are many utility functions provided within the <em>HTTPUtilities</em> control. Below are listed the usage of several common methods:</p>\r\n  </span>\r\n  <h1>Solution Example</h1>\r\n  <span>\r\n    <p>Using <em>HTTPUtilities</em> to ensure SSL is being used to make the current request.</p>\r\n    <pre>\r\n      <p>HttpServletRequest request = ...;</p>\r\n      <p>boolean isSecure = ESAPI.httpUtilities().assertSecureChannel(request);</p>\r\n    </pre>\r\n    <p>Using <em>HTTPUtilities</em> to ensure SSL is being used to make the current request and that the request is an HTTP POST as opposed to GET or another verb.</p>\r\n    <pre>\r\n      <p>HttpServletRequest request = ...;</p>\r\n      <p>boolean isSecure = ESAPI.httpUtilities().assertSecureRequest(request);</p>\r\n    </pre>\r\n    <p>Using <em>HTTPUtilities</em> to change session identifiers. This is useful if performed immediately after successful authentication of a user to an application as it prevents session fixation.</p>\r\n    <pre>\r\n      <p>HttpServletRequest request = ...;</p>\r\n      <p>HttpSession newSession = ESAPI.httpUtilities().changeSessionIdentifier(request);</p>\r\n    </pre>\r\n    <p>Using <em>HTTPUtilities</em> to retrieve an HTTP cookie value. This implementation additionally validates the cookie value according to the regex defined in the <em>ESAPI.properties</em> configuration file for cookie values.</p>\r\n    <pre>\r\n      <p>HttpServletRequest request = ...;</p>\r\n      <p>String cookieName = ...;</p>\r\n      <p>String cookieValue = ESAPI.httpUtilities().getCookie(request, cookieName);</p>\r\n    </pre>\r\n    <p>Using <em>HTTPUtilities</em> to retrieve an HTTP parameter value. This implementation additionally validates the parameter value according to the regex defined in the <em>ESAPI.properties</em> configuration file for parameter values.</p>\r\n    <pre>\r\n      <p>HttpServletRequest request = ...;</p>\r\n      <p>String parameterName = ...;</p>\r\n      <p>String parameterValue = ESAPI.httpUtilities().getParameter(request, parameterName);</p>\r\n    </pre>\r\n    <p>Using <em>HTTPUtilities</em> to retrieve an HTTP header value. This implementation additionally validates the header value according to the regex defined in the <em>ESAPI.properties</em> configuration file for header values.</p>\r\n    <pre>\r\n      <p>HttpServletRequest request = ...;</p>\r\n      <p>String headerName = ...;</p>\r\n      <p>String headerValue = ESAPI.httpUtilities().getHeader(request, headerName);</p>\r\n    </pre>\r\n    <p>In addition to the methods mentioned above, there are various other methods in the <em>HTTPUtilities</em> control dealing with issues such as file uploads, CSRF token management, request logging, cookie management, etc. Some methods have other dependencies within ESAPI. For instance the CSRF solution requires that you use ESAPI's authentication control in order to function properly.</p>\r\n  </span>\r\n  <h1>See Also</h1>\r\n  <span>\r\n    <span>\r\n      <ul>\r\n        <li>For more information about ESAPI, please see <a href=\"https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API\">https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API</a></li>\r\n      </ul>\r\n      <h1>Java Session Management Guidelines</h1>\r\n      <ul>\r\n        <li>\r\n          <a href=\"/article/42276b64-f51d-4b89-8c33-0ffd9b098890\">Use Session Management Offered by the Framework</a>\r\n          <li>\r\n            <a href=\"/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a\">Protect Session IDs</a>\r\n            <li>\r\n              <a href=\"/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717\">Protect Session Cookies</a>\r\n              <li>\r\n                <a href=\"/article/7a517ad5-8640-4bc7-9e84-ccc313a71901\">Set the Domain and Path Values of Session Cookies</a>\r\n                <li>\r\n                  <a href=\"/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b\">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a>\r\n                  <li>\r\n                    <a href=\"/article/6c470029-5c62-4394-99a9-8990bc48b0a8\">Change Session IDs During Authentication</a>\r\n                    <li>\r\n                      <a href=\"/article/a223c2d8-ab42-47fb-81a2-86ad677a5632\">Invalidate Sessions when Users Log Out</a>\r\n                      <li>\r\n                        <a href=\"/article/acfe1a16-3f00-4383-ada4-bebafc98a836\">Make Inactive Sessions Time-out</a>\r\n                        <li>\r\n                          <a href=\"/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e\">Include Unique Tokens in HTTP Requests</a>\r\n                          <li>\r\n                            <a href=\"/article/9df0b518-f832-4a7c-9857-0517638c47db\">Do Not Make Security Decisions Based on Client-Accessible Parameters</a>\r\n                          </li>\r\n                        </li>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </ul>\r\n      <h1>Java Session Management Checklists</h1>\r\n      <ul>\r\n        <li>\r\n          <a href=\"/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b\">Session Management Offered by the Framework Is Used</a>\r\n          <li>\r\n            <a href=\"/article/1de62774-3392-4da7-9bae-065fb15b4a2b\">Session IDs Are Protected</a>\r\n            <li>\r\n              <a href=\"/article/59132a30-2bae-45e9-9d85-8de26441be29\">Session Cookies are Protected</a>\r\n              <li>\r\n                <a href=\"/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b\">The Domain and Path Values of Session Cookies Are Strict</a>\r\n                <li>\r\n                  <a href=\"/article/d8922a46-a943-4ae0-b8af-b88eb01d6997\">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a>\r\n                  <li>\r\n                    <a href=\"/article/58df5418-8c03-4121-83e0-bc68247c5d7b\">Session IDs Are Changed During Authentication</a>\r\n                    <li>\r\n                      <a href=\"/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac\">Sessions Are Invalidated When Users Log Out</a>\r\n                      <li>\r\n                        <a href=\"/article/c486eeb2-f64f-480b-9823-48bd7d21047d\">Inactive Sessions Time-out</a>\r\n                        <li>\r\n                          <a href=\"/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0\">Unique Tokens Are Included in HTTP Requests</a>\r\n                          <li>\r\n                            <a href=\"/article/4436e342-64d9-4b1b-ae9b-3e00696053fb\">Security Decisions are Not Made Based on Client-Accessible Parameters</a>\r\n                          </li>\r\n                        </li>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </ul>\r\n      <h1>Java Session Management Code Examples</h1>\r\n      <ul>\r\n        <li>\r\n          <a href=\"/article/7d647e95-e47f-42e3-bb84-fd0dd727245c\">Add Unique Tokens to HTTP Requests Using ESAPI</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/article/25e3943b-a651-42c5-9e19-76077de05e90\">Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/article/986c7161-0a76-430a-8d0e-80d4615ab5db\">Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6\">Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/article/63deed1a-6df4-4e04-9f61-898f190e1fe1\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 2</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"/article/4d7ee521-8680-481e-a40b-3afb04c2616d\">Use ESAPI HTTPUtilities</a>\r\n        </li>\r\n      </ul>\r\n      <h1>Java Session Management Testing</h1>\r\n      <ul>\r\n        <li>\r\n          <a href=\"/article/40771780-be59-4d4c-b283-5ec3cc286357\">How to Test for Session Prediction Bugs in Java</a>\r\n        </li>\r\n      </ul>\r\n    </span>\r\n  </span>"
        ]
      }
    ]
  }
}