{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "671553061",
      "Content_Hash": "-1797327654"
    },
    "Metadata": [
      {
        "Id": [
          "b58ab197-126d-43e4-a402-b11f12dc5ada"
        ],
        "Id_History": [
          "b58ab197-126d-43e4-a402-b11f12dc5ada,5fdc5d19-1d9e-483a-957c-dcbfc70580ee,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "Perform XML Schema Validation of Web Service Payload"
        ],
        "Category": [
          "Web Services"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Perform XML Schema Validation of Web Service Payload"
        ],
        "Tag": [
          "ASP.NET,ASP.NET 3.5,ASP"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <ul>\n    <li>C# <li>Web Services</li></li>\n  </ul>\n  <h1>Summary</h1>\n  <p>The purpose of this code sample is to demonstrate a technique to securely validate the XML payload received during a web service web method call using .NET.</p>\n  <h1>Objectives</h1>\n  <ul>\n    <li>Mitigate data validation induced vulnerabilities through use of XML schema validation which employs strong validation using regular expression patterns on expected data <li>Improve application efficiency by first requiring validation of XML payload prior to executing business logic</li></li>\n  </ul>\n  <h1>Scenarios</h1>\n  <ul>\n    <li>Application component needs to access functionality that only exists in a different runtime component <li>Application occasionally needs access to privileged functionality but wants to use a low-privileged security context for enhanced overall security</li></li>\n  </ul>\n  <h1>Solution Example</h1>\n  <p>\n    <strong>Custom Web method for performing some action on an XML String Blob</strong>\n  </p>\n  <pre>// The following private members must be defined for this example<br />private int validationErrCnt = 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />private string lastError = \"\";<br />&#91;WebMethod&#93;</pre>\n  <pre>\n    <br />public bool ProcessValue(string strXML)<br />&#123;<br />&nbsp;&nbsp;&nbsp; string connectionString = \"Initial Catalog=snippets;Data Source=winxp\\\\sqlexpress;Integrated Security=SSPI;\";<br />&nbsp;&nbsp;&nbsp; SqlConnection cn = New SqlConnection(connectionString);<br />&nbsp;&nbsp;&nbsp; bool retval = false;<br />&nbsp;&nbsp;&nbsp; try &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create an XmlReaderSettings object since&nbsp; we'll need to add our schema to it<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReaderSettings xrs = new XmlReaderSettings();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create a schema set which we'll use to validate our XML Document against<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlSchemaSet xset = new XmlSchemaSet();</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Read in our schema under the web root.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReader xmlschemareader = new XmlTextReader(HttpContext.Current.Request.PhysicalApplicationPath &#43; \"<a href=\"file://\\\\xsd\\\\Userschema.xsd\">\\\\xsd\\\\Userschema.xsd</a>\");</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Attribute the XML schema with our schema set<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xset.Add(null, xmlschemareader);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Finally attach our XML schema set to the reader settings<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.Schemas.Add(xset);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // We define a Validation Event Handler<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.ValidationEventHandler &#43;= new ValidationEventHandler(ValidationEventHandler);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // We want to report warnings as well as errors<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.ValidationFlags = xrs.ValidationFlags &#124; XmlSchemaValidationFlags.ReportValidationWarnings;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Our validation type should be set to schema so we enforce the schema on the document<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.ValidationType = ValidationType.Schema;</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create our XML reader and associate our reader settings<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringReader sreader = new StringReader(strXML);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReader xmlread = XmlReader.Create(sreader, xrs);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Lastly load the document which forces a schema validation to be performed in the process<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlDocument xmldoc = new XmlDocument();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xmldoc.Load(xmlread);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If our event returns errors (and warnings) throw a new exception with our last error as the message<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (validationErrCnt &gt; 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // FAILED VALIDATION: If we encountered errors while validating the XML</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception(lastError);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // PASSED VALIDATION: Otherwise process our request as normal</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommand sqlcmd = new SqlCommand(\"XMLValidationSample\",cn);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter sqlparam = new SqlParameter(\"&#64;strxml\", SqlDbType.VarChar, strXML.Length);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter outparam = new SqlParameter(\"&#64;retval\", SqlDbType.Int);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; outparam.Direction = ParameterDirection.ReturnValue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlparam.Value = strXML;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.CommandType = CommandType.StoredProcedure;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(sqlparam);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(outparam);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Open();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.ExecuteNonQuery();</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if( Convert.ToInt16(outparam.Value) &gt; 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; retval = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Close();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#125; <br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; catch (Exception ex)<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Replace following throw with User supplied exception handling code: <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; Log exception and perform graceful error handling<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception(\"Error validating XML: \" &#43; ex.Message);<br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; // return result<br />&nbsp;&nbsp;&nbsp; return retval;<br />&#125; </pre>\n  <p>\n    <strong>Custom Defined XML Validation Event Handler</strong>\n  </p>\n  <pre>void ValidationEventHandler(object sender, System.Xml.Schema.ValidationEventArgs args)<br />&#123;<br />&nbsp;&nbsp;&nbsp; validationErrCnt&#43;&#43;;<br />&nbsp;&nbsp;&nbsp; if (args.Severity.Equals(XmlSeverityType.Warning))<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lastError = \"Warning: \" &#43; args.Message;<br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; else if (args.Severity.Equals(XmlSeverityType.Error))<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lastError = \"Error: \" &#43; args.Message;<br />&nbsp;&nbsp;&nbsp; &#125;<br />&#125;</pre>\n  <p>\n    <strong>Sample XML Schema with pattern match validators</strong>\n  </p>\n  <pre>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</pre>\n  <pre>&lt;xs:schema id=\"UserSchema\" targetNamespace=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\" <br />&#9;elementFormDefault=\"qualified\" xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\"<br />&#9; xmlns:mstns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\" xmlns:xs=\"<a href=\"http://www.w3.org/2001/XMLSchema\">http://www.w3.org/2001/XMLSchema</a>\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"Users\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:complexType&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element minOccurs=\"1\" maxOccurs=\"100\" name=\"User\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:complexType&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"username\" type=\"usernamestring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"password\" type=\"passwordstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"name\" type=\"namestring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element maxOccurs=\"2\" name=\"streetaddress\" type=\"addressstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"city\" type=\"namestring\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"state\" type=\"statevalue\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"postalcode\" type=\"postalstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"phone\" type=\"phonestring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"ssn\" type=\"ssnstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"emailaddress\" type=\"emailstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element minOccurs=\"0\" name=\"url\" type=\"xs:anyURI\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:complexType&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:element&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:complexType&gt;<br />&nbsp; &lt;/xs:element&gt;</pre>\n  <pre>&nbsp; &lt;xs:simpleType name=\"usernamestring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Allows word characters &#91;A-Za-z0-9_&#93;, single quote, dash and period<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; must be at least two characters long and less than 16 --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"2\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"16\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;&#91;\\w-'\\.&#93;&#123;2,16&#125;&#36;\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"passwordstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Allows word characters &#91;A-Za-z0-9_&#93;, single quote, dash and period<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; must be at least two characters long and less than 16 --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"8\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"16\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;.&#42;(?=.&#42;\\d)(?=.&#42;&#91;a-z&#93;)(?=.&#42;&#91;A-Z&#93;)(?=.&#42;<br />&#9;&#9;&#9;&#91;&#96;~&#33;&#64;#\\&#36;&#37;\\&#94;\\&\\&#42;\\(\\)-_\\=\\&#43;\\&#91;\\&#123;\\&#93;\\&#125;\\\\\\&#124;;:',&lt;\\.&gt;/?&#93;).&#42;&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"namestring\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Names must be at least 2 characters, no more than 128 characters, and consist of<br />&nbsp;&nbsp; alphabetic characters, and may contain hyphens, single quotes, periods and spaces --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"2\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"128\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;&#91;a-zA-Z-'\\.\\s&#93;&#123;2,128&#125;&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;</pre>\n  <pre>&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"addressstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Since so many different types of address formats we'll do a match against a series <br />&nbsp;&nbsp; of digits (potentially containing punctuation, followed by a series of characters <br />&nbsp;&nbsp; representing the street name and then potentially a type of street and unit number --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;\\d&#123;1,3&#125;.?\\d&#123;0,3&#125;\\s&#91;a-zA-Z&#93;&#123;2,30&#125;(\\s&#91;a-zA-Z&#93;&#123;2,15&#125;)?(&#91;#\\.0-9a-zA-Z&#93;&#42;)?&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;</pre>\n  <pre>&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"statevalue\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- States must be one of our predefined enumeration types and consist of exactly 2 characters --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:length value=\"2\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AL\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AK\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AR\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AZ\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"CA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"CO\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"CT\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"DE\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"DC\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"FL\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"GA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"HI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"ID\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"IL\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"IN\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"IA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"KS\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"KY\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"LA\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"ME\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MD\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MN\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MS\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MO\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MT\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NE\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NV\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NH\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NJ\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NM\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NY\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NC\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"ND\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"OH\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"OK\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"OR\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"PA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"RI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"SC\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"SD\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"TN\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"TX\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"UT\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"VT\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"VA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WV\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WY\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"postalstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- The following US postal code format allows ZIP (5 digit) or ZIP&#43;4 formats<br />&nbsp;&nbsp; as a single string or separated by hyphens --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;\\d&#123;5&#125;&#91;-&#93;?(\\d&#123;4&#125;)?&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"5\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"10\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;</pre>\n  <pre>&nbsp; &lt;xs:simpleType name=\"ssnstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- SSNs consist of 9 digits but may contain an optional 2 hyphens --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"9\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"11\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;\\d&#123;3&#125;&#91;-&#93;?\\d&#123;2&#125;&#91;-&#93;?\\d&#123;4&#125;&#36;&#36;\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"phonestring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- The following pattern defines a US formatted telephone number --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;&#91;01&#93;?&#91;- .&#93;?(\\(&#91;2-9&#93;\\d&#123;2&#125;\\)&#124;&#91;2-9&#93;\\d&#123;2&#125;)&#91;- .&#93;?\\d&#123;3&#125;&#91;- .&#93;?\\d&#123;4&#125;&#36;\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"10\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"32\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"emailstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;&#33;-- Allows common email address that can start with a alphanumeric char and contain word, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hyphen and period characters followed by a domain name meeting the same criteria followed <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by a alpha suffix between 2 and 9 character long --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;(&#91;0-9a-zA-Z&#93;(&#91;-.\\w&#93;&#42;&#91;0-9a-zA-Z&#93;)&#42;&#64;(&#91;0-9a-zA-Z&#93;&#91;-\\w&#93;&#42;&#91;0-9a-zA-Z&#93;\\.)&#43;&#91;a-zA-Z&#93;&#123;2,9&#125;)&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"7\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"256\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;</pre>\n  <pre>&lt;/xs:schema&gt;</pre>\n  <h1>Problem Example</h1>\n  <p>The following example demonstrates the use of unvalidated XML received by a web service method.</p>\n  <pre>&#91;WebMethod&#93;<br />public bool ProcessValueNoValidation(string strXML)<br />&#123;<br />&nbsp;&nbsp;&nbsp; try<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create our XML reader and associate our reader settings<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringReader sreader = new StringReader(strXML);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReader xmlread = XmlReader.Create(sreader);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Lastly load the document which forces a schema validation to be performed in the process<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlDocument xmldoc = new XmlDocument();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xmldoc.Load(xmlread);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommand sqlcmd = new SqlCommand(\"XMLValidationSample\", cn);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter sqlparam = new SqlParameter(\"&#64;strxml\", SqlDbType.VarChar, strXML.Length);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter outparam = new SqlParameter(\"&#64;retval\", SqlDbType.Int);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; outparam.Direction = ParameterDirection.ReturnValue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlparam.Value = strXML;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.CommandType = CommandType.StoredProcedure;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(sqlparam);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(outparam);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Open();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.ExecuteNonQuery();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Close();<br />&nbsp;&nbsp;&nbsp; &#125; catch (Exception ex)<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception(ex.Message);<br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; return true;<br />&#125;</pre>\n  <ul>\n    <li>No XML schema validation prior to passing the strXML string to SQL stored procedure <li>Depending on stored procedure implementation SQL injection may be possible (particularly in instances where dynamic SQL is constructed from XML element values and passed as arguments to sp_executesql) clear text in a file or database</li></li>\n  </ul>\n  <p>Other Secure Coding Issues</p>\n  <ul>\n    <li>Potential information leakage of application internals through throw exceptions</li>\n  </ul>\n  <h1>Case</h1>\n  <p>The following classes must be included in any project making use of the sample code provided above:</p>\n  <pre>using System.Web.Services;<br />using System.Web.Services.Protocols;<br />using System.Xml;<br />using System.Xml.Schema;<br />using System.IO;<br />using System.Data;<br />using System.Data.SqlClient;</pre>\n  <p>Leveraging WebService Studio to pass in various XML strings allows us to observe server response behavior:</p>\n  <p>\n    <strong>Input XML</strong>\n  </p>\n  <p>1) </p>\n  <pre>&lt;Users xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\"&gt;<br />&nbsp;&nbsp; &lt;User&gt;<br />&nbsp;&nbsp; &nbsp;&lt;username&gt;foobar&lt;/username&gt;<br />&nbsp;&nbsp; &nbsp;&lt;password&gt;pdw123A&#64;1234 &lt;/password&gt;<br />&nbsp;&nbsp; &nbsp;&lt;name&gt;Foo Bar&lt;/name&gt;<br />&nbsp;&nbsp; &nbsp;&lt;streetaddress&gt;&lt;&#33;&#91;CDATA&#91;&lt;&#93;&#93;&gt;SCRIPT&lt;&#33;&#91;CDATA&#91;&gt;&#93;&#93;&gt;alert(&#8216;XSS&#8217;);&lt;&#33;&#91;CDATA&#91;&lt;&#93;&#93;&gt;/SCRIPT&lt;&#33;&#91;CDATA&#91;&gt;&#93;&#93;&gt;<br />&nbsp;&nbsp; &nbsp;&lt;/streetaddress&gt;<br />&nbsp;&nbsp; &nbsp;&lt;city&gt;Redmond&lt;/city&gt;<br />&nbsp;&nbsp; &nbsp;&lt;state&gt;WA&lt;/state&gt;<br />&nbsp;&nbsp; &nbsp;&lt;postalcode&gt;01234&lt;/postalcode&gt;<br />&nbsp;&nbsp; &nbsp;&lt;phone&gt;1-223-123-1234&lt;/phone&gt;<br />&nbsp;&nbsp; &nbsp;&lt;ssn&gt;123-12-1234&lt;/ssn&gt;<br />&nbsp;&nbsp; &nbsp;&lt;emailaddress&gt;&lt;&#33;&#91;CDATA&#91;' or 1=1 or ''='&#93;&#93;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&lt;/emailaddress&gt;<br />&nbsp;&nbsp; &nbsp;&lt;url&gt;http://www.microsoft.com&lt;/url&gt;<br />&nbsp;&nbsp; &lt;/User&gt;<br />&lt;/Users&gt;</pre>\n  <p>2) </p>\n  <pre>&lt;Users xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a> &gt;<br />&nbsp;&nbsp; &lt;User&gt;<br />&nbsp;&lt;username&gt;foobar&lt;/username&gt;<br />&nbsp;&lt;password&gt;pdw123A&#64;1234&lt;/password&gt;<br />&nbsp;&lt;name&gt;Foo Bar&lt;/name&gt;<br />&nbsp;&lt;streetaddress&gt;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<br />&#9;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;/streetaddress&gt;<br />&nbsp;&lt;city&gt;Redmond&lt;/city&gt;<br />&nbsp;&lt;state&gt;WA&lt;/state&gt;<br />&nbsp;&lt;postalcode&gt;01234&lt;/postalcode&gt;<br />&nbsp;&lt;phone&gt;1-223-123-1234&lt;/phone&gt;<br />&nbsp;&lt;ssn&gt;123-12-1234&lt;/ssn&gt;<br />&nbsp;&lt;emailaddress&gt;example&#64;microsoft.com&lt;/emailaddress&gt;<br />&nbsp;&lt;url&gt;http://www.microsoft.com&lt;/url&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/User&gt;<br />&lt;/Users&gt;<br /></pre>\n  <h1>Expected Result</h1>\n  <h3>1) Output from unvalidated XML Reader</h3>\n  <pre>Error within stored procedure, during processing. Possible SQL injection</pre>\n  <pre>&#42;&#42;&#42;&#42;&#42;&#42;&#42; Exception Text &#42;&#42;&#42;&#42;&#42;&#42;&#42; <br />System.Reflection.TargetInvocationException: Exception has been thrown <br />&#9;&#9;by the target of an invocation. ---&gt; System.Web.Services.Protocols.SoapException:<br />System.Web.Services.Protocols.SoapException: Server was unable to <br />&#9;&#9;process request. ---&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Exception: The error description is <br />&#9;&#9;'An invalid character was found in text content.'.<br />Could not find prepared statement with handle 0.<br />sp_xml_removedocument: The value supplied for parameter number 1 is invalid.<br />The XML parse error 0xc00ce508 occurred on line number 1, near the XML text <br />\"&lt;Users xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;User&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;username&gt;foobar&lt;/username&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;password&gt;pdw123A&#64;1234&lt;/password&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;name&gt;Foo Bar&lt;/name&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;streetaddress&gt;&lt;&#33;&#91;CDATA&#91;&lt;&#93;&#93;&gt;SCRIPT&lt;&#33;&#91;CDATA&#91;&gt;&#93;&#93;&gt;alert(\".<br />The statement has been terminated.<br />&nbsp;&nbsp; at Service.ProcessValueNoValidation(String strXML) in c:\\Documents and Settings\\XXX\\<br />&#9;&#9;My Documents\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 130<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message,<br />&#9;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebResponse response, Stream responseStream)<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object&#91;&#93; parameters)<br />&nbsp;&nbsp; at Service.ProcessValueNoValidation(String strXML)<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, <br />&#9;&#9;BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters,<br />&#9;&#9; CultureInfo culture, Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder,<br />&#9;&#9; Object&#91;&#93; parameters, CultureInfo culture, Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, <br />&#9;&#9;Object&#91;&#93; parameters, CultureInfo culture)<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.InvokeWebMethod()<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ButtonBase.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</pre>\n  <h3>\n    <br />1) Output from validated XML Reader</h3>\n  <pre>Pattern match validation caught error </pre>\n  <pre>&#42;&#42;&#42;&#42;&#42;&#42;&#42; Exception Text &#42;&#42;&#42;&#42;&#42;&#42;&#42; <br />System.Reflection.TargetInvocationException: Exception has been thrown by the target<br />&#9;&#9; of an invocation. ---&gt; System.Web.Services.Protocols.SoapException:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />System.Web.Services.Protocols.SoapException: Server was unable to process request. ---&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />System.Exception: Error validating XML: Error:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />The 'http://tempuri.org/XMLSchema.xsd:emailaddress' element is invalid - The value '' or 1=1 or ''='' is&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />invalid according to its datatype 'http://tempuri.org/XMLSchema.xsd:emailstring' - The Pattern constraint failed.<br />at Service.ProcessValue(String strXML) in c:\\Documents and Settings\\XXX\\My Documents\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 97<br />--- End of inner exception stack trace ---<br />at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message, WebResponse response, Stream responseStream)<br />at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object&#91;&#93; parameters)<br />at Service.ProcessValue(String strXML)<br />--- End of inner exception stack trace ---<br />at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters,<br />&#9;&#9; CultureInfo culture, Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)<br />at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters,<br />&#9;&#9; CultureInfo culture, Boolean verifyAccess)<br />at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters, CultureInfo culture)<br />at WebServiceStudio.MainForm.InvokeWebMethod()<br />at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)<br />at System.Windows.Forms.Control.OnClick(EventArgs e)<br />at System.Windows.Forms.Button.OnClick(EventArgs e)<br />at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)<br />at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)<br />at System.Windows.Forms.Control.WndProc(Message& m)<br />at System.Windows.Forms.ButtonBase.WndProc(Message& m)<br />at System.Windows.Forms.Button.WndProc(Message& m)<br />at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)<br />at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)<br />at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</pre>\n  <h3>2) Output from validated XML Reader</h3>\n  <pre>Pattern match validation caught error </pre>\n  <pre>&#42;&#42;&#42;&#42;&#42;&#42;&#42; Exception Text &#42;&#42;&#42;&#42;&#42;&#42;&#42; <br />System.Reflection.TargetInvocationException: Exception has been thrown by the <br />&#9;&#9;&#9;target of an invocation. ---&gt; System.Web.Services.Protocols.SoapException:<br />System.Web.Services.Protocols.SoapException: Server was unable to process request. ---&gt;<br />System.Exception: Error validating XML: Error:<br />The 'http://tempuri.org/XMLSchema.xsd:streetaddress' element is invalid - <br />The value 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<br />&#9;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' is invalid according<br />to its datatype 'http://tempuri.org/XMLSchema.xsd:addressstring' - The Pattern constraint failed.<br />&nbsp;&nbsp; at Service.ProcessValue(String strXML) in c:\\Documents and Settings\\XXX\\My Documents<br />&#9;&#9;&#9;\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 97<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message,<br />&#9;&#9; WebResponse response, Stream responseStream)<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object&#91;&#93; parameters)<br />&nbsp;&nbsp; at Service.ProcessValue(String strXML)<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags <br />&#9;&#9;invokeAttr, Binder binder, Object&#91;&#93; parameters, CultureInfo culture, <br />&#9;&#9;Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags <br />&#9;&#9;invokeAttr, Binder binder, Object&#91;&#93; parameters, CultureInfo culture,<br />&#9;&#9; Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr,<br />&#9;&#9; Binder binder, Object&#91;&#93; parameters, CultureInfo culture)<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.InvokeWebMethod()<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ButtonBase.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</pre>\n  <h3>2) Output from unvalidated XML Reader</h3>\n  <pre>Request is simply processed without validating results</pre>\n  <pre>&lt;?xml version=\"1.0\" encoding=\"utf-16\"?&gt;<br />&lt;soap:Envelope xmlns:soap=\"<a href=\"http://schemas.xmlsoap.org/soap/envelope/\">http://schemas.xmlsoap.org/soap/envelope/</a>\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xmlns:xsi=\"<a href=\"http://www.w3.org/2001/XMLSchema-instance\">http://www.w3.org/2001/XMLSchema-instance</a>\"<br /> &#9;xmlns:xsd=\"<a href=\"http://www.w3.org/2001/XMLSchema\">http://www.w3.org/2001/XMLSchema</a>\"&gt;<br />&nbsp; &lt;soap:Body&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ProcessValueNoValidationResponse xmlns=\"<a href=\"http://codesamples.microsoft.com/XMLValidationExample/\">http://codesamples.microsoft.com/XMLValidationExample/</a>\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ProcessValueNoValidationResult&gt;true&lt;/ProcessValueNoValidationResult&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/ProcessValueNoValidationResponse&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/soap:Body&gt;<br />&lt;/soap:Envelope&gt;</pre>\n  <h1>More Information</h1>\n  <p>Web services which leverarage XML schema validation to perform pattern validation (known good characters), minimum and maximum length and bounds checking, and minimum / maximum occurances of an element is signficantly less likely to result in manipulation of application logic or result in data validation induced vulnerabilities such as SQL injection, Cross-site Scripting and failure to handle error conditions. This code sample demonstrates such a task using the an XSD with strongly defined regular expressions for typical data elements.</p>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>Validation of XML with Schemas: <a href=\"http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp\">http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp</a><li>XML Reader usage: <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp\">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp</a><li>Regular Expressions (.NET Framework): <a href=\"http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx\">http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx</a></li></li></li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}