{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1516869768",
      "Content_Hash": "-1248028296"
    },
    "Metadata": [
      {
        "Id": [
          "11e7466f-001b-4c8d-b282-a3c12aa0588c"
        ],
        "Id_History": [
          "11e7466f-001b-4c8d-b282-a3c12aa0588c,46b64320-ac57-42e9-ad8f-e6c2e67fd08f,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Use ESAPI Randomizer"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Code Example"
        ],
        "DirectLink": [
          "Use ESAPI Randomizer"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\n  <ul>\n    <li>Java web-based applications.</li>\n  </ul>\n  <h1>Summary</h1>\n  <span>\n    <p>Use the <em>Randomizer</em> control from the ESAPI library in order to produce random resources in a secure manner.</p>\n  </span>\n  <h1>Objectives</h1>\n  <span>\n    <p>Generating random resources (<em>Strings, numbers, bytes</em>) can be helpful for various reasons, one of the primary ones being for cryptographic computation. The ESAPI library provides the <em>Randomizer</em> control as a means for producing random resources in a secure fashion.</p>\n  </span>\n  <h1>Scenarios</h1>\n  <span>\n    <p>When there is a need for a random resource, the <em>Randomizer</em> function provides a generation mechanism. A few examples are shown below:</p>\n  </span>\n  <h1>Solution Example<span></span></h1>\n  <p>Generating random strings:</p>\n  <pre>\n    <p>char[] characters = ...;</p>\n    <p>String randomStr = ESAPI.randomizer().getRandomString(15, characters);</p>\n  </pre>\n  <p>Generating random integers:</p>\n  <pre>\n    <p>int min = ...;</p>\n    <p>int max = ...;</p>\n    <p>int randomInt = ESAPI.randomizer().getRandomInteger(min, max);</p>\n  </pre>\n  <p>Generating a random GUID (globally unique identifier):</p>\n  <pre>String guid = ESAPI.randomizer().getRandomGUID();</pre>\n  <h1>See Also</h1>\n  <span>\n    <ul>\n      <li>For more information about the OWASP ESAPI project, please see <a href=\"https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API\">https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API</a></li>\n    </ul>\n  </span>\n  <h1>Java Cryptographic Storage Guidelines</h1>\n  <ul>\n    <li>\n      <a href=\"/article/6e0918c1-90db-46d5-9f0e-8a98ddbcd7d5\">Store Passwords Securely</a>\n    </li>\n    <li>\n      <a href=\"/article/b38a70c0-a014-4262-b3d6-69d6d4f0fe46\">Do Not Store Plaintext Sensitive Data</a>\n    </li>\n    <li>\n      <a href=\"/article/66df6465-5476-4b55-90c8-ffbd7d556205\">Use Strong Symmetric Encryption</a>\n    </li>\n    <li>\n      <a href=\"/article/f5cdd292-6f61-4584-b014-fc5134a3f9bc\">Use Strong Asymmetric Encryption</a>\n    </li>\n    <li>\n      <a href=\"/article/1057099e-dd79-4f41-8b7e-36f00f1343e4\">Use a Secure Key Storage Location</a>\n    </li>\n  </ul>\n  <h1>Java Cryptographic Storage Checklists</h1>\n  <ul>\n    <li>\n      <a href=\"/article/d74fe6bf-387f-4ff1-9edb-d0275eedffc0\">Passwords Are Stored Securely</a>\n    </li>\n    <li>\n      <a href=\"/article/97bb3ed8-df73-478e-a310-d96b79678aef\">Sensitive Data Is Encrypted</a>\n    </li>\n    <li>\n      <a href=\"/article/23019ede-9f30-4709-997d-586475a2e626\">Strong Symmetric Encryption Is Used</a>\n    </li>\n    <li>\n      <a href=\"/article/14a46517-6c86-498e-8429-1cb5ca3ce7c1\">Strong Asymmetric Encryption Is Used</a>\n    </li>\n    <li>\n      <a href=\"/article/08e76219-384d-4c5f-954e-09617f717558\">A Secure Key Storage Location Is Used</a>\n    </li>\n  </ul>\n  <h1>Java Cryptographic Storage Code Example</h1>\n  <ul>\n    <li>\n      <a href=\"/article/11e7466f-001b-4c8d-b282-a3c12aa0588c\">Use ESAPI Randomizer</a>\n    </li>\n  </ul>\n  <h1>Java Cryptographic Storage Testing</h1>\n  <ul>\n    <li>\n      <a href=\"/article/6d36aa09-5b7f-4967-b3c7-661b860846e2\">How to Test for Local Machine Credential Theft Bugs in Java</a>\n    </li>\n  </ul>"
        ]
      }
    ]
  }
}