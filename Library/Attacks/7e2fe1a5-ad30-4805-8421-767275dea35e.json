{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "904443535",
      "Content_Hash": "1075014396"
    },
    "Metadata": [
      {
        "Id": [
          "7e2fe1a5-ad30-4805-8421-767275dea35e"
        ],
        "Id_History": [
          "d22c8d99-a690-4a68-bccf-5cb2894af160,7e2fe1a5-ad30-4805-8421-767275dea35e,14cdd0d5-3117-4f94-952c-c3d4436827c8,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6204f2d47eb7"
        ],
        "Title": [
          "Repudiation Attack"
        ],
        "Category": [
          "Auditing and Logging"
        ],
        "Phase": [
          "Test"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Attack"
        ],
        "DirectLink": [
          "Repudiation Attack"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "wikitext"
        },
        "Data": [
          "=Applies To\n\nMulti-user applications which allow users to perform actions on shared resources.\n\n=Description\n\nIn a repudiation attack, a user denies that he or she performed an action or initiated a transaction. You need defense mechanisms in place to ensure that all user activity can be tracked and recorded. These mechanisms are a key to defending against the insider threat problem.\n\n=Impact\n\n*Actions, possibly malicious, by an authorized user that cannot be traced back to a particular user.\n*Increased insider threat.\n\n=Vulnerabilities\n\n    *Anonymous access enabled.\n    *Application using a role-based authorization model.\n    *Ineffective or lacking logging controls.\n    *Unprotected logs.\n\n=Countermeasures\n\n    *Determine what actions in the system require protection against repudiation. Consider creating a threat model to help with this process.\n    *Disable anonymous access and authenticate every principle.\n    *Consider using a more granular authorization model in order to produce precise logs at all tiers.\n    *Log actions to identify the user's identity, the action performed, the time, and the component or interface involved (who, what where, when), while not capturing any sensitive data in logs (e.g., SSNs, CC's, passwords, etc.).\n    *Enable logging to an object with append-only permissions from the application.\n    *Ensure that logs can be easily correlated across the application if multiple layers or logs are involved, and consider performing the correlation automatically for larger applications.\n    *Ensure that logs are kept at all relevant levels in the application for sensitive operations.\n    *Establish a policy to review logs for anomalies.\n\n=Additional Resources\n\n    *For more information on Insider Threat Study: Computer System Sabotage in Critical Infrastructure Sectors, see: http://www.cert.org/archive/pdf/insidercross051105.pdf\n\n"
        ]
      }
    ]
  }
}