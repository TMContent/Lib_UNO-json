{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1024187207",
      "Content_Hash": "-1975763084"
    },
    "Metadata": [
      {
        "Id": [
          "d00e43b2-f820-4668-8174-07045c4874be"
        ],
        "Id_History": [
          "e8b05112-2416-436a-9679-07d9e5626bca,d00e43b2-f820-4668-8174-07045c4874be,4b797119-d9b3-44c2-b186-90ce7be0572c,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6204f2d47eb7"
        ],
        "Title": [
          "Credentials Dictionary Attack"
        ],
        "Category": [
          "Sensitive Data"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Attack"
        ],
        "DirectLink": [
          "Credentials Dictionary Attack"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "2"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "wikitext"
        },
        "Data": [
          "=Applies To\n\nAny application that uses credentials.\n\n=Description\n\nA dictionary attack is a technique to defeat weak authentication credentials using a pre-compiled list of common usernames and passwords. It relies on the fact that users tend to use weak passwords that can be easily remembered. Though similar to a brute-force attack, this technique is faster as it exhausts only the common possibilities. The input-set in a dictionary attack is limited to words that could be derived from a dictionary, hence the name of the attack.\n\nIf the attacker has a lot of time available and the application does not deny repeated login attempts after a threshold number of attempts, the attacker may script login attempts using large lists of usernames and passwords. Username lists and common password lists are freely available from many websites.\n\n=Impact\n\n    *Credential compromise.\n\n=Vulnerabilities\n\n    *Weak password policy.\n\n=Countermeasures\n\n    *Enforce strong passwords: Applications should enforce strong passwords that require users to construct their passwords using a larger input-set. \n    *An example of strong password requirements is:\n        **At least 8 characters long.\n        **Contains lower case letters, upper case letters, numbers, and special characters.\n        **The password is regularly changed by the user, such as once every 3 months.\n\n=Additional Resources\n\n    *For more information on Testing for Brute Force attacks, see: http://www.owasp.org/index.php/Testing_for_Brute_Force\n\n=Related Items\n\n    *[[577e90c9-8e44-4240-b00f-768316d63901|Attack: Account Lockout Attack]]\n    *[[e3ffdced-ef7e-45c7-bbbb-a7e71052053c|Attack: Credentials Brute Force Attack]]\n    *[[47103484-487b-4493-a1dd-cf65a947c714|Attack: Weak Password Attack]]\n   \n"
        ]
      }
    ]
  }
}