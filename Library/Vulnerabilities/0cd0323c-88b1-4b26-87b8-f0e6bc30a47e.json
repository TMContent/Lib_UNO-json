{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "0cd0323c-88b1-4b26-87b8-f0e6bc30a47e"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-000000861d97,0cd0323c-88b1-4b26-87b8-f0e6bc30a47e,efc23862-ac67-48f2-b548-f004124fa738,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Sensitive Cookie in HTTPS Session without Secure Attribute"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Java"
        ],
        "Type": [
          "Vulnerability"
        ],
        "DirectLink": [
          "Sensitive Cookie in HTTPS Session without Secure Attribute"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "=Description\n\nWhen a Cookie has the Secure flag set, that cookie will not be sent over a non-encrypted connection. If the Secure attribute is not set on a sensitive cookie, the cookie will be sent in plaintext and an attacker might intercept it. If an attacker is able to intercept a session cookie, they can impersonate an authenticated user. This vulnerability affects web applications that use authentication. \n\n=Impact\n\nSending a sensitive cookie in plaintext creates a risk that an eavesdropping attacker might intercept it. Once the attacker has intercepted a session cookie, they can use it to hijack the user's session. Hijacking the user's session allows the attacker to impersonate that user. If the attacker hijacks an administrator's session, the attacker can take full control of the application. \n\n=Countermeasures\n\nTo prevent this problem, set Secure and HTTP-Only flags on all sensitive cookies and send session cookies over HTTPS. \n\nSet Secure and HTTP-Only flags on all sensitive cookies:\n* [[9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b|Set the Secure And HTTPOnly Flags on All Sensitive Cookies]]\n\nSend session cookies only over HTTPS:\n* [[6012e717-6ba6-4380-8ca8-2f0b7c69d717|Protect Session Cookies]]\n\n=Application Check\n\nTo check for adequate protection against this vulnerability, find all code that stores session cookies to ensure that it sets the Secure flag, and ensure that session cookies are sent over HTTPS. \n\nSecure and HTTP-Only flags are set on all sensitive cookies:\n* [[d8922a46-a943-4ae0-b8af-b88eb01d6997|The Secure And HTTPOnly Flags Are Set on All Sensitive Cookies]]\n\nSession cookies are sent only over HTTPS:\n* [[59132a30-2bae-45e9-9d85-8de26441be29|Session Cookies Are Protected]]\n\n=Computer Based Training Links=\n\nUse the following Computer Based Training courses for more background information about this type of vulnerabilities.\n\n==OWASP Top Threats & Mitigations==\n\nThis course examines in depth the vulnerabilities, threats, and mitigations described in the OWASP Top 10 2013. Upon completion of this class, participants will be able to identify and mitigate the greatest threats that web application developers face, including: Injection, Broken Authentication and Session Management, Cross-Site Scripting (XSS), Insecure Direct Object References, Security Misconfiguration, Sensitive Data Exposure, Missing Function Level Access Control, Cross-Site Request Forgery (CSRF), Using Components with Known Vulnerabilities, and Unvalidated Redirects and Forwards.\n\n[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/139631|DES 221 OWASP Top Threats & Mitigations]]\n\n//Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.//\n\n=Additional Resources\n\n* For more information about this vulnerability type, see http://minsky.gsi.dit.upm.es/semanticwiki/index.php/Sensitive_Cookie_in_HTTPS_Session_Without_%27Secure%27_Attribute"
        ]
      }
    ]
  }
}