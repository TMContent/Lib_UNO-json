{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "0",
      "Content_Hash": "0"
    },
    "Metadata": [
      {
        "Id": [
          "977cb6c0-f895-4d27-a297-0b85690cb289"
        ],
        "Id_History": [
          "00000000-0000-0000-0000-000000542cd1,977cb6c0-f895-4d27-a297-0b85690cb289,879e6b77-2f11-4105-9c79-e0b35897359b,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6204f2d47eb7"
        ],
        "Title": [
          "Insecure Transport"
        ],
        "Category": [
          "Communication Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "ASP.NET 4.0"
        ],
        "Type": [
          "Vulnerability"
        ],
        "DirectLink": [
          "Missing SSL/TLS"
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "false",
          "DataType": "wikitext"
        },
        "Data": [
          "=Description\n\nSSL should be used to protect any sensitive data in transit. Some applications don't use SSL even during authentication or when transmitting sensitive data, and an attacker may be able to intercept such data that is sent over the network unencrypted. This vulnerability applies to all applications that send sensitive data over the network. \n\n=Impact\n\nNot using SSL allows attackers to intercept sensitive information using man-in-the-middle attacks. There are many different attack scenarios that are enabled by not using SSL. One common attack vector is exposed by the Firesheep tool. The Firesheep tool monitors open wireless networks for information about user sessions for some social networking web sites. Once that information has been sniffed from the network, the attacker is able to take over the user's session. Taking over the user's session allows the attacker to view the victim user's data and to impersonate him. This attack would not be possible if SSL was used by the target sites.\n\n=Countermeasures\n\nTo prevent this problem, use SSL for all sensitive communications, configure SSL to use strong cipher suites, and use valid certificates. \n\nUse SSL for all sensitive communications:\n\n* [[5bff1c23-47fc-46ad-84bd-130b822d9611|Encrypt Communication Links]]\n\nConfigure SSL to use strong cipher suites:\n\n* [[00000000-0000-0000-0000-000000507b8d|Configure SSL to Use Strong Cipher Suites]]\n\nUse valid certificates:\n\n* [[8df9fe45-29b6-47c6-81c5-6248930d303c|Use a Valid SSL Certificate]]\n\n=Application Check\n\nTo check for adequate protection against this vulnerability, ensure that SSL is used for all sensitive communications, SSL is configured to use strong cipher suites, and valid certificates are used.\n\nSSL is used for all sensitive communications:\n\n* [[edcb9c8f-7ab4-4b24-aa2e-f186f3903332|All Sensitive Communications Are Encrypted]]\n\nSSL is configured to use strong cipher suites:\n\n* [[00000000-0000-0000-0000-00000013f66a|SSL Is Configured to Use Strong Cipher Suites]]\n\nValid certificates are used:\n\n* [[e8270fbe-a9e2-4504-a4af-688d3462cb0e|A Valid SSL Certificate Is Used]]\n\n=Computer Based Training Links=\n\nUse the following Computer Based Training course(s) for more background information about this type of vulnerabilities.\n\n==Creating Secure Code – .NET 4.0 Foundations==\n\nThis course describes .NET security features, including concepts such as Code Access Security (CAS) and .NET cryptographic technologies. It also provides secure coding best practices that will enable you to build more secure applications in .NET. \n\n[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127611|COD 215 Creating Secure Code – .NET 4.0 Foundations]]\n\n==Creating Secure ASP.NET Code==\n\nThis in-depth course examines the development of secure Web applications in ASP.Net. It provides developers and testers with an overview of common Web application vulnerabilities and a set of nine best practices and techniques to follow in order to avoid them. Throughout the course, students are provided with interactive games and simulations designed to reinforce the secure design and coding concepts that were introduced.\n\n[[https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127607|COD 311 Creating Secure ASP.NET Code]]\n\n//Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.//"
        ]
      }
    ]
  }
}