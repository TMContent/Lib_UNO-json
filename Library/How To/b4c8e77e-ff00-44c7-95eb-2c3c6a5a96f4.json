{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1685306245",
      "Content_Hash": "-1810356650"
    },
    "Metadata": [
      {
        "Id": [
          "b4c8e77e-ff00-44c7-95eb-2c3c6a5a96f4"
        ],
        "Id_History": [
          "b4c8e77e-ff00-44c7-95eb-2c3c6a5a96f4,6cf7fa1c-f906-44fb-afe8-7d641ba282f5,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] How to Use XML Signatures"
        ],
        "Category": [
          "Cryptography"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Use XML Signatures"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Description</h1>\r\n  <p>You can use XML digital signatures to help ensure the integrity and authenticity of origin of XML documents. You can use the classes in the <b>System.Security.Cryptography.Xml</b> namespace to sign an XML document or part of an XML document with a digital signature. </p>\r\n  <p>The following code example shows how to use an RSA signing key to sign an XML document. </p>\r\n  <pre>using System.Security.Cryptography;<br />using System.Security.Cryptography.Xml;<br />using System.Xml;<br />// Create a new RSA key container and save it in a key container.<br />CspParameters cspParams = new CspParameters();<br />cspParams.KeyContainerName = \"MyRSASigningKey\";<br />// Create a new RSA signing key and save it in the container. <br />RSACryptoServiceProvider rsaKey = new<br />                               RSACryptoServiceProvider(cspParams);<br />//   Create a <b>SignedXml</b> object and add the key to it.<br />SignedXml signedXml = new SignedXml(doc);<br />signedXml.SigningKey = Key;<br />// Create a <b>Reference</b> object that describes what to sign.<br />Reference reference = new Reference();<br />reference.Uri = \"\"; <br />// \"\" means sign the whole document<br />// Add an enveloped transformation to the reference, add the reference <br />// to the signed XML document, and then compute the signature.<br />XmlDsigEnvelopedSignatureTransform env = new <br />                             XmlDsigEnvelopedSignatureTransform();<br />reference.AddTransform(env);<br />// Add the reference to the SignedXml object.<br />signedXml.AddReference(reference);<br />// Compute the signature.<br />signedXml.ComputeSignature();<br />//   Get the XML representation of the signature and save </pre>\r\n  <pre>// it in an <b>XmlElement</b> object. Append the element to the original XML document.<br />XmlElement xmlDigitalSignature = signedXml.GetXml();<br />// Append the element to the XML document.<br />Doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, true));</pre>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>"
        ]
      }
    ]
  }
}