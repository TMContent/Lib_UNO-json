{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "706028672",
      "Content_Hash": "1720557962"
    },
    "Metadata": [
      {
        "Id": [
          "ac4da00e-635e-4975-87e3-5d8b1cb48aba"
        ],
        "Id_History": [
          "ac4da00e-635e-4975-87e3-5d8b1cb48aba,3207449b-4697-4639-bd1f-cba46214ebe8,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "How to Constrain File IO"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Constrain File IO"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Description</h1>\n  <p>If you need to apply constraints to determine which files or directories an application is able to access, you can use code access security and grant your code a limited permission using the <b>FileIOPermission </b>attribute. If your assembly is strong-named or contains other cryptographically strong evidence, an administrator can configure enterprise or computer-wide code access security policy to grant a restricted <b>FileIOPermission</b> to your assembly. </p>\n  <p>You can configure your ASP.NET Web application to run in medium trust to limit file access to the application's virtual directory hierarchy. </p>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}