{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1388567169",
      "Content_Hash": "-263500003"
    },
    "Metadata": [
      {
        "Id": [
          "2f75c185-b831-4c9a-99a1-68c2035d146a"
        ],
        "Id_History": [
          "2f75c185-b831-4c9a-99a1-68c2035d146a,59c73a49-5dc3-41dd-b20a-6b0dc6bf2f36,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[VERIFYME] How to Authenticate Users Against Active Directory"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Authenticate Users Against Active Directory"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft&amp;#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&amp;#174; 2008</li></li>\r\n  </ul>\r\n  <h1>Description</h1>\r\n  <p>Use Windows authentication when both the client and service are in trusted domains or when users are stored in local machine accounts, such as in an Intranet scenario. By using Windows authentication with Active Directory, you benefit from a unified identity store, centralized account administration, enforceable account and password policies, and strong authentication that avoid sending passwords over the network. </p>\r\n  <p>If Windows authentication is not possible because of infrastructure limitations like firewall between clients and AD, consider using username authentication instead.  If you are using username authentication, the username/password for the user will be automatically mapped to a Windows account.   </p>\r\n  <p>Following example shows you how to configure the client credentials in WCF to use Windows authentication.</p>\r\n  <pre>&amp;#8230;<br />&lt;bindings&gt;<br />  &lt;wsHttpBinding&gt;<br />    &lt;binding name=\"wsHttpEndpointBinding\"&gt;<br />      &lt;security&gt;<br />        &lt;message clientCredentialType=\"Windows\" /&gt;<br />      &lt;/security&gt;<br />    &lt;/binding&gt;<br />  &lt;/wsHttpBinding&gt;<br />&lt;/bindings&gt;<br />&amp;#8230;</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information see &amp;#8220;Selecting a Credential Type&amp;#8221; at <a href=\"http://msdn.microsoft.com/en-us/library/ms733836.aspx\">http://msdn.microsoft.com/en-us/library/ms733836.aspx</a></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>"
        ]
      }
    ]
  }
}