{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1785090221",
      "Content_Hash": "-2006700497"
    },
    "Metadata": [
      {
        "Id": [
          "c4ff8f04-1d75-4651-b141-b47925bab771"
        ],
        "Id_History": [
          "c4ff8f04-1d75-4651-b141-b47925bab771,d54f4f76-bd22-4dda-9738-80c16362ff52,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "How to Disable Code Access Security While Debugging A Partially Trusted Application"
        ],
        "Category": [
          "Code Access Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Disable Code Access Security While Debugging A Partially Trusted Application"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Description</h1>\n  <p>In .NET Framework you can only disable code access security temporarily. Temporarily disabling code access security can help you determine whether a problem is security related You can temporarily disable code access security by running CasPol.exe from a command line with the <b>-s off </b>switches, as shown here: </p>\n  <pre>CasPol.exe -s off </pre>\n  <p>This disables code access security temporarily while the CasPol process remains active. You can press ENTER when you want to re-enable code access security. When code access security is disabled, all code access demands succeed. </p>\n  <blockquote>\n    <b>Note</b>&nbsp;&nbsp;&nbsp;Disabling code access security opens your system to potential attack. You should only do this when debugging an application in a secured environment.</blockquote>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}