{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "801840512",
      "Content_Hash": "-1319945220"
    },
    "Metadata": [
      {
        "Id": [
          "80eddb05-f83c-42c1-854e-bfb3102f4ac1"
        ],
        "Id_History": [
          "80eddb05-f83c-42c1-854e-bfb3102f4ac1,b87853de-83a7-443a-bb47-ffd67767d3d5,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "How to Obfuscate Your Assembly With A Build Script"
        ],
        "Category": [
          "Code Integrity"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Obfuscate Your Assembly With A Build Script"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Description</h1>\r\n  <p>If you need to create obfuscated assemblies on your build server from a script, use the Dotfuscator command-line interface. To execute Dotfuscator.exe from the command line either add the Dotfuscator executable path to the path environment variable or browse to it under the Application\\PreEmptive Solutions\\Dotfuscator folder beneath your VS installation. </p>\r\n  <p>By default, running Dotfuscator from the command prompt opens the standalone graphical user interface (GUI). To open the command-line interface, use the -<b>v</b> (verbose) switch. You can use the command-line tool to specify a previously created configuration file, use command-line switches to perform the obfuscation directly or use a combination of the configuration file and command-line switches, where the switch options can override or supplement settings in the configuration file. </p>\r\n  <p>The following example obfuscates both My1.dll and My2.dll in verbose mode: </p>\r\n  <pre>dotfuscator /v /in My1.dll,My2.dll </pre>\r\n  <p>The output assemblies are written to a directory called .\\Dotfuscated, and the map file is written to .\\Dotfuscated\\map.xml because no output directories are specified. </p>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information on Dotfuscator, see <a href=\"http://code.msdn.microsoft.com/Dotfuscator2010video\">Dotfuscator Team Page</a></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}