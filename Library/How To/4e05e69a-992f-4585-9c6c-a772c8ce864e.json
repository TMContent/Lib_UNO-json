{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-241393155",
      "Content_Hash": "1787007381"
    },
    "Metadata": [
      {
        "Id": [
          "4e05e69a-992f-4585-9c6c-a772c8ce864e"
        ],
        "Id_History": [
          "4e05e69a-992f-4585-9c6c-a772c8ce864e,0020f30d-9222-4dd4-8cad-9ba7429d3d5b,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "How to Test for VLAN Hopping Vulnerabilities"
        ],
        "Category": [
          "Testing"
        ],
        "Phase": [
          "Test"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Test for VLAN Hopping Bugs"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "markdown"
        },
        "Data": [
          "## Applies To ##\r\n\r\n- Virtual Local Area Networks (VLANs)\r\n\r\n\r\n## Summary ##\r\n\r\nVirtual Local Area Networks (VLANs) are Local Area Network (LAN) segments interconnected by network switches. The switches isolate a segment of the LAN and make it inaccessible from the other VLAN segments. An attacker executes a VLAN hopping attack on a target VLAN to monitor (sniff) network traffic from specific network nodes and, in the worst case, to execute Man in the Middle (MitM) attacks on nodes belonging to the target VLAN.\r\n\r\nFollow these steps to test for VLAN hopping vulnerabilities:\r\n\r\n1. Understand attack scenarios\r\n\r\n2. Analyze causes and countermeasures\r\n\r\n3. Start testing and exploring\r\n\r\n4. Execute additional testing\r\n\r\n\r\n## Step 1: Understand Attack Scenarios ##\r\n\r\nFirst, it is necessary to understand the different attack scenarios related to VLAN hopping:\r\n\r\n- Network switch spoofing attack\r\n\r\n- Double tagging attack\r\n\r\n- Network switch spoofing attack\r\n\r\nVLANs isolate logical LANs from each other using a network switch. However, sometimes VLANs extend over numerous switches. In order to maintain VLAN information across switches, VLANs implement a trunking protocol that works over a designated trunkingport on every switch on a VLAN.\r\n\r\nA network switch spoofing attack, also known as basic VLAN hopping, targets the Dynamic Trunk Protocol (DTP) used by switches to negotiate a trunking link between two network nodes. The attacker first intercepts traffic on his own box inside the VLAN in order to discover the format of the trunk tag used by the switch. The attacker is specifically looking for the format of the tag that indicates the VLAN ID. Once the attacker knows the tag format, the attacker sends a packet to the target on another VLAN, but modifies the trunking tags so that the VLAN ID is that of the target VLAN instead of the attacker’s VLAN. Upon receiving the attacker’ packet, the target switch thinks that the frame comes from a trusted switch that needs trunking, and adds the attacker’s port as the trunking port of the switch. As a trunking port, the attacker can access any of the VLANs in the victim’s switch.\r\n\r\nIn detail:\r\n\r\n1. The attacker captures traffic from within a VLAN to sample a frame.\r\n\r\n2. The attacker finds the VLAN ID of the target node.\r\n\r\n3. The attacker starts intercepting traffic at his end.\r\n\r\n4. The attacker sends a sample frame with an additional 802.1Q tag with the VLAN ID corresponding to the target VLAN.\r\n\r\n5. The switch determines that the attacker is a switch that needs trunking, and adds the attacker’s port as a trunking port on the switch.\r\n\r\n\r\n### Double tagging attack ###\r\n\r\nDouble tagging or double encapsulating VLAN hopping attacks consist of prepending two VLAN tags to outgoing packets so that they reach the target VLAN. This attack is different from switch spoofing, as the packet can only be sent from the attacker to the target, and not the other way around. The first prepended tag corresponds to the attacker’s VLAN and it will be stripped by the switch on the attacker’s VLAN. The attacker’s switch can only strip or decapsulate one tag, so the switch resolves the additional tag by sending the packet to all of its switch ports and trunk ports (including the switch port corresponding to the target VLAN’s switch). Upon receiving this packet, the target switch uses the VLAN ID in the tag set by the attacker and forwards the packet to the target node.\r\n\r\nIn detail:\r\n\r\n1. The attacker starts intercepting traffic at his end.\r\n\r\n2. The attacker sends a packet to the target node and prepends two 802.1Q tags (the first with the attacker’s VLAN ID and the second corresponding to the target VLAN ID).\r\n\r\n3. The attacker forwards the packet to his own switch.\r\n\r\n4. The attacker’s switch decapsulates the first tag and then forwards the packet to all switch ports and truck ports.\r\n\r\n5. The target switch receives the packet and uses the VLAN ID set by the attacker to resolve the destination VLAN.\r\n\r\n6. The target switch sends the packet to the target node.\r\n\r\n\r\n## Step 2: Analyze Causes and Countermeasures ##\r\n\r\nThe second step in testing for VLAN hopping is to understand what causes it and how to protect against it.\r\n\r\n\r\n### Network Switch Spoofing ###\r\n\r\nThis attack variation exploits trunk ports on network switches that have been insecurely configured. When a network switch is configured for VLAN use, it can be set to autotrunking. Autotrunking reduces configuration overhead by forwarding packets from different VLANs through a particular switch. An alternative is setting autotrunking to off and manually configuring each VLAN. Because this can be complex and time consuming, autotrunking is often left on by default. When a VLAN is configured for autotrunking, it becomes vulnerable to switch spoofing, which is essentially intended by design.\r\n\r\nTo protect against network switch spoofing, it is necessary to set autotrunking to off. By doing this, the switch will not confuse the attacker node with a switch, and VLAN hopping will be much less likely. In addition, it is important to note that the latest versions of Cisco switches mitigate the network switch spoofing attacks described here in their default configuration.\r\n\r\n\r\n### Double-tagging Attack ###\r\n\r\nThe double-tagging attack is possible in networks with DTP enabled because it directly exploits the logic of this protocol. DTP parses an additional 802.1Q header by forwarding the frame with the inner 802.1Q header to all of its switch ports and trunk ports.\r\n\r\nTo mitigate the double-tagging attack, set all user nodes to non-trucking by disabling DTP on any multi-switched network and explicitly configure any switch-to-switch settings.\r\n\r\nAdditional mitigations for both normal and double-tagging attacks include always using a dedicated VLAN ID for each trunk port, disabling all unused trunk ports and placing them in an unused VLAN, not using VLAN native trunk port, and using security by obscurity techniques such as a random VLAN ID for switch management instead of the default VLAN 1. Additionally, not relying on VLANs for security purposes is also an option. Instead, use physically separate networks when a firm security barrier is required.\r\n\r\n\r\n## Step 3: Start Testing and Exploring ##\r\n\r\nNow that the attack scenarios, causes, and countermeasures of VLAN hopping bugs have been examined, it is necessary to start auditing a VLAN-enabled network by executing basic VLAN hopping test cases.\r\n\r\n### Testing for basic VLAN hopping ###\r\n\r\nDuring the basic VLAN hopping test, we use a set of common tools to check if a VLAN-enabled network is vulnerable. Follow these steps:\r\n\r\n1. Capture a sample frame:\r\n\r\n    1. Connect two computers (PC 1 and PC 2) in the same VLAN.\r\n\r\n    2. Download Network Associate’s Sniffer Pro (Note: This tool is required; it can replay network frames without modifying them.).\r\n\r\n    3. Using Sniffer Pro, start monitoring traffic on PC 1.\r\n\r\n    4. Send and ICMP echo from PC 1 to PC 2.\r\n\r\n    5. Stop monitoring traffic and save the captured packet.\r\n\r\n    6. Start packet generation in Sniffer Pro, enter the captured packet, and send the packet to PC 2 to verify that the frame is correct.\r\n\r\n2. Find out the VLAN ID of target node (Note: This step is executed as a proof-of-concept when accessing the target VLAN. In the wild, it would be necessary to infer the target VLAN ID or send malicious packets to a range of VLAN IDs.):\r\n\r\n    1. Move PC 2 to the trunk port on the switch (port 24).\r\n\r\n    2. Start monitoring traffic on PC 2.\r\n    \r\n    3. From PC 1, send a ping request to a non-existent IP.\r\n\r\n    4. Stop monitoring traffic on PC 2.\r\n\r\n    5. Identify the 802.1 Q header tag in the VLAN header of the ARP sent to PC 2.\r\n\r\n    6. Move PC 1 to VLAN 2 (target VLAN).\r\n\r\n    7. Repeat steps 2.1 through 2.5. The VLAN headers from the second set of captures should reveal the format of the VLAN ID in use. For instance: `81 00 00 01` and `81 00 00 02`. The second VLAN ID is the one used by the target node.\r\n\r\n3. Resend the captured frame from step 1 with the target VLAN ID from step 2:\r\n\r\n    1. Connect PC 1 to a user port on VLAN 1, and PC 2 to a user port on VLAN 2.\r\n\t\r\n    2. Start packet generation in Sniffer Pro; enter the captured packet from step 1, but add an 802.1 Q tag with the target VLAN ID, and send packet to PC 2.\r\n\r\n    3. Verify if the packet sent from PC 1 successfully reached PC2. This can be done by sniffing traffic on PC 2.\r\n\r\nExpected results: If the packet sent from PC 1 reaches PC 2, the VLAN-enabled network is vulnerable to VLAN hopping.\r\n\r\n\r\n### Testing for double-tagging VLAN hopping ###\r\n\r\nThe double-tagging attack scenario can be launched using Yersinia. Follow these steps:\r\n\r\n1. Download the Yersinia network testing tool from [http://www.yersinia.net](http://www.yersinia.net/).\r\n\r\n2. Start Yersinia with GUI option: `yersinia -I`.\r\n\r\n3. Select interface connected to VLAN using i option.\r\n\r\n4. Wait three minutes.\r\n\r\n5. Check if any DTP packets were intercepted by Yersinia.\r\n\r\nExpected results: If Yersinia starts showing DTP traffic, the VLAN-enabled network is vulnerable to VLAN hopping.\r\n\r\n\r\n## Step 4: Execute Additional Testing ##\r\n\r\nIt is possible to modify the double-tagging attack in order to solve the problem of hopping in only one direction. This can be done by adding a third host that will act as the receiver for any packets sent from the remote victim. The attack works by sending a malicious packet with two 802.1 tags and with a spoofed IP address corresponding to a host under the attacker’s control (any host with a route from the target node). Similar to the common double-tag attack, the first tag is stripped and the second is used to hop the VLAN and forward the packet to the victim. However, now the victim’s reply is not lost, since it arrives at a host controlled by the attacker. This attack can also be executed by using Yersinia.\r\n\r\n\r\n## Conclusions ##\r\n\r\nAttackers use VLAN hopping to bypass Virtual LAN restrictions and deliver or receive packets from a different VLAN. In order to test for VLAN hopping, it is first necessary to understand the attack scenarios, such as basic VLAN hopping (or switch spoofing) and double-tagging VLAN hopping. Then you must understand what causes this vulnerability and how to protect against it. Network tools such as Yersinia are used to execute VLAN hopping attacks and to test for the presence of this bug in VLAN implementations.\r\n"
        ]
      }
    ]
  }
}