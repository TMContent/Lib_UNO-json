{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1928598211",
      "Content_Hash": "1899140047"
    },
    "Metadata": [
      {
        "Id": [
          "34724084-b7cb-446d-8548-80a9b172da2a"
        ],
        "Id_History": [
          "34724084-b7cb-446d-8548-80a9b172da2a,f98d98c0-2f6e-4487-a429-5e934885cb09,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "How to Validate Inbound Messages on a Service"
        ],
        "Category": [
          "Input and Data Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF 3.5"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Validate Inbound Messages on a Service"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 \r\n<li>Microsoft Visual Studio® 2008</li></li>\r\n  </ul>\r\n  <h1>Description</h1>\r\n  <p>Implement the AfterReceiveRequest of the interface IDispatchMessageInspector of a message inspector to validate inbound messages on a service. This allows you to validate the message after the request has arrived but before service operation invocation and deserialization. </p>\r\n  <pre>object IDispatchMessageInspector.AfterReceiveRequest(ref System.ServiceModel.Channels.Message request, System.ServiceModel.IClientChannel channel, System.ServiceModel.InstanceContext instanceContext)<br />{<br />    try<br />    {<br />        validateMessage(ref request);<br />    }      <br />    catch (FaultException e)<br />    {<br />        throw new FaultException&lt;string&gt;(e.Message);<br />    }<br />    return null;   <br />}</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information see “Message Inspectors” at <a href=\"http://msdn.microsoft.com/en-us/library/aa717047.aspx\">http://msdn.microsoft.com/en-us/library/aa717047.aspx</a></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}