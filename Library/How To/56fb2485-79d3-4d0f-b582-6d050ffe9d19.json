{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1743284693",
      "Content_Hash": "-699666827"
    },
    "Metadata": [
      {
        "Id": [
          "56fb2485-79d3-4d0f-b582-6d050ffe9d19"
        ],
        "Id_History": [
          "56fb2485-79d3-4d0f-b582-6d050ffe9d19,69d1e21b-cde8-47e2-a0cb-f2ca9e222966,"
        ],
        "Library_Id": [
          "92718d53-36b2-47bc-b6f5-e60994385f46"
        ],
        "Title": [
          "How to Implement Fault Contracts in Callback Functions"
        ],
        "Category": [
          "Error and Exception Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "WCF 3.5"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Implement Fault Contracts in Callback Functions"
        ],
        "Tag": [
          "WCF 3.5"
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          "J.D. Meier, Jason Taylor, Prashant Bansode, Carlos Farre, Madhu Sundararajan, Rob Boucher, Steve Gregersen"
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 \r\n<li>Microsoft Visual Studio® 2008</li></li>\r\n  </ul>\r\n  <h1>Description</h1>\r\n  <p>In duplex bindings you need to implement the service with a callback contract specifying the interface so the client can implement it. Use the <strong>CallbackContract</strong> attribute in the service contract to specify the type of callback contract which has the callback function.</p>\r\n  <p>The following code example shows a service that specifies a callback contract:</p>\r\n  <pre>[ServiceContract(CallbackContract = typeof(IMyContractCallback))]<br />interface IMyContract<br />{<br />   [OperationContract]<br />   void DoSomething( );<br />}<br />interface IMyContractCallback<br />{<br />   [OperationContract]<br />   [FaultContract(typeof(InvalidOperationException))]<br />   void OnCallBack( );<br />}</pre>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information on Fault Contracts, see “Specifying and Handling Faults in Contracts and Services” at <a href=\"http://msdn.microsoft.com/en-us/library/ms733721.aspx\">http://msdn.microsoft.com/en-us/library/ms733721.aspx</a></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}