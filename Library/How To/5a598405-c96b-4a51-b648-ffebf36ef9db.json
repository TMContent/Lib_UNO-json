{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1347318037",
      "Content_Hash": "-959646608"
    },
    "Metadata": [
      {
        "Id": [
          "5a598405-c96b-4a51-b648-ffebf36ef9db"
        ],
        "Id_History": [
          "5a598405-c96b-4a51-b648-ffebf36ef9db,90c58a62-972d-47c6-acc9-099c41d83bd9,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "[SINK] How to Protect Communication Between Server And Server"
        ],
        "Category": [
          "Communication Security"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "How To"
        ],
        "DirectLink": [
          "How to Protect Communication Between Server And Server"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>Description</h1>\r\n  <p>Use Internet Protocol security (IPsec) to encrypt the communication channel between two servers and to restrict which computers can communicate with one another. For example, you can help secure a database server by establishing a policy that permits requests only from a trusted client computer, such as an application or Web server. You can also restrict communication to specific IP protocols and TCP/UDP ports. </p>\r\n  <p>Use SSL instead of IPSec when you need detailed channel protection for a particular application instead of for all applications and services running on a computer. </p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>"
        ]
      }
    ]
  }
}