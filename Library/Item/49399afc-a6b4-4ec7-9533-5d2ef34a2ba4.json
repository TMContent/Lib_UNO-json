{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "2109087251",
      "Content_Hash": "276367589"
    },
    "Metadata": [
      {
        "Id": [
          "49399afc-a6b4-4ec7-9533-5d2ef34a2ba4"
        ],
        "Library_Id": [
          "e7d92b5b-e1d8-4039-b019-8b02594ea93a"
        ],
        "Title": [
          "Use a Safe Integer Handling Library"
        ],
        "Category": [
          "Input Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Principle"
        ],
        "DirectLink": [
          "Use a Safe Integer Handling Library"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h2>What to Do</h2>\r\n  <p>Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Use libraries or frameworks that make it easier to handle numbers without unexpected consequences. Examples include\r\n safe integer handling packages such as SafeInt (C&#43;&#43;) or IntegerLib (C or C&#43;&#43;).</p>"
        ]
      }
    ]
  }
}