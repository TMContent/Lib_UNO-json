{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1635990627",
      "Content_Hash": "750506176"
    },
    "Metadata": [
      {
        "Id": [
          "918c2cc7-dc91-4f05-91e3-6067c25e3af4"
        ],
        "Library_Id": [
          "e7d92b5b-e1d8-4039-b019-8b02594ea93a"
        ],
        "Title": [
          "CWE-676: Use of Potentially Dangerous Function"
        ],
        "Category": [
          "APIs"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Vulnerability"
        ],
        "DirectLink": [
          "CWE-676: Use of Potentially Dangerous Function"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h2>Description</h2>\n  <p>The program invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.</p>\n  <h2>Discussion</h2>\n  <p>Safety is critical when handling power tools. The programmer's toolbox is chock full of power tools, including library or API functions that make assumptions about how they will be used, with no guarantees of safety if they are abused. If potentially-dangerous\n functions are not used properly, then things can get real messy real quick.</p>\n  <h2>Mitigation</h2>\n  <p>Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be instructed to spot use of prohibited functions, such as the\n \"<em>banned.h</em>\" include file from Microsoft's SDL.</p>\n  <h2>Additional Information</h2>\n  <ul>\n    <li>For more information about use of potentially dangerous function vulnerabilities, please see\n<a href=\"http://cwe.mitre.org/top25/index.html#CWE-676\">http://cwe.mitre.org/top25/index.html#CWE-676</a></li>\n  </ul>"
        ]
      }
    ]
  }
}