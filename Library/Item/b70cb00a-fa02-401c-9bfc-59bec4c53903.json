{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "671558061",
      "Content_Hash": "-1580459341"
    },
    "Metadata": [
      {
        "Id": [
          "b70cb00a-fa02-401c-9bfc-59bec4c53903"
        ],
        "Library_Id": [
          "e7d92b5b-e1d8-4039-b019-8b02594ea93a"
        ],
        "Title": [
          "Compartmentalize the System"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Compartmentalize the System"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h2>What to Do</h2>\n  <p>Compartmentalize your system to have \"safe\" areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always be careful when interfacing with a compartment outside of the safe area.</p>\n  <h1>Why</h1>\n  <p>Defining a boundary between public and restricted content helps establish the check points where access will be allowed to the restricted content.</p>\n  <h1>When</h1>\n  <p>If your application has access control that restricts certain users to specific resources, then define a boundary between those resources. For instance, anonymous users are restricted to one part of the application, while authenticated users can access both\n parts.</p>\n  <h1>How</h1>\n  <p>Defining the boundary requires:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Determine roles. </strong>Define the various types of users and their rights. Build a security policy for the restricted content and base the user groups' privileges around it.\n</p>\n    </li>\n    <li>\n      <p>\n        <strong>Define the boundary. </strong>Structure the content according to access authorization and logical requirements. Try to use a modular approach when establishing the boundary.\n</p>\n    </li>\n    <li>\n      <p>\n        <strong>Separate on disk. </strong>Once the boundaries have been established, reflect these boundaries onto the local file system. Separate the restricted content from the public content on disk.\n</p>\n    </li>\n    <li>\n      <p>\n        <strong>Set proper permissions. </strong>Set proper permissions on the restricted content. Dedicate a special directory for the restricted content and require valid authorization before allowing access to the content within this directory. These permissions\n can be enforced at the application, server and operating system levels, depending on the environment in use.</p>\n    </li>\n  </ol>"
        ]
      }
    ]
  }
}