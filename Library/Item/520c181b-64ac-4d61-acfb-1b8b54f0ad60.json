{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "-1690607612",
      "Content_Hash": "1981403637"
    },
    "Metadata": [
      {
        "Id": [
          "520c181b-64ac-4d61-acfb-1b8b54f0ad60"
        ],
        "Library_Id": [
          "e7d92b5b-e1d8-4039-b019-8b02594ea93a"
        ],
        "Title": [
          "Store Application Files Outside of the Web Root"
        ],
        "Category": [
          "Hardening"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Principle"
        ],
        "DirectLink": [
          "Store Application Files Outside of the Web Root"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h2>What to Do</h2>\n  <p>Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities to prevent attackers from directly requesting them. One common practice\n is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly requested, and it can exit immediately. This significantly reduces the\n chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce your attack surface.</p>"
        ]
      }
    ]
  }
}