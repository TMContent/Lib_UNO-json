{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1622051647",
      "Content_Hash": "773721411"
    },
    "Metadata": [
      {
        "Id": [
          "4711babd-71d0-44d3-882c-db8f370710be"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Set the HTTPOnly Flag on Cookies"
        ],
        "Category": [
          "Session Management"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Set the HTTPOnly Flag on Cookies"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "html"
        },
        "Data": [
          "<h2>What to Do</h2>\n  <p>To help mitigate XSS attacks against the user's session cookie, set the session cookie to be\n<em>HttpOnly</em>. In browsers that support the <em>HttpOnly</em> feature (such as more recent versions of Internet Explorer and Firefox), this attribute can prevent the user's session cookie from being accessible to malicious client-side scripts that use document.cookie.\n This is not a complete solution, since <em>HttpOnly</em> is not supported by all browsers. More importantly,\n<em>XMLHTTPRequest</em> and other powerful browser technologies provide read access to HTTP headers, including the<em> Set-Cookie</em> header in which the\n<em>HttpOnly</em> flag is set.</p>\n  <h1>Why</h1>\n  <span>\n    <p>Set the \"<em>Secure</em>\" flag on all sensitive cookies to protect the contents of the sensitive cookies from eavesdropping attacks. Setting the \"<em>Secure</em>\" flag on sensitive cookies ensures they are only transferred over connections that are secured\n by TLS. The \"<em>HTTPOnly</em>\" flag prevents the contents of the marked cookie from being accessed by client-side script - this measure helps reduce the potential damage of Cross-Site Scripting attacks.</p>\n  </span>\n  <h1>How</h1>\n  <p>To set the \"<em>Secure</em>\" and \"<em>HTTPOnly</em>\" flags on all sensitive cookies:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Verify that TLS is available.</strong> The \"<em>Secure</em>\" flag forces cookies to be sent over TLS. TLS has to be available for this to work.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Identify sensitive cookies.</strong> Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Identify code that creates sensitive cookies. </strong>For each sensitive cookie in the list, find the code that creates that cookie.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Set the \"S<em>ecure</em>\" and \"<em>HTTPOnly</em>\" flags for each sensitive cookie.</strong> For each piece of code that creates a sensitive cookie, add code that sets the \"S<em>ecure</em>\" and \"<em>HTTPOnly</em>\" flags for the cookie.&amp;nbsp;Make sure,\n that when the <i>Secure </i>attribute is set for a cookie, it is in response to a request that was made over HTTPS and not HTTP.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Configure the platform.</strong> Many platform have configuration options that allow setting the \"<em>Secure\"</em> and \"<em>HTTPOnly\"</em> flags for session cookies. Please refer to your platform's documentation for information about whether this\n functionality is available and how to use it.</p>\n    </li>\n  </ol>"
        ]
      }
    ]
  }
}