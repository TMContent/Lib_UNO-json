{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1871443627",
      "Content_Hash": "-711807437"
    },
    "Metadata": [
      {
        "Id": [
          "60a70e5c-2107-462a-8fd1-7c61aab9b465"
        ],
        "Library_Id": [
          "e7d92b5b-e1d8-4039-b019-8b02594ea93a"
        ],
        "Title": [
          "Use Authentication Provided by the Framework"
        ],
        "Category": [
          "Authentication"
        ],
        "Phase": [
          "Design"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Principle"
        ],
        "DirectLink": [
          "Use Authentication Provided by the Framework"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h2>What to Do</h2>\r\n  <p>Whereever possible, avoid implementing custom authentication routines and consider using authentication capabilities as provided by the surrounding framework, operating system, or environment. These may make it easier to provide a clear separation between\r\n authentication tasks and authorization tasks. In environments such as the World Wide Web, the line between authentication and authorization is sometimes blurred. If custom authentication routines are required instead of those provided by the server, then these\r\n routines must be applied to every single page, since these pages could be requested directly. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider\r\n using libraries with authentication capabilities such as <em>OpenSSL</em> or the ESAPI\r\n<em>Authenticator</em>.</p>"
        ]
      }
    ]
  }
}