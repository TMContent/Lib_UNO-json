{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1204664234",
      "Content_Hash": "-823838930"
    },
    "Metadata": [
      {
        "Id": [
          "88398f40-5b89-4b78-b1e9-5840a7dcf1df"
        ],
        "Library_Id": [
          "e7d92b5b-e1d8-4039-b019-8b02594ea93a"
        ],
        "Title": [
          "Canonicalize Filenames in Input"
        ],
        "Category": [
          "Input Validation"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          "Technology Independent"
        ],
        "Type": [
          "Guideline"
        ],
        "DirectLink": [
          "Canonicalize Filenames in Input"
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h2>What to Do</h2>\r\n  <p>Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors could be used to bypass whitelist\r\n validation schemes by introducing dangerous inputs after they have been checked.</p>\r\n  <h2>How</h2>\r\n  <p>Use a built-in path canonicalization function (such as <em>realpath()</em> in C) that produces the canonical version of the pathname, which effectively removes \"..\" sequences and symbolic links (CWE-23, CWE-59). This includes:</p>\r\n  <ul>\r\n    <li>\r\n      <em>realpath()</em> in C </li>\r\n    <li>\r\n      <em>getCanonicalPath()</em> in Java </li>\r\n    <li>\r\n      <em>GetFullPath()</em> in ASP.NET </li>\r\n    <li>\r\n      <em>realpath()</em> or <em>abs_path()</em> in Perl </li>\r\n    <li>\r\n      <em>realpath()</em> in PHP</li>\r\n  </ul>\r\n  <h2>Additional Resources</h2>\r\n  <ul>\r\n    <li>For more information about \"CWE-180: Incorrect Behavior Order: Validate Before Canonicalize\", please see\r\n<a href=\"http://cwe.mitre.org/data/definitions/180.html\">http://cwe.mitre.org/data/definitions/180.html</a></li>\r\n    <li>For more information about \"CWE-174: Double Decoding of the Same Data\", please see\r\n<a href=\"http://cwe.mitre.org/data/definitions/174.html\">http://cwe.mitre.org/data/definitions/174.html</a></li>\r\n    <li>For more information about \"CWE-23: Relative Path Traversal\", please see <a href=\"http://cwe.mitre.org/data/definitions/23.html\">\r\nhttp://cwe.mitre.org/data/definitions/23.html</a></li>\r\n    <li>For more information about \"CWE-59: Improper Link Resolution Before File Access ('Link Following')\", please see\r\n<a href=\"http://cwe.mitre.org/data/definitions/59.html\">http://cwe.mitre.org/data/definitions/59.html</a></li>\r\n  </ul>"
        ]
      }
    ]
  }
}