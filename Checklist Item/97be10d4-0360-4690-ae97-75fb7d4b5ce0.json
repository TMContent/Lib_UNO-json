{
  "TeamMentor_Article": {
    "$": {
      "Metadata_Hash": "1967646018",
      "Content_Hash": "1913090310"
    },
    "Metadata": [
      {
        "Id": [
          "97be10d4-0360-4690-ae97-75fb7d4b5ce0"
        ],
        "Id_History": [
          "97be10d4-0360-4690-ae97-75fb7d4b5ce0,000aa3a4-7f62-4e3b-903a-7d4e703efc6b,"
        ],
        "Library_Id": [
          "be5273b1-d682-4361-99d9-6234f2d47eb7"
        ],
        "Title": [
          "Dispose Methods Are Synchronized."
        ],
        "Category": [
          "Concurrency"
        ],
        "Phase": [
          "Implementation"
        ],
        "Technology": [
          ".NET 3.5"
        ],
        "Type": [
          "Checklist Item"
        ],
        "DirectLink": [
          "Dispose Methods Are Synchronized."
        ],
        "Tag": [
          ""
        ],
        "Security_Demand": [
          ""
        ],
        "Author": [
          ""
        ],
        "Priority": [
          ""
        ],
        "Status": [
          ""
        ],
        "Source": [
          "SI"
        ]
      }
    ],
    "Content": [
      {
        "$": {
          "Sanitized": "true",
          "DataType": "Html"
        },
        "Data": [
          "<h1>What to Check For</h1>\r\n  <p>Check to ensure that the dispose methods are synchronized when&nbsp;developing non-synchronized <b>Dispose</b> implementations in your application.</p>\r\n  <p />\r\n  <h1>How to Fix</h1>\r\n  <p>If you develop non-synchronized <b>Dispose</b> implementations, the <b>Dispose</b> code could be called more than once on separate threads. The following code shows an example of this.</p>\r\n  <div>\r\n    <pre>void Dispose()&#123;<br />  if (null &#33;= theObject)<br />  &#123;<br />    ReleaseResources(theObject);<br />    theObject = null;<br />  &#125;<br />&#125;</pre>\r\n  </div>\r\n  <p>In this example, it is possible for two threads to execute the code before the first thread has set <b>theObject</b> reference to <b>null</b>. Depending on the functionality provided by the <b>ReleaseResources</b> method, security vulnerabilities could occur.</p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
        ]
      }
    ]
  }
}