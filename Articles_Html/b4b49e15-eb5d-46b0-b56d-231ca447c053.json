{
  "id": "b4b49e15-eb5d-46b0-b56d-231ca447c053",
  "checksum": "38fcbbfb1ddf8df028e394c888d1f661a5273d79",
  "words": {
    "56": [
      "ol",
      "li",
      "p"
    ],
    "128": [
      "ol",
      "li",
      "p"
    ],
    "192": [
      "ol",
      "li",
      "p"
    ],
    "256": [
      "ol",
      "li",
      "p"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "h2",
      "p",
      "p",
      "h2",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h1",
      "ol",
      "li",
      "p"
    ],
    "avoid": [
      "p",
      "title"
    ],
    "storing": [
      "p",
      "title"
    ],
    "sensitive": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "title"
    ],
    "data": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p",
      "title"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "table",
      "table",
      "tbody",
      "tbody",
      "tr",
      "th",
      "tr",
      "th",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "viewstate&nbsp;": [
      "p",
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "need": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "manage": [
      "p"
    ],
    "maintain": [
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "on": [
      "p",
      "table",
      "tbody",
      "tr",
      "th",
      "h2",
      "p",
      "ol",
      "li"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "h2",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "server": [
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p"
    ],
    "for": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "example": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "h1",
      "h1"
    ],
    "session": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "state&nbsp;": [
      "p"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "viewstate": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "h2",
      "p",
      "h2",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "title"
    ],
    "does": [
      "p",
      "p",
      "p"
    ],
    "contain": [
      "p"
    ],
    "should&nbspencrypt": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "although": [
      "p",
      "p"
    ],
    "protect": [
      "p"
    ],
    "against": [
      "p",
      "p"
    ],
    "tampering": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "default": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "not": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "provide": [
      "p"
    ],
    "any": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "protection": [
      "p"
    ],
    "information": [
      "p",
      "p",
      "p"
    ],
    "disclosure": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "thus": [
      "p",
      "p"
    ],
    "should": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "used": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "data&nbsp;": [
      "p"
    ],
    "encryption": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "added": [
      "p",
      "p"
    ],
    "but": [
      "p"
    ],
    "there": [
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "a&nbsplarge": [
      "p"
    ],
    "performance": [
      "p"
    ],
    "overhead": [
      "p"
    ],
    "doing": [
      "p"
    ],
    "so": [
      "p"
    ],
    "both": [
      "p"
    ],
    "terms": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "cpu": [
      "p"
    ],
    "usage": [
      "p"
    ],
    "size": [
      "p"
    ],
    "resulting": [
      "p"
    ],
    "best": [
      "p"
    ],
    "option": [
      "p"
    ],
    "ensure": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "no": [
      "p"
    ],
    "when": [
      "h1"
    ],
    "stored": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "data&nbspmust": [
      "p"
    ],
    "some": [
      "p"
    ],
    "reason": [
      "p"
    ],
    "encrypted": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "how": [
      "h1"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "blob": [
      "p"
    ],
    "base-64": [
      "p"
    ],
    "encoded": [
      "p"
    ],
    "submitted": [
      "p",
      "p"
    ],
    "as": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li"
    ],
    "hidden": [
      "p"
    ],
    "form": [
      "p"
    ],
    "element": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li"
    ],
    "aspnet": [
      "p",
      "p"
    ],
    "controls&nbsp;": [
      "p"
    ],
    "view": [
      "p",
      "p",
      "p"
    ],
    "looking": [
      "p"
    ],
    "at": [
      "p",
      "p"
    ],
    "page": [
      "p",
      "p",
      "table",
      "table",
      "tbody",
      "tbody",
      "tr",
      "tr",
      "th",
      "td",
      "pre",
      "ol",
      "li",
      "p"
    ],
    "source": [
      "p"
    ],
    "or": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "using": [
      "p",
      "p"
    ],
    "tracing&nbsp;": [
      "p"
    ],
    "state": [
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "follow": [
      "p"
    ],
    "these": [
      "p"
    ],
    "steps": [
      "p"
    ],
    "examine": [
      "ol",
      "li",
      "p"
    ],
    "all": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "li",
      "p"
    ],
    "placed": [
      "ol",
      "li",
      "p"
    ],
    "either": [
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "alone": [
      "ol",
      "li",
      "p"
    ],
    "combination": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "other": [
      "ol",
      "li",
      "p"
    ],
    "move": [
      "ol",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "server-side": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "variables": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "cannot": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "moved": [
      "ol",
      "li",
      "p"
    ],
    "encrypt": [
      "ol",
      "li",
      "p",
      "h2",
      "ol",
      "li",
      "p"
    ],
    "turn": [
      "h2",
      "p"
    ],
    "off": [
      "h2",
      "p"
    ],
    "you're": [
      "p"
    ],
    "don't": [
      "p"
    ],
    "want": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "persisted": [
      "p"
    ],
    "accidentally,": [
      "p"
    ],
    "tag": [
      "p",
      "table",
      "tbody",
      "tr",
      "th"
    ],
    "application": [
      "p",
      "table",
      "tbody",
      "tr",
      "th",
      "ol",
      "li",
      "p"
    ],
    "levels": [
      "p"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li"
    ],
    "code": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "per": [
      "table",
      "table",
      "table",
      "tbody",
      "tbody",
      "tbody",
      "tr",
      "th",
      "tr",
      "th",
      "tr",
      "th"
    ],
    "control": [
      "table",
      "tbody",
      "tr",
      "th"
    ],
    "asp:datagrid": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "enableviewstate=\"false\"": [
      "table",
      "table",
      "table",
      "tbody",
      "tbody",
      "tbody",
      "tr",
      "td",
      "pre",
      "tr",
      "td",
      "pre",
      "tr",
      "td",
      "pre"
    ],
    "..": [
      "table",
      "table",
      "table",
      "tbody",
      "tbody",
      "tbody",
      "tr",
      "td",
      "pre",
      "tr",
      "td",
      "pre",
      "tr",
      "td",
      "pre",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "/": [
      "table",
      "table",
      "tbody",
      "tbody",
      "tr",
      "td",
      "pre",
      "tr",
      "td",
      "pre",
      "ol",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "directive": [
      "table",
      "tbody",
      "tr",
      "th"
    ],
    "%@": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "%": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "webconfig)": [
      "table",
      "tbody",
      "tr",
      "th"
    ],
    "pages": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "store": [
      "h2",
      "p"
    ],
    "side": [
      "h2",
      "p",
      "p"
    ],
    "use": [
      "p",
      "ol",
      "li"
    ],
    "sessionstatemodule": [
      "p",
      "strong"
    ],
    "class": [
      "p"
    ],
    "whose": [
      "p"
    ],
    "contents": [
      "p",
      "strong"
    ],
    "collection": [
      "p"
    ],
    "allows": [
      "p"
    ],
    "objects": [
      "p"
    ],
    "retrieve": [
      "p"
    ],
    "easily&nbsp;": [
      "p"
    ],
    "in-process": [
      "p"
    ],
    "seperate": [
      "p"
    ],
    "sql": [
      "p"
    ],
    "allowing": [
      "p"
    ],
    "flexibility": [
      "p"
    ],
    "across": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "variety": [
      "p"
    ],
    "configurations": [
      "p"
    ],
    "check": [
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "viewstateencryptionmode": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "p",
      "b"
    ],
    "attribute": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p"
    ],
    "pages>": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "p",
      "b"
    ],
    "set": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "always": [
      "ol",
      "li",
      "b"
    ],
    "shown": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p"
    ],
    "viewstateencryptionmode=\"always\"": [
      "ol",
      "li",
      "pre"
    ],
    "/if": [
      "ol",
      "li"
    ],
    "every": [
      "ol",
      "li",
      "p"
    ],
    "auto": [
      "ol",
      "li",
      "p",
      "b"
    ],
    "viewstateencryptionmode=\"auto\"": [
      "ol",
      "li",
      "pre"
    ],
    "then": [
      "ol",
      "li",
      "p"
    ],
    "from": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "within": [
      "ol",
      "li",
      "p"
    ],
    "call": [
      "ol",
      "li",
      "p"
    ],
    "registerrequiresviewstateencryption": [
      "ol",
      "li",
      "p",
      "b"
    ],
    "method": [
      "ol",
      "li",
      "p"
    ],
    "pageregisterrequiresviewstateencryption();": [
      "ol",
      "li",
      "pre"
    ],
    "specify": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "algorithm": [
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "validation": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "p",
      "b"
    ],
    "machinekey": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "validation=\"aes\"": [
      "ol",
      "li",
      "pre"
    ],
    "/the": [
      "ol",
      "li"
    ],
    "overloaded": [
      "ol",
      "li",
      "p"
    ],
    "hashing": [
      "ol",
      "li",
      "p"
    ],
    "algorithm&nbsp;": [
      "ol",
      "li",
      "p"
    ],
    "3des": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "b",
      "b"
    ],
    "aes&nbsp;": [
      "ol",
      "li",
      "p"
    ],
    "because": [
      "ol",
      "li",
      "p"
    ],
    "aes": [
      "ol",
      "li",
      "p",
      "b",
      "b"
    ],
    "offers": [
      "ol",
      "li",
      "p"
    ],
    "larger": [
      "ol",
      "li",
      "p"
    ],
    "key": [
      "ol",
      "li",
      "p"
    ],
    "sizes": [
      "ol",
      "li",
      "p"
    ],
    "bits": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "than": [
      "ol",
      "li",
      "p"
    ],
    "bits,": [
      "ol",
      "li",
      "p"
    ],
    "considered": [
      "ol",
      "li",
      "p"
    ],
    "more": [
      "ol",
      "li",
      "p"
    ],
    "secure": [
      "ol",
      "li",
      "p"
    ],
    "review": [
      "ol",
      "li"
    ],
    "decryptionkey": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "b",
      "p",
      "p",
      "b",
      "strong"
    ],
    "validationkey": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "p",
      "strong",
      "b"
    ],
    "machinekey>": [
      "ol",
      "li",
      "b"
    ],
    "validationkey=\"autogenerateisolateapps\"": [
      "ol",
      "li",
      "pre"
    ],
    "decryptionkey=\"autogenerateisolateapps\"": [
      "ol",
      "li",
      "pre"
    ],
    "/unless": [
      "ol",
      "li"
    ],
    "installed": [
      "ol",
      "li",
      "p"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "farm": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "leave": [
      "ol",
      "li",
      "p"
    ],
    "values": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "manually": [
      "ol",
      "li",
      "p"
    ],
    "value—these": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p"
    ],
    "machines": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "unless": [
      "p"
    ],
    "problem": [
      "h1"
    ],
    "an": [
      "p",
      "p",
      "p"
    ],
    "e-commerce": [
      "p",
      "p"
    ],
    "site": [
      "p",
      "p"
    ],
    "sends": [
      "p"
    ],
    "billing": [
      "p",
      "p",
      "p"
    ],
    "details": [
      "p",
      "p",
      "p"
    ],
    "including": [
      "p"
    ],
    "order": [
      "p"
    ],
    "amounts": [
      "p"
    ],
    "non-public)": [
      "p"
    ],
    "discount": [
      "p",
      "p"
    ],
    "percentages": [
      "p"
    ],
    "round-trip": [
      "p"
    ],
    "through": [
      "p"
    ],
    "user's": [
      "p"
    ],
    "browser&nbsp;": [
      "p"
    ],
    "this": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "extract": [
      "p"
    ],
    "they": [
      "p",
      "p"
    ],
    "modify": [
      "p",
      "p"
    ],
    "it&nbsp;": [
      "p"
    ],
    "their": [
      "p"
    ],
    "competitors": [
      "p"
    ],
    "learn": [
      "p"
    ],
    "site's": [
      "p"
    ],
    "structure": [
      "p"
    ],
    "without": [
      "p"
    ],
    "having": [
      "p"
    ],
    "compromise": [
      "p"
    ],
    "solution": [
      "h1"
    ],
    "keeps": [
      "p"
    ],
    "after": [
      "p"
    ],
    "have": [
      "p"
    ],
    "been": [
      "p"
    ],
    "initially": [
      "p"
    ],
    "user": [
      "p"
    ],
    "protects": [
      "p"
    ],
    "appropriately&nbsp;": [
      "p"
    ],
    "attackers": [
      "p"
    ],
    "are": [
      "p"
    ],
    "unable": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "sink]": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How",
      "Problem Example",
      "Solution Example"
    ],
    "p": [
      "Avoid storing sensitive data in ViewState.&nbsp; If you need to manage sensitive data, maintain it on the server; for example, maintain it in session state.&nbsp; If your ViewState does contain sensitive data, you should&nbsp;encrypt ViewState.",
      "Although it does protect against tampering, by default, the ViewState does not provide any protection against information disclosure, and thus should not be used for sensitive data.&nbsp; Encryption can be added to the ViewState, but there is a&nbsp;large performance overhead to doing so, both in terms of CPU usage for encryption and the size of the resulting ViewState; the best option is to ensure that no sensitive data is in the ViewState.",
      "Sensitive data should not be stored in the ViewState.&nbsp; If sensitive data&nbsp;must be stored in ViewState for some reason, it should be encrypted.",
      "The ViewState is a blob of base-64 encoded data stored and submitted as a hidden form element by ASP.NET controls.&nbsp; You can view it by looking at the page source or by using ASP.NET tracing.&nbsp; To ensure that sensitive data is not stored in the view state, follow these steps:",
      "Examine all data which is being placed in the ViewState and ensure that it is not sensitive, either alone or in combination with other data.",
      "Move any sensitive data into server-side session variables.",
      "If data cannot be moved into server-side session variables, encrypt the ViewState.",
      "If you're not using the ViewState (or don't want sensitive data to be persisted accidentally), you can turn it off at either the tag, page, or application levels with the following code:",
      "To store session state on the server side, you can use the SessionStateModule class, whose Contents collection allows for session objects to be added and retrieve easily.&nbsp; Server-side session state can be stored either in-process, in a seperate state server, or in a SQL server, allowing for flexibility across a variety of configurations",
      "If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example.",
      "Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example.",
      "The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm.&nbsp; You can specify either 3DES or AES.&nbsp; Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES (56 bits), it is considered more secure and should be used.",
      "Unless your application is installed in a Web farm, you should leave the decryptionKey and validationKey attribute with the default values shown in the example. To encrypt ViewState in a web farm, you need to manually set the validationKey and decryptionKey value—these values should be same across all machines in the web farm",
      "An e-commerce site sends billing details, including order amounts and (non-public) discount percentages round-trip through the user's browser.&nbsp; All of this information is stored in a ViewState.&nbsp; An attacker can extract all of the information in the ViewState, although they cannot modify it.&nbsp; Thus, their competitors can learn the site's discount structure without having to compromise any server side machines.",
      "",
      "An e-commerce site keeps all billing details in server-side session state after they have been initially submitted by the user, and protects that session state appropriately.&nbsp; Attackers are unable to either view or modify billing details.",
      "",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Examine all data which is being placed in the ViewState and ensure that it is not sensitive, either alone or in combination with other data.\n    \n    \n      Move any sensitive data into server-side session variables.\n    \n    \n      If data cannot be moved into server-side session variables, encrypt the ViewState.",
      "Check that the viewStateEncryptionMode attribute of the <pages> element is set to Always, as shown in the following example. <pages ... viewStateEncryptionMode=\"Always\" ... />If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example. <pages ... viewStateEncryptionMode=\"Auto\" ... />   Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example. Page.RegisterRequiresViewStateEncryption();\n    Specify the encryption algorithm to use on the validation attribute, as shown in the following example. <machineKey ... validation=\"AES\" ... />The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm.&nbsp; You can specify either 3DES or AES.&nbsp; Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES (56 bits), it is considered more secure and should be used.\n    Review the decryptionKey and validationKey attribute of the <machineKey> element: <machineKey validationKey=\"AutoGenerate,IsolateApps\"   decryptionKey=\"AutoGenerate,IsolateApps\"   ... />Unless your application is installed in a Web farm, you should leave the decryptionKey and validationKey attribute with the default values shown in the example. To encrypt ViewState in a web farm, you need to manually set the validationKey and decryptionKey value—these values should be same across all machines in the web farm"
    ],
    "li": [
      "Examine all data which is being placed in the ViewState and ensure that it is not sensitive, either alone or in combination with other data.",
      "Move any sensitive data into server-side session variables.",
      "If data cannot be moved into server-side session variables, encrypt the ViewState.",
      "Check that the viewStateEncryptionMode attribute of the <pages> element is set to Always, as shown in the following example. <pages ... viewStateEncryptionMode=\"Always\" ... />If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example. <pages ... viewStateEncryptionMode=\"Auto\" ... />   Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example. Page.RegisterRequiresViewStateEncryption();",
      "Specify the encryption algorithm to use on the validation attribute, as shown in the following example. <machineKey ... validation=\"AES\" ... />The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm.&nbsp; You can specify either 3DES or AES.&nbsp; Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES (56 bits), it is considered more secure and should be used.",
      "Review the decryptionKey and validationKey attribute of the <machineKey> element: <machineKey validationKey=\"AutoGenerate,IsolateApps\"   decryptionKey=\"AutoGenerate,IsolateApps\"   ... />Unless your application is installed in a Web farm, you should leave the decryptionKey and validationKey attribute with the default values shown in the example. To encrypt ViewState in a web farm, you need to manually set the validationKey and decryptionKey value—these values should be same across all machines in the web farm"
    ],
    "h2": [
      "To Turn off the ViewState",
      "To Store Session State on the Server Side",
      "To Encrypt the ViewState:"
    ],
    "table": [
      "Per control (on tag)\n        \n          <asp:datagrid EnableViewState=\"false\" ... />\n        \n      \n      \n        Per page (in directive)\n        \n          <%@ Page EnableViewState=\"False\" ... %>\n        \n      \n      \n        Per application (in web.config)\n        \n          <Pages EnableViewState=\"false\" ... />"
    ],
    "tbody": [
      "Per control (on tag)\n        \n          <asp:datagrid EnableViewState=\"false\" ... />\n        \n      \n      \n        Per page (in directive)\n        \n          <%@ Page EnableViewState=\"False\" ... %>\n        \n      \n      \n        Per application (in web.config)\n        \n          <Pages EnableViewState=\"false\" ... />"
    ],
    "tr": [
      "Per control (on tag)\n        \n          <asp:datagrid EnableViewState=\"false\" ... />",
      "Per page (in directive)\n        \n          <%@ Page EnableViewState=\"False\" ... %>",
      "Per application (in web.config)\n        \n          <Pages EnableViewState=\"false\" ... />"
    ],
    "th": [
      "Per control (on tag)",
      "Per page (in directive)",
      "Per application (in web.config)"
    ],
    "td": [
      "<asp:datagrid EnableViewState=\"false\" ... />",
      "<%@ Page EnableViewState=\"False\" ... %>",
      "<Pages EnableViewState=\"false\" ... />"
    ],
    "pre": [
      "<asp:datagrid EnableViewState=\"false\" ... />",
      "<%@ Page EnableViewState=\"False\" ... %>",
      "<Pages EnableViewState=\"false\" ... />",
      "<pages ... viewStateEncryptionMode=\"Always\" ... />",
      "<pages ... viewStateEncryptionMode=\"Auto\" ... />",
      "Page.RegisterRequiresViewStateEncryption();",
      "<machineKey ... validation=\"AES\" ... />",
      "<machineKey validationKey=\"AutoGenerate,IsolateApps\"   decryptionKey=\"AutoGenerate,IsolateApps\"   ... />"
    ],
    "strong": [
      "SessionStateModule",
      "Contents",
      "validationKey",
      "validationKey",
      "decryptionKey"
    ],
    "b": [
      "viewStateEncryptionMode",
      "<pages>",
      "Always",
      "viewStateEncryptionMode",
      "<pages>",
      "Auto",
      "RegisterRequiresViewStateEncryption",
      "validation",
      "validation",
      "3DES",
      "AES",
      "AES",
      "3DES",
      "decryptionKey",
      "<machineKey>",
      "decryptionKey",
      "validationKey"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Do</h1>\n  <p>Avoid storing sensitive data in ViewState.&amp;nbsp; If you need to manage sensitive data, maintain it on the server; for example, maintain it in session state.&amp;nbsp; If your ViewState does contain sensitive data, you should&amp;nbsp;encrypt ViewState. </p>\n  <h1>Why</h1>\n  <p>Although it does protect against tampering, by default, the ViewState does not provide any protection against information disclosure, and thus should not be used for sensitive data.&amp;nbsp; Encryption can be added to the ViewState, but there is a&amp;nbsp;large performance overhead to doing so, both in terms of CPU usage for encryption and the size of the resulting ViewState; the best option is to ensure that no sensitive data is in the ViewState. </p>\n  <h1>When</h1>\n  <p>Sensitive data should not be stored in the ViewState.&amp;nbsp; If sensitive data&amp;nbsp;must be stored in ViewState for some reason, it should be encrypted.</p>\n  <h1>How</h1>\n  <p>The ViewState is a blob of base-64 encoded data stored and submitted as a hidden form element by ASP.NET controls.&amp;nbsp; You can view it by looking at the page source or by using ASP.NET tracing.&amp;nbsp; To ensure that sensitive data is not stored in the view state, follow these steps:</p>\n  <ol>\n    <li>\n      <p>Examine all data which is being placed in the ViewState and ensure that it is not sensitive, either alone or in combination with other data.</p>\n    </li>\n    <li>\n      <p>Move any sensitive data into server-side session variables.</p>\n    </li>\n    <li>\n      <p>If data cannot be moved into server-side session variables, encrypt the ViewState.</p>\n    </li>\n  </ol>\n  <h2>To Turn off the ViewState</h2>\n  <p>If you're not using the ViewState (or don't want sensitive data to be persisted accidentally), you can turn it off at either the tag, page, or application levels with the following code:</p>\n  <table>\n    <tbody>\n      <tr>\n        <th>Per control (on tag)</th>\n        <td>\n          <pre>&lt;asp:datagrid EnableViewState=\"false\" ... /&gt;</pre>\n        </td>\n      </tr>\n      <tr>\n        <th>Per page (in directive)</th>\n        <td>\n          <pre>&lt;%@ Page EnableViewState=\"False\" ... %&gt;</pre>\n        </td>\n      </tr>\n      <tr>\n        <th>Per application (in web.config)</th>\n        <td>\n          <pre>&lt;Pages EnableViewState=\"false\" ... /&gt;</pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2>To Store Session State on the Server Side</h2>\n  <p>To store session state on the server side, you can use the <strong>SessionStateModule</strong> class, whose <strong>Contents</strong> collection allows for session objects to be added and retrieve easily.&amp;nbsp; Server-side session state can be stored either in-process, in a seperate state server, or in a SQL server, allowing for flexibility across a variety of configurations</p>\n  <h2>To Encrypt the ViewState:</h2>\n  <ol>\n    <li>Check that the <b>viewStateEncryptionMode</b> attribute of the <b>&lt;pages&gt;</b> element is set to <b>Always</b>, as shown in the following example. <pre>&lt;pages<br /> ...<br /> viewStateEncryptionMode=\"Always\"<br /> ...<br /> /&gt;</pre><p>If you do not want every page to used encrypted ViewState, check that the <b>viewStateEncryptionMode</b> attribute of the <b>&lt;pages&gt;</b> element is set to <b>Auto</b>, as shown in the following example. </p><pre>&lt;pages<br /> ...<br /> viewStateEncryptionMode=\"Auto\"<br /> ...<br /> /&gt;   </pre><p>Then, from within your code, call the <b>RegisterRequiresViewStateEncryption</b> method as shown in the following example. </p><pre>Page.RegisterRequiresViewStateEncryption();</pre></li>\n    <li>Specify the encryption algorithm to use on the <b>validation</b> attribute, as shown in the following example. <pre>&lt;machineKey<br /> ...<br /> validation=\"AES\"<br /> ...<br /> /&gt;</pre><p>The <b>validation</b> attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm.&amp;nbsp; You can specify either <b>3DES</b> or <b>AES</b>.&amp;nbsp; Because <b>AES</b> offers larger key sizes (128 bits, 192 bits, or 256 bits) than <b>3DES</b> (56 bits), it is considered more secure and should be used.</p></li>\n    <li>Review the <b>decryptionKey</b> and <strong>validationKey</strong> attribute of the <b>&lt;machineKey&gt;</b> element: <pre>&lt;machineKey<br /> validationKey=\"AutoGenerate,IsolateApps\"<br />   decryptionKey=\"AutoGenerate,IsolateApps\"<br />   ...<br /> /&gt;</pre><p>Unless your application is installed in a Web farm, you should leave the <b>decryptionKey</b> and <strong>validationKey</strong> attribute with the default values shown in the example. To encrypt ViewState in a web farm, you need to manually set the <b>validationKey</b> and <strong>decryptionKey</strong> value—these values should be same across all machines in the web farm</p></li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>An e-commerce site sends billing details, including order amounts and (non-public) discount percentages round-trip through the user's browser.&amp;nbsp; All of this information is stored in a ViewState.&amp;nbsp; An attacker can extract all of the information in the ViewState, although they cannot modify it.&amp;nbsp; Thus, their competitors can learn the site's discount structure without having to compromise any server side machines. </p>\n  <p />\n  <h1>Solution Example</h1>\n  <p>An e-commerce site keeps all billing details in server-side session state after they have been initially submitted by the user, and protects that session state appropriately.&amp;nbsp; Attackers are unable to either view or modify billing details.</p>\n  <p />\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
}