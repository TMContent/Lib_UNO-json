{
  "id": "00000000-0000-0000-0000-0000004f4246",
  "checksum": "de470ed1927bfd7d1e088ab69151432d635934a7",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "php": [
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2",
      "title"
    ],
    "use": [
      "p"
    ],
    "session": [
      "p",
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "li"
    ],
    "handling": [
      "p",
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "li"
    ],
    "prevent": [
      "p",
      "p"
    ],
    "storing": [
      "p",
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "data": [
      "p",
      "p",
      "ol",
      "li",
      "strong",
      "title"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "title"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "title"
    ],
    "accessible": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "title"
    ],
    "parameters": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "why": [
      "h2"
    ],
    "placing": [
      "p"
    ],
    "information": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "allows": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p"
    ],
    "recover": [
      "p"
    ],
    "and/or": [
      "p"
    ],
    "tamper": [
      "p"
    ],
    "with": [
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "for": [
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "example": [
      "p"
    ],
    "if": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "stores": [
      "p",
      "ol",
      "li"
    ],
    "users'": [
      "p"
    ],
    "group": [
      "p",
      "p"
    ],
    "membership": [
      "p"
    ],
    "url": [
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "easily": [
      "p"
    ],
    "assign": [
      "p"
    ],
    "himself": [
      "p",
      "p"
    ],
    "whatever": [
      "p"
    ],
    "he": [
      "p"
    ],
    "chooses": [
      "p"
    ],
    "usually": [
      "p"
    ],
    "making": [
      "p"
    ],
    "admin": [
      "p"
    ],
    "and": [
      "p"
    ],
    "taking": [
      "p"
    ],
    "over": [
      "p"
    ],
    "this": [
      "p"
    ],
    "used": [
      "p"
    ],
    "be": [
      "p",
      "p"
    ],
    "a": [
      "p"
    ],
    "surprisingly": [
      "p"
    ],
    "common": [
      "p"
    ],
    "vulnerability": [
      "p"
    ],
    "during": [
      "p"
    ],
    "early": [
      "p"
    ],
    "days": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p"
    ],
    "web": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "other": [
      "p"
    ],
    "possible": [
      "p",
      "p"
    ],
    "vulnerabilities": [
      "p",
      "p",
      "p"
    ],
    "include": [
      "p"
    ],
    "allowing": [
      "p"
    ],
    "retrieve": [
      "p"
    ],
    "from": [
      "p"
    ],
    "using": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "man-in-the-middle": [
      "p"
    ],
    "attacks": [
      "p"
    ],
    "exact": [
      "p"
    ],
    "nature": [
      "p"
    ],
    "depends": [
      "p"
    ],
    "on": [
      "p"
    ],
    "type": [
      "p"
    ],
    "is": [
      "p",
      "ol",
      "li"
    ],
    "stored": [
      "p"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "these": [
      "p"
    ],
    "prevented": [
      "p"
    ],
    "by": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "identify": [
      "ol",
      "li",
      "strong"
    ],
    "contain": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "security": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "implications": [
      "ol",
      "li",
      "strong"
    ],
    "review": [
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "find": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "may": [
      "ol",
      "li"
    ],
    "handles": [
      "ol",
      "li",
      "strong"
    ],
    "responsible": [
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "li"
    ],
    "parameter": [
      "ol",
      "li"
    ],
    "contains": [
      "ol",
      "li"
    ],
    "replace": [
      "ol",
      "li",
      "strong"
    ],
    "user-accessible": [
      "ol",
      "li",
      "strong"
    ],
    "rewrite": [
      "ol",
      "li"
    ],
    "store": [
      "ol",
      "li",
      "title"
    ],
    "it": [
      "ol",
      "li"
    ],
    "sessions": [
      "ol",
      "li"
    ],
    "instead": [
      "ol",
      "li"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//php.net/manual/en/book.session.php": [
      "ul",
      "li",
      "a"
    ],
    "not": [
      "title"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How",
      "Additional Resources"
    ],
    "ul": [
      "PHP",
      "For more information about PHP session handling, see http://php.net/manual/en/book.session.php"
    ],
    "li": [
      "PHP",
      "Identify all parameters that contain data with security implications. Review the application code to find all parameters that may contain sensitive information.",
      "Find code that handles security sensitive parameters. Find the code that is responsible for each user accessible parameter that contains sensitive information.",
      "Replace sensitive user-accessible parameters with PHP session handling. Rewrite the code that stores sensitive information in user accessible parameters to store it using PHP sessions instead.",
      "For more information about PHP session handling, see http://php.net/manual/en/book.session.php"
    ],
    "p": [
      "Use PHP session handling to prevent storing sensitive data in user accessible parameters.",
      "Placing sensitive information in user accessible parameters allows an attacker to recover and/or tamper with that information. For example, if the application stores the users' group membership information in the URL, the attacker can easily assign himself to whatever group he chooses, usually making himself an admin and taking over the application. This used to be a surprisingly common vulnerability during the early days of web applications. Other possible vulnerabilities include allowing an attacker to retrieve sensitive information from parameters using man-in-the-middle attacks. The exact nature of possible vulnerabilities depends on the type of sensitive information that is stored in user accessible parameters. All of these vulnerabilities can be prevented by using PHP session handling.",
      "To prevent storing sensitive data in user accessible parameters:"
    ],
    "ol": [
      "Identify all parameters that contain data with security implications. Review the application code to find all parameters that may contain sensitive information. \n Find code that handles security sensitive parameters. Find the code that is responsible for each user accessible parameter that contains sensitive information.\n Replace sensitive user-accessible parameters with PHP session handling. Rewrite the code that stores sensitive information in user accessible parameters to store it using PHP sessions instead."
    ],
    "strong": [
      "Identify all parameters that contain data with security implications.",
      "Find code that handles security sensitive parameters.",
      "Replace sensitive user-accessible parameters with PHP session handling."
    ],
    "a": [
      "http://php.net/manual/en/book.session.php"
    ]
  },
  "links": [
    {
      "href": "http://php.net/manual/en/book.session.php",
      "text": "http://php.net/manual/en/book.session.php"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> PHP</li>\n</ul><h2>What to Do</h2><p>Use PHP session handling to prevent storing sensitive data in user accessible parameters.\n</p><h2>Why</h2><p>Placing sensitive information in user accessible parameters allows an attacker to recover and/or tamper with that information. For example, if the application stores the users' group membership information in the URL, the attacker can easily assign himself to whatever group he chooses, usually making himself an admin and taking over the application. This used to be a surprisingly common vulnerability during the early days of web applications. Other possible vulnerabilities include allowing an attacker to retrieve sensitive information from parameters using man-in-the-middle attacks. The exact nature of possible vulnerabilities depends on the type of sensitive information that is stored in user accessible parameters. All of these vulnerabilities can be prevented by using PHP session handling.\n</p><h2>How</h2><p>To prevent storing sensitive data in user accessible parameters:\n</p><ol>\n<li> <strong>Identify all parameters that contain data with security implications.</strong> Review the application code to find all parameters that may contain sensitive information. </li>\n<li> <strong>Find code that handles security sensitive parameters.</strong> Find the code that is responsible for each user accessible parameter that contains sensitive information.</li>\n<li> <strong>Replace sensitive user-accessible parameters with PHP session handling.</strong> Rewrite the code that stores sensitive information in user accessible parameters to store it using PHP sessions instead. </li>\n</ol><h2>Additional Resources</h2><ul><li> For more information about PHP session handling, see <a href=\"http://php.net/manual/en/book.session.php\">http://php.net/manual/en/book.session.php</a></li>\n</ul>"
}