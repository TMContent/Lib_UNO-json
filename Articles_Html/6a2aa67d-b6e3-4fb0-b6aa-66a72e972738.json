{
  "id": "6a2aa67d-b6e3-4fb0-b6aa-66a72e972738",
  "checksum": "a2014c6186e6a14831e82b2a6c3349cf84555b8a",
  "words": {
    "1": [
      "ul",
      "li",
      "h1",
      "h2",
      "em",
      "ol",
      "li"
    ],
    "2": [
      "ul",
      "li",
      "h2",
      "em",
      "h1",
      "p",
      "ol",
      "li"
    ],
    "3": [
      "ul",
      "li",
      "h2",
      "em",
      "h1",
      "p"
    ],
    "4": [
      "h2",
      "em",
      "ol",
      "li",
      "p",
      "p"
    ],
    "128": [
      "p"
    ],
    "applies": [
      "h1",
      "p"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "i",
      "i",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "computer": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "networks": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p"
    ],
    "summary": [
      "h1"
    ],
    "network": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "eavesdropping": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "title"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "sniffing": [
      "p",
      "ul",
      "li",
      "h2",
      "em",
      "p"
    ],
    "attacks": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p"
    ],
    "consist": [
      "p",
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "intercepting": [
      "p"
    ],
    "traffic": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "between": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "two": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "target": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "nodes": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "and": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "capturing": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "p"
    ],
    "packets": [
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li"
    ],
    "exchanged": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "attackers": [
      "p"
    ],
    "commonly": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "vulnerability": [
      "p"
    ],
    "retrieve": [
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "information": [
      "p",
      "p",
      "p"
    ],
    "including": [
      "p",
      "p"
    ],
    "users’": [
      "p"
    ],
    "passwords": [
      "p",
      "p"
    ],
    "attack": [
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "applicable": [
      "p"
    ],
    "different": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "types": [
      "p"
    ],
    "environments": [
      "p"
    ],
    "local": [
      "p",
      "p",
      "p"
    ],
    "area": [
      "p",
      "p",
      "p"
    ],
    "lans)": [
      "p"
    ],
    "interconnected": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "hubs": [
      "p",
      "ul",
      "li",
      "h2",
      "em",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p"
    ],
    "switches": [
      "p",
      "p",
      "p"
    ],
    "as": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "well": [
      "p",
      "p"
    ],
    "wireless": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "wlans).": [
      "p"
    ],
    "follow": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "these": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "steps": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "test": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "i",
      "i",
      "h1",
      "p",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "title"
    ],
    "for": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "i",
      "i",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "bugs": [
      "p",
      "p",
      "p",
      "i",
      "i",
      "title"
    ],
    "step": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h1",
      "h1",
      "h1",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "understand": [
      "ul",
      "li",
      "h1",
      "p",
      "p"
    ],
    "scenarios": [
      "ul",
      "li",
      "h1",
      "p"
    ],
    "analyze": [
      "ul",
      "li",
      "h1"
    ],
    "causes": [
      "ul",
      "li",
      "h1"
    ],
    "countermeasures": [
      "ul",
      "li",
      "h1"
    ],
    "execute": [
      "ul",
      "li",
      "p",
      "h1",
      "p"
    ],
    "cases": [
      "ul",
      "li",
      "h1",
      "p",
      "ol",
      "li"
    ],
    "first": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "necessary": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "the": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "related": [
      "p"
    ],
    "bug": [
      "p"
    ],
    "using": [
      "ul",
      "li",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p"
    ],
    "switched": [
      "ul",
      "li",
      "p",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p"
    ],
    "wlan": [
      "ul",
      "li",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "on": [
      "ul",
      "li",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "internet": [
      "ul",
      "li",
      "h2",
      "em",
      "p",
      "p",
      "p"
    ],
    "scenario": [
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "hub": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "work": [
      "p",
      "p"
    ],
    "broadcasting": [
      "p",
      "p"
    ],
    "every": [
      "p",
      "p"
    ],
    "frame": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "host": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "connected": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "upon": [
      "p"
    ],
    "receiving": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "h2",
      "em",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "from": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "each": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "checks": [
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "addressed": [
      "p",
      "p"
    ],
    "processes": [
      "p"
    ],
    "it’s": [
      "p"
    ],
    "not": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "ignores": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "simply": [
      "p"
    ],
    "needs": [
      "p",
      "p",
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "same": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "then": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "starts": [
      "p",
      "p"
    ],
    "monitoring": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "promiscuous": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "mode": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "all": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "sent": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "detail": [
      "p",
      "p"
    ],
    "connects": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "one": [
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "executes": [
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "tool": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "capture": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "hosts": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "b",
      "li"
    ],
    "switch-based": [
      "h2",
      "em"
    ],
    "lans": [
      "h2",
      "em"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "than": [
      "p"
    ],
    "hub-based": [
      "p"
    ],
    "because": [
      "p",
      "p",
      "p",
      "p"
    ],
    "they": [
      "p",
      "p",
      "p"
    ],
    "don’t": [
      "p"
    ],
    "principle": [
      "p"
    ],
    "broadcasts": [
      "p"
    ],
    "instead": [
      "p",
      "p"
    ],
    "switch": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "sends": [
      "p"
    ],
    "frames": [
      "p",
      "p"
    ],
    "independently": [
      "p"
    ],
    "depending": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "recipient": [
      "p",
      "p"
    ],
    "therefore": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "extra": [
      "p",
      "p"
    ],
    "condition": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "besides": [
      "p"
    ],
    "being": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "order": [
      "p",
      "p"
    ],
    "redirect": [
      "p"
    ],
    "through": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "common": [
      "p"
    ],
    "way": [
      "p",
      "p",
      "p"
    ],
    "meet": [
      "p"
    ],
    "arp": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "i",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "poisoning": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "i",
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "p",
      "p"
    ],
    "although": [
      "p"
    ],
    "other": [
      "p",
      "p",
      "p"
    ],
    "such": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "dhcp": [
      "p",
      "p"
    ],
    "spoofing": [
      "p",
      "p",
      "p",
      "p"
    ],
    "port": [
      "p",
      "p"
    ],
    "stealing": [
      "p",
      "p"
    ],
    "dns": [
      "p",
      "p",
      "p"
    ],
    "also": [
      "p"
    ],
    "possible": [
      "p",
      "p"
    ],
    "that": [
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "duplicates/redirects": [
      "ol",
      "li"
    ],
    "node": [
      "ol",
      "li"
    ],
    "uses": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "wlans)": [
      "p"
    ],
    "set": [
      "p",
      "p",
      "p",
      "p"
    ],
    "computers": [
      "p",
      "p",
      "p"
    ],
    "radio": [
      "p"
    ],
    "waves": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "point": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "base": [
      "p"
    ],
    "station,": [
      "p"
    ],
    "which": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "turn": [
      "p"
    ],
    "physically": [
      "p"
    ],
    "traditional": [
      "p"
    ],
    "wired": [
      "p",
      "p"
    ],
    "connection": [
      "p"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "either": [
      "p",
      "p"
    ],
    "unprotected": [
      "p",
      "p",
      "p"
    ],
    "allowing": [
      "p",
      "p",
      "p"
    ],
    "any": [
      "p",
      "p",
      "p",
      "p"
    ],
    "become": [
      "p",
      "p",
      "p",
      "p"
    ],
    "part": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "encrypted": [
      "p",
      "p",
      "p",
      "p"
    ],
    "requiring": [
      "p"
    ],
    "key": [
      "p",
      "p"
    ],
    "allow": [
      "p",
      "p",
      "p"
    ],
    "members": [
      "p"
    ],
    "follows": [
      "p"
    ],
    "only": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "difference": [
      "p"
    ],
    "must": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "simple": [
      "p"
    ],
    "interface": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "proximity": [
      "p"
    ],
    "wlan’s": [
      "p",
      "p"
    ],
    "obtain": [
      "p"
    ],
    "network’s": [
      "p"
    ],
    "encryption": [
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "once": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "he": [
      "p",
      "p",
      "p",
      "p"
    ],
    "getting": [
      "p"
    ],
    "front": [
      "p",
      "p",
      "p"
    ],
    "additional": [
      "p"
    ],
    "complete": [
      "p"
    ],
    "properly": [
      "p",
      "p"
    ],
    "configured": [
      "p"
    ],
    "points": [
      "p"
    ],
    "help": [
      "p"
    ],
    "mitigate": [
      "p"
    ],
    "connections": [
      "p",
      "p",
      "p"
    ],
    "occur": [
      "p"
    ],
    "far": [
      "p"
    ],
    "need": [
      "p",
      "p",
      "p"
    ],
    "travel": [
      "p",
      "p"
    ],
    "though": [
      "p"
    ],
    "usually": [
      "p"
    ],
    "across": [
      "p"
    ],
    "series": [
      "p"
    ],
    "routers": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "up": [
      "p",
      "p"
    ],
    "service": [
      "p"
    ],
    "providers": [
      "p"
    ],
    "isps).": [
      "p"
    ],
    "lan": [
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p"
    ],
    "now": [
      "p",
      "p"
    ],
    "somewhere": [
      "p"
    ],
    "was": [
      "p"
    ],
    "really": [
      "p",
      "p"
    ],
    "tapping": [
      "p"
    ],
    "wire": [
      "p"
    ],
    "done": [
      "p",
      "p",
      "p",
      "p"
    ],
    "ways": [
      "p"
    ],
    "might": [
      "p",
      "p"
    ],
    "programmatically": [
      "p"
    ],
    "exploit": [
      "p"
    ],
    "flaws": [
      "p"
    ],
    "design": [
      "p",
      "p",
      "p"
    ],
    "border": [
      "p"
    ],
    "gateway": [
      "p",
      "ol",
      "li"
    ],
    "protocol": [
      "p",
      "p",
      "p"
    ],
    "bgp).": [
      "p"
    ],
    "when": [
      "p",
      "p"
    ],
    "user": [
      "p"
    ],
    "navigates": [
      "p"
    ],
    "site": [
      "p"
    ],
    "server": [
      "p"
    ],
    "provides": [
      "p"
    ],
    "user’s": [
      "p",
      "p"
    ],
    "with": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "ip": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "destination": [
      "p",
      "ol",
      "li"
    ],
    "looked": [
      "p"
    ],
    "bgp": [
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "table": [
      "p",
      "p"
    ],
    "belonging": [
      "p"
    ],
    "isp": [
      "p",
      "p",
      "p",
      "p"
    ],
    "find": [
      "p"
    ],
    "best": [
      "p"
    ],
    "route": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "request": [
      "p"
    ],
    "however": [
      "p",
      "p"
    ],
    "works": [
      "p",
      "p"
    ],
    "based": [
      "p",
      "p",
      "p"
    ],
    "trust": [
      "p"
    ],
    "allows": [
      "p",
      "p",
      "p"
    ],
    "advertise": [
      "p",
      "p"
    ],
    "range": [
      "p",
      "ol",
      "li"
    ],
    "addresses": [
      "p",
      "ol",
      "li"
    ],
    "routes": [
      "p",
      "p"
    ],
    "origin": [
      "p"
    ],
    "may": [
      "p",
      "p",
      "p"
    ],
    "malicious": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "nodes’": [
      "p"
    ],
    "ips": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "thus": [
      "p"
    ],
    "compromise": [
      "p"
    ],
    "router": [
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "i].": [
      "p"
    ],
    "second": [
      "p",
      "p"
    ],
    "provider": [
      "p"
    ],
    "has": [
      "p"
    ],
    "unlimited": [
      "p"
    ],
    "its": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "read": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "contents": [
      "p",
      "p"
    ],
    "pass": [
      "p"
    ],
    "data": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "travels": [
      "p",
      "p"
    ],
    "unencrypted": [
      "p",
      "p"
    ],
    "administrator": [
      "p"
    ],
    "easily": [
      "p",
      "p"
    ],
    "next": [
      "p",
      "ol",
      "li"
    ],
    "what": [
      "p"
    ],
    "leads": [
      "p"
    ],
    "how": [
      "p",
      "p",
      "p",
      "i",
      "i",
      "title"
    ],
    "protect": [
      "p",
      "p",
      "p",
      "p"
    ],
    "against": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "them": [
      "p",
      "p",
      "p"
    ],
    "protecting": [
      "h2",
      "em"
    ],
    "at": [
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em"
    ],
    "level": [
      "h2",
      "em",
      "p",
      "p",
      "p",
      "h2",
      "em"
    ],
    "type": [
      "p",
      "p",
      "p",
      "p"
    ],
    "protection": [
      "p",
      "p",
      "p"
    ],
    "available": [
      "p"
    ],
    "depends": [
      "p"
    ],
    "kind": [
      "p"
    ],
    "via": [
      "p"
    ],
    "vulnerable": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "mentioned": [
      "p"
    ],
    "previous": [
      "p",
      "p"
    ],
    "section": [
      "p"
    ],
    "composed": [
      "p",
      "h2",
      "em",
      "p",
      "p"
    ],
    "operation": [
      "p"
    ],
    "reads": [
      "p"
    ],
    "packet": [
      "p"
    ],
    "passes": [
      "p"
    ],
    "entirety": [
      "p"
    ],
    "even": [
      "p",
      "p"
    ],
    "discarding": [
      "p"
    ],
    "intended": [
      "p"
    ],
    "able": [
      "p"
    ],
    "meant": [
      "p"
    ],
    "attacker’s": [
      "p",
      "p"
    ],
    "administrators": [
      "p",
      "p",
      "p",
      "p"
    ],
    "tools": [
      "p",
      "p",
      "p",
      "p"
    ],
    "anti": [
      "p"
    ],
    "sniff": [
      "p",
      "p"
    ],
    "http://packetstormsecurity.org/sniffers/antisniff/),": [
      "p"
    ],
    "detects": [
      "p"
    ],
    "have": [
      "p",
      "p",
      "p"
    ],
    "http//packetstormsecurity.org/sniffers/antisniff/": [
      "a"
    ],
    "caused": [
      "p",
      "p"
    ],
    "factors": [
      "p"
    ],
    "executed": [
      "p",
      "p"
    ],
    "redirect/duplicate": [
      "p"
    ],
    "see": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "section.": [
      "p"
    ],
    "methods": [
      "p",
      "p"
    ],
    "include": [
      "p",
      "ol",
      "li"
    ],
    "man-in-the-middle": [
      "p",
      "p",
      "p",
      "i"
    ],
    "where": [
      "p"
    ],
    "purpose": [
      "p"
    ],
    "exploits": [
      "p"
    ],
    "defend": [
      "p",
      "p",
      "p",
      "p"
    ],
    "address": [
      "p",
      "ol",
      "li"
    ],
    "case": [
      "p",
      "p"
    ],
    "differently": [
      "p"
    ],
    "instance": [
      "p",
      "p",
      "p"
    ],
    "cause": [
      "p"
    ],
    "attributed": [
      "p"
    ],
    "remote": [
      "p"
    ],
    "modifications": [
      "p"
    ],
    "inspection": [
      "p"
    ],
    "like": [
      "p"
    ],
    "xarp": [
      "p"
    ],
    "more": [
      "p",
      "p",
      "p"
    ],
    "-": [
      "p",
      "p",
      "i",
      "i",
      "p",
      "p"
    ],
    "require": [
      "p",
      "p"
    ],
    "specific": [
      "p"
    ],
    "about": [
      "p"
    ],
    "reasons": [
      "p"
    ],
    "join": [
      "p",
      "p",
      "p"
    ],
    "happens": [
      "p"
    ],
    "unprotected/unencrypted": [
      "p",
      "ol",
      "li"
    ],
    "anyone": [
      "p"
    ],
    "proper": [
      "p",
      "p"
    ],
    "protected": [
      "p",
      "p"
    ],
    "wpa": [
      "p"
    ],
    "equivalent": [
      "p"
    ],
    "privacy": [
      "p"
    ],
    "wep.": [
      "p"
    ],
    "since": [
      "p"
    ],
    "protocols": [
      "p",
      "p",
      "p"
    ],
    "fallen": [
      "p"
    ],
    "cryptographic": [
      "p",
      "p"
    ],
    "configure": [
      "p",
      "ol",
      "li",
      "b"
    ],
    "large": [
      "p"
    ],
    "enough": [
      "p"
    ],
    "keys": [
      "p"
    ],
    "least": [
      "p"
    ],
    "bits": [
      "p"
    ],
    "strong": [
      "p",
      "p"
    ],
    "addition": [
      "p"
    ],
    "securing": [
      "p"
    ],
    "countermeasure": [
      "p"
    ],
    "risk": [
      "p"
    ],
    "defenses": [
      "p",
      "p"
    ],
    "listed": [
      "p"
    ],
    "above": [
      "p",
      "ol",
      "li"
    ],
    "whether": [
      "p",
      "ol",
      "li"
    ],
    "nature": [
      "p"
    ],
    "unauthenticated": [
      "p"
    ],
    "updates": [
      "p",
      "p"
    ],
    "tables": [
      "p",
      "p"
    ],
    "techniques": [
      "p",
      "p"
    ],
    "filtering": [
      "p"
    ],
    "secure": [
      "p",
      "p"
    ],
    "s-bgp).": [
      "p"
    ],
    "setting": [
      "p",
      "p"
    ],
    "appropriate": [
      "p"
    ],
    "filters": [
      "p"
    ],
    "prevents": [
      "p"
    ],
    "will": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "predefined": [
      "p"
    ],
    "blocking": [
      "p"
    ],
    "s-bgp": [
      "p",
      "p"
    ],
    "requires": [
      "p"
    ],
    "authentication": [
      "p",
      "p",
      "p"
    ],
    "public-key": [
      "p"
    ],
    "cryptography": [
      "p"
    ],
    "before": [
      "p",
      "p",
      "p",
      "p"
    ],
    "performs": [
      "p"
    ],
    "update": [
      "p"
    ],
    "ipsec": [
      "p",
      "p"
    ],
    "unauthorized": [
      "p"
    ],
    "implemented": [
      "p"
    ],
    "many": [
      "p"
    ],
    "isps": [
      "p"
    ],
    "agree": [
      "p"
    ],
    "their": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "application/configuration": [
      "h2",
      "em"
    ],
    "developers": [
      "p",
      "p",
      "p"
    ],
    "complement": [
      "p"
    ],
    "network-level": [
      "p"
    ],
    "over": [
      "p",
      "p"
    ],
    "successful": [
      "p",
      "p"
    ],
    "sufficient": [
      "p"
    ],
    "ciphertext": [
      "p"
    ],
    "sniffed": [
      "p",
      "p"
    ],
    "actual": [
      "p"
    ],
    "plaintext": [
      "p"
    ],
    "there": [
      "p"
    ],
    "go": [
      "p",
      "ol",
      "li"
    ],
    "hand-in-hand": [
      "p"
    ],
    "ensuring": [
      "p"
    ],
    "who": [
      "p"
    ],
    "claims": [
      "p"
    ],
    "be.": [
      "p"
    ],
    "should": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "consider": [
      "p"
    ],
    "tls/ssl": [
      "p"
    ],
    "encrypting": [
      "p"
    ],
    "authenticating": [
      "p"
    ],
    "pgp": [
      "p"
    ],
    "sending": [
      "p",
      "p"
    ],
    "email": [
      "p"
    ],
    "messages": [
      "p"
    ],
    "files": [
      "p"
    ],
    "important": [
      "p"
    ],
    "web": [
      "p",
      "p"
    ],
    "applications": [
      "p"
    ],
    "encrypt": [
      "p"
    ],
    "login": [
      "p"
    ],
    "requests": [
      "p",
      "p"
    ],
    "clients": [
      "p"
    ],
    "application": [
      "p"
    ],
    "frameworks": [
      "p"
    ],
    "asp": [
      "p"
    ],
    "net": [
      "p"
    ],
    "forms": [
      "p"
    ],
    "ssl-required": [
      "p",
      "p"
    ],
    "flag": [
      "p"
    ],
    "mark": [
      "p"
    ],
    "cookies": [
      "p",
      "p"
    ],
    "so": [
      "p"
    ],
    "doesn’t": [
      "p"
    ],
    "you’ve": [
      "p"
    ],
    "reviewed": [
      "p"
    ],
    "theoretical": [
      "p"
    ],
    "aspects": [
      "p"
    ],
    "check": [
      "p"
    ],
    "your": [
      "p"
    ],
    "connect": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "download": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "install": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "wireshark": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "http://www.wireshark.org/download.html).": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "start": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "corresponding": [
      "ol",
      "li"
    ],
    "make": [
      "ol",
      "li"
    ],
    "sure": [
      "ol",
      "li"
    ],
    "http//www.wireshark.org/download.html": [
      "a",
      "a"
    ],
    "expected": [
      "p",
      "p",
      "p",
      "p"
    ],
    "results": [
      "p",
      "p",
      "p",
      "p"
    ],
    "you": [
      "p",
      "p"
    ],
    "captured": [
      "p",
      "p"
    ],
    "cain": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "http://www.oxid.it/cain.html)": [
      "ol",
      "li"
    ],
    "run": [
      "ol",
      "li",
      "p"
    ],
    "click": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "menu": [
      "ol",
      "li"
    ],
    "select": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "note": [
      "ol",
      "li"
    ],
    "case.": [
      "ol",
      "li"
    ],
    "sniffer": [
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "p"
    ],
    "tab": [
      "ol",
      "li",
      "p"
    ],
    "sub-tab": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "plus": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "+)": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "sign": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "scan": [
      "ol",
      "li"
    ],
    "mac": [
      "ol",
      "li"
    ],
    "box": [
      "ol",
      "li"
    ],
    "range,": [
      "ol",
      "li"
    ],
    "ok": [
      "ol",
      "li",
      "b"
    ],
    "both": [
      "ol",
      "li",
      "p"
    ],
    "gateway’s": [
      "ol",
      "li"
    ],
    "host’s": [
      "ol",
      "li"
    ],
    "macs": [
      "ol",
      "li"
    ],
    "appear": [
      "ol",
      "li"
    ],
    "list": [
      "ol",
      "li"
    ],
    "add": [
      "ol",
      "li"
    ],
    "victim": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "pressing": [
      "ol",
      "li"
    ],
    "button": [
      "ol",
      "li"
    ],
    "soon": [
      "ol",
      "li"
    ],
    "becomes": [
      "ol",
      "li"
    ],
    "active": [
      "ol",
      "li"
    ],
    "status": [
      "ol",
      "li"
    ],
    "changes": [
      "ol",
      "li"
    ],
    "“idle”": [
      "ol",
      "li"
    ],
    "“poisoning”": [
      "ol",
      "li"
    ],
    "lower": [
      "ol",
      "li",
      "p"
    ],
    "pane": [
      "ol",
      "li",
      "p"
    ],
    "begin": [
      "ol",
      "li"
    ],
    "show": [
      "ol",
      "li"
    ],
    "intercepted": [
      "ol",
      "li"
    ],
    "selected": [
      "ol",
      "li"
    ],
    "http//www.oxid.it/cain.html": [
      "a"
    ],
    "+": [
      "b",
      "b"
    ],
    "visible": [
      "p"
    ],
    "sniffer-arp": [
      "p"
    ],
    "shows": [
      "p"
    ],
    "wep/wap": [
      "ol",
      "li"
    ],
    "cracking": [
      "ol",
      "li"
    ],
    "aircrack": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "http://www.aircrack-ng.org/doku.php).": [
      "ol",
      "li"
    ],
    "break": [
      "ol",
      "li"
    ],
    "hub.": [
      "ol",
      "li"
    ],
    "http//www.aircrack-ng.org/doku.php": [
      "a"
    ],
    "resist": [
      "p"
    ],
    "making": [
      "p"
    ],
    "impossible": [
      "p"
    ],
    "4.": [
      "p"
    ],
    "checked": [
      "p"
    ],
    "vs": [
      "p"
    ],
    "switch.": [
      "p"
    ],
    "log": [
      "ol",
      "li"
    ],
    "outside": [
      "ol",
      "li"
    ],
    "lan/wlan": [
      "ol",
      "li"
    ],
    "discover": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "send": [
      "ol",
      "li"
    ],
    "udpate": [
      "ol",
      "li",
      "i"
    ],
    "found": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "advertising": [
      "ol",
      "li"
    ],
    "false": [
      "ol",
      "li",
      "p"
    ],
    "used": [
      "ol",
      "li",
      "p"
    ],
    "modifies": [
      "p"
    ],
    "advertised": [
      "p"
    ],
    "conclusions": [
      "h1"
    ],
    "achieved": [
      "p"
    ],
    "joining": [
      "p"
    ],
    "just": [
      "p"
    ],
    "required": [
      "p"
    ],
    "executing": [
      "p"
    ],
    "behind": [
      "p"
    ],
    "would": [
      "p"
    ],
    "circumvented": [
      "p"
    ],
    "prior": [
      "p"
    ],
    "further": [
      "p"
    ],
    "testing": [
      "p",
      "p"
    ],
    "variations": [
      "p"
    ],
    "aid": [
      "p"
    ],
    "i]": [
      "p"
    ],
    "revealed": [
      "p",
      "strong"
    ],
    "internet's": [
      "p",
      "strong"
    ],
    "biggest": [
      "p",
      "strong"
    ],
    "security": [
      "p",
      "strong"
    ],
    "hole": [
      "p",
      "strong"
    ],
    "http//blog.wired.com/27bstroke6/2008/08/revealed-the-in.html": [
      "p",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Step 1: Understand Attack Scenarios",
      "Step 2: Analyze Causes and Countermeasures",
      "Step 3: Execute Test Cases",
      "Conclusions"
    ],
    "ul": [
      "Computer networks",
      "Step 1: Understand attack scenarios\r\n    Step 2: Analyze causes and countermeasures\r\n    Step 3: Execute test cases",
      "Networks using hubs\r\n    Switched networks\r\n    WLAN networks\r\n    Sniffing packets on the Internet"
    ],
    "li": [
      "Computer networks",
      "Step 1: Understand attack scenarios",
      "Step 2: Analyze causes and countermeasures",
      "Step 3: Execute test cases",
      "Networks using hubs",
      "Switched networks",
      "WLAN networks",
      "Sniffing packets on the Internet",
      "Attacker connects to same hub as one of the target nodes.",
      "Attacker executes network monitoring tool in promiscuous mode to capture packets exchanged between hosts.",
      "The attacker connects to the same switch as one of the target nodes.",
      "The attacker executes an attack that duplicates/redirects network traffic between switch and target node in the same switch.",
      "The attacker uses a network monitoring tool to capture packets exchanged between two hosts.",
      "Connect a computer to the same hub as the target host.",
      "Download and install Wireshark  (http://www.wireshark.org/download.html).",
      "Start Wireshark and start capturing network traffic from the interface corresponding to the hub network.    Make sure to start capturing in promiscuous mode.",
      "Connect a computer to the same switch as the target host.",
      "Download and install Cain (http://www.oxid.it/cain.html) and Wireshark  (http://www.wireshark.org/download.html).",
      "Run Cain.",
      "Click Configure in the menu and select the network interface (note that it can be a wireless interface for the next test case).",
      "Click the Sniffer tab and then the Hosts sub-tab.",
      "Start the sniffer and click the plus (+) sign.",
      "Select a range of IPs to scan their MAC addresses (include the target box in the range), and then click OK. Both the gateway’s and the target host’s IPs (and their MACs) should appear in the hosts list.",
      "Click the ARP poisoning sub-tab.",
      "Click on the plus (+) sign and add an ARP route from the victim to the gateway.",
      "Start the ARP poisoning attack by pressing the ARP button. As soon as the victim becomes active, its status changes from “idle” to “poisoning.”    The lower pane will begin to show the packets being intercepted.",
      "Start Wireshark and start capturing network traffic from the same interface selected in Cain.",
      "If the WLAN is unprotected/unencrypted, go to step 4.",
      "Download a WEP/WAP cracking tool such as Aircrack (http://www.aircrack-ng.org/doku.php).",
      "Use Aircrack to break encryption and connect to the WLAN.",
      "Once in network, follow one of the two test cases above (depending on whether the access point is connected by a switch or a hub).",
      "Log in to computer outside of the LAN/WLAN of two target nodes.",
      "Discover the IP of one of the target nodes.",
      "Discover the BGP router for one of the target nodes.",
      "Send UDPATE BGP packets to the router found in step 2, advertising a false route for the destination IP address (found in step 1) to the computer used for this test."
    ],
    "p": [
      "Network eavesdropping or network sniffing attacks consist of intercepting network traffic between two target network nodes, and capturing network packets exchanged between nodes.    Attackers commonly use this vulnerability to retrieve sensitive information, including users’ passwords. This attack is applicable to different types of environments, including Local Area Networks (LANs) interconnected by hubs or switches, as well as to Wireless Local Area Networks (WLANs).",
      "Follow these steps to test for network eavesdropping bugs:",
      "First, it is necessary to understand the different attack scenarios related to this bug:",
      "Hub networks work by broadcasting every network frame every host connected to the hub. Upon receiving a frame from the hub, each host checks if the frame is addressed to it. If it is, the host processes the frame. If it’s not, the host ignores the frame.",
      "In this scenario, the attacker simply needs to be connected to the same hub as the target host.     Then, the attacker starts monitoring network traffic in promiscuous mode, capturing all packets sent to the target host.",
      "In detail:",
      "Switched networks are different than hub-based networks because they don’t work on the principle of broadcasts. Instead, the switch sends frames to each of the hosts connected to the switches independently, depending on the recipient. Therefore, an attacker needs an extra condition (besides being connected to the same switch) in order to redirect the network traffic between the switch and the target host through the attacker. A common way to meet this condition is to use an ARP poisoning attack, although other attacks such as DHCP spoofing, port stealing, and DNS spoofing, are also possible.",
      "In detail:",
      "Wireless Local Area Networks (WLANs) consist of a set of host computers connected through radio waves to an access point (or base station), which in turn is physically connected to a hub or switch using a traditional wired connection. Wireless networks can either be unprotected, allowing any computer to become part of the network, or encrypted, requiring a key to allow computers to become members of the network.",
      "In this scenario, the attacker follows the same steps of either hub or switch eavesdropping; the only difference is that the attacker must first become part of the network. This is simple if the network is unprotected; the attacker only needs a wireless interface and proximity to the WLAN’s access point. If the WLAN is encrypted, the attacker must first obtain the network’s encryption key and become part of the network. Once the attacker is part of the WLAN, he starts getting all packets in promiscuous mode (if the access point is in front of a hub) or executes an additional attack such as ARP poisoning (if the access point is in front of a switch) to complete the attack. Properly configured wireless access points can help to mitigate this attack.",
      "Network connections that occur between two nodes that are far from each other need to travel though the Internet. Usually they are sent across    a series of routers set up by Internet Service Providers (ISPs). In this scenario, the attacker is not in the same LAN or WLAN as one of the target nodes; now the attacker is somewhere in the Internet, as if he was really tapping the wire. This can be done in two ways. First, an attacker might programmatically exploit flaws in the design of the Border Gateway Protocol (BGP). When a user navigates to a site, a DNS server provides the user’s computer with an IP for the destination. This IP is then looked up in a BGP table belonging to the user’s ISP in order to find the best route for the request. However, BGP works based on trust, and allows any ISP or network to advertise a range of IP addresses and routes for an origin IP. An attacker may advertise a malicious route for one of the target nodes’ IPs and thus compromise the router, allowing for an eavesdropping attack [i]. Second, a malicious ISP provider has unlimited access to all of its routers and can read the contents of all connections that pass through its routers. If sensitive data travels unencrypted, a malicious ISP administrator can easily read it.",
      "Next, it is necessary to understand what leads to network eavesdropping attacks and how to protect against them.",
      "The first type of protection available against eavesdropping attacks is done at the network level, and depends on the kind of network.",
      "By design, networks connected via hubs are vulnerable to eavesdropping attacks. As mentioned in the previous section, a LAN composed of hubs works by broadcasting network frames to all of the hosts connected to the hub. Network eavesdropping attacks on hub networks are possible only by sniffing packets in promiscuous mode, which is a mode of operation of a network interface in which the computer reads each packet that passes through it in its entirety, even if it is not addressed to the computer. This way, instead of discarding all packets that are not intended for the host, the attacker is able to read the contents of all packets, even if they are not meant to be read by the attacker’s computer. To protect against this scenario, administrators must execute network tools such as Anti Sniff (http://packetstormsecurity.org/sniffers/antisniff/), which detects computers that have an interface in promiscuous mode.",
      "Network eavesdropping attacks on switched networks are caused by different factors, depending on the condition executed to redirect/duplicate the traffic between the switch and the target host on the LAN (see scenario 2 in previous section). These methods include Man-in-the-Middle attacks on switch networks where the attacker’s purpose is to sniff the network traffic as part of ARP poisoning, DHCP spoofing, DNS spoofing, and port stealing exploits.",
      "To defend against each scenario, network administrators must address each case differently. For instance, if the attack is executed through ARP poisoning, the cause can be attributed to the design of the ARP protocol allowing remote ARP table modifications. Network administrators may use network inspection tools to defend against ARP poisoning at the network level, and may use tools like Xarp to defend at the host level. For more information see How to - Test for ARP Poisoning Bugs. The same applies to other attacks that require a specific protection based on the attack type. For more information about Man-in-the-Middle attacks on network switches, see    How to - Test for Man-in-the-Middle Bugs.",
      "Wireless networks are vulnerable to attacks for two reasons.",
      "First, to be vulnerable, a wireless network must allow an attacker to join the network. This happens when the WLAN’s access point is unprotected/unencrypted and allows anyone to join. To protect against this condition, network administrators must use proper encryption (Wireless Protected Access - or WPA and Wired Equivalent Privacy - or WEP). Since these protocols have fallen target to cryptographic attacks, it is necessary to configure them using large enough keys (at least 128 bits) and strong passwords.",
      "Second, in addition to securing access to the WLAN, it is necessary to countermeasure the risk of network eavesdropping attacks by using the defenses listed above, depending on whether the access point is in front of a hub or a switch.",
      "BGP attacks are caused by the nature of the BGP protocol, which allows for unauthenticated updates of BGP tables. To defend against BGP attacks, use techniques such as route filtering and secure BGP (S-BGP). Setting the appropriate router filters prevents against malicious updates, because the router will only allow a predefined set of routes, blocking any malicious route that might be set by an attacker. S-BGP is more secure because it requires strong authentication (based on public-key cryptography) of a router before it performs an update, and because it uses IPSec between connected BGP routers to protect against unauthorized routers. However, for S-BGP to be properly implemented, many ISPs will need to agree to use it in their routers.",
      "Developers must complement any of these network-level defenses with proper encryption of sensitive data that travels over the network. If sensitive data is encrypted before being sent over the network, a successful eavesdropping attack will not be sufficient to read it; the attacker will only see ciphertext in the sniffed packets and not the actual sensitive data in plaintext. There are encryption protocols that go hand-in-hand with authentication (ensuring that the recipient is really who he claims to be). For instance, developers should consider using protocols such as TLS/SSL and IPSec for encrypting and authenticating connections, as well as PGP for sending encrypted email messages or sensitive files. It is important that web applications encrypt login requests from their clients before sending these requests to the application. This can easily be done in frameworks such as ASP .NET by using forms authentication and setting the SSL-required flag. In the same way, web developers can mark cookies SSL-required so that sensitive data doesn’t travel unencrypted in cookies.",
      "Now that you’ve reviewed all the theoretical aspects of network eavesdropping, it is necessary to execute test cases to check if your network is vulnerable.",
      "Follow these steps to test for network eavesdropping on a LAN composed of hubs:",
      "Expected results: If the target host is vulnerable, you will see the captured packets sent to and from the target host in Wireshark.",
      "Follow these steps to test for network eavesdropping on a switched LAN:",
      "Expected results: A successful ARP poisoning attack will be visible in both in Cain and Wireshark. In Cain, the lower pane of the Sniffer->ARP tab shows the packets being sniffed.    If the target host is vulnerable, you will see the captured packets sent to and from the target host in Wireshark.",
      "Follow these steps to test for network eavesdropping on a WLAN:",
      "Expected results: If the WLAN is protected, it should resist to the cryptographic attack in step 3, making it impossible to follow with the eavesdropping attack (step 4). If the network is unprotected, then the eavesdropping attack from step 4 must be checked, depending on the test case scenario (hub vs. switch).",
      "Follow these steps to test for network eavesdropping on a BGP router:",
      "Expected results: The router is vulnerable if it modifies its BGP tables with the false route advertised in step 4.",
      "Network eavesdropping attacks consist of monitoring network traffic between two target nodes.    The attack is achieved by joining the network of one of the two target nodes, such as a hub LAN, switched LAN, or WLAN.    Once the attacker is in the network, he uses different techniques, depending on the type of network, to start capturing network traffic. For instance, in networks composed of hubs, the attacker just needs to run a network sniffer in promiscuous mode; in switched networks an extra condition, such as an ARP poisoning attack, is required. Wireless networks require the attacker to join the network before executing the attack on the hub or switch behind the access point. If encryption is used on the wireless access point, it would need to be circumvented prior to further testing.    All of these variations have different protection methods, depending on the attack type. Testing for them is done with the aid of network attack and monitoring tools.",
      "[i] Revealed: The Internet's Biggest Security Hole. http://blog.wired.com/27bstroke6/2008/08/revealed-the-in.html"
    ],
    "h2": [
      "Scenario 1: Networks using hubs",
      "Scenario 2: Switch-based LANs",
      "Scenario 3: WLAN networks",
      "Scenario 4: Sniffing packets on the Internet",
      "Protecting at the network level",
      "Hub networks",
      "Switched networks",
      "Wireless networks",
      "BGP attacks",
      "Using encryption at the application/configuration level",
      "Test for network eavesdropping on a LAN composed of hubs",
      "Test for network eavesdropping on a switched LAN",
      "Test for network eavesdropping on a WLAN",
      "Test for network eavesdropping on a BGP router"
    ],
    "em": [
      "Scenario 1: Networks using hubs",
      "Scenario 2: Switch-based LANs",
      "Scenario 3: WLAN networks",
      "Scenario 4: Sniffing packets on the Internet",
      "Protecting at the network level",
      "Hub networks",
      "Switched networks",
      "Wireless networks",
      "BGP attacks",
      "Using encryption at the application/configuration level",
      "Test for network eavesdropping on a LAN composed of hubs",
      "Test for network eavesdropping on a switched LAN",
      "Test for network eavesdropping on a WLAN",
      "Test for network eavesdropping on a BGP router"
    ],
    "ol": [
      "Attacker connects to same hub as one of the target nodes.\r\n    Attacker executes network monitoring tool in promiscuous mode to capture packets exchanged between hosts.",
      "The attacker connects to the same switch as one of the target nodes.\r\n    The attacker executes an attack that duplicates/redirects network traffic between switch and target node in the same switch.\r\n    The attacker uses a network monitoring tool to capture packets exchanged between two hosts.",
      "Connect a computer to the same hub as the target host.\r\n    Download and install Wireshark  (http://www.wireshark.org/download.html).\r\n    Start Wireshark and start capturing network traffic from the interface corresponding to the hub network.    Make sure to start capturing in promiscuous mode.",
      "Connect a computer to the same switch as the target host.\r\n    Download and install Cain (http://www.oxid.it/cain.html) and Wireshark  (http://www.wireshark.org/download.html).\r\n    Run Cain. \r\n    Click Configure in the menu and select the network interface (note that it can be a wireless interface for the next test case).\r\n    Click the Sniffer tab and then the Hosts sub-tab.\r\n    Start the sniffer and click the plus (+) sign.\r\n    Select a range of IPs to scan their MAC addresses (include the target box in the range), and then click OK. Both the gateway’s and the target host’s IPs (and their MACs) should appear in the hosts list.\r\n    Click the ARP poisoning sub-tab.\r\n    Click on the plus (+) sign and add an ARP route from the victim to the gateway.\r\n    Start the ARP poisoning attack by pressing the ARP button. As soon as the victim becomes active, its status changes from “idle” to “poisoning.”    The lower pane will begin to show the packets being intercepted.\r\n    Start Wireshark and start capturing network traffic from the same interface selected in Cain.",
      "If the WLAN is unprotected/unencrypted, go to step 4.\r\n    Download a WEP/WAP cracking tool such as Aircrack (http://www.aircrack-ng.org/doku.php).\r\n    Use Aircrack to break encryption and connect to the WLAN.\r\n    Once in network, follow one of the two test cases above (depending on whether the access point is connected by a switch or a hub).",
      "Log in to computer outside of the LAN/WLAN of two target nodes.\r\n    Discover the IP of one of the target nodes.\r\n    Discover the BGP router for one of the target nodes.\r\n    Send UDPATE BGP packets to the router found in step 2, advertising a false route for the destination IP address (found in step 1) to the computer used for this test."
    ],
    "b": [
      "",
      "",
      "",
      "Configure",
      "Sniffer",
      "Hosts",
      "+",
      "OK",
      "ARP poisoning",
      "+",
      ""
    ],
    "i": [
      "",
      "How to - Test for ARP Poisoning Bugs",
      "How to - Test for Man-in-the-Middle Bugs",
      "",
      "",
      "",
      "",
      "UDPATE"
    ],
    "a": [
      "http://packetstormsecurity.org/sniffers/antisniff/",
      "http://www.wireshark.org/download.html",
      "http://www.oxid.it/cain.html",
      "http://www.wireshark.org/download.html",
      "http://www.aircrack-ng.org/doku.php",
      "http://blog.wired.com/27bstroke6/2008/08/revealed-the-in.html"
    ],
    "div": [
      ""
    ],
    "hr": [
      ""
    ],
    "strong": [
      "Revealed: The Internet's Biggest Security Hole."
    ]
  },
  "links": [
    {
      "href": "http://packetstormsecurity.org/sniffers/antisniff/",
      "text": "http://packetstormsecurity.org/sniffers/antisniff/"
    },
    {
      "href": "http://www.wireshark.org/download.html",
      "text": "http://www.wireshark.org/download.html"
    },
    {
      "href": "http://www.oxid.it/cain.html",
      "text": "http://www.oxid.it/cain.html"
    },
    {
      "href": "http://www.wireshark.org/download.html",
      "text": "http://www.wireshark.org/download.html"
    },
    {
      "href": "http://www.aircrack-ng.org/doku.php",
      "text": "http://www.aircrack-ng.org/doku.php"
    },
    {
      "href": "http://blog.wired.com/27bstroke6/2008/08/revealed-the-in.html",
      "text": "http://blog.wired.com/27bstroke6/2008/08/revealed-the-in.html"
    }
  ],
  "html": "<h1>\r\n     Applies to \r\n  </h1>\r\n  <ul>\r\n    <li>Computer networks</li>\r\n  </ul>\r\n  <h1>\r\n     Summary \r\n  </h1>\r\n  <p>Network eavesdropping or network sniffing attacks consist of intercepting network traffic between two target network nodes, and capturing network packets exchanged between nodes.    Attackers commonly use this vulnerability to retrieve sensitive information, including users’ passwords. This attack is applicable to different types of environments, including Local Area Networks (LANs) interconnected by hubs or switches, as well as to Wireless Local Area Networks (WLANs). </p>\r\n  <p>Follow these steps to test for network eavesdropping bugs:</p>\r\n  <ul>\r\n    <li>Step 1: Understand attack scenarios</li>\r\n    <li>Step 2: Analyze causes and countermeasures</li>\r\n    <li>Step 3: Execute test cases</li>\r\n  </ul>\r\n  <h1>\r\n     Step 1: Understand Attack Scenarios \r\n  </h1>\r\n  <p>First, it is necessary to understand the different attack scenarios related to this bug:</p>\r\n  <ul>\r\n    <li>Networks using hubs</li>\r\n    <li>Switched networks</li>\r\n    <li>WLAN networks</li>\r\n    <li>Sniffing packets on the Internet</li>\r\n  </ul>\r\n  <h2>\r\n    <em>Scenario 1: Networks using hubs</em>\r\n  </h2>\r\n  <p>Hub networks work by broadcasting every network frame every host connected to the hub. Upon receiving a frame from the hub, each host checks if the frame is addressed to it. If it is, the host processes the frame. If it’s not, the host ignores the frame.</p>\r\n  <p>In this scenario, the attacker simply needs to be connected to the same hub as the target host.     Then, the attacker starts monitoring network traffic in promiscuous mode, capturing all packets sent to the target host.</p>\r\n  <p>In detail:</p>\r\n  <ol>\r\n    <li>Attacker connects to same hub as one of the target nodes.</li>\r\n    <li>Attacker executes network monitoring tool in promiscuous mode to capture packets exchanged between hosts.</li>\r\n  </ol>\r\n  <h2>\r\n    <em>Scenario 2: Switch-based LANs</em>\r\n  </h2>\r\n  <p>Switched networks are different than hub-based networks because they don’t work on the principle of broadcasts. Instead, the switch sends frames to each of the hosts connected to the switches independently, depending on the recipient. Therefore, an attacker needs an extra condition (besides being connected to the same switch) in order to redirect the network traffic between the switch and the target host through the attacker. A common way to meet this condition is to use an ARP poisoning attack, although other attacks such as DHCP spoofing, port stealing, and DNS spoofing, are also possible.</p>\r\n  <p>In detail:</p>\r\n  <ol>\r\n    <li>The attacker connects to the same switch as one of the target nodes.</li>\r\n    <li>The attacker executes an attack that duplicates/redirects network traffic between switch and target node in the same switch.</li>\r\n    <li>The attacker uses a network monitoring tool to capture packets exchanged between two hosts. </li>\r\n  </ol>\r\n  <h2>\r\n    <em>Scenario 3: WLAN networks</em>\r\n  </h2>\r\n  <p>Wireless Local Area Networks (WLANs) consist of a set of host computers connected through radio waves to an access point (or base station), which in turn is physically connected to a hub or switch using a traditional wired connection. Wireless networks can either be unprotected, allowing any computer to become part of the network, or encrypted, requiring a key to allow computers to become members of the network.        </p>\r\n  <p>In this scenario, the attacker follows the same steps of either hub or switch eavesdropping; the only difference is that the attacker must first become part of the network. This is simple if the network is unprotected; the attacker only needs a wireless interface and proximity to the WLAN’s access point. If the WLAN is encrypted, the attacker must first obtain the network’s encryption key and become part of the network. Once the attacker is part of the WLAN, he starts getting all packets in promiscuous mode (if the access point is in front of a hub) or executes an additional attack such as ARP poisoning (if the access point is in front of a switch) to complete the attack. Properly configured wireless access points can help to mitigate this attack.</p>\r\n  <h2>\r\n    <em>Scenario 4: Sniffing packets on the Internet</em>\r\n  </h2>\r\n  <p>Network connections that occur between two nodes that are far from each other need to travel though the Internet. Usually they are sent across    a series of routers set up by Internet Service Providers (ISPs). In this scenario, the attacker is not in the same LAN or WLAN as one of the target nodes; now the attacker is somewhere in the Internet, as if he was really tapping the wire. This can be done in two ways. First, an attacker might programmatically exploit flaws in the design of the Border Gateway Protocol (BGP). When a user navigates to a site, a DNS server provides the user’s computer with an IP for the destination. This IP is then looked up in a BGP table belonging to the user’s ISP in order to find the best route for the request. However, BGP works based on trust, and allows any ISP or network to advertise a range of IP addresses and routes for an origin IP. An attacker may advertise a malicious route for one of the target nodes’ IPs and thus compromise the router, allowing for an eavesdropping attack [i]. Second, a malicious ISP provider has unlimited access to all of its routers and can read the contents of all connections that pass through its routers. If sensitive data travels unencrypted, a malicious ISP administrator can easily read it.</p>\r\n  <h1>\r\n     Step 2: Analyze Causes and Countermeasures \r\n  </h1>\r\n  <p>Next, it is necessary to understand what leads to network eavesdropping attacks and how to protect against them.<b><i></i></b></p>\r\n  <h2>\r\n    <em>Protecting at the network level</em>\r\n  </h2>\r\n  <p>The first type of protection available against eavesdropping attacks is done at the network level, and depends on the kind of network.</p>\r\n  <h2>\r\n    <em>Hub networks</em>\r\n  </h2>\r\n  <p>By design, networks connected via hubs are vulnerable to eavesdropping attacks. As mentioned in the previous section, a LAN composed of hubs works by broadcasting network frames to all of the hosts connected to the hub. Network eavesdropping attacks on hub networks are possible only by sniffing packets in promiscuous mode, which is a mode of operation of a network interface in which the computer reads each packet that passes through it in its entirety, even if it is not addressed to the computer. This way, instead of discarding all packets that are not intended for the host, the attacker is able to read the contents of all packets, even if they are not meant to be read by the attacker’s computer. To protect against this scenario, administrators must execute network tools such as Anti Sniff (<a href=\"http://packetstormsecurity.org/sniffers/antisniff/\">http://packetstormsecurity.org/sniffers/antisniff/</a>), which detects computers that have an interface in promiscuous mode.</p>\r\n  <h2>\r\n    <em>Switched networks</em>\r\n  </h2>\r\n  <p>Network eavesdropping attacks on switched networks are caused by different factors, depending on the condition executed to redirect/duplicate the traffic between the switch and the target host on the LAN (see scenario 2 in previous section). These methods include Man-in-the-Middle attacks on switch networks where the attacker’s purpose is to sniff the network traffic as part of ARP poisoning, DHCP spoofing, DNS spoofing, and port stealing exploits.    </p>\r\n  <p>To defend against each scenario, network administrators must address each case differently. For instance, if the attack is executed through ARP poisoning, the cause can be attributed to the design of the ARP protocol allowing remote ARP table modifications. Network administrators may use network inspection tools to defend against ARP poisoning at the network level, and may use tools like Xarp to defend at the host level. For more information see <i>How to - Test for ARP Poisoning Bugs</i>. The same applies to other attacks that require a specific protection based on the attack type. For more information about Man-in-the-Middle attacks on network switches, see    <i>How to - Test for Man-in-the-Middle Bugs</i>.<i></i></p>\r\n  <h2>\r\n    <em>Wireless networks</em>\r\n  </h2>\r\n  <p>Wireless networks are vulnerable to attacks for two reasons.    </p>\r\n  <p>First, to be vulnerable, a wireless network must allow an attacker to join the network. This happens when the WLAN’s access point is unprotected/unencrypted and allows anyone to join. To protect against this condition, network administrators must use proper encryption (Wireless Protected Access - or WPA and Wired Equivalent Privacy - or WEP). Since these protocols have fallen target to cryptographic attacks, it is necessary to configure them using large enough keys (at least 128 bits) and strong passwords.</p>\r\n  <p>Second, in addition to securing access to the WLAN, it is necessary to countermeasure the risk of network eavesdropping attacks by using the defenses listed above, depending on whether the access point is in front of a hub or a switch.    </p>\r\n  <h2>\r\n    <em>BGP attacks</em>\r\n  </h2>\r\n  <p>BGP attacks are caused by the nature of the BGP protocol, which allows for unauthenticated updates of BGP tables. To defend against BGP attacks, use techniques such as route filtering and secure BGP (S-BGP). Setting the appropriate router filters prevents against malicious updates, because the router will only allow a predefined set of routes, blocking any malicious route that might be set by an attacker. S-BGP is more secure because it requires strong authentication (based on public-key cryptography) of a router before it performs an update, and because it uses IPSec between connected BGP routers to protect against unauthorized routers. However, for S-BGP to be properly implemented, many ISPs will need to agree to use it in their routers.</p>\r\n  <h2>\r\n    <em>Using encryption at the application/configuration level</em>\r\n  </h2>\r\n  <p>Developers must complement any of these network-level defenses with proper encryption of sensitive data that travels over the network. If sensitive data is encrypted before being sent over the network, a successful eavesdropping attack will not be sufficient to read it; the attacker will only see ciphertext in the sniffed packets and not the actual sensitive data in plaintext. There are encryption protocols that go hand-in-hand with authentication (ensuring that the recipient is really who he claims to be). For instance, developers should consider using protocols such as TLS/SSL and IPSec for encrypting and authenticating connections, as well as PGP for sending encrypted email messages or sensitive files. It is important that web applications encrypt login requests from their clients before sending these requests to the application. This can easily be done in frameworks such as ASP .NET by using forms authentication and setting the SSL-required flag. In the same way, web developers can mark cookies SSL-required so that sensitive data doesn’t travel unencrypted in cookies.</p>\r\n  <h1>\r\n     Step 3: Execute Test Cases \r\n  </h1>\r\n  <p>Now that you’ve reviewed all the theoretical aspects of network eavesdropping, it is necessary to execute test cases to check if your network is vulnerable.</p>\r\n  <h2>\r\n    <em>Test for network eavesdropping on a LAN composed of hubs</em>\r\n  </h2>\r\n  <p>Follow these steps to test for network eavesdropping on a LAN composed of hubs:<b><i></i></b></p>\r\n  <ol>\r\n    <li>Connect a computer to the same hub as the target host.</li>\r\n    <li>Download and install Wireshark  (<a href=\"http://www.wireshark.org/download.html\">http://www.wireshark.org/download.html</a>).</li>\r\n    <li>Start Wireshark and start capturing network traffic from the interface corresponding to the hub network.    Make sure to start capturing in promiscuous mode.</li>\r\n  </ol>\r\n  <p>Expected results: If the target host is vulnerable, you will see the captured packets sent to and from the target host in Wireshark. </p>\r\n  <h2>\r\n    <em>Test for network eavesdropping on a switched LAN</em>\r\n  </h2>\r\n  <p>Follow these steps to test for network eavesdropping on a switched LAN:<b><i></i></b></p>\r\n  <ol>\r\n    <li>Connect a computer to the same switch as the target host.</li>\r\n    <li>Download and install Cain (<a href=\"http://www.oxid.it/cain.html\">http://www.oxid.it/cain.html</a>) and Wireshark  (<a href=\"http://www.wireshark.org/download.html\">http://www.wireshark.org/download.html</a>).</li>\r\n    <li>Run Cain. </li>\r\n    <li>Click <b>Configure</b> in the menu and select the network interface (note that it can be a wireless interface for the next test case).</li>\r\n    <li>Click the <b>Sniffer</b> tab and then the <b>Hosts</b> sub-tab.</li>\r\n    <li>Start the sniffer and click the plus (<b>+</b>) sign.</li>\r\n    <li>Select a range of IPs to scan their MAC addresses (include the target box in the range), and then click <b>OK</b>. Both the gateway’s and the target host’s IPs (and their MACs) should appear in the hosts list.</li>\r\n    <li>Click the <b>ARP poisoning</b> sub-tab.</li>\r\n    <li>Click on the plus (<b>+</b>) sign and add an ARP route from the victim to the gateway.</li>\r\n    <li>Start the ARP poisoning attack by pressing the ARP button. As soon as the victim becomes active, its status changes from “idle” to “poisoning.”    The lower pane will begin to show the packets being intercepted.</li>\r\n    <li>Start Wireshark and start capturing network traffic from the same interface selected in Cain.</li>\r\n  </ol>\r\n  <p>Expected results: A successful ARP poisoning attack will be visible in both in Cain and Wireshark. In Cain, the lower pane of the Sniffer-&gt;ARP tab shows the packets being sniffed.    If the target host is vulnerable, you will see the captured packets sent to and from the target host in Wireshark.</p>\r\n  <h2>\r\n    <em>Test for network eavesdropping on a WLAN</em>\r\n  </h2>\r\n  <p>Follow these steps to test for network eavesdropping on a WLAN:<b><i></i></b></p>\r\n  <ol>\r\n    <li>If the WLAN is unprotected/unencrypted, go to step 4.</li>\r\n    <li>Download a WEP/WAP cracking tool such as Aircrack (<a href=\"http://www.aircrack-ng.org/doku.php\">http://www.aircrack-ng.org/doku.php</a>).</li>\r\n    <li>Use Aircrack to break encryption and connect to the WLAN.</li>\r\n    <li>Once in network, follow one of the two test cases above (depending on whether the access point is connected by a switch or a hub).</li>\r\n  </ol>\r\n  <p>Expected results: If the WLAN is protected, it should resist to the cryptographic attack in step 3, making it impossible to follow with the eavesdropping attack (step 4). If the network is unprotected, then the eavesdropping attack from step 4 must be checked, depending on the test case scenario (hub vs. switch).</p>\r\n  <h2>\r\n    <em>Test for network eavesdropping on a BGP router</em>\r\n  </h2>\r\n  <p>Follow these steps to test for network eavesdropping on a BGP router:</p>\r\n  <ol>\r\n    <li>Log in to computer outside of the LAN/WLAN of two target nodes.</li>\r\n    <li>Discover the IP of one of the target nodes.</li>\r\n    <li>Discover the BGP router for one of the target nodes.</li>\r\n    <li>Send <i>UDPATE</i> BGP packets to the router found in step 2, advertising a false route for the destination IP address (found in step 1) to the computer used for this test.</li>\r\n  </ol>\r\n  <p>Expected results: The router is vulnerable if it modifies its BGP tables with the false route advertised in step 4.</p>\r\n  <h1>\r\n     Conclusions \r\n  </h1>\r\n  <p>Network eavesdropping attacks consist of monitoring network traffic between two target nodes.    The attack is achieved by joining the network of one of the two target nodes, such as a hub LAN, switched LAN, or WLAN.    Once the attacker is in the network, he uses different techniques, depending on the type of network, to start capturing network traffic. For instance, in networks composed of hubs, the attacker just needs to run a network sniffer in promiscuous mode; in switched networks an extra condition, such as an ARP poisoning attack, is required. Wireless networks require the attacker to join the network before executing the attack on the hub or switch behind the access point. If encryption is used on the wireless access point, it would need to be circumvented prior to further testing.    All of these variations have different protection methods, depending on the attack type. Testing for them is done with the aid of network attack and monitoring tools.</p>\r\n  <div>\r\n    <hr />\r\n  </div>\r\n  <p>\r\n     [i] <strong>Revealed: The Internet's Biggest Security Hole. </strong><a href=\"http://blog.wired.com/27bstroke6/2008/08/revealed-the-in.html\">http://blog.wired.com/27bstroke6/2008/08/revealed-the-in.html</a></p>"
}