{
  "id": "208d7369-ec46-4b64-a931-a0b6d8479de2",
  "checksum": "ffdac8bb0f523bc7995536b5601735722115861f",
  "words": {
    "0": [
      "pre"
    ],
    "8": [
      "ol",
      "li",
      "p"
    ],
    "16": [
      "ol",
      "li",
      "p"
    ],
    "24": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "32": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "40": [
      "ul",
      "li"
    ],
    "48": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "64": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "128": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "192": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "256": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "aspnet": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "h1"
    ],
    "summary": [
      "h1"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "how": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "explains": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "machinekey>": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "h2",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "h2",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "element": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "webconfig": [
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "em",
      "em",
      "p",
      "p",
      "em",
      "p",
      "em",
      "p",
      "p",
      "em",
      "em"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "shows": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "configure": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "control": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "li",
      "li"
    ],
    "tamper": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "h2",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "h2",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "p"
    ],
    "proofing": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "p",
      "p",
      "b"
    ],
    "encryption": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "b"
    ],
    "of": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "viewstate": [
      "p",
      "p",
      "p",
      "em",
      "em",
      "em",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "em",
      "li",
      "em",
      "p",
      "p",
      "em",
      "em",
      "p",
      "p",
      "p",
      "em",
      "em",
      "em",
      "p",
      "p",
      "p",
      "em",
      "em",
      "em",
      "p",
      "p",
      "em",
      "em",
      "p",
      "em",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "em",
      "em",
      "li",
      "p",
      "em",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em",
      "em",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "em",
      "li",
      "em",
      "li",
      "em",
      "li",
      "em",
      "h1",
      "p",
      "em",
      "ul",
      "ul",
      "ul",
      "li",
      "em",
      "li",
      "li",
      "em",
      "em",
      "p",
      "em",
      "p",
      "em",
      "p",
      "p",
      "em",
      "em",
      "h2",
      "p",
      "p",
      "em",
      "em",
      "p",
      "b",
      "em",
      "ol",
      "li",
      "p",
      "em",
      "h2",
      "p",
      "p",
      "em",
      "em",
      "p",
      "p",
      "em",
      "em",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "em",
      "p",
      "p",
      "em",
      "em",
      "p",
      "p",
      "em",
      "em",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "em",
      "p",
      "em",
      "p",
      "p",
      "em",
      "em"
    ],
    "forms": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em",
      "em",
      "em",
      "h1",
      "p",
      "p",
      "em",
      "pre",
      "h2",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "em",
      "pre",
      "li",
      "p",
      "h2",
      "p",
      "ol",
      "li",
      "em",
      "pre",
      "p"
    ],
    "authentication": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "pre",
      "h2",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "h2",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p"
    ],
    "tickets": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "h1",
      "p",
      "p",
      "h2",
      "p",
      "h2",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p"
    ],
    "role": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "em",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "cookies": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "signed": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "proof": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "h2",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "h2",
      "ol",
      "li",
      "p",
      "p"
    ],
    "by": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "default": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "request": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "for": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "pages": [
      "p",
      "p",
      "em",
      "pre",
      "em",
      "ul",
      "li",
      "p",
      "em",
      "pre",
      "pre",
      "pre",
      "em",
      "ol",
      "li",
      "em",
      "pre",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "pre",
      "em",
      "pre"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "h2",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "h2",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "contain": [
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "items": [
      "p"
    ],
    "their": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "using": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "pre"
    ],
    "viewstateencryptionmode": [
      "p",
      "em",
      "p",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em"
    ],
    "attribute": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "are": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "encrypted": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "not": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "need": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "modify": [
      "p"
    ],
    "settings": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "unless": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "your": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "a": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "web": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p"
    ],
    "farm": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "share": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "across": [
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p"
    ],
    "applications": [
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p"
    ],
    "these": [
      "p",
      "p",
      "p"
    ],
    "cases": [
      "p"
    ],
    "manually": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "generate": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "h2",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "hashing": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "keys": [
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p"
    ],
    "machinekey": [
      "em",
      "em",
      "ul",
      "ul",
      "ul",
      "em",
      "em",
      "li",
      "em",
      "li",
      "em",
      "li",
      "em",
      "em",
      "em",
      "em",
      "em",
      "em",
      "em",
      "em",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "pre",
      "li",
      "em",
      "pre",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "em",
      "pre",
      "em",
      "pre",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "pre",
      "li",
      "em",
      "pre",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "pre",
      "li",
      "em",
      "pre",
      "em",
      "pre",
      "em",
      "em",
      "em",
      "em",
      "pre",
      "em",
      "em",
      "em",
      "em",
      "em",
      "title"
    ],
    "contents": [
      "h1",
      "p",
      "ul",
      "li"
    ],
    "objectives": [
      "ul",
      "li",
      "h1"
    ],
    "overview": [
      "ul",
      "li",
      "h1"
    ],
    "machine": [
      "ul",
      "li",
      "h1",
      "p"
    ],
    "key": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "explained": [
      "ul",
      "li",
      "h1"
    ],
    "membership": [
      "ul",
      "li",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "p",
      "pre"
    ],
    "anonymous": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p"
    ],
    "identification": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p"
    ],
    "deployment": [
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "h1",
      "p"
    ],
    "considerations": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "h1"
    ],
    "sharing": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "h1"
    ],
    "upgrading": [
      "ul",
      "li",
      "h1"
    ],
    "versions": [
      "ul",
      "li",
      "h1"
    ],
    "additional": [
      "ul",
      "li"
    ],
    "resources": [
      "ul",
      "li"
    ],
    "verify": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "configured": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "be": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "encrypt": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "b",
      "h2",
      "p",
      "p",
      "b",
      "p"
    ],
    "learn": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "feature": [
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "use": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "an": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "password": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "instead": [
      "ul",
      "li"
    ],
    "hashed": [
      "ul",
      "li",
      "p"
    ],
    "protect": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "cookie": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "random": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "h2",
      "p",
      "ul",
      "li",
      "p"
    ],
    "values": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "ensure": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "ensures": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "any": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "modification": [
      "p"
    ],
    "either": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "on": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "client's": [
      "p"
    ],
    "computer": [
      "p"
    ],
    "over": [
      "p",
      "p",
      "p"
    ],
    "network": [
      "p"
    ],
    "detected": [
      "p"
    ],
    "when": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "server": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "processes": [
      "p"
    ],
    "data": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "provide": [
      "p"
    ],
    "message": [
      "p"
    ],
    "code": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "hmac)": [
      "p"
    ],
    "generated": [
      "p",
      "p",
      "p"
    ],
    "from": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "content": [
      "p",
      "p"
    ],
    "hash": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "compared": [
      "p"
    ],
    "subsequent": [
      "p"
    ],
    "requests": [
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "validation": [
      "p",
      "em",
      "p",
      "p",
      "p",
      "em",
      "em",
      "em",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "em",
      "li",
      "li",
      "p",
      "p",
      "b",
      "em",
      "ul",
      "li",
      "em",
      "p",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em",
      "ul",
      "li",
      "p",
      "em"
    ],
    "indicates": [
      "p"
    ],
    "which": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "algorithm": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "it": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "defaults": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "sha1": [
      "p",
      "p",
      "p",
      "p",
      "em",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b",
      "em",
      "em",
      "em",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "uses": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "hmacsha1": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "p",
      "p"
    ],
    "valid": [
      "p"
    ],
    "choices": [
      "p"
    ],
    "include": [
      "p"
    ],
    "md5": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "em",
      "em",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "although": [
      "p",
      "p"
    ],
    "preferable": [
      "p"
    ],
    "because": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "produces": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "larger": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "considered": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "cryptographically": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "h2",
      "p",
      "ul",
      "li"
    ],
    "stronger": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "than": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "validationkey": [
      "p",
      "p",
      "em",
      "em",
      "p",
      "em",
      "p",
      "p",
      "em",
      "em",
      "ul",
      "li",
      "p",
      "b",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "em",
      "p",
      "em",
      "ul",
      "li",
      "ul",
      "li",
      "em",
      "p",
      "em",
      "p",
      "em",
      "p",
      "em"
    ],
    "used": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "conjunction": [
      "p",
      "p",
      "p"
    ],
    "with": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "produce": [
      "p"
    ],
    "hmac": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "p"
    ],
    "installed": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "change": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "autogenerateisolateapps": [
      "p",
      "em"
    ],
    "specific": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "value": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "round": [
      "p"
    ],
    "trips": [
      "p"
    ],
    "potentially": [
      "p"
    ],
    "force": [
      "p"
    ],
    "page": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "em",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "set": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "viewstateencryptionmode=\"always\"": [
      "p",
      "em",
      "pre",
      "pre",
      "ol",
      "li",
      "pre"
    ],
    "@page": [
      "p",
      "em",
      "ul",
      "li",
      "p",
      "em"
    ],
    "directive": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "alternatively": [
      "p"
    ],
    "page's": [
      "p"
    ],
    "calling": [
      "p",
      "p"
    ],
    "pageregisterrequiresviewstateencryption": [
      "p",
      "em",
      "p",
      "em"
    ],
    "method": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "setting": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "viewstateencryptionmode=\"auto\"": [
      "p",
      "em",
      "pre",
      "pre",
      "pre",
      "ol",
      "li",
      "pre"
    ],
    "only": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "those": [
      "p"
    ],
    "determined": [
      "p"
    ],
    "machinekey>.": [
      "p",
      "p"
    ],
    "provides": [
      "p",
      "p"
    ],
    "but": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "support": [
      "p"
    ],
    "should": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "aes": [
      "p",
      "em",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "em",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "em",
      "em",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "recommended": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "symmetric": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "decryption": [
      "p",
      "em",
      "ul",
      "li",
      "p",
      "b",
      "em",
      "p",
      "em",
      "p",
      "p",
      "em",
      "em",
      "ol",
      "li",
      "em",
      "p",
      "p",
      "em"
    ],
    "decryptionkey": [
      "p",
      "p",
      "em",
      "em",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "b",
      "em",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em",
      "p",
      "p",
      "em",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "li",
      "li",
      "em",
      "p",
      "p",
      "em",
      "em",
      "p",
      "em",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "em",
      "li",
      "em",
      "p",
      "em",
      "p",
      "em",
      "p",
      "em"
    ],
    "attributes": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "controls": [
      "p"
    ],
    "also": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "separate": [
      "p",
      "p",
      "p"
    ],
    "virtual": [
      "p",
      "p"
    ],
    "directories": [
      "p",
      "p"
    ],
    "they": [
      "p"
    ],
    "match": [
      "p"
    ],
    "each": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application's": [
      "p",
      "p",
      "p"
    ],
    "manager": [
      "p",
      "em",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "choose": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "cache": [
      "p",
      "p",
      "p",
      "p"
    ],
    "roles": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "created": [
      "p"
    ],
    "same": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "mechanisms": [
      "p"
    ],
    "as": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "pages>": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "elements": [
      "p"
    ],
    "defined": [
      "p"
    ],
    "machine-level": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "webconfig.comments": [
      "p",
      "em"
    ],
    "relevant": [
      "p",
      "p"
    ],
    "shown": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "here": [
      "p",
      "p"
    ],
    "reference": [
      "p"
    ],
    "enableviewstatemac=\"true\"": [
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "ol",
      "li",
      "pre"
    ],
    "..": [
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre",
      "ol",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "li",
      "pre",
      "pre"
    ],
    "/<machinekey": [
      "pre"
    ],
    "validationkey=\"autogenerateisolateapps\"": [
      "pre",
      "ol",
      "li",
      "pre",
      "pre",
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "decryptionkey=\"autogenerateisolateapps\"": [
      "pre",
      "ol",
      "li",
      "pre",
      "pre",
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "validation=\"sha1\"": [
      "pre",
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "decryption=\"auto\"": [
      "pre",
      "pre",
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "/": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ol",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ol",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "follows": [
      "p",
      "ul",
      "li"
    ],
    "specifies": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "mac": [
      "ul",
      "li",
      "p"
    ],
    "checked": [
      "ul",
      "li",
      "p"
    ],
    "at": [
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "enableviewstatemac": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "em",
      "em",
      "p",
      "em",
      "ol",
      "li",
      "em",
      "em"
    ],
    "true": [
      "ul",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "em"
    ],
    "/or<%@page": [
      "ul",
      "li",
      "p"
    ],
    "%forms": [
      "ul",
      "li"
    ],
    "signing": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "ticket": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "enabled": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "b"
    ],
    "cookieless": [
      "ul",
      "li",
      "p"
    ],
    "mode": [
      "ul",
      "li",
      "p"
    ],
    "url": [
      "ul",
      "li",
      "p"
    ],
    "decrypt": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "features": [
      "ul",
      "li",
      "p"
    ],
    "3des": [
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "em",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "em",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "hmacs": [
      "ul",
      "li",
      "p"
    ],
    "specify": [
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "supports": [
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "following": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "options": [
      "ul",
      "li",
      "p"
    ],
    "selected": [
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "specified": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "attribute using 3des": [
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "is generally": [
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "strong": [
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "%": [
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "%@page": [
      "pre",
      "pre",
      "pre"
    ],
    "general": [
      "p"
    ],
    "tamper-proofing": [
      "p"
    ],
    "protection=\"validation\"": [
      "p",
      "em"
    ],
    "\"all\".": [
      "p"
    ],
    "protection=\"all\"": [
      "p",
      "em",
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "pre"
    ],
    "protection": [
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em",
      "ol",
      "li",
      "em"
    ],
    "=": [
      "p",
      "em",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "\"encryption\",": [
      "p"
    ],
    "then": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "hashes": [
      "p",
      "p"
    ],
    "even": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "3des.": [
      "p"
    ],
    "encrypts": [
      "p"
    ],
    "\"all\"": [
      "em",
      "ul",
      "li",
      "b",
      "em"
    ],
    "\"encryption\"": [
      "em",
      "ul",
      "li",
      "em"
    ],
    "ways": [
      "p",
      "p"
    ],
    "turn": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "into": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "unintelligible": [
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "cipher": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "text": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "cannot": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "viewed": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "enable": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "must": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "one": [
      "p",
      "p",
      "p"
    ],
    "configurations": [
      "p",
      "p"
    ],
    "/<pages": [
      "pre"
    ],
    "%<%@page": [
      "pre"
    ],
    "auto": [
      "p",
      "em",
      "ul",
      "li",
      "b",
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "em",
      "em",
      "em"
    ],
    "has": [
      "p",
      "ul",
      "li"
    ],
    "specifically": [
      "p",
      "ul",
      "li"
    ],
    "asked": [
      "p",
      "ul",
      "li"
    ],
    "always": [
      "p",
      "em",
      "p",
      "em",
      "ul",
      "li",
      "b",
      "ol",
      "li",
      "em"
    ],
    "forces": [
      "p",
      "ul",
      "li"
    ],
    "does": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "note": [
      "p",
      "b",
      "p",
      "b",
      "p",
      "b",
      "ul",
      "li",
      "p",
      "b",
      "p",
      "b",
      "p",
      "b"
    ],
    "contains": [
      "p"
    ],
    "avoid": [
      "p",
      "p"
    ],
    "performance": [
      "p"
    ],
    "overhead": [
      "p"
    ],
    "consider": [
      "p"
    ],
    "storing": [
      "p"
    ],
    "verifying": [
      "h2",
      "h2"
    ],
    "see": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "machineconfig.comments": [
      "p",
      "em",
      "p",
      "em"
    ],
    "example": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h3"
    ],
    "/note:": [
      "ol",
      "li"
    ],
    "canoverride": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "machine'senableviewstatemac": [
      "ol",
      "li",
      "p"
    ],
    "level": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "/the": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "\"sha1\"": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "rather": [
      "ol",
      "li",
      "p"
    ],
    "review": [
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "/in": [
      "ol",
      "li"
    ],
    "above": [
      "ol",
      "li",
      "p"
    ],
    "autogenerate": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "instructs": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "isolateapps": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "modifier": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "causes": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "unique": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "id": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "correct": [
      "ol",
      "li",
      "p"
    ],
    "single": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "deployed": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "all": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "p",
      "p",
      "em",
      "p",
      "p"
    ],
    "servers": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "more": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "information": [
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "section": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "document": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "configuring": [
      "h2",
      "h2"
    ],
    "encoded": [
      "p",
      "p"
    ],
    "user": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "could": [
      "p"
    ],
    "decode": [
      "p"
    ],
    "view": [
      "p"
    ],
    "needs": [
      "p"
    ],
    "explicitly": [
      "p",
      "p",
      "p"
    ],
    "call": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "registerrequiresviewstateencryption": [
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "class": [
      "p",
      "ul",
      "li"
    ],
    "take": [
      "p",
      "p"
    ],
    "three": [
      "p"
    ],
    "possible": [
      "p"
    ],
    "means": [
      "ul",
      "li"
    ],
    "entire": [
      "ul",
      "li",
      "p"
    ],
    "just": [
      "ul",
      "li",
      "p"
    ],
    "control.": [
      "ul",
      "li",
      "p"
    ],
    "ask": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "never": [
      "ul",
      "li",
      "b"
    ],
    "disables": [
      "ul",
      "li"
    ],
    "ideally": [
      "p"
    ],
    "store": [
      "p",
      "p"
    ],
    "thereby": [
      "p"
    ],
    "check": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "/if": [
      "ol",
      "li"
    ],
    "want": [
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "every": [
      "ol",
      "li",
      "p"
    ],
    "within": [
      "ol",
      "li",
      "p"
    ],
    "pageregisterrequiresviewstateencryption();": [
      "ol",
      "li",
      "pre"
    ],
    "validation=\"aes\"": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "overloaded": [
      "ol",
      "li",
      "p"
    ],
    "aes because": [
      "ol",
      "li",
      "p"
    ],
    "offers": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "sizes": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "bits": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "secure": [
      "ol",
      "li",
      "p"
    ],
    "/unless": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "leave": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "configuration": [
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "resemble": [
      "p",
      "p"
    ],
    "transmitted": [
      "p"
    ],
    "base64": [
      "p",
      "p"
    ],
    "string": [
      "p"
    ],
    "first": [
      "p"
    ],
    "glance": [
      "p"
    ],
    "encoding": [
      "p"
    ],
    "no": [
      "p"
    ],
    "security": [
      "p"
    ],
    "easily": [
      "p"
    ],
    "decoded": [
      "p"
    ],
    "remain": [
      "p",
      "p"
    ],
    "confidential": [
      "p"
    ],
    "two": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "stored": [
      "ul",
      "li",
      "p"
    ],
    "such": [
      "ul",
      "li"
    ],
    "names": [
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "client": [
      "ul",
      "li"
    ],
    "between": [
      "ul",
      "li"
    ],
    "browser": [
      "ul",
      "li"
    ],
    "sent": [
      "ul",
      "li"
    ],
    "protected": [
      "p",
      "p"
    ],
    "against": [
      "p"
    ],
    "tampering": [
      "p"
    ],
    "forms>": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "system.web>": [
      "pre"
    ],
    "mode=\"forms\"": [
      "pre"
    ],
    "name=\"authcookie\"": [
      "pre"
    ],
    "loginurl=\"loginaspx\"": [
      "pre"
    ],
    "protection=\"all\"/": [
      "pre"
    ],
    "/authentication></system.web>": [
      "pre"
    ],
    "/you": [
      "ol",
      "li"
    ],
    "its": [
      "ol",
      "li",
      "p"
    ],
    "new": [
      "p",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "lets": [
      "p"
    ],
    "form": [
      "p",
      "b"
    ],
    "/with": [
      "ol",
      "li"
    ],
    "bytes": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "long": [
      "ol",
      "li",
      "p"
    ],
    "characters": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "des": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "otherwise": [
      "ol",
      "li",
      "p"
    ],
    "algorithms": [
      "ol",
      "li",
      "p"
    ],
    "sections": [
      "ol",
      "li",
      "p"
    ],
    "database": [
      "p"
    ],
    "system": [
      "p"
    ],
    "passwords": [
      "p",
      "p"
    ],
    "select": [
      "p"
    ],
    "format": [
      "p"
    ],
    "encrypting": [
      "p"
    ],
    "decrypting": [
      "p"
    ],
    "notice": [
      "p"
    ],
    "passwordformat": [
      "p",
      "em",
      "p",
      "em"
    ],
    "\"encrypted\"": [
      "p",
      "em"
    ],
    "defaultprovider=\"aspnetsqlmembershipprovider\"": [
      "pre"
    ],
    "userisonlinetimewindow=\"15\"": [
      "pre"
    ],
    "hashalgorithmtype=\"\"": [
      "pre"
    ],
    "providers>": [
      "pre"
    ],
    "clear": [
      "pre"
    ],
    "add": [
      "pre"
    ],
    "connectionstringname=\"localsqlserver\"": [
      "pre"
    ],
    "enablepasswordretrieval=\"false\"": [
      "pre"
    ],
    "enablepasswordreset=\"true\"": [
      "pre"
    ],
    "requiresuniqueemail=\"false\"": [
      "pre"
    ],
    "passwordformat=\"encrypted\"": [
      "pre"
    ],
    "../>": [
      "pre"
    ],
    "/providers></membership>": [
      "pre"
    ],
    "\"hashed\"": [
      "p",
      "em"
    ],
    "enabled=\"true\"": [
      "p",
      "em",
      "pre",
      "pre"
    ],
    "anonymousidentification>element": [
      "p"
    ],
    "cookieprotection=\"encrypted\"": [
      "p",
      "em",
      "pre"
    ],
    "anonymousidentification": [
      "em",
      "pre"
    ],
    "cookiename=\"aspxanonymous\"": [
      "pre"
    ],
    "cookietimeout=\"100000\"": [
      "pre"
    ],
    "cookiepath=\"/\"": [
      "pre"
    ],
    "cookierequiressl=\"false\"": [
      "pre"
    ],
    "cookieslidingexpiration=\"true\"": [
      "pre"
    ],
    "cookieless=\"usecookies\"": [
      "pre"
    ],
    "domain=\"\"": [
      "pre"
    ],
    "cookieprotection": [
      "p",
      "em",
      "p",
      "em"
    ],
    "perform": [
      "ul",
      "li"
    ],
    "both": [
      "ul",
      "li",
      "p"
    ],
    "\"validation\"": [
      "ul",
      "li",
      "em"
    ],
    "\"none\"": [
      "ul",
      "li",
      "em"
    ],
    "validation\"": [
      "b"
    ],
    "none": [
      "b"
    ],
    "particular": [
      "p"
    ],
    "elect": [
      "p"
    ],
    "rolemanager>": [
      "p"
    ],
    "rolemanager": [
      "em",
      "pre"
    ],
    "cookieprotection=\"all\"": [
      "p",
      "em",
      "pre"
    ],
    "cacherolesincookie=\"true\"": [
      "pre"
    ],
    "deploy": [
      "p"
    ],
    "files": [
      "p",
      "p"
    ],
    "respectively": [
      "p"
    ],
    "required": [
      "p",
      "p"
    ],
    "guarantee": [
      "p"
    ],
    "will": [
      "p"
    ],
    "handle": [
      "p"
    ],
    "successive": [
      "p"
    ],
    "similar": [
      "p"
    ],
    "validationkey=\"21f090935f6e49c2c797f69bbaad8402abd2ee0b667a8b44ea7dd4374267a75d7": [
      "pre"
    ],
    "ad972a119482d15a4127461db1dc347c1a63ae5f1ccfaacff1b72a7f0a281b\"": [
      "pre"
    ],
    "decryptionkey=\"abaa84d7ec4bb56d75d217cecffb9628809bdb8bf91cfcd64568a145be59719f\"": [
      "pre"
    ],
    "decryption=\"aes\"/": [
      "pre"
    ],
    "isolate": [
      "p"
    ],
    "other": [
      "p",
      "p"
    ],
    "place": [
      "p"
    ],
    "duplicate": [
      "p"
    ],
    "rngcryptoserviceprovider": [
      "ul",
      "li",
      "em",
      "pre"
    ],
    "number": [
      "ul",
      "li",
      "p"
    ],
    "appropriate": [
      "ul",
      "li"
    ],
    "size": [
      "ul",
      "li",
      "p"
    ],
    "lengths": [
      "ul",
      "li"
    ],
    "hexadecimal": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "characters.": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "compile": [
      "p"
    ],
    "create": [
      "p"
    ],
    "console": [
      "p"
    ],
    "pass": [
      "p",
      "p"
    ],
    "command": [
      "p",
      "p"
    ],
    "line": [
      "p",
      "p"
    ],
    "argument": [
      "p",
      "p",
      "p"
    ],
    "expressed": [
      "p"
    ],
    "desired": [
      "p"
    ],
    "byte": [
      "p"
    ],
    "represented": [
      "p"
    ],
    "therefore": [
      "p",
      "p"
    ],
    "32-byte": [
      "p"
    ],
    "returns": [
      "p"
    ],
    "character": [
      "p"
    ],
    "64-byte)": [
      "p"
    ],
    "c#": [
      "h3"
    ],
    "systemtext;using": [
      "pre"
    ],
    "systemsecurity;using": [
      "pre"
    ],
    "systemsecurity.cryptography;class": [
      "pre"
    ],
    "app": [
      "pre"
    ],
    "{": [
      "pre",
      "pre"
    ],
    "static": [
      "pre"
    ],
    "void": [
      "pre"
    ],
    "mainstring[]": [
      "pre"
    ],
    "argv": [
      "pre"
    ],
    "int": [
      "pre",
      "pre"
    ],
    "len": [
      "pre",
      "pre"
    ],
    "argv.length": [
      "pre"
    ],
    "intparse(argv[0]);": [
      "pre"
    ],
    "byte]": [
      "pre"
    ],
    "buff": [
      "pre"
    ],
    "bytelen/2];": [
      "pre"
    ],
    "rng": [
      "pre"
    ],
    "rngcryptoserviceprovider);": [
      "pre"
    ],
    "rnggetbytes(buff);": [
      "pre"
    ],
    "stringbuilder": [
      "pre"
    ],
    "sb": [
      "pre"
    ],
    "stringbuilderlen);": [
      "pre"
    ],
    "i=0": [
      "pre"
    ],
    "ibuff.length;": [
      "pre"
    ],
    "i++": [
      "pre"
    ],
    "sbappend(string.format(\"{0:x2}\",": [
      "pre"
    ],
    "buffi]));": [
      "pre"
    ],
    "consolewriteline(sb);": [
      "pre"
    ],
    "}}": [
      "pre"
    ],
    "run": [
      "p"
    ],
    "times": [
      "p"
    ],
    "copy": [
      "p"
    ],
    "paste": [
      "p"
    ],
    "resulting": [
      "p"
    ],
    "element—one": [
      "p"
    ],
    "time": [
      "p",
      "p",
      "p",
      "p"
    ],
    "logon": [
      "p"
    ],
    "work": [
      "p"
    ],
    "multiple": [
      "p"
    ],
    "located": [
      "p"
    ],
    "common": [
      "p",
      "p",
      "p"
    ],
    "shares": [
      "p"
    ],
    "manual": [
      "p",
      "p"
    ],
    "about": [
      "p"
    ],
    "\"web": [
      "p"
    ],
    "considerations\"": [
      "p"
    ],
    "there": [
      "p"
    ],
    "another": [
      "p"
    ],
    "important": [
      "p"
    ],
    "reason": [
      "p"
    ],
    "upgrade": [
      "p"
    ],
    "version": [
      "p"
    ],
    "aspnet,": [
      "p"
    ],
    "material": [
      "p"
    ],
    "automatically": [
      "p"
    ],
    "changes": [
      "p"
    ],
    "runs": [
      "p"
    ],
    "stable": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Contents",
      "Objectives",
      "Overview",
      "Machine Key Explained",
      "ViewState",
      "Forms Authentication Tickets",
      "Membership",
      "Anonymous Identification",
      "Role Cookies",
      "Web Farm Deployment Considerations",
      "Sharing Authentication Tickets Across Applications",
      "Upgrading ASP.NET Versions"
    ],
    "ul": [
      "ASP.NET 4.0",
      "Objectives \r\n    Overview \r\n    Machine Key Explained \r\n    ViewState \r\n    Forms Authentication Tickets \r\n    Membership \r\n    Anonymous Identification \r\n    Role Cookies \r\n    Web Farm Deployment Considerations \r\n    Sharing Authentication Tickets Across Applications \r\n    Upgrading ASP.NET Versions \r\n    Additional Resources",
      "Verify ViewState is configured to be tamper proof. \r\n    Configure the <machineKey> to encrypt ViewState. \r\n    Verify forms authentication tickets are configured to be tamper proof. \r\n    Configure <machineKey> to encrypt forms authentication tickets. \r\n    Learn to configure the membership feature to use an encrypted password instead of a hashed password by using machineKey. \r\n    Learn to protect an anonymous identification cookie by using machineKey. \r\n    Learn to protect role cookies by using machineKey. \r\n    Generate random key values for use in a Web farm.",
      "validationKey. This specifies the key that the HMAC algorithm uses to make ViewState tamper proof. The ViewState MAC is checked at the server when either the enableViewStateMAC attribute of the <pages> element or the EnableViewStateMac attribute of the @Page directive is set to true. <pages enableViewStateMAC=\"true\" ... />or<%@Page EnableViewStateMac=\"true\" ... %>Forms authentication also uses this key for signing the authentication ticket. Role manager and anonymous identification, if enabled, also uses this key for signing their cookies. If you use anonymous identification in cookieless mode, the data on the URL is also signed with this value.\r\n    \r\n      \r\n        \r\n          decryptionKey. This specifies the key used to encrypt and decrypt data. Forms authentication, role manager and anonymous identification features use this key to encrypt and decrypt the authentication ticket, roles cookie and anonymous identification cookie. ASP.NET uses the key to encrypt and decrypt ViewState, but only if the validation attribute is set to AES or 3DES. \r\n    \r\n    \r\n      \r\n        \r\n          decryption. This specifies the symmetric encryption algorithm used to encrypt and decrypt forms authentication tickets. \r\n    \r\n    \r\n      \r\n      \r\n        validation. This specifies the hashing algorithm used to generate HMACs to make ViewState and forms authentication tickets tamper proof. This attribute is also used to specify the encryption algorithm used for ViewState encryption. This attribute supports the following options: SHA1. SHA1 is used to tamper proof ViewState and, if configured, the forms authentication ticket. When SHA1 is selected for the validation attribute, the algorithm used is HMACSHA1. MD5. MD5 is used to tamper proof ViewState and, if configured, the forms authentication ticket. AES. AES is used to encrypt ViewState with the key specified in the decryptionKey attribute. 3DES. 3DES is used to encrypt ViewState with the key specified in the decryptionKey attribute. Using 3DES is not recommended, because it is generally considered not as strong as AES.",
      "SHA1. SHA1 is used to tamper proof ViewState and, if configured, the forms authentication ticket. When SHA1 is selected for the validation attribute, the algorithm used is HMACSHA1. MD5. MD5 is used to tamper proof ViewState and, if configured, the forms authentication ticket. AES. AES is used to encrypt ViewState with the key specified in the decryptionKey attribute. 3DES. 3DES is used to encrypt ViewState with the key specified in the decryptionKey attribute. Using 3DES is not recommended, because it is generally considered not as strong as AES.",
      "Use an HMAC to make ViewState tamper proof. \r\n    Use encryption to turn ViewState into unintelligible cipher text. This ensures that any sensitive data in ViewState cannot be viewed.",
      "Auto. This is the default setting, which means the ViewState on the page is only encrypted if a control has specifically asked for it. Note: If a control on the page requests encryption, then the entire ViewState is encrypted (not just the ViewState for the control).\r\n    \r\n      Always. This forces encryption even if a control does not ask for it. \r\n    \r\n      Never. This disables encryption even if a control does ask for it.",
      "Use an HMAC to make the ticket tamper proof. \r\n    Use encryption to turn the ticket contents into unintelligible cipher text. This ensures that the data stored in the ticket, such as user names, cannot be viewed on the client or between the browser and server if the ticket is sent in a cookie.",
      "\"All\"\r\n       (to perform both validation and encryption) \r\n    \r\n      \"Encryption\"\r\n    \r\n    \r\n      \"Validation\" (the default) \r\n    \r\n      \"None\"",
      "Use the RNGCryptoServiceProvider class to generate a cryptographically strong random number. \r\n    Choose an appropriate key size. The recommended key lengths are as follows: For SHA1, set the validationKey to 64 bytes (128 hexadecimal characters). For AES, set the decryptionKey to 32 bytes (64 hexadecimal characters). For 3DES, set the decryptionKey to 24 bytes (48 hexadecimal characters).",
      "For SHA1, set the validationKey to 64 bytes (128 hexadecimal characters). For AES, set the decryptionKey to 32 bytes (64 hexadecimal characters). For 3DES, set the decryptionKey to 24 bytes (48 hexadecimal characters)."
    ],
    "li": [
      "ASP.NET 4.0",
      "Objectives",
      "Overview",
      "Machine Key Explained",
      "ViewState",
      "Forms Authentication Tickets",
      "Membership",
      "Anonymous Identification",
      "Role Cookies",
      "Web Farm Deployment Considerations",
      "Sharing Authentication Tickets Across Applications",
      "Upgrading ASP.NET Versions",
      "Additional Resources",
      "Verify ViewState is configured to be tamper proof.",
      "Configure the <machineKey> to encrypt ViewState.",
      "Verify forms authentication tickets are configured to be tamper proof.",
      "Configure <machineKey> to encrypt forms authentication tickets.",
      "Learn to configure the membership feature to use an encrypted password instead of a hashed password by using machineKey.",
      "Learn to protect an anonymous identification cookie by using machineKey.",
      "Learn to protect role cookies by using machineKey.",
      "Generate random key values for use in a Web farm.",
      "validationKey. This specifies the key that the HMAC algorithm uses to make ViewState tamper proof. The ViewState MAC is checked at the server when either the enableViewStateMAC attribute of the <pages> element or the EnableViewStateMac attribute of the @Page directive is set to true. <pages enableViewStateMAC=\"true\" ... />or<%@Page EnableViewStateMac=\"true\" ... %>Forms authentication also uses this key for signing the authentication ticket. Role manager and anonymous identification, if enabled, also uses this key for signing their cookies. If you use anonymous identification in cookieless mode, the data on the URL is also signed with this value.",
      "decryptionKey. This specifies the key used to encrypt and decrypt data. Forms authentication, role manager and anonymous identification features use this key to encrypt and decrypt the authentication ticket, roles cookie and anonymous identification cookie. ASP.NET uses the key to encrypt and decrypt ViewState, but only if the validation attribute is set to AES or 3DES.",
      "decryption. This specifies the symmetric encryption algorithm used to encrypt and decrypt forms authentication tickets.",
      "validation. This specifies the hashing algorithm used to generate HMACs to make ViewState and forms authentication tickets tamper proof. This attribute is also used to specify the encryption algorithm used for ViewState encryption. This attribute supports the following options: SHA1. SHA1 is used to tamper proof ViewState and, if configured, the forms authentication ticket. When SHA1 is selected for the validation attribute, the algorithm used is HMACSHA1. MD5. MD5 is used to tamper proof ViewState and, if configured, the forms authentication ticket. AES. AES is used to encrypt ViewState with the key specified in the decryptionKey attribute. 3DES. 3DES is used to encrypt ViewState with the key specified in the decryptionKey attribute. Using 3DES is not recommended, because it is generally considered not as strong as AES.",
      "SHA1. SHA1 is used to tamper proof ViewState and, if configured, the forms authentication ticket. When SHA1 is selected for the validation attribute, the algorithm used is HMACSHA1.",
      "MD5. MD5 is used to tamper proof ViewState and, if configured, the forms authentication ticket.",
      "AES. AES is used to encrypt ViewState with the key specified in the decryptionKey attribute.",
      "3DES. 3DES is used to encrypt ViewState with the key specified in the decryptionKey attribute. Using 3DES is not recommended, because it is generally considered not as strong as AES.",
      "Use an HMAC to make ViewState tamper proof.",
      "Use encryption to turn ViewState into unintelligible cipher text. This ensures that any sensitive data in ViewState cannot be viewed.",
      "Verify the enableViewStateMac attribute of the <pages> element is set to true, as shown in the following example. <pages enableViewStateMac=\"true\" ... />Note: You canoverride the machine'senableViewStateMac setting at the application or page level.",
      "Verify that the validation attribute of the <machineKey> element is set to SHA1, as shown in the following example. <machineKey ...  validation=\"SHA1\" ... />The validation attribute specifies the hashing algorithm used to tamper proof ViewState. The default value is \"SHA1\", and you should use this rather than MD5 because it produces a larger hash than MD5 and is cryptographically stronger.",
      "Review the validationKey setting of the <machineKey> element. <machineKey validationKey=\"AutoGenerate,IsolateApps\" ... />In the default settings shown above, the AutoGenerate setting instructs ASP.NET to generate a random key. The IsolateApps modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application. The default value is correct for a single server deployment. You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the validationKey value and make sure that it is the same on all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "Auto. This is the default setting, which means the ViewState on the page is only encrypted if a control has specifically asked for it. Note: If a control on the page requests encryption, then the entire ViewState is encrypted (not just the ViewState for the control).",
      "Always. This forces encryption even if a control does not ask for it.",
      "Never. This disables encryption even if a control does ask for it.",
      "Check that the viewStateEncryptionMode attribute of the <pages> element is set to Always, as shown in the following example. <pages ... viewStateEncryptionMode=\"Always\" ... />If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example. <pages ... viewStateEncryptionMode=\"Auto\" ... />   Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example. Page.RegisterRequiresViewStateEncryption();",
      "Specify the encryption algorithm to use on the validation attribute, as shown in the following example. <machineKey ... validation=\"AES\" ... />The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES. Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES, it is considered more secure and should be used.",
      "Review the decryptionKey attribute of the <machineKey> element: <machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... />Unless your application is installed in a Web farm, you should leave the decryptionKey attribute with the default values shown in the example. In a Web farm, you must manually generate the decryptionKey value and ensure that the value is the same across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "Use an HMAC to make the ticket tamper proof.",
      "Use encryption to turn the ticket contents into unintelligible cipher text. This ensures that the data stored in the ticket, such as user names, cannot be viewed on the client or between the browser and server if the ticket is sent in a cookie.",
      "Check that the protection attribute of the <forms> element to All, as shown in the following example. <forms ... protection=\"All\" ... />You canoverride the protection attribute setting for all Web applications on the server by using the machine-level Web.config file or, for a specific application, by using its Web.config file.",
      "Review the validation attribute of the <machineKey> element, as shown in the following example. <machineKey ... validation=\"SHA1\" ... />The validation attribute specifies the hashing algorithm used by the HMAC algorithm used to tamper proof the forms authentication ticket. You should use the default SHA1 setting because this produces a larger hash than MD5 and is cryptographically stronger. You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the validationKey value and make sure that the same value is used across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "Review the validationKey attribute of the <machineKey> element , as shown in the following example. <machineKey validationKey=\"AutoGenerate,IsolateApps\" ... />The example configuration shows the default settings. The AutoGenerate setting instructs ASP.NET to generate a random key. The IsolateApps modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application.",
      "Check that the protection attribute of the <forms> element is set to All, as shown in the following example. <forms protection=\"All\" ... />",
      "Use the decryption attribute of the <machineKey> element to specify the encryption algorithm as shown in the following example.  <machineKey decryption=\"Auto\" ... />With the default Auto setting, if the value of the decryptionKey attribute is 8 bytes long (16 characters) then Auto defaults to DES. Otherwise, Auto defaults to AES. ASP.NET supports AES, 3DES and DES algorithms. You should use AES because it offers larger key sizes (128 bits, 192 bits, 256 bits) than 3DES.",
      "Review the decryptionKey attribute of the <machineKey> element. <machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... />Unless your application is installed in a Web farm or you need to share authentication tickets across two or more applications, you should leave the decryptionKey attribute with the default values shown in the example. In a Web farm or if you need to share authentication tickets across applications, you must manually generate the decryptionKey value and make sure that the same value is used for all servers in the farm. For more information, see the sections, Web Farm Deployment Considerations and Sharing Authentication Tickets Across Applications in this document.",
      "\"All\"\r\n       (to perform both validation and encryption)",
      "\"Encryption\"",
      "\"Validation\" (the default)",
      "\"None\"",
      "Use the RNGCryptoServiceProvider class to generate a cryptographically strong random number.",
      "Choose an appropriate key size. The recommended key lengths are as follows: For SHA1, set the validationKey to 64 bytes (128 hexadecimal characters). For AES, set the decryptionKey to 32 bytes (64 hexadecimal characters). For 3DES, set the decryptionKey to 24 bytes (48 hexadecimal characters).",
      "For SHA1, set the validationKey to 64 bytes (128 hexadecimal characters).",
      "For AES, set the decryptionKey to 32 bytes (64 hexadecimal characters).",
      "For 3DES, set the decryptionKey to 24 bytes (48 hexadecimal characters)."
    ],
    "p": [
      "This How to explains the <machineKey> element in the Web.config file and shows how to configure the <machineKey> element to control tamper proofing and encryption of ViewState, forms authentication tickets, and role cookies. ViewState is signed and tamper proof by default. You can request encryption for pages that contain sensitive items in their ViewState by using the ViewStateEncryptionMode attribute. Forms authentication and role cookies are signed and encrypted by default. You do not need to modify the default settings unless your application is in a Web farm or if you need to share authentication tickets across applications. In these cases, you need to manually generate encryption and hashing keys.",
      "The default ASP.NET settings ensure that forms authentication tickets are tamper proof and encrypted, and that ViewState is tamper proof. This ensures that any modification of the ViewState or authentication tickets either on the client's computer or over the network is detected when the server processes the data.",
      "To provide tamper proof ViewState, a hashed message authentication code (HMAC) is generated from the ViewState content and the hash is compared on subsequent requests. The validation attribute of the <machineKey> indicates which hashing algorithm to use, and it defaults to SHA1, which uses the HMACSHA1 algorithm. Valid choices for hashing include SHA1 or MD5, although SHA1 is preferable because it produces a larger hash and is considered cryptographically stronger than MD5. The validationKey attribute of <machineKey> is used in conjunction with the ViewState content to produce the HMAC. If your application is installed in a Web farm, you need to change the validationKey from AutoGenerate,IsolateApps to a specific manually generated key value.",
      "If you need to use round trips for potentially sensitive data, you can force encryption of ViewState for a specific page. To do this, set ViewStateEncryptionMode=\"Always\" on the @Page directive for that page. Alternatively, you can use a control to request that the page's ViewState be encrypted by calling the Page.RegisterRequiresViewStateEncryption method. Using this method in conjunction with the default setting of ViewStateEncryptionMode=\"Auto\" ensures that ViewState is only encrypted for those pages that need it.",
      "To encrypt ViewState in a Web farm, you need to manually set the validationKey value. The encryption algorithm is determined by the validation attribute of the <machineKey>. The validation attribute defaults to SHA1, which provides tamper proofing but not encryption. To support ViewState encryption, you should set the validation attribute to AES, the recommended symmetric encryption algorithm.",
      "Forms authentication tickets are tamper proof and encrypted by default. The decryption and decryptionKey attributes control the encryption. The validationKey controls the hashing. If your application is in a Web farm, you need to manually set the validationKey and decryptionKey. Also, if you need to share forms authentication tickets across applications in separate virtual directories, you need to manually set the keys to ensure that they match in each application's Web.config file.",
      "If you use the Role Manager feature, and choose to cache roles, a roles cookie is created. The roles cookie is also signed and encrypted by default, using the same mechanisms as forms authentication tickets.",
      "The default settings for the <pages> and <machineKey> elements are defined in the machine-level Web.config.comments file. The relevant default settings are shown here for reference.",
      "When you configure ViewState, the <pages> element is used in conjunction with the <machineKey> element.",
      "The <machineKey> attributes are as follows:",
      "validationKey. This specifies the key that the HMAC algorithm uses to make ViewState tamper proof. The ViewState MAC is checked at the server when either the enableViewStateMAC attribute of the <pages> element or the EnableViewStateMac attribute of the @Page directive is set to true. <pages enableViewStateMAC=\"true\" ... />or<%@Page EnableViewStateMac=\"true\" ... %>",
      "Forms authentication also uses this key for signing the authentication ticket. Role manager and anonymous identification, if enabled, also uses this key for signing their cookies. If you use anonymous identification in cookieless mode, the data on the URL is also signed with this value.",
      "decryptionKey. This specifies the key used to encrypt and decrypt data. Forms authentication, role manager and anonymous identification features use this key to encrypt and decrypt the authentication ticket, roles cookie and anonymous identification cookie. ASP.NET uses the key to encrypt and decrypt ViewState, but only if the validation attribute is set to AES or 3DES.",
      "decryption. This specifies the symmetric encryption algorithm used to encrypt and decrypt forms authentication tickets.",
      "validation. This specifies the hashing algorithm used to generate HMACs to make ViewState and forms authentication tickets tamper proof. This attribute is also used to specify the encryption algorithm used for ViewState encryption. This attribute supports the following options: SHA1. SHA1 is used to tamper proof ViewState and, if configured, the forms authentication ticket. When SHA1 is selected for the validation attribute, the algorithm used is HMACSHA1. MD5. MD5 is used to tamper proof ViewState and, if configured, the forms authentication ticket. AES. AES is used to encrypt ViewState with the key specified in the decryptionKey attribute. 3DES. 3DES is used to encrypt ViewState with the key specified in the decryptionKey attribute. Using 3DES is not recommended, because it is generally considered not as strong as AES.",
      "",
      "In general, you should choose SHA1 over MD5 for tamper-proofing because this produces a larger hash than MD5 and is considered cryptographically stronger.",
      "Forms authentication defaults to SHA1 for tamper proofing (if <forms protection=\"validation\"> or \"All\"). When <forms protection=\"All\"> or <forms protection = \"Encryption\">, then forms authentication hashes the forms authentication ticket by using either MD5 or HMACSHA1 (HMACSHA1 is used even if validation is set to AES or 3DES). Forms authentication then encrypts the ticket using the algorithm specified in the decryption attribute.",
      "You can protect ViewState in the following ways:",
      "To enable hashing of ViewState, you must use one of the following configurations.",
      "or",
      "To enable encryption of ViewState, you must use one of the following configurations.",
      "or",
      "With viewStateEncryptionMode set to Auto, the page is only encrypted if a control has specifically asked for it by calling the Page.RegisterRequiresViewStateEncryption method to request encryption. If it set to Always, this forces encryption even if a control does not request it.",
      "Note: Do not encrypt ViewState unless it contains sensitive data. To avoid the performance overhead of encryption, consider storing sensitive data on the server and not in ViewState.",
      "ViewState is tamper proof by default. ViewState tamper proofing is enabled by the enableViewStateMac attribute on the <pages> element and the validationKey and validation attributes on the <machineKey> element.",
      "Note: You can see the default <machineKey> setting in the Machine.config.comments file.",
      "To verify that tamper proofing is enabled for ViewState",
      "Note: You canoverride the machine'senableViewStateMac setting at the application or page level.",
      "The validation attribute specifies the hashing algorithm used to tamper proof ViewState. The default value is \"SHA1\", and you should use this rather than MD5 because it produces a larger hash than MD5 and is cryptographically stronger.",
      "In the default settings shown above, the AutoGenerate setting instructs ASP.NET to generate a random key. The IsolateApps modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application.",
      "The default value is correct for a single server deployment. You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the validationKey value and make sure that it is the same on all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "By default, information in ViewState is encoded, but not encrypted. A user could decode and view the ViewState data.",
      "To encrypt ViewState, either a control on a page needs to explicitly request ViewState encryption or the viewStateEncryptionMode attribute of the <pages> element must be set to Always. To request encryption, a control must call the RegisterRequiresViewStateEncryption method of the Page class.",
      "The viewStateEncryptionMode attribute can take one of three possible attributes:",
      "Note: If a control on the page requests encryption, then the entire ViewState is encrypted (not just the ViewState for the control).",
      "Ideally, you should not store sensitive data in ViewState and thereby avoid the need to encrypt it. If you do need to encrypt ViewState, then you need to specify the encryption algorithm to use on the validation attribute.",
      "To encrypt ViewState",
      "If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example.",
      "Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example.",
      "The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES. Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES, it is considered more secure and should be used.",
      "Unless your application is installed in a Web farm, you should leave the decryptionKey attribute with the default values shown in the example. In a Web farm, you must manually generate the decryptionKey value and ensure that the value is the same across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "For ViewState encryption, your <machineKey> configuration should resemble the following example",
      "Note: By default, ViewState is transmitted as a Base64 encoded string. Although at first glance it is unintelligible, Base64 encoding provides no security because it is easily decoded. If you need to ensure that ViewState contents remain confidential, you must use encryption.",
      "You can protect forms authentication tickets in two ways:",
      "To ensure that forms authentication tickets are encrypted and protected against tampering, set the protection attribute of the <forms> element to All, as shown in the following example.",
      "By default, forms authentication tickets are configured for tamper proofing by using the validationKey and validation attributes of the <machineKey> element.",
      "To review forms authentication ticket configuration for tamper proofing",
      "You canoverride the protection attribute setting for all Web applications on the server by using the machine-level Web.config file or, for a specific application, by using its Web.config file.",
      "The validation attribute specifies the hashing algorithm used by the HMAC algorithm used to tamper proof the forms authentication ticket. You should use the default SHA1 setting because this produces a larger hash than MD5 and is cryptographically stronger.",
      "You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the validationKey value and make sure that the same value is used across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "The example configuration shows the default settings. The AutoGenerate setting instructs ASP.NET to generate a random key. The IsolateApps modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application.",
      "To encrypt forms authentication tickets, ASP.NET uses the decryptionKey and the new decryption attribute of the <machineKey> element. The decryption attribute lets you specify the encryption algorithm to use.",
      "To encrypt Form authentication tickets",
      "With the default Auto setting, if the value of the decryptionKey attribute is 8 bytes long (16 characters) then Auto defaults to DES. Otherwise, Auto defaults to AES. ASP.NET supports AES, 3DES and DES algorithms. You should use AES because it offers larger key sizes (128 bits, 192 bits, 256 bits) than 3DES.",
      "Unless your application is installed in a Web farm or you need to share authentication tickets across two or more applications, you should leave the decryptionKey attribute with the default values shown in the example. In a Web farm or if you need to share authentication tickets across applications, you must manually generate the decryptionKey value and make sure that the same value is used for all servers in the farm. For more information, see the sections, Web Farm Deployment Considerations and Sharing Authentication Tickets Across Applications in this document.",
      "For forms authentication ticket encryption, the <machineKey> settings should resemble the following example.",
      "If you use the membership feature, password hashes are stored in the membership database by default. The membership system also supports encrypted passwords. If you select encrypted password format, then the <machineKey> settings are used when encrypting and decrypting the data. If you want to store encrypted passwords, use the following configuration in the Web.config file. Notice that passwordFormat is set to \"Encrypted\".",
      "Note: The default setting for the passwordFormat attribute is \"Hashed\".",
      "ASP.NET supports anonymous identification, and you can encrypt the anonymous identification cookie. Encryption of the cookie uses the <machineKey> configuration. To enable anonymous identification, set enabled=\"true\" on the <anonymousIdentification>element in your Web.config file. To enable the cookies to be encrypted, set cookieProtection=\"Encrypted\", as shown here.",
      "The cookieProtection attribute can take any of the following values:",
      "ASP.NET also uses the <machineKey> settings to protect role cookies. The Role Manager can use role cookies to cache role names for a particular user. If you enable the Role Manager feature and elect to cache role names in the roles cookie, the default configuration in the Machine.config.comments file ensures that the roles cookie is tamper proof and encrypted. The cookieProtection attribute on the <roleManager> element is set to All.",
      "If you enable the Role Manager and cache role names, you can ensure that the cookie is protected by setting cookieProtection=\"All\" as shown in the following code example.",
      "If you deploy your application in a Web farm, you must ensure that the configuration files on each server share the same value for validationKey and decryptionKey, which are used for hashing and decryption respectively. This is required because you cannot guarantee which server will handle successive requests.",
      "With manually generated key values, the <machineKey> settings should be similar to the following example.",
      "If you want to isolate your application from other applications on the same server, place the <machineKey> in the Web.config file for each application on each server in the farm. Ensure that you use separate key values for each application, but duplicate each application's keys across all servers in the farm.",
      "To generate cryptographically random keys:",
      "The following code shows how to generate random key values. Compile the code to create a console application, and then pass the required key size as a command line argument expressed as the desired number of hexadecimal characters. Each byte is represented by two hexadecimal characters; therefore, to request a 32-byte key, pass 64 as a command line argument. If you do not specify an argument, the code returns a 128 hexadecimal character (64-byte) key.",
      "Run the application two times, and then copy and paste the resulting keys into the <machineKey> element—one time for validationKey and the other time for decryptionKey.",
      "If you need a single logon to work across multiple applications located in separate virtual directories, you need to share a common authentication ticket. To configure a common authentication ticket, you must manually generate validationKey and decryptionKey values and ensure that each application shares these values.",
      "If you want to share tickets across all applications on your server you can set these manual values on the <machineKey> element in the machine level Web.config file. To share tickets across specific applications, you can use a <machineKey> element with common validationKey and decryptionKey values in the relevant application's Web.config files.",
      "For information about how to generate manual key values, see the section, \"Web Farm Deployment Considerations,\" in this document.",
      "There is another important reason to explicitly set the <machineKey>. Each time you upgrade to a new version of ASP.NET, the key material used to automatically generate keys changes. Therefore, even if your application runs on a single Web server, if the keys need to remain stable over time, you should explicitly set the values for both validation and decryption.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "em": [
      "machineKey",
      "Web.config",
      "machineKey",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewStateEncryptionMode",
      "ViewState",
      "machineKey",
      "ViewState",
      "machineKey",
      "machineKey",
      "machineKey",
      "machineKey",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "validation",
      "machineKey",
      "validationKey",
      "machineKey",
      "ViewState",
      "validationKey",
      "AutoGenerate,IsolateApps",
      "ViewState",
      "ViewStateEncryptionMode=\"Always\"",
      "@Page",
      "ViewState",
      "Page.RegisterRequiresViewStateEncryption",
      "ViewStateEncryptionMode=\"Auto\"",
      "ViewState",
      "ViewState",
      "validationKey",
      "validation",
      "machineKey",
      "validation",
      "SHA1",
      "ViewState",
      "validation",
      "AES",
      "decryption",
      "decryptionKey",
      "validationKey",
      "validationKey",
      "decryptionKey",
      "Web.config",
      "Role Manager",
      "pages",
      "machineKey",
      "Web.config.comments",
      "ViewState",
      "pages",
      "machineKey",
      "machineKey",
      "validationKey",
      "ViewState",
      "ViewState",
      "enableViewStateMAC",
      "pages",
      "EnableViewStateMac",
      "@Page",
      "true",
      "decryptionKey",
      "ViewState",
      "validation",
      "AES",
      "3DES",
      "decryption",
      "validation",
      "ViewState",
      "ViewState",
      "SHA1",
      "SHA1",
      "ViewState",
      "SHA1",
      "validation",
      "HMACSHA1",
      "MD5",
      "MD5",
      "ViewState",
      "AES",
      "AES",
      "ViewState",
      "decryptionKey",
      "3DES",
      "3DES",
      "ViewState",
      "decryptionKey",
      "<forms protection=\"validation\">",
      "\"All\"",
      "<forms protection=\"All\">",
      "<forms protection = \"Encryption\">",
      "decryption",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "viewStateEncryptionMode",
      "Auto",
      "Page.RegisterRequiresViewStateEncryption",
      "Always",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "enableViewStateMac",
      "pages",
      "validationKey",
      "validation",
      "machineKey",
      "machineKey",
      "Machine.config.comments",
      "ViewState",
      "enableViewStateMac",
      "pages",
      "true",
      "enableViewStateMac",
      "validation",
      "machineKey",
      "validation",
      "ViewState",
      "\"SHA1\"",
      "validationKey",
      "machineKey",
      "AutoGenerate",
      "IsolateApps",
      "validationKey",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "viewStateEncryptionMode",
      "pages",
      "Always",
      "RegisterRequiresViewStateEncryption",
      "Page",
      "viewStateEncryptionMode",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "ViewState",
      "validation",
      "viewStateEncryptionMode",
      "pages",
      "Always",
      "ViewState",
      "viewStateEncryptionMode",
      "pages",
      "Auto",
      "RegisterRequiresViewStateEncryption",
      "validation",
      "validation",
      "decryptionKey",
      "machineKey",
      "decryptionKey",
      "decryptionKey",
      "ViewState",
      "machineKey",
      "ViewState",
      "ViewState",
      "protection",
      "forms",
      "All",
      "validationKey",
      "validation",
      "machineKey",
      "protection",
      "forms",
      "All",
      "protection",
      "Web.config",
      "Web.config",
      "validation",
      "machineKey",
      "validation",
      "validationKey",
      "validationKey",
      "machineKey",
      "AutoGenerate",
      "IsolateApps",
      "decryptionKey",
      "decryption",
      "machineKey",
      "decryption",
      "protection",
      "forms",
      "All",
      "decryption",
      "machineKey",
      "Auto",
      "decryptionKey",
      "Auto",
      "Auto",
      "decryptionKey",
      "machineKey",
      "decryptionKey",
      "decryptionKey",
      "machineKey",
      "machineKey",
      "passwordFormat",
      "\"Encrypted\"",
      "passwordFormat",
      "\"Hashed\"",
      "machineKey",
      "enabled=\"true\"",
      "anonymousIdentification",
      "Web.config",
      "cookieProtection=\"Encrypted\"",
      "cookieProtection",
      "\"All\"",
      "\"Encryption\"",
      "\"Validation\"",
      "\"None\"",
      "machineKey",
      "Machine.config.comments",
      "cookieProtection",
      "roleManager",
      "All",
      "cookieProtection=\"All\"",
      "validationKey",
      "decryptionKey",
      "machineKey",
      "machineKey",
      "Web.config",
      "RNGCryptoServiceProvider",
      "validationKey",
      "decryptionKey",
      "decryptionKey",
      "machineKey",
      "validationKey",
      "decryptionKey",
      "validationKey",
      "decryptionKey",
      "machineKey",
      "Web.config",
      "machineKey",
      "validationKey",
      "decryptionKey",
      "Web.config",
      "machineKey",
      "validation",
      "decryption"
    ],
    "pre": [
      "<pages enableViewStateMac=\"true\" viewStateEncryptionMode=\"Auto\" ... /><machineKey validationKey=\"AutoGenerate,IsolateApps\"              decryptionKey=\"AutoGenerate,IsolateApps\"             validation=\"SHA1\" decryption=\"Auto\" />",
      "<pages enableViewStateMAC=\"true\" ... />",
      "<%@Page EnableViewStateMac=\"true\" ... %>",
      "<pages enableViewStateMAC=\"true\" ... />",
      "<%@Page EnableViewStateMac=\"true\" ... %>",
      "<pages viewStateEncryptionMode=\"Auto\" ... /><pages viewStateEncryptionMode=\"Always\" ... />",
      "<%@Page ViewStateEncryptionMode=\"Auto\" ... %><%@Page ViewStateEncryptionMode=\"Always\" ... %>",
      "<pages enableViewStateMac=\"true\" ... />",
      "<machineKey ...  validation=\"SHA1\" ... />",
      "<machineKey validationKey=\"AutoGenerate,IsolateApps\" ... />",
      "<pages ... viewStateEncryptionMode=\"Always\" ... />",
      "<pages ... viewStateEncryptionMode=\"Auto\" ... />",
      "Page.RegisterRequiresViewStateEncryption();",
      "<machineKey ... validation=\"AES\" ... />",
      "<machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... />",
      "<machineKey     validationKey=\"AutoGenerate,IsolateApps\"       decryptionKey=\"AutoGenerate,IsolateApps\"     validation=\"AES\"     decryption=\"Auto\" />",
      "<system.web>  <authentication mode=\"Forms\">    <forms name=\".AuthCookie\" loginUrl=\"login.aspx\" protection=\"All\"/>  </authentication></system.web>",
      "<forms ... protection=\"All\" ... />",
      "<machineKey ... validation=\"SHA1\" ... />",
      "<machineKey validationKey=\"AutoGenerate,IsolateApps\" ... />",
      "<forms protection=\"All\" ... />",
      "<machineKey decryption=\"Auto\" ... />",
      "<machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... />",
      "<machineKey   validationKey=\"AutoGenerate,IsolateApps\"   decryptionKey=\"AutoGenerate,IsolateApps\"   validation=\"AES\"   decryption=\"Auto\" />",
      "<membership defaultProvider=\"AspNetSqlMembershipProvider\"            userIsOnlineTimeWindow=\"15\" hashAlgorithmType=\"\">  <providers>    <clear />    <add connectionStringName=\"LocalSqlServer\" enablePasswordRetrieval=\"false\"          enablePasswordReset=\"true\" requiresUniqueEmail=\"false\"         passwordFormat=\"Encrypted\" .../>  </providers></membership>",
      "<anonymousIdentification enabled=\"true\" cookieName=\".ASPXANONYMOUS\" cookieTimeout=\"100000\" cookiePath=\"/\" cookieRequireSSL=\"false\" cookieSlidingExpiration=\"true\" cookieProtection=\"Encrypted\" cookieless=\"UseCookies\" domain=\"\" />",
      "<roleManager enabled=\"true\"              cacheRolesInCookie=\"true\"             cookieProtection=\"All\" ... />",
      "<machineKey   validationKey=\"21F090935F6E49C2C797F69BBAAD8402ABD2EE0B667A8B44EA7DD4374267A75D7                AD972A119482D15A4127461DB1DC347C1A63AE5F1CCFAACFF1B72A7F0A281B\"            decryptionKey=\"ABAA84D7EC4BB56D75D217CECFFB9628809BDB8BF91CFCD64568A145BE59719F\" validation=\"SHA1\" decryption=\"AES\"/>",
      "using System.Text;using System.Security;using System.Security.Cryptography;class App {  static void Main(string[] argv) {    int len = 128;    if (argv.Length > 0)      len = int.Parse(argv[0]);    byte[] buff = new byte[len/2];    RNGCryptoServiceProvider rng = new                        RNGCryptoServiceProvider();    rng.GetBytes(buff);    StringBuilder sb = new StringBuilder(len);    for (int i=0; i<buff.Length; i++)      sb.Append(string.Format(\"{0:X2}\", buff[i]));    Console.WriteLine(sb);  }}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "b": [
      "validationKey.",
      "decryptionKey.",
      "decryption.",
      "validation.",
      "SHA1.",
      "MD5.",
      "AES.",
      "3DES.",
      "Note:",
      "Note:",
      "To verify that tamper proofing is enabled for ViewState",
      "Note:",
      "",
      "Auto.",
      "Note:",
      "Always.",
      "Never.",
      "To encrypt ViewState",
      "Note:",
      "To review forms authentication ticket configuration for tamper proofing",
      "",
      "To encrypt Form authentication tickets",
      "Note:",
      "",
      "\"All\"",
      "Encryption",
      "Validation\"",
      "None"
    ],
    "h2": [
      "Verifying that ViewState Is Tamper Proof",
      "Configuring <machineKey> to Encrypt ViewState",
      "Verifying that Forms Authentication Tickets Are Tamper Proof",
      "Configuring <machineKey> to Encrypt Forms Authentication Tickets",
      "Generate Cryptographically Random Keys"
    ],
    "ol": [
      "Verify the enableViewStateMac attribute of the <pages> element is set to true, as shown in the following example. <pages enableViewStateMac=\"true\" ... />Note: You canoverride the machine'senableViewStateMac setting at the application or page level.\r\n    Verify that the validation attribute of the <machineKey> element is set to SHA1, as shown in the following example. <machineKey ...  validation=\"SHA1\" ... />The validation attribute specifies the hashing algorithm used to tamper proof ViewState. The default value is \"SHA1\", and you should use this rather than MD5 because it produces a larger hash than MD5 and is cryptographically stronger. \r\n    Review the validationKey setting of the <machineKey> element. <machineKey validationKey=\"AutoGenerate,IsolateApps\" ... />In the default settings shown above, the AutoGenerate setting instructs ASP.NET to generate a random key. The IsolateApps modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application. The default value is correct for a single server deployment. You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the validationKey value and make sure that it is the same on all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "Check that the viewStateEncryptionMode attribute of the <pages> element is set to Always, as shown in the following example. <pages ... viewStateEncryptionMode=\"Always\" ... />If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example. <pages ... viewStateEncryptionMode=\"Auto\" ... />   Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example. Page.RegisterRequiresViewStateEncryption();\r\n    Specify the encryption algorithm to use on the validation attribute, as shown in the following example. <machineKey ... validation=\"AES\" ... />The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES. Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES, it is considered more secure and should be used. \r\n    Review the decryptionKey attribute of the <machineKey> element: <machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... />Unless your application is installed in a Web farm, you should leave the decryptionKey attribute with the default values shown in the example. In a Web farm, you must manually generate the decryptionKey value and ensure that the value is the same across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document.",
      "Check that the protection attribute of the <forms> element to All, as shown in the following example. <forms ... protection=\"All\" ... />You canoverride the protection attribute setting for all Web applications on the server by using the machine-level Web.config file or, for a specific application, by using its Web.config file. \r\n    Review the validation attribute of the <machineKey> element, as shown in the following example. <machineKey ... validation=\"SHA1\" ... />The validation attribute specifies the hashing algorithm used by the HMAC algorithm used to tamper proof the forms authentication ticket. You should use the default SHA1 setting because this produces a larger hash than MD5 and is cryptographically stronger. You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the validationKey value and make sure that the same value is used across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document. \r\n    Review the validationKey attribute of the <machineKey> element , as shown in the following example. <machineKey validationKey=\"AutoGenerate,IsolateApps\" ... />The example configuration shows the default settings. The AutoGenerate setting instructs ASP.NET to generate a random key. The IsolateApps modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application.",
      "Check that the protection attribute of the <forms> element is set to All, as shown in the following example. <forms protection=\"All\" ... />\r\n    Use the decryption attribute of the <machineKey> element to specify the encryption algorithm as shown in the following example.  <machineKey decryption=\"Auto\" ... />With the default Auto setting, if the value of the decryptionKey attribute is 8 bytes long (16 characters) then Auto defaults to DES. Otherwise, Auto defaults to AES. ASP.NET supports AES, 3DES and DES algorithms. You should use AES because it offers larger key sizes (128 bits, 192 bits, 256 bits) than 3DES. \r\n    Review the decryptionKey attribute of the <machineKey> element. <machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... />Unless your application is installed in a Web farm or you need to share authentication tickets across two or more applications, you should leave the decryptionKey attribute with the default values shown in the example. In a Web farm or if you need to share authentication tickets across applications, you must manually generate the decryptionKey value and make sure that the same value is used for all servers in the farm. For more information, see the sections, Web Farm Deployment Considerations and Sharing Authentication Tickets Across Applications in this document."
    ],
    "strong": [
      ""
    ],
    "a": [
      ""
    ],
    "h3": [
      "C# Example"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "class": "copyCode",
      "href": "javascript:CopyCode('ctl00_LibFrame_ctl24');",
      "text": ""
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>Summary</h1>\r\n  <p>This How to explains the &lt;<em>machineKey</em>&gt; element in the <em>Web.config</em> file and shows how to configure the &lt;<em>machineKey</em>&gt; element to control tamper proofing and encryption of <em>ViewState</em>, forms authentication tickets, and role cookies. <em>ViewState</em> is signed and tamper proof by default. You can request encryption for pages that contain sensitive items in their <em>ViewState</em> by using the <em>ViewStateEncryptionMode</em> attribute. Forms authentication and role cookies are signed and encrypted by default. You do not need to modify the default settings unless your application is in a Web farm or if you need to share authentication tickets across applications. In these cases, you need to manually generate encryption and hashing keys.</p>\r\n  <h1>Contents</h1>\r\n  <ul>\r\n    <li>Objectives </li>\r\n    <li>Overview </li>\r\n    <li>Machine Key Explained </li>\r\n    <li>ViewState </li>\r\n    <li>Forms Authentication Tickets </li>\r\n    <li>Membership </li>\r\n    <li>Anonymous Identification </li>\r\n    <li>Role Cookies </li>\r\n    <li>Web Farm Deployment Considerations </li>\r\n    <li>Sharing Authentication Tickets Across Applications </li>\r\n    <li>Upgrading ASP.NET Versions </li>\r\n    <li>Additional Resources</li>\r\n  </ul>\r\n  <h1>Objectives</h1>\r\n  <ul>\r\n    <li>Verify <em>ViewState</em> is configured to be tamper proof. </li>\r\n    <li>Configure the &lt;<em>machineKey</em>&gt; to encrypt <em>ViewState</em>. </li>\r\n    <li>Verify forms authentication tickets are configured to be tamper proof. </li>\r\n    <li>Configure &lt;<em>machineKey</em>&gt; to encrypt forms authentication tickets. </li>\r\n    <li>Learn to configure the membership feature to use an encrypted password instead of a hashed password by using <em>machineKey</em>. </li>\r\n    <li>Learn to protect an anonymous identification cookie by using <em>machineKey</em>. </li>\r\n    <li>Learn to protect role cookies by using <em>machineKey</em>. </li>\r\n    <li>Generate random key values for use in a Web farm. </li>\r\n  </ul>\r\n  <h1>Overview</h1>\r\n  <p>The default ASP.NET settings ensure that forms authentication tickets are tamper proof and encrypted, and that <em>ViewState</em> is tamper proof. This ensures that any modification of the <em>ViewState</em> or authentication tickets either on the client's computer or over the network is detected when the server processes the data.</p>\r\n  <p>To provide tamper proof <em>ViewState</em>, a hashed message authentication code (HMAC) is generated from the <em>ViewState</em> content and the hash is compared on subsequent requests. The <em>validation</em> attribute of the &lt;<em>machineKey</em>&gt; indicates which hashing algorithm to use, and it defaults to SHA1, which uses the HMACSHA1 algorithm. Valid choices for hashing include SHA1 or MD5, although SHA1 is preferable because it produces a larger hash and is considered cryptographically stronger than MD5. The <em>validationKey</em> attribute of &lt;<em>machineKey</em>&gt; is used in conjunction with the <em>ViewState</em> content to produce the HMAC. If your application is installed in a Web farm, you need to change the <em>validationKey</em> from <em>AutoGenerate,IsolateApps</em> to a specific manually generated key value.</p>\r\n  <p>If you need to use round trips for potentially sensitive data, you can force encryption of <em>ViewState</em> for a specific page. To do this, set <em>ViewStateEncryptionMode=\"Always\"</em> on the <em>@Page</em> directive for that page. Alternatively, you can use a control to request that the page's <em>ViewState</em> be encrypted by calling the <em>Page.RegisterRequiresViewStateEncryption</em> method. Using this method in conjunction with the default setting of <em>ViewStateEncryptionMode=\"Auto\"</em> ensures that <em>ViewState</em> is only encrypted for those pages that need it.</p>\r\n  <p>To encrypt <em>ViewState</em> in a Web farm, you need to manually set the <em>validationKey</em> value. The encryption algorithm is determined by the <em>validation</em> attribute of the &lt;<em>machineKey</em>&gt;. The <em>validation</em> attribute defaults to <em>SHA1</em>, which provides tamper proofing but not encryption. To support <em>ViewState</em> encryption, you should set the <em>validation</em> attribute to <em>AES</em>, the recommended symmetric encryption algorithm.</p>\r\n  <p>Forms authentication tickets are tamper proof and encrypted by default. The <em>decryption</em> and <em>decryptionKey</em> attributes control the encryption. The <em>validationKey</em> controls the hashing. If your application is in a Web farm, you need to manually set the <em>validationKey</em> and <em>decryptionKey</em>. Also, if you need to share forms authentication tickets across applications in separate virtual directories, you need to manually set the keys to ensure that they match in each application's <em>Web.config</em> file.</p>\r\n  <p>If you use the <em>Role Manager</em> feature, and choose to cache roles, a roles cookie is created. The roles cookie is also signed and encrypted by default, using the same mechanisms as forms authentication tickets.</p>\r\n  <h1>Machine Key Explained</h1>\r\n  <p>The default settings for the &lt;<em>pages</em>&gt; and &lt;<em>machineKey</em>&gt; elements are defined in the machine-level <em>Web.config.comments</em> file. The relevant default settings are shown here for reference.</p>\r\n  <pre>&lt;pages enableViewStateMac=\"true\" viewStateEncryptionMode=\"Auto\" ... /&gt;<br />&lt;machineKey validationKey=\"AutoGenerate,IsolateApps\"&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; decryptionKey=\"AutoGenerate,IsolateApps\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validation=\"SHA1\" decryption=\"Auto\" /&gt;</pre>\r\n  <p>When you configure <em>ViewState</em>, the &lt;<em>pages</em>&gt; element is used in conjunction with the &lt;<em>machineKey</em>&gt; element.</p>\r\n  <p>The &lt;<em>machineKey</em>&gt; attributes are as follows: </p>\r\n  <ul>\r\n    <li>\r\n      <p />\r\n      <b>\r\n        <em>validationKey</em>.</b> This specifies the key that the HMAC algorithm uses to make <em>ViewState</em> tamper proof. The <em>ViewState</em> MAC is checked at the server when either the <em>enableViewStateMAC</em> attribute of the &lt;<em>pages</em>&gt; element or the <em>EnableViewStateMac</em> attribute of the <em>@Page</em> directive is set to <em>true</em>. <pre>&lt;pages enableViewStateMAC=\"true\" ... /&gt;</pre>or<pre>&lt;%@Page EnableViewStateMac=\"true\" ... %&gt;</pre><p>Forms authentication also uses this key for signing the authentication ticket. Role manager and anonymous identification, if enabled, also uses this key for signing their cookies. If you use anonymous identification in cookieless mode, the data on the URL is also signed with this value.</p></li>\r\n    <li>\r\n      <p>\r\n        <b>\r\n          <em>decryptionKey</em>.</b> This specifies the key used to encrypt and decrypt data. Forms authentication, role manager and anonymous identification features use this key to encrypt and decrypt the authentication ticket, roles cookie and anonymous identification cookie. ASP.NET uses the key to encrypt and decrypt <em>ViewState</em>, but only if the <em>validation</em> attribute is set to <em>AES</em> or <em>3DES</em>. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <b>\r\n          <em>decryption</em>.</b> This specifies the symmetric encryption algorithm used to encrypt and decrypt forms authentication tickets. </p>\r\n    </li>\r\n    <li>\r\n      <p />\r\n      <b>\r\n        <em>validation</em>.</b> This specifies the hashing algorithm used to generate HMACs to make <em>ViewState</em> and forms authentication tickets tamper proof. This attribute is also used to specify the encryption algorithm used for <em>ViewState</em> encryption. This attribute supports the following options: <ul><li><b><em>SHA1</em>. </b><em>SHA1</em> is used to tamper proof <em>ViewState</em> and, if configured, the forms authentication ticket. When <em>SHA1</em> is selected for the <em>validation</em> attribute, the algorithm used is <em>HMACSHA1</em>. </li><li><b><em>MD5</em>. </b><em>MD5</em> is used to tamper proof <em>ViewState</em> and, if configured, the forms authentication ticket. </li><li><b><em>AES</em>. </b><em>AES</em> is used to encrypt <em>ViewState</em> with the key specified in the <em>decryptionKey</em> attribute. </li><li><b><em>3DES</em>. </b><em>3DES</em> is used to encrypt <em>ViewState</em> with the key specified in the <em>decryptionKey</em> attribute.&nbsp;Using&nbsp;3DES is not recommended, because it is&nbsp;generally considered not as strong as AES.&nbsp;</li></ul></li>\r\n  </ul>\r\n  <p />\r\n  <p>In general, you should choose SHA1 over MD5 for tamper-proofing because this produces a larger hash than MD5 and is considered cryptographically stronger.</p>\r\n  <p>Forms authentication defaults to SHA1 for tamper proofing (if <em>&lt;forms protection=\"validation\"&gt;</em> or <em>\"All\"</em>). When <em>&lt;forms protection=\"All\"&gt;</em> or <em>&lt;forms protection = \"Encryption\"&gt;</em>, then forms authentication hashes the forms authentication ticket by using either MD5 or HMACSHA1 (HMACSHA1 is used even if validation is set to AES or 3DES). Forms authentication then encrypts the ticket using the algorithm specified in the <em>decryption</em> attribute.</p>\r\n  <h1>ViewState</h1>\r\n  <p>You can protect <em>ViewState</em> in the following ways: </p>\r\n  <ul>\r\n    <li>Use an HMAC to make <em>ViewState</em> tamper proof. </li>\r\n    <li>Use encryption to turn <em>ViewState</em> into unintelligible cipher text. This ensures that any sensitive data in <em>ViewState</em> cannot be viewed. </li>\r\n  </ul>\r\n  <p>To enable hashing of <em>ViewState</em>, you must use one of the following configurations.</p>\r\n  <pre>&lt;pages enableViewStateMAC=\"true\" ... /&gt; </pre>\r\n  <p>or</p>\r\n  <pre>&lt;%@Page EnableViewStateMac=\"true\" ... %&gt;</pre>\r\n  <p>To enable encryption of <em>ViewState</em>, you must use one of the following configurations.</p>\r\n  <pre>&lt;pages viewStateEncryptionMode=\"Auto\" ... /&gt;<br />&lt;pages viewStateEncryptionMode=\"Always\" ... /&gt;</pre>\r\n  <p>or</p>\r\n  <pre>&lt;%@Page ViewStateEncryptionMode=\"Auto\" ... %&gt;<br />&lt;%@Page ViewStateEncryptionMode=\"Always\" ... %&gt;</pre>\r\n  <p>With <em>viewStateEncryptionMode</em> set to <em>Auto</em>, the page is only encrypted if a control has specifically asked for it by calling the <em>Page.RegisterRequiresViewStateEncryption</em> method to request encryption. If it set to <em>Always</em>, this forces encryption even if a control does not request it. </p>\r\n  <p>\r\n    <b>Note:</b> Do not encrypt <em>ViewState</em> unless it contains sensitive data. To avoid the performance overhead of encryption, consider storing sensitive data on the server and not in <em>ViewState</em>.</p>\r\n  <h2>Verifying that ViewState Is Tamper Proof</h2>\r\n  <p>\r\n    <em>ViewState</em> is tamper proof by default. <em>ViewState</em> tamper proofing is enabled by the <em>enableViewStateMac</em> attribute on the &lt;<em>pages</em>&gt; element and the <em>validationKey</em> and <em>validation</em> attributes on the &lt;<em>machineKey</em>&gt; element.</p>\r\n  <p>\r\n    <b>Note:</b> You can see the default &lt;<em>machineKey</em>&gt; setting in the <em>Machine.config.comments </em>file.</p>\r\n  <p>\r\n    <b>To verify that tamper proofing is enabled for <em>ViewState</em></b>\r\n  </p>\r\n  <ol>\r\n    <li>Verify the <em>enableViewStateMac</em> attribute of the &lt;<em>pages</em>&gt; element is set to <em>true</em>, as shown in the following example. <pre>&lt;pages enableViewStateMac=\"true\" ... /&gt;</pre><p><b>Note:</b> You can<b></b>override the machine's<strong></strong><em>enableViewStateMac</em> setting at the application or page level.</p></li>\r\n    <li>Verify that the <em>validation</em> attribute of the &lt;<em>machineKey</em>&gt; element is set to SHA1, as shown in the following example. <pre>&lt;machineKey ...  validation=\"SHA1\" ... /&gt;</pre><p>The <em>validation</em> attribute specifies the hashing algorithm used to tamper proof <em>ViewState</em>. The default value is <em>\"SHA1\"</em>, and you should use this rather than MD5 because it produces a larger hash than MD5 and is cryptographically stronger. </p></li>\r\n    <li>Review the <em>validationKey</em> setting of the &lt;<em>machineKey</em>&gt; element. <pre>&lt;machineKey validationKey=\"AutoGenerate,IsolateApps\" ... /&gt;</pre><p>In the default settings shown above, the <em>AutoGenerate</em> setting instructs ASP.NET to generate a random key. The <em>IsolateApps</em> modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application. </p><p>The default value is correct for a single server deployment. You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the <em>validationKey</em> value and make sure that it is the same on all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document. </p></li>\r\n  </ol>\r\n  <h2>Configuring &lt;machineKey&gt; to Encrypt ViewState</h2>\r\n  <p>By default, information in <em>ViewState</em> is encoded, but not encrypted. A user could decode and view the <em>ViewState</em> data.</p>\r\n  <p>To encrypt <em>ViewState</em>, either a control on a page needs to explicitly request <em>ViewState</em> encryption or the <em>viewStateEncryptionMode</em> attribute of the &lt;<em>pages</em>&gt; element must be set to <em>Always</em>. To request encryption, a control must call the <em>RegisterRequiresViewStateEncryption</em> method of the <em>Page</em> class.</p>\r\n  <p>The <em>viewStateEncryptionMode</em> attribute can take one of three possible attributes: </p>\r\n  <ul>\r\n    <li>\r\n      <b>Auto.</b> This is the default setting, which means the <em>ViewState</em> on the page is only encrypted if a control has specifically asked for it. <p><b>Note:</b> If a control on the page requests encryption, then the entire <em>ViewState</em> is encrypted (not just the <em>ViewState</em> for the control).</p></li>\r\n    <li>\r\n      <b>Always.</b> This forces encryption even if a control does not ask for it. </li>\r\n    <li>\r\n      <b>Never.</b> This disables encryption even if a control does ask for it. </li>\r\n  </ul>\r\n  <p>Ideally, you should not store sensitive data in <em>ViewState</em> and thereby avoid the need to encrypt it. If you do need to encrypt <em>ViewState</em>, then you need to specify the encryption algorithm to use on the <em>validation</em> attribute.</p>\r\n  <p>\r\n    <b>To encrypt ViewState</b>\r\n  </p>\r\n  <ol>\r\n    <li>Check that the <em>viewStateEncryptionMode</em> attribute of the &lt;<em>pages</em>&gt; element is set to <em>Always</em>, as shown in the following example. <pre>&lt;pages ... viewStateEncryptionMode=\"Always\" ... /&gt;</pre><p>If you do not want every page to used encrypted <em>ViewState</em>, check that the <em>viewStateEncryptionMode</em> attribute of the &lt;<em>pages</em>&gt; element is set to <em>Auto</em>, as shown in the following example. </p><pre>&lt;pages ... viewStateEncryptionMode=\"Auto\" ... /&gt;   </pre><p>Then, from within your code, call the <em>RegisterRequiresViewStateEncryption</em> method as shown in the following example. </p><pre>Page.RegisterRequiresViewStateEncryption();</pre></li>\r\n    <li>Specify the encryption algorithm to use on the <em>validation</em> attribute, as shown in the following example. <pre>&lt;machineKey ... validation=\"AES\" ... /&gt;</pre><p>The <em>validation</em> attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES.&nbsp;Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES, it is considered more secure and should be used. </p></li>\r\n    <li>Review the <em>decryptionKey</em> attribute of the &lt;<em>machineKey</em>&gt; element: <pre>&lt;machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... /&gt;</pre><p>Unless your application is installed in a Web farm, you should leave the <em>decryptionKey</em> attribute with the default values shown in the example. In a Web farm, you must manually generate the <em>decryptionKey</em> value and ensure that the value is the same across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document. </p></li>\r\n  </ol>\r\n  <p>For <em>ViewState</em> encryption, your &lt;<em>machineKey</em>&gt; configuration should resemble the following example</p>\r\n  <pre>&lt;machineKey <br />&nbsp;&nbsp;&nbsp; validationKey=\"AutoGenerate,IsolateApps\"&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; decryptionKey=\"AutoGenerate,IsolateApps\" <br />&nbsp;&nbsp;&nbsp; validation=\"AES\" <br />&nbsp;&nbsp;&nbsp; decryption=\"Auto\" /&gt;</pre>\r\n  <p>\r\n    <b>Note:</b> By default, <em>ViewState</em> is transmitted as a Base64 encoded string. Although at first glance it is unintelligible, Base64 encoding provides no security because it is easily decoded. If you need to ensure that <em>ViewState</em> contents remain confidential, you must use encryption.</p>\r\n  <h1>Forms Authentication Tickets</h1>\r\n  <p>You can protect forms authentication tickets in two ways: </p>\r\n  <ul>\r\n    <li>Use an HMAC to make the ticket tamper proof. </li>\r\n    <li>Use encryption to turn the ticket contents into unintelligible cipher text. This ensures that the data stored in the ticket, such as user names, cannot be viewed on the client or between the browser and server if the ticket is sent in a cookie. </li>\r\n  </ul>\r\n  <p>To ensure that forms authentication tickets are encrypted and protected against tampering, set the <em>protection</em> attribute of the &lt;<em>forms</em>&gt; element to <em>All</em>, as shown in the following example.</p>\r\n  <pre>&lt;system.web&gt;<br />&nbsp; &lt;authentication mode=\"Forms\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;forms name=\".AuthCookie\" loginUrl=\"login.aspx\" protection=\"All\"/&gt;<br />&nbsp; &lt;/authentication&gt;<br />&lt;/system.web&gt;</pre>\r\n  <h2>Verifying that Forms Authentication Tickets Are Tamper Proof</h2>\r\n  <p>By default, forms authentication tickets are configured for tamper proofing by using the <em>validationKey</em> and <em>validation</em> attributes of the &lt;<em>machineKey</em>&gt; element.</p>\r\n  <p>\r\n    <b>To review forms authentication ticket configuration for tamper proofing</b>\r\n  </p>\r\n  <ol>\r\n    <li>Check that the <em>protection</em> attribute of the &lt;<em>forms</em>&gt; element to <em>All</em>, as shown in the following example. <pre>&lt;forms ... protection=\"All\" ... /&gt;</pre><p>You can<b></b>override the <em>protection</em> attribute setting for all Web applications on the server by using the machine-level <em>Web.config</em> file or, for a specific application, by using its <em>Web.config</em> file. </p></li>\r\n    <li>Review the <em>validation</em> attribute of the &lt;<em>machineKey</em>&gt; element, as shown in the following example. <pre>&lt;machineKey ... validation=\"SHA1\" ... /&gt;</pre><p>The <em>validation</em> attribute specifies the hashing algorithm used by the HMAC algorithm used to tamper proof the forms authentication ticket. You should use the default SHA1 setting because this produces a larger hash than MD5 and is cryptographically stronger. </p><p>You do not need to change the default settings unless your application is deployed in a Web farm. In a Web farm, you must manually generate the <em>validationKey</em> value and make sure that the same value is used across all servers in the farm. For more information, see the section, Web Farm Deployment Considerations in this document. </p></li>\r\n    <li>Review the <em>validationKey</em> attribute of the &lt;<em>machineKey</em>&gt; element , as shown in the following example. <pre>&lt;machineKey validationKey=\"AutoGenerate,IsolateApps\" ... /&gt;</pre><p>The example configuration shows the default settings. The <em>AutoGenerate</em> setting instructs ASP.NET to generate a random key. The <em>IsolateApps</em> modifier causes ASP.NET to generate a unique key for each application on your server by using the application ID of each application. </p></li>\r\n  </ol>\r\n  <h2>Configuring &lt;machineKey&gt; to Encrypt Forms Authentication Tickets</h2>\r\n  <p>To encrypt forms authentication tickets, ASP.NET uses the <em>decryptionKey</em> and the new <em>decryption</em> attribute of the &lt;<em>machineKey</em>&gt; element. The <em>decryption</em> attribute lets you specify the encryption algorithm to use. </p>\r\n  <p>\r\n    <b>To encrypt Form authentication tickets</b>\r\n  </p>\r\n  <ol>\r\n    <li>Check that the <em>protection</em> attribute of the &lt;<em>forms</em>&gt; element is set to <em>All</em>, as shown in the following example. <pre>&lt;forms protection=\"All\" ... /&gt;</pre></li>\r\n    <li>Use the <em>decryption</em> attribute of the &lt;<em>machineKey</em>&gt; element to specify the encryption algorithm as shown in the following example. <a class=\"copyCode\" href=\"javascript:CopyCode('ctl00_LibFrame_ctl24');\"></a>&nbsp;<pre>&lt;machineKey decryption=\"Auto\" ... /&gt;</pre><p>With the default <em>Auto</em> setting, if the value of the <em>decryptionKey</em> attribute is 8 bytes long (16 characters) then <em>Auto</em> defaults to DES. Otherwise, <em>Auto</em> defaults to AES. ASP.NET supports AES, 3DES and DES algorithms. You should use AES because it offers larger key sizes (128 bits, 192 bits, 256 bits) than 3DES. </p></li>\r\n    <li>Review the <em>decryptionKey</em> attribute of the &lt;<em>machineKey</em>&gt; element. <pre>&lt;machineKey decryptionKey=\"AutoGenerate,IsolateApps\" ... /&gt;</pre><p>Unless your application is installed in a Web farm or you need to share authentication tickets across two or more applications, you should leave the <em>decryptionKey</em> attribute with the default values shown in the example. In a Web farm or if you need to share authentication tickets across applications, you must manually generate the <em>decryptionKey</em> value and make sure that the same value is used for all servers in the farm. For more information, see the sections, Web Farm Deployment Considerations and Sharing Authentication Tickets Across Applications in this document. </p></li>\r\n  </ol>\r\n  <p>For forms authentication ticket encryption, the &lt;<em>machineKey</em>&gt; settings should resemble the following example.</p>\r\n  <pre>&lt;machineKey <br />&nbsp; validationKey=\"AutoGenerate,IsolateApps\" <br />&nbsp; decryptionKey=\"AutoGenerate,IsolateApps\" <br />&nbsp; validation=\"AES\" <br />&nbsp; decryption=\"Auto\" /&gt;</pre>\r\n  <h1>Membership</h1>\r\n  <p>If you use the membership feature, password hashes are stored in the membership database by default. The membership system also supports encrypted passwords. If you select encrypted password format, then the &lt;<em>machineKey</em>&gt; settings are used when encrypting and decrypting the data. If you want to store encrypted passwords, use the following configuration in the Web.config file. Notice that <em>passwordFormat</em> is set to <em>\"Encrypted\"</em>.</p>\r\n  <pre>&lt;membership defaultProvider=\"AspNetSqlMembershipProvider\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; userIsOnlineTimeWindow=\"15\" hashAlgorithmType=\"\"&gt;<br />&nbsp; &lt;providers&gt;<br />&nbsp;&nbsp;&nbsp; &lt;clear /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;add connectionStringName=\"LocalSqlServer\" enablePasswordRetrieval=\"false\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enablePasswordReset=\"true\" requiresUniqueEmail=\"false\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; passwordFormat=\"Encrypted\" .../&gt;<br />&nbsp; &lt;/providers&gt;<br />&lt;/membership&gt;</pre>\r\n  <p>\r\n    <b>Note:</b> The default setting for the <em>passwordFormat </em>attribute is <em>\"Hashed\"</em>.</p>\r\n  <h1>Anonymous Identification</h1>\r\n  <p>ASP.NET supports anonymous identification, and you can encrypt the anonymous identification cookie. Encryption of the cookie uses the &lt;<em>machineKey</em>&gt; configuration. To enable anonymous identification, set <em>enabled=\"true\"</em> on the &lt;<em>anonymousIdentification</em>&gt;<b></b>element in your <em>Web.config</em> file. To enable the cookies to be encrypted, set <em>cookieProtection=\"Encrypted\"</em>, as shown here.</p>\r\n  <pre>&lt;anonymousIdentification enabled=\"true\" cookieName=\".ASPXANONYMOUS\"<br /> cookieTimeout=\"100000\" cookiePath=\"/\" cookieRequireSSL=\"false\"<br /> cookieSlidingExpiration=\"true\" cookieProtection=\"Encrypted\"<br /> cookieless=\"UseCookies\" domain=\"\" /&gt;</pre>\r\n  <p>The <em>cookieProtection</em> attribute can take any of the following values: </p>\r\n  <ul>\r\n    <li>\r\n      <b>\r\n        <em>\"All\"</em>\r\n      </b> (to perform both validation and encryption) </li>\r\n    <li>\r\n      <em>\"<b>Encryption</b>\"</em>\r\n    </li>\r\n    <li>\r\n      <em>\"<b>Validation\"</b></em> (the default) </li>\r\n    <li>\r\n      <em>\"<b>None</b>\"</em>\r\n    </li>\r\n  </ul>\r\n  <h1>Role Cookies</h1>\r\n  <p>ASP.NET also uses the &lt;<em>machineKey</em>&gt; settings to protect role cookies. The Role Manager can use role cookies to cache role names for a particular user. If you enable the Role Manager feature and elect to cache role names in the roles cookie, the default configuration in the <em>Machine.config.comments</em> file ensures that the roles cookie is tamper proof and encrypted. The <em>cookieProtection</em> attribute on the &lt;<em>roleManager</em>&gt; element is set to <em>All</em>.</p>\r\n  <p>If you enable the Role Manager and cache role names, you can ensure that the cookie is protected by setting <em>cookieProtection=\"All\"</em> as shown in the following code example.</p>\r\n  <pre>&lt;roleManager enabled=\"true\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"true\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cookieProtection=\"All\" ... /&gt;</pre>\r\n  <h1>Web Farm Deployment Considerations</h1>\r\n  <p>If you deploy your application in a Web farm, you must ensure that the configuration files on each server share the same value for <em>validationKey</em> and <em>decryptionKey</em>, which are used for hashing and decryption respectively. This is required because you cannot guarantee which server will handle successive requests.</p>\r\n  <p>With manually generated key values, the &lt;<em>machineKey</em>&gt; settings should be similar to the following example.</p>\r\n  <pre>&lt;machineKey&nbsp; <br /> validationKey=\"21F090935F6E49C2C797F69BBAAD8402ABD2EE0B667A8B44EA7DD4374267A75D7<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; AD972A119482D15A4127461DB1DC347C1A63AE5F1CCFAACFF1B72A7F0A281B\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br /> decryptionKey=\"ABAA84D7EC4BB56D75D217CECFFB9628809BDB8BF91CFCD64568A145BE59719F\"<br /> validation=\"SHA1\"<br /> decryption=\"AES\"<br />/&gt;</pre>\r\n  <p>If you want to isolate your application from other applications on the same server, place the &lt;<em>machineKey</em>&gt; in the <em>Web.config</em> file for each application on each server in the farm. Ensure that you use separate key values for each application, but duplicate each application's keys across all servers in the farm.</p>\r\n  <h2>Generate Cryptographically Random Keys</h2>\r\n  <p>To generate cryptographically random keys: </p>\r\n  <ul>\r\n    <li>Use the <em>RNGCryptoServiceProvider</em> class to generate a cryptographically strong random number. </li>\r\n    <li>Choose an appropriate key size. The recommended key lengths are as follows: <ul><li>For SHA1, set the <em>validationKey</em> to 64 bytes (128 hexadecimal characters). </li><li>For AES, set the <em>decryptionKey</em> to 32 bytes (64 hexadecimal characters). </li><li>For 3DES, set the <em>decryptionKey</em> to 24 bytes (48 hexadecimal characters). </li></ul></li>\r\n  </ul>\r\n  <p>The following code shows how to generate random key values. Compile the code to create a console application, and then pass the required key size as a command line argument expressed as the desired number of hexadecimal characters. Each byte is represented by two hexadecimal characters; therefore, to request a 32-byte key, pass 64 as a command line argument. If you do not specify an argument, the code returns a 128 hexadecimal character (64-byte) key.</p>\r\n  <h3>C# Example</h3>\r\n  <pre>using System.Text;<br />using System.Security;<br />using System.Security.Cryptography;<br /><br />class App {<br />&nbsp; static void Main(string[] argv) {<br />&nbsp;&nbsp;&nbsp; int len = 128;<br />&nbsp;&nbsp;&nbsp; if (argv.Length &gt; 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; len = int.Parse(argv[0]);<br />&nbsp;&nbsp;&nbsp; byte[] buff = new byte[len/2];<br />&nbsp;&nbsp;&nbsp; RNGCryptoServiceProvider rng = new <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RNGCryptoServiceProvider();<br />&nbsp;&nbsp;&nbsp; rng.GetBytes(buff);<br />&nbsp;&nbsp;&nbsp; StringBuilder sb = new StringBuilder(len);<br />&nbsp;&nbsp;&nbsp; for (int i=0; i&lt;buff.Length; i++)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sb.Append(string.Format(\"{0:X2}\", buff[i]));<br />&nbsp;&nbsp;&nbsp; Console.WriteLine(sb);<br />&nbsp; }<br />}</pre>\r\n  <p>Run the application two times, and then copy and paste the resulting keys into the &lt;<em>machineKey</em>&gt; element—one time for <em>validationKey</em> and the other time for <em>decryptionKey</em>.</p>\r\n  <h1>Sharing Authentication Tickets Across Applications</h1>\r\n  <p>If you need a single logon to work across multiple applications located in separate virtual directories, you need to share a common authentication ticket. To configure a common authentication ticket, you must manually generate <em>validationKey</em> and <em>decryptionKey</em> values and ensure that each application shares these values.</p>\r\n  <p>If you want to share tickets across all applications on your server you can set these manual values on the &lt;<em>machineKey</em>&gt; element in the machine level <em>Web.config</em> file. To share tickets across specific applications, you can use a &lt;<em>machineKey</em>&gt; element with common <em>validationKey</em> and <em>decryptionKey</em> values in the relevant application's <em>Web.config</em> files.</p>\r\n  <p>For information about how to generate manual key values, see the section, \"Web Farm Deployment Considerations,\" in this document.</p>\r\n  <h1>Upgrading ASP.NET Versions</h1>\r\n  <p>There is another important reason to explicitly set the &lt;<em>machineKey</em>&gt;. Each time you upgrade to a new version of ASP.NET, the key material used to automatically generate keys changes. Therefore, even if your application runs on a single Web server, if the keys need to remain stable over time, you should explicitly set the values for both <em>validation</em> and <em>decryption</em>.</p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}