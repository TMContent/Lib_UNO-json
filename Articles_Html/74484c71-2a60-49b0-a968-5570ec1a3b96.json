{
  "id": "74484c71-2a60-49b0-a968-5570ec1a3b96",
  "checksum": "d2fc5ad8dca834b1f3a79ae057ffc8fc4e5851ec",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "326902": [
      "ol",
      "li",
      "p",
      "a"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "aspnet": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "what": [
      "h1"
    ],
    "do": [
      "h1",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "keys": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p"
    ],
    "should": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "be": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "stored": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "well": [
      "p"
    ],
    "defined": [
      "p"
    ],
    "location": [
      "p",
      "p"
    ],
    "such": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "encrypted": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "sections": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "pre"
    ],
    "webconfig": [
      "p",
      "ol",
      "strong",
      "li",
      "p",
      "em"
    ],
    "or": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "windows": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "registry": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "not": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "hard": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "code": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "them": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "store": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "plaintext": [
      "p"
    ],
    "inside": [
      "p",
      "p"
    ],
    "configuration": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "files": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "why": [
      "h1"
    ],
    "when": [
      "p",
      "h1",
      "p",
      "ol",
      "li",
      "p"
    ],
    "faced": [
      "p"
    ],
    "with": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "encryption": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "title"
    ],
    "intruders": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "most": [
      "p"
    ],
    "vulnerable": [
      "p"
    ],
    "aspect": [
      "p"
    ],
    "key": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "title"
    ],
    "management": [
      "p"
    ],
    "because": [
      "p",
      "p"
    ],
    "are": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "used": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "generate": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "protects": [
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "data": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "themselves": [
      "p"
    ],
    "become": [
      "p"
    ],
    "needs": [
      "p"
    ],
    "protected": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "p"
    ],
    "uses": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "how": [
      "h1"
    ],
    "follow": [
      "p"
    ],
    "these": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p"
    ],
    "considering": [
      "p"
    ],
    "storage": [
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "need": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "only": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "encrypts": [
      "ol",
      "li",
      "p"
    ],
    "decrypts": [
      "ol",
      "li",
      "p"
    ],
    "common": [
      "ol",
      "li",
      "p"
    ],
    "components": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "require": [
      "ol",
      "li",
      "p"
    ],
    "include": [
      "ol",
      "li",
      "p"
    ],
    "storing": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "exchange": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "other": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "systems": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "certificates": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "authenticate": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "sign": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "documents": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "choose": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "appropriate": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "mechanism": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "handling": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "carefully": [
      "ol",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "ensure": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "dpapi": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "available": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "through": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "protectdata": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "class": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "protect": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "title"
    ],
    "example": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "h1",
      "h1"
    ],
    "enckey": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "protecteddataprotect(enckey,": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "salt": [
      "ol",
      "li",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "dataprotectionscopecurrentuser);registrykey": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "rk": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "registrylocalmachine.opensubkey(\"software\\\\myapp\\\\keystore\",": [
      "ol",
      "li",
      "ul",
      "li",
      "pre",
      "pre"
    ],
    "true;rk.setvalue(\"enckey\",": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "wbuff": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "registryvaluekindbinary);": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "webconfig:": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "webconfig,": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "they": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "appsettings": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "strong"
    ],
    "section": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "additionally": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "aspnet_regiis": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "pre"
    ],
    "utility": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "-pe": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"appsettings\"": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "-app": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"/": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "name": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "-prov": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"dataprotectionconfigurationprovider\"": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "set": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "permissions": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "apply": [
      "ol",
      "li",
      "p"
    ],
    "filesystem": [
      "ol",
      "li",
      "p"
    ],
    "can": [
      "ol",
      "li",
      "p"
    ],
    "accessed": [
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "administrators": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "iis": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "metabase": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "grant": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "users": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "access": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "account": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "see": [
      "ol",
      "li",
      "p"
    ],
    "microsoft's": [
      "ol",
      "li",
      "p",
      "a"
    ],
    "kb": [
      "ol",
      "li",
      "p",
      "a"
    ],
    "more": [
      "ol",
      "li",
      "p"
    ],
    "information": [
      "ol",
      "li",
      "p"
    ],
    "hard-code": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "hard-coding": [
      "ol",
      "li",
      "p"
    ],
    "source": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "hoping": [
      "ol",
      "li",
      "p"
    ],
    "an": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "reverse": [
      "ol",
      "li",
      "p"
    ],
    "engineer": [
      "ol",
      "li",
      "p"
    ],
    "security": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "obscurity": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "determined": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "usually": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "find": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "way": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "defeat": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "place": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "obfuscating": [
      "ol",
      "li",
      "p"
    ],
    "placing": [
      "ol",
      "li",
      "p"
    ],
    "than": [
      "ol",
      "li",
      "p"
    ],
    "unload": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "from": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "memory": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "after": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "their": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "leaving": [
      "ol",
      "li",
      "p"
    ],
    "final": [
      "ol",
      "li",
      "p"
    ],
    "allows": [
      "ol",
      "li",
      "p"
    ],
    "operating": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "system": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "page": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "onto": [
      "ol",
      "li",
      "p"
    ],
    "drive": [
      "ol",
      "li",
      "p"
    ],
    "may": [
      "ol",
      "li",
      "p"
    ],
    "obtain": [
      "ol",
      "li",
      "p"
    ],
    "system's": [
      "ol",
      "li",
      "p"
    ],
    "file": [
      "ol",
      "li",
      "p"
    ],
    "problem": [
      "h1"
    ],
    "following": [
      "p",
      "p"
    ],
    "shows": [
      "p",
      "p"
    ],
    "hard-coded": [
      "p"
    ],
    "able": [
      "p"
    ],
    "compromise": [
      "p"
    ],
    "once": [
      "p"
    ],
    "gain": [
      "p"
    ],
    "byte]": [
      "pre",
      "pre"
    ],
    "myappcrypto.generatesalt();string": [
      "pre"
    ],
    "secretstring": [
      "pre"
    ],
    "\"application's": [
      "pre"
    ],
    "key\"hmacsha512": [
      "pre"
    ],
    "md": [
      "pre"
    ],
    "new": [
      "pre"
    ],
    "hmacsha512salt);md.initialize();byte[]": [
      "pre"
    ],
    "rawkey": [
      "pre",
      "pre"
    ],
    "mdcomputehash(encoding.ascii.getbytes(secretstring));md.clear();rijndael": [
      "pre"
    ],
    "encmd": [
      "pre",
      "pre"
    ],
    "rijndaelcreate();encmd.key": [
      "pre",
      "pre"
    ],
    "rawkeyencmd.iv": [
      "pre",
      "pre"
    ],
    "salticryptotransform": [
      "pre",
      "pre"
    ],
    "encct": [
      "pre",
      "pre"
    ],
    "encmdcreateencryptor();": [
      "pre",
      "pre"
    ],
    "solution": [
      "h1"
    ],
    "securely": [
      "p"
    ],
    "stores": [
      "p"
    ],
    "aspnet's": [
      "p"
    ],
    "extremely": [
      "p"
    ],
    "difficult": [
      "p"
    ],
    "steal": [
      "p"
    ],
    "actual": [
      "p"
    ],
    "without": [
      "p"
    ],
    "compromising": [
      "p"
    ],
    "password": [
      "p"
    ],
    "associated": [
      "p"
    ],
    "local": [
      "p"
    ],
    "myappcrypto.generatesalt();": [
      "pre"
    ],
    "registrykey": [
      "pre"
    ],
    "regkey": [
      "pre"
    ],
    "true;byte[]": [
      "pre"
    ],
    "byte[])regkey.getvalue(\"enckey\",": [
      "pre"
    ],
    "null;rawkey": [
      "pre"
    ],
    "protecteddataunprotect(rawkey,": [
      "pre"
    ],
    "dataprotectionscopecurrentuser);": [
      "pre"
    ],
    "rijndael": [
      "pre"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Do",
      "Why",
      "When",
      "How",
      "Problem Example",
      "Solution Example"
    ],
    "ul": [
      "ASP.NET 4.0",
      "Storing encryption keys used to exchange encrypted sensitive data with other systems \n        Storing keys or certificates used to authenticate to other systems \n        Storing keys used to sign documents",
      "Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);\n        \n        \n          \n            web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\""
    ],
    "li": [
      "ASP.NET 4.0",
      "Identify the need for a key store. Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:\n      \n        Storing encryption keys used to exchange encrypted sensitive data with other systems \n        Storing keys or certificates used to authenticate to other systems \n        Storing keys used to sign documents",
      "Storing encryption keys used to exchange encrypted sensitive data with other systems",
      "Storing keys or certificates used to authenticate to other systems",
      "Storing keys used to sign documents",
      "Choose the appropriate mechanism for handling encryption keys. Carefully choose the appropriate mechanism for handling your application's encryption keys.\n      \n        \n          \n            Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);\n        \n        \n          \n            web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"",
      "Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);",
      "web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"",
      "Set appropriate permissions. Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "Protect the IIS metabase. Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See Microsoft's KB 326902 for more information.",
      "Do not hard-code keys in the application. Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Do not place keys into configuration files. Obfuscating the encryption keys and placing them into configuration files other than web.config is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Unload keys from memory after their use. Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file."
    ],
    "p": [
      "Application Keys should be stored in a well defined location, such as the encrypted sections of the application's web.config or encrypted in the Windows Registry. Do not hard code them or store them as plaintext inside configuration files.",
      "When faced with encryption, intruders attack the most vulnerable aspect: key management. Because keys are used to generate the encryption that protects sensitive data, the keys themselves become sensitive data that needs to be protected.",
      "If your application uses encryption and encryption keys.",
      "Follow these steps when considering a key storage location:",
      "Identify the need for a key store. Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:",
      "Choose the appropriate mechanism for handling encryption keys. Carefully choose the appropriate mechanism for handling your application's encryption keys.",
      "Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:",
      "web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:",
      "Set appropriate permissions. Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "Protect the IIS metabase. Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See Microsoft's KB 326902 for more information.",
      "Do not hard-code keys in the application. Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Do not place keys into configuration files. Obfuscating the encryption keys and placing them into configuration files other than web.config is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Unload keys from memory after their use. Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file.",
      "The following code shows a hard-coded encryption key inside the application. A determined attacker will be able to compromise the key once they gain access to the source code.",
      "The following code shows an application that securely stores its encryption keys. Because the keys are stored into the Windows Registry and are protected with the ASP.NET's DPAPI encryption keys, it is extremely difficult for an attacker to steal the actual key without compromising the password associated with the ASP.NET local system account.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Identify the need for a key store. Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:\n      \n        Storing encryption keys used to exchange encrypted sensitive data with other systems \n        Storing keys or certificates used to authenticate to other systems \n        Storing keys used to sign documents\n      \n    \n    \n      \n        Choose the appropriate mechanism for handling encryption keys. Carefully choose the appropriate mechanism for handling your application's encryption keys.\n      \n        \n          \n            Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);\n        \n        \n          \n            web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"\n        \n      \n    \n    \n      \n        Set appropriate permissions. Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.\n    \n    \n      \n        Protect the IIS metabase. Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See Microsoft's KB 326902 for more information.\n    \n    \n      \n        Do not hard-code keys in the application. Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.\n    \n    \n      \n        Do not place keys into configuration files. Obfuscating the encryption keys and placing them into configuration files other than web.config is security through obscurity. A determined attacker will usually find a way to defeat such mechanism. \n    \n    \n      \n        Unload keys from memory after their use. Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file."
    ],
    "strong": [
      "Identify the need for a key store.",
      "Choose the appropriate mechanism for handling encryption keys.",
      "Windows Registry",
      "web.config",
      "appSettings",
      "aspnet_regiis",
      "appSettings",
      "Set appropriate permissions.",
      "Protect the IIS metabase.",
      "Do not hard-code keys in the application.",
      "Do not place keys into configuration files.",
      "Unload keys from memory after their use."
    ],
    "pre": [
      "encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);",
      "aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"",
      "byte[] salt = MyApp.Crypto.GenerateSalt();string secretString = \"application's encryption key\";HMACSHA512 md = new HMACSHA512(salt);md.Initialize();byte[] rawKey = md.ComputeHash(Encoding.ASCII.GetBytes(secretString));md.Clear();Rijndael encMD = Rijndael.Create();encMD.Key = rawKey;encMD.IV = salt;ICryptoTransform encCT = encMD.CreateEncryptor();",
      "byte[] salt = MyApp.Crypto.GenerateSalt(); RegistryKey regKey = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);byte[] rawKey = (byte[])regKey.GetValue(\"encKey\", null);rawKey = ProtectedData.Unprotect(rawKey, salt, DataProtectionScope.CurrentUser); Rijndael encMD = Rijndael.Create();encMD.Key = rawKey;encMD.IV = salt;ICryptoTransform encCT = encMD.CreateEncryptor();"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "Microsoft's KB 326902"
    ],
    "em": [
      "web.config"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://support.microsoft.com/kb/326902",
      "text": "Microsoft's KB 326902"
    }
  ],
  "html": "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Application Keys should be stored in a well defined location, such as the encrypted sections of the application's web.config or encrypted in the Windows Registry. Do not hard code them or store them as plaintext inside configuration files.</p>\n  <h1>Why</h1>\n  <p>When faced with encryption, intruders attack the most vulnerable aspect: key management. Because keys are used to generate the encryption that protects sensitive data, the keys themselves become sensitive data that needs to be protected. </p>\n  <h1>When</h1>\n  <p>If your application uses encryption and encryption keys.</p>\n  <h1>How</h1>\n  <p>Follow these steps when considering a key storage location:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify the need for a key store.</strong> Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:</p>\n      <ul>\n        <li>Storing encryption keys used to exchange encrypted sensitive data with other systems </li>\n        <li>Storing keys or certificates used to authenticate to other systems </li>\n        <li>Storing keys used to sign documents</li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Choose the appropriate mechanism for handling encryption keys.</strong> Carefully choose the appropriate mechanism for handling your application's encryption keys.</p>\n      <ul>\n        <li>\n          <p>\n            <strong>Windows Registry</strong>: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:</p>\n          <pre>encKey =<br /> ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);<br />RegistryKey rk =<br /> Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);<br />rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);</pre>\n        </li>\n        <li>\n          <p>\n            <strong>web.config</strong>: If you store your application's encryption keys into web.config, ensure that they are stored into the <strong>appSettings</strong> section. Additionally, use the <strong>aspnet_regiis</strong> utility to ensure that the <strong>appSettings</strong> section is encrypted. Example:</p>\n          <pre>aspnet_regiis -pe \"appSettings\" -app \"/&lt; your application's name &gt;\"<br />  -prov \"DataProtectionConfigurationProvider\"</pre>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Set appropriate permissions.</strong> Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Protect the IIS metabase.</strong> Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See <a href=\"http://support.microsoft.com/kb/326902\">Microsoft's KB 326902</a> for more information.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Do not hard-code keys in the application.</strong> Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Do not place keys into configuration files.</strong> Obfuscating the encryption keys and placing them into configuration files other than <em>web.config</em> is security through obscurity. A determined attacker will usually find a way to defeat such mechanism. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Unload keys from memory after their use.</strong> Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file.</p>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>The following code shows a hard-coded encryption key inside the application. A determined attacker will be able to compromise the key once they gain access to the source code.</p>\n  <pre>byte[] salt = MyApp.Crypto.GenerateSalt();<br />string secretString = \"application's encryption key\";<br />HMACSHA512 md = new HMACSHA512(salt);<br />md.Initialize();<br />byte[] rawKey =<br /> md.ComputeHash(Encoding.ASCII.GetBytes(secretString));<br />md.Clear();<br />Rijndael encMD = Rijndael.Create();<br />encMD.Key = rawKey;<br />encMD.IV = salt;<br />ICryptoTransform encCT = encMD.CreateEncryptor();</pre>\n  <h1>Solution Example</h1>\n  <p>The following code shows an application that securely stores its encryption keys. Because the keys are stored into the Windows Registry and are protected with the ASP.NET's DPAPI encryption keys, it is extremely difficult for an attacker to steal the actual key without compromising the password associated with the ASP.NET local system account.</p>\n  <pre>byte[] salt = MyApp.Crypto.GenerateSalt(); <br />RegistryKey regKey =<br /> Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);<br />byte[] rawKey = (byte[])regKey.GetValue(\"encKey\", null);<br />rawKey =<br /> ProtectedData.Unprotect(rawKey, salt, DataProtectionScope.CurrentUser); <br />Rijndael encMD = Rijndael.Create();<br />encMD.Key = rawKey;<br />encMD.IV = salt;<br />ICryptoTransform encCT = encMD.CreateEncryptor();</pre>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}