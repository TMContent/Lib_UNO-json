{
  "id": "3318bc0c-a5e3-4209-913e-a616562c746a",
  "checksum": "186d5fd3c1053f6ff221636cca538fbdd70ec818",
  "words": {
    "35": [
      "ul",
      "li"
    ],
    "2008": [
      "ul",
      "li",
      "ol",
      "li",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "microsoft®": [
      "ul",
      "li"
    ],
    "windows": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "communication": [
      "ul",
      "li"
    ],
    "foundation": [
      "ul",
      "li"
    ],
    "wcf)": [
      "ul",
      "li"
    ],
    "microsoft": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "visual": [
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "studio®": [
      "ul",
      "li"
    ],
    "description": [
      "h1"
    ],
    "you": [
      "p",
      "p"
    ],
    "should": [
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "title"
    ],
    "service": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "when": [
      "p"
    ],
    "have": [
      "p",
      "p"
    ],
    "support": [
      "p"
    ],
    "transports": [
      "p"
    ],
    "like": [
      "p"
    ],
    "tcp": [
      "p"
    ],
    "msmq": [
      "p"
    ],
    "named": [
      "p"
    ],
    "pipes": [
      "p"
    ],
    "services": [
      "p",
      "p"
    ],
    "advantages": [
      "p"
    ],
    "over": [
      "p"
    ],
    "self": [
      "p"
    ],
    "hosting": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "that": [
      "p"
    ],
    "they": [
      "p"
    ],
    "give": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "benefit": [
      "p"
    ],
    "of": [
      "p"
    ],
    "automatic": [
      "p"
    ],
    "startup": [
      "p"
    ],
    "lifetime": [
      "p"
    ],
    "is": [
      "p",
      "p"
    ],
    "controlled": [
      "p"
    ],
    "by": [
      "p"
    ],
    "operating": [
      "p"
    ],
    "system": [
      "p"
    ],
    "it": [
      "p",
      "p"
    ],
    "easier": [
      "p"
    ],
    "run": [
      "p"
    ],
    "under": [
      "p"
    ],
    "least": [
      "p"
    ],
    "privileged": [
      "p"
    ],
    "account": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "host": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "will": [
      "p"
    ],
    "restart": [
      "p"
    ],
    "your": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "fails": [
      "p"
    ],
    "can": [
      "p"
    ],
    "be": [
      "p"
    ],
    "managed": [
      "p",
      "ul",
      "li"
    ],
    "control": [
      "p"
    ],
    "manager": [
      "p"
    ],
    "management": [
      "p"
    ],
    "console": [
      "p"
    ],
    "mmc).": [
      "p"
    ],
    "following": [
      "p",
      "ol",
      "li"
    ],
    "steps": [
      "p"
    ],
    "wcf": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "create": [
      "ol",
      "li"
    ],
    "project": [
      "ol",
      "li",
      "li"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "ol",
      "pre",
      "li",
      "ul",
      "li"
    ],
    "studio": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "2008add": [
      "ol"
    ],
    "installers": [
      "ol",
      "li"
    ],
    "projectoverride": [
      "ol"
    ],
    "onstart": [
      "ol",
      "li"
    ],
    "onstop": [
      "ol",
      "li"
    ],
    "methods": [
      "ol",
      "li"
    ],
    "start": [
      "ol",
      "li"
    ],
    "stop": [
      "ol",
      "li"
    ],
    "inside": [
      "ol",
      "li"
    ],
    "as": [
      "ol",
      "li"
    ],
    "shown": [
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "li"
    ],
    "exampleusing": [
      "ol",
      "li"
    ],
    "systemusing": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemcollections.generic;using": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemcomponentmodel;using": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemdata;using": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemdiagnostics;using": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemlinq;using": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemserviceprocess;using": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemtext;using": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "systemservicemodel;namespace": [
      "ol",
      "li",
      "ol"
    ],
    "windowsservice1{": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "public": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "partial": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "class": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "wcfservicehost1": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "servicebase": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "internal": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "static": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "servicehost": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "myservicehost": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre"
    ],
    "null": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "wcfservicehost1)": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "initializecomponent);": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "}": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "protected": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "override": [
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "void": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "onstartstring[]": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "args": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "!=": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "myservicehostclose();": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "new": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "servicehosttypeof(service1));": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "myservicehostopen();": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "onstop)": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "}}install": [
      "ol"
    ],
    "installutilexe": [
      "ol",
      "li"
    ],
    "command": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "from": [
      "ol",
      "li",
      "p"
    ],
    "prompt": [
      "ol",
      "li"
    ],
    "add": [
      "li"
    ],
    "}}": [
      "li",
      "ol",
      "pre"
    ],
    "systemservicemodel;": [
      "pre"
    ],
    "namespace": [
      "pre"
    ],
    "install": [
      "li"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "for": [
      "ul",
      "li",
      "li"
    ],
    "more": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "“how": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "tcp”": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "http//www.codeplex.com/wcfsecurityguide/wiki/print.aspx?title=how%20to%20-%20host%20wcf%20in%20a%20windows%20service%20using%20tcp&version=1&action=printfor": [
      "ul"
    ],
    "service”": [
      "ul",
      "li"
    ],
    "http//msdn.microsoft.com/en-us/library/ms733069.aspx": [
      "ul",
      "li",
      "a"
    ],
    "http//www.codeplex.com/wcfsecurityguide/wiki/print.aspx?title=how%20to%20-%20host%20wcf%20in%20a%20windows%20service%20using%20tcp&version=1&action=print": [
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "how": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Description",
      "Additional Resources"
    ],
    "ul": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5 Microsoft Visual Studio® 2008",
      "For more information see “How to Host WCF in a Windows Service Using TCP” at http://www.codeplex.com/WCFSecurityGuide/Wiki/Print.aspx?title=How%20To%20-%20Host%20WCF%20in%20a%20Windows%20Service%20Using%20TCP&version=1&action=PrintFor more information see “How to: Host a WCF Service in a Managed Windows Service” at http://msdn.microsoft.com/en-us/library/ms733069.aspx"
    ],
    "li": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5",
      "Microsoft Visual Studio® 2008",
      "Create a Windows Service Project using Visual Studio 2008",
      "Add service installers to the Windows Service Project",
      "Override OnStart and OnStop methods to Start and stop the service inside the Windows Service, as shown in the following code example.using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Diagnostics;using System.Linq;using System.ServiceProcess;using System.Text;using System.ServiceModel;namespace WindowsService1{    public partial class WCFServiceHost1 : ServiceBase    {        internal static ServiceHost myServiceHost = null;         public WCFServiceHost1()        {            InitializeComponent();        }        protected override void OnStart(string[] args)        {            if (myServiceHost != null)            {                myServiceHost.Close();            }            myServiceHost = new ServiceHost(typeof(Service1));            myServiceHost.Open();        }        protected override void OnStop()        {            if (myServiceHost != null)            {                myServiceHost.Close();                myServiceHost = null;            }        }    }}",
      "Install the Windows service using the InstallUtil.exe command from the Visual Studio 2008 command prompt.",
      "For more information see “How to Host WCF in a Windows Service Using TCP” at http://www.codeplex.com/WCFSecurityGuide/Wiki/Print.aspx?title=How%20To%20-%20Host%20WCF%20in%20a%20Windows%20Service%20Using%20TCP&version=1&action=Print",
      "For more information see “How to: Host a WCF Service in a Managed Windows Service” at http://msdn.microsoft.com/en-us/library/ms733069.aspx"
    ],
    "p": [
      "You should use a Windows service when you have to support transports like TCP, MSMQ, named pipes. Windows services have advantages over self hosting in that they give the benefit of automatic startup, service lifetime is controlled by the operating system, it is easier to run under a least privileged account and the Windows service host will restart your service if it fails. Windows services can be managed in the Service Control Manager in the Microsoft Management Console (MMC).",
      "Use the following steps to host your WCF service in a Windows Service.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Create a Windows Service Project using Visual Studio 2008Add service installers to the Windows Service ProjectOverride OnStart and OnStop methods to Start and stop the service inside the Windows Service, as shown in the following code example.using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Diagnostics;using System.Linq;using System.ServiceProcess;using System.Text;using System.ServiceModel;namespace WindowsService1{    public partial class WCFServiceHost1 : ServiceBase    {        internal static ServiceHost myServiceHost = null;         public WCFServiceHost1()        {            InitializeComponent();        }        protected override void OnStart(string[] args)        {            if (myServiceHost != null)            {                myServiceHost.Close();            }            myServiceHost = new ServiceHost(typeof(Service1));            myServiceHost.Open();        }        protected override void OnStop()        {            if (myServiceHost != null)            {                myServiceHost.Close();                myServiceHost = null;            }        }    }}Install the Windows service using the InstallUtil.exe command from the Visual Studio 2008 command prompt.",
      "using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Diagnostics;using System.Linq;using System.ServiceProcess;using System.Text;using System.ServiceModel;namespace WindowsService1{    public partial class WCFServiceHost1 : ServiceBase    {        internal static ServiceHost myServiceHost = null;         public WCFServiceHost1()        {            InitializeComponent();        }        protected override void OnStart(string[] args)        {            if (myServiceHost != null)            {                myServiceHost.Close();            }            myServiceHost = new ServiceHost(typeof(Service1));            myServiceHost.Open();        }        protected override void OnStop()        {            if (myServiceHost != null)            {                myServiceHost.Close();                myServiceHost = null;            }        }    }}"
    ],
    "pre": [
      "using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Diagnostics;using System.Linq;using System.ServiceProcess;using System.Text;using System.ServiceModel;",
      "namespace WindowsService1{    public partial class WCFServiceHost1 : ServiceBase    {        internal static ServiceHost myServiceHost = null;",
      "public WCFServiceHost1()        {            InitializeComponent();        }        protected override void OnStart(string[] args)        {            if (myServiceHost != null)            {                myServiceHost.Close();            }            myServiceHost = new ServiceHost(typeof(Service1));            myServiceHost.Open();        }        protected override void OnStop()        {            if (myServiceHost != null)            {                myServiceHost.Close();                myServiceHost = null;            }        }    }}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "http://www.codeplex.com/WCFSecurityGuide/Wiki/Print.aspx?title=How%20To%20-%20Host%20WCF%20in%20a%20Windows%20Service%20Using%20TCP&version=1&action=Print",
      "http://msdn.microsoft.com/en-us/library/ms733069.aspx"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://www.codeplex.com/WCFSecurityGuide/Wiki/Print.aspx?title=How%20To%20-%20Host%20WCF%20in%20a%20Windows%20Service%20Using%20TCP&version=1&action=Print",
      "text": "http://www.codeplex.com/WCFSecurityGuide/Wiki/Print.aspx?title=How%20To%20-%20Host%20WCF%20in%20a%20Windows%20Service%20Using%20TCP&version=1&action=Print"
    },
    {
      "href": "http://msdn.microsoft.com/en-us/library/ms733069.aspx",
      "text": "http://msdn.microsoft.com/en-us/library/ms733069.aspx"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>Microsoft&#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&#174; 2008</li></li>\n  </ul>\n  <h1>Description</h1>\n  <p>You should use a Windows service when you have to support transports like TCP, MSMQ, named pipes. Windows services have advantages over self hosting in that they give the benefit of automatic startup, service lifetime is controlled by the operating system, it is easier to run under a least privileged account and the Windows service host will restart your service if it fails. Windows services can be managed in the Service Control Manager in the Microsoft Management Console (MMC).</p>\n  <p>Use the following steps to host your WCF service in a Windows Service.</p>\n  <ol>\n    <li>Create a Windows Service Project using Visual Studio 2008<li>Add service installers to the Windows Service Project<li>Override OnStart and OnStop methods to Start and stop the service inside the Windows Service, as shown in the following code example.<ol><pre>using System;<br />using System.Collections.Generic;<br />using System.ComponentModel;<br />using System.Data;<br />using System.Diagnostics;<br />using System.Linq;<br />using System.ServiceProcess;<br />using System.Text;<br />using System.ServiceModel;</pre><pre>namespace WindowsService1<br />&#123;<br />    public partial class WCFServiceHost1 : ServiceBase<br />    &#123;<br />        internal static ServiceHost myServiceHost = null; </pre><pre>        public WCFServiceHost1()<br />        &#123;<br />            InitializeComponent();<br />        &#125;<br />        protected override void OnStart(string&#91;&#93; args)<br />        &#123;<br />            if (myServiceHost &#33;= null)<br />            &#123;<br />                myServiceHost.Close();<br />            &#125;<br />            myServiceHost = new ServiceHost(typeof(Service1));<br />            myServiceHost.Open();<br />        &#125;<br />        protected override void OnStop()<br />        &#123;<br />            if (myServiceHost &#33;= null)<br />            &#123;<br />                myServiceHost.Close();<br />                myServiceHost = null;<br />            &#125;<br />        &#125;<br />    &#125;<br />&#125;</pre></ol><li>Install the Windows service using the InstallUtil.exe command from the Visual Studio 2008 command prompt.</li></li></li></li>\n  </ol>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information see &#8220;How to Host WCF in a Windows Service Using TCP&#8221; at <a href=\"http://www.codeplex.com/WCFSecurityGuide/Wiki/Print.aspx?title=How&#37;20To&#37;20-&#37;20Host&#37;20WCF&#37;20in&#37;20a&#37;20Windows&#37;20Service&#37;20Using&#37;20TCP&version=1&action=Print\">http://www.codeplex.com/WCFSecurityGuide/Wiki/Print.aspx?title=How&#37;20To&#37;20-&#37;20Host&#37;20WCF&#37;20in&#37;20a&#37;20Windows&#37;20Service&#37;20Using&#37;20TCP&version=1&action=Print</a><li>For more information see &#8220;How to: Host a WCF Service in a Managed Windows Service&#8221; at <a href=\"http://msdn.microsoft.com/en-us/library/ms733069.aspx\">http://msdn.microsoft.com/en-us/library/ms733069.aspx</a><br /></li></li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}