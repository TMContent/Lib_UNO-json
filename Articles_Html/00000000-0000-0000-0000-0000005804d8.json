{
  "id": "00000000-0000-0000-0000-0000005804d8",
  "checksum": "5febccd1c98fd9e5aeae6632467a4b07c1bf6180",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "ios": [
      "ul",
      "li",
      "ol",
      "li"
    ],
    "applications": [
      "ul",
      "li"
    ],
    "that": [
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "handle": [
      "ul",
      "li"
    ],
    "xml": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "documents": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2"
    ],
    "validate": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "and": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "encode": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h2",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "h2",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "inserted": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "into": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h2"
    ],
    "validating": [
      "p"
    ],
    "encoding": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "li",
      "li",
      "strong"
    ],
    "helps": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "injection": [
      "p"
    ],
    "vulnerabilities": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "identify": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "by": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "the": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "application": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li"
    ],
    "examine": [
      "ol",
      "li"
    ],
    "design": [
      "ol",
      "li"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "document": [
      "ol",
      "li"
    ],
    "types": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "ul",
      "li"
    ],
    "handles": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "find": [
      "ol",
      "li"
    ],
    "write": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "validation": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "h2",
      "h2"
    ],
    "methods": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "are": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "stored": [
      "ol",
      "li"
    ],
    "in": [
      "ol",
      "li"
    ],
    "use": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "call": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "from": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li"
    ],
    "previous": [
      "ol",
      "li"
    ],
    "step": [
      "ol",
      "li"
    ],
    "wherever": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "should": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "performed": [
      "ol",
      "li"
    ],
    "before": [
      "ol",
      "li"
    ],
    "escape": [
      "ol",
      "li"
    ],
    "entities": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "unfortunately": [
      "ol",
      "li"
    ],
    "there": [
      "ol",
      "li"
    ],
    "no": [
      "ol",
      "li"
    ],
    "stable": [
      "ol",
      "li"
    ],
    "libraries": [
      "ol",
      "li"
    ],
    "available": [
      "ol",
      "li"
    ],
    "for": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "escaping": [
      "ol",
      "li"
    ],
    "when": [
      "ol",
      "li"
    ],
    "writing": [
      "ol",
      "li"
    ],
    "escapes": [
      "ol",
      "li"
    ],
    "consider": [
      "ol",
      "li"
    ],
    "following": [
      "ol",
      "li"
    ],
    "must": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "first": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "converted": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "a": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "uniform": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "character": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "escaped": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "properly": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "loads": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "able": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "restore": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "original": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "encoded": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "guidelines": [
      "h2"
    ],
    "canonicalize": [
      "ul",
      "li",
      "a"
    ],
    "file": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "names": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "paths": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "check": [
      "ul",
      "li",
      "a"
    ],
    "null": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "bytes": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "input": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "passed": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "uiwebview": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "controls": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "formats": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h2"
    ],
    "canonicalized": [
      "ul",
      "li",
      "a"
    ],
    "checked": [
      "ul",
      "li",
      "a"
    ],
    "is": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "validated": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How",
      "Data Validation Guidelines",
      "Data Validation Checklists"
    ],
    "ul": [
      "iOS applications that handle XML documents.",
      "Data must first be converted to a uniform character encoding. \n XML entities must be escaped properly. \n Code that loads XML documents should be able to restore the original data from the encoded data.",
      "Canonicalize File Names and Paths\n Check File Paths and Names for Null Bytes\n Validate All Input\n Validate and Encode Data Inserted into XML Documents\n Validate and Encode Data Passed to UIWebView Controls\n Validate File Formats",
      "File Names and Paths Are Canonicalized\n File Paths and Names Are Checked for Null Bytes\n All Input Is Validated\n Data Inserted into XML Documents Is Validated and Encoded\n Data Passed to UIWebView Controls Is Validated and Encoded\n File Formats Are Validated"
    ],
    "li": [
      "iOS applications that handle XML documents.",
      "Identify XML documents used by the application. Examine the application design to identify all XML documents and XML document types used by the application.",
      "Identify code that handles XML documents. Find all application code that handles XML documents.",
      "Write data validation methods. Write methods that validate all the data types that are stored in XML documents and used by the application.",
      "Use validation code. Call the data validation methods from the previous step wherever the application handles XML documents. Validation should be performed before encoding.",
      "Write encoding methods. Write methods that escape XML entities. Unfortunately, there are no stable libraries available for escaping XML entities for iOS. When writing code that escapes XML entities, consider the following: \n Data must first be converted to a uniform character encoding. \n XML entities must be escaped properly. \n Code that loads XML documents should be able to restore the original data from the encoded data.",
      "Data must first be converted to a uniform character encoding.",
      "XML entities must be escaped properly.",
      "Code that loads XML documents should be able to restore the original data from the encoded data.",
      "Use encoding methods. Call the encoding methods wherever the application handles XML documents.",
      "Canonicalize File Names and Paths",
      "Check File Paths and Names for Null Bytes",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate and Encode Data Passed to UIWebView Controls",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "File Paths and Names Are Checked for Null Bytes",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "Data Passed to UIWebView Controls Is Validated and Encoded",
      "File Formats Are Validated"
    ],
    "p": [
      "Validate and encode data inserted into XML documents.",
      "Validating and encoding data inserted into XML documents helps prevent XML injection vulnerabilities.",
      "To validate and encode data inserted into XML documents:"
    ],
    "ol": [
      "Identify XML documents used by the application. Examine the application design to identify all XML documents and XML document types used by the application.\n Identify code that handles XML documents. Find all application code that handles XML documents.\n Write data validation methods. Write methods that validate all the data types that are stored in XML documents and used by the application.\n Use validation code. Call the data validation methods from the previous step wherever the application handles XML documents. Validation should be performed before encoding.\n Write encoding methods. Write methods that escape XML entities. Unfortunately, there are no stable libraries available for escaping XML entities for iOS. When writing code that escapes XML entities, consider the following: \n Data must first be converted to a uniform character encoding. \n XML entities must be escaped properly. \n Code that loads XML documents should be able to restore the original data from the encoded data.\n Use encoding methods. Call the encoding methods wherever the application handles XML documents."
    ],
    "strong": [
      "Identify XML documents used by the application.",
      "Identify code that handles XML documents.",
      "Write data validation methods.",
      "Use validation code.",
      "Write encoding methods.",
      "Use encoding methods."
    ],
    "a": [
      "Canonicalize File Names and Paths",
      "Check File Paths and Names for Null Bytes",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate and Encode Data Passed to UIWebView Controls",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "File Paths and Names Are Checked for Null Bytes",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "Data Passed to UIWebView Controls Is Validated and Encoded",
      "File Formats Are Validated"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-000000866d55",
      "text": "Canonicalize File Names and Paths"
    },
    {
      "href": "00000000-0000-0000-0000-000000590dce",
      "text": "Check File Paths and Names for Null Bytes"
    },
    {
      "href": "00000000-0000-0000-0000-00000051c329",
      "text": "Validate All Input"
    },
    {
      "href": "00000000-0000-0000-0000-0000005804d8",
      "text": "Validate and Encode Data Inserted into XML Documents"
    },
    {
      "href": "00000000-0000-0000-0000-000000410a08",
      "text": "Validate and Encode Data Passed to UIWebView Controls"
    },
    {
      "href": "00000000-0000-0000-0000-00000049bb5e",
      "text": "Validate File Formats"
    },
    {
      "href": "00000000-0000-0000-0000-0000004d996e",
      "text": "File Names and Paths Are Canonicalized"
    },
    {
      "href": "00000000-0000-0000-0000-0000004446d0",
      "text": "File Paths and Names Are Checked for Null Bytes"
    },
    {
      "href": "00000000-0000-0000-0000-000000396c19",
      "text": "All Input Is Validated"
    },
    {
      "href": "00000000-0000-0000-0000-0000008c53b6",
      "text": "Data Inserted into XML Documents Is Validated and Encoded"
    },
    {
      "href": "00000000-0000-0000-0000-000000647d44",
      "text": "Data Passed to UIWebView Controls Is Validated and Encoded"
    },
    {
      "href": "00000000-0000-0000-0000-000000066105",
      "text": "File Formats Are Validated"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> iOS applications that handle XML documents.</li>\n</ul><h2>What to Do</h2><p>Validate and encode data inserted into XML documents.\n</p><h2>Why</h2><p>Validating and encoding data inserted into XML documents helps prevent XML injection vulnerabilities.\n</p><h2>How</h2><p>To validate and encode data inserted into XML documents:\n</p><ol>\n<li> <strong>Identify XML documents used by the application.</strong> Examine the application design to identify all XML documents and XML document types used by the application.</li>\n<li> <strong>Identify code that handles XML documents.</strong> Find all application code that handles XML documents.</li>\n<li> <strong>Write data validation methods.</strong> Write methods that validate all the data types that are stored in XML documents and used by the application.</li>\n<li> <strong>Use validation code.</strong> Call the data validation methods from the previous step wherever the application handles XML documents. Validation should be performed before encoding.</li>\n<li> <strong>Write encoding methods.</strong> Write methods that escape XML entities. Unfortunately, there are no stable libraries available for escaping XML entities for iOS. When writing code that escapes XML entities, consider the following: <ul>\n<li> Data must first be converted to a uniform character encoding. </li>\n<li> XML entities must be escaped properly. </li>\n<li> Code that loads XML documents should be able to restore the original data from the encoded data.</li></ul></li>\n<li> <strong>Use encoding methods.</strong> Call the encoding methods wherever the application handles XML documents. </li>\n</ol><h2>Data Validation Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-000000866d55\">Canonicalize File Names and Paths</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000590dce\">Check File Paths and Names for Null Bytes</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000051c329\">Validate All Input</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000005804d8\">Validate and Encode Data Inserted into XML Documents</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000410a08\">Validate and Encode Data Passed to UIWebView Controls</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000049bb5e\">Validate File Formats</a></li>\n</ul><h2>Data Validation Checklists</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000004d996e\">File Names and Paths Are Canonicalized</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000004446d0\">File Paths and Names Are Checked for Null Bytes</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000396c19\">All Input Is Validated</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000008c53b6\">Data Inserted into XML Documents Is Validated and Encoded</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000647d44\">Data Passed to UIWebView Controls Is Validated and Encoded</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000066105\">File Formats Are Validated</a></li></ul>"
}