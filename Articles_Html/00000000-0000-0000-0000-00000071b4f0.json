{
  "id": "00000000-0000-0000-0000-00000071b4f0",
  "checksum": "d3b681b0e98cd40751bed57e8e06b8ff178229f5",
  "words": {
    "what": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "check": [
      "h2",
      "h2"
    ],
    "for": [
      "h2",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "li",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "h2",
      "ul",
      "li",
      "a",
      "h2",
      "ul",
      "li",
      "a",
      "title"
    ],
    "inserted": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "into": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "xml": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "documents": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "validated": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "and": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "encoded": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h2"
    ],
    "validating": [
      "p"
    ],
    "encoding": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "helps": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "injection": [
      "p"
    ],
    "vulnerabilities": [
      "p"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "identify": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "by": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "the": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "application": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "examine": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "design": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "document": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "types": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong"
    ],
    "uses": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "review": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "find": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "validation": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "h2",
      "h2"
    ],
    "make": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "sure": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "there": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "are": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "clear": [
      "ol",
      "li"
    ],
    "functions": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "defined": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "each": [
      "ol",
      "li"
    ],
    "type": [
      "ol",
      "li"
    ],
    "of": [
      "ol",
      "li"
    ],
    "handled": [
      "ol",
      "li"
    ],
    "consider": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "following": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "when": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "evaluating": [
      "ol",
      "li"
    ],
    "has": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "converted": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "a": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "uniform": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "character": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "first": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "entities": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "have": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "escaped": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "properly": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "loads": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "able": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "restore": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "original": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "from": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "before": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "being": [
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "validate": [
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "encode": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "add": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "methods": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "stored": [
      "ol",
      "li"
    ],
    "in": [
      "ol",
      "li"
    ],
    "use": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "previous": [
      "ol",
      "li"
    ],
    "step": [
      "ol",
      "li"
    ],
    "performed": [
      "ol",
      "li"
    ],
    "escape": [
      "ol",
      "li"
    ],
    "unfortunately": [
      "ol",
      "li"
    ],
    "no": [
      "ol",
      "li"
    ],
    "stable": [
      "ol",
      "li"
    ],
    "libraries": [
      "ol",
      "li"
    ],
    "available": [
      "ol",
      "li"
    ],
    "escaping": [
      "ol",
      "li"
    ],
    "ios": [
      "ol",
      "li"
    ],
    "writing": [
      "ol",
      "li"
    ],
    "escapes": [
      "ol",
      "li"
    ],
    "encodes": [
      "ol",
      "li"
    ],
    "guidelines": [
      "h2"
    ],
    "canonicalize": [
      "ul",
      "li",
      "a"
    ],
    "file": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "names": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "paths": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "input": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "formats": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h2"
    ],
    "canonicalized": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Data Validation Guidelines",
      "Data Validation Checklists"
    ],
    "p": [
      "Verify that data inserted into XML documents is validated and encoded.",
      "Validating and encoding data inserted into XML documents helps prevent XML injection vulnerabilities.",
      "To verify that data inserted into XML documents is validated and encoded:",
      "To validate and encode data inserted into XML documents:"
    ],
    "ol": [
      "Identify XML documents used by the application. Examine the application design to identify all XML documents and XML document types used by the application.\n Identify code that uses XML documents. Review application code to find code that uses XML documents.\n Review validation code. Make sure there are clear validation functions defined for each type of XML data handled by the application.\n Review encoding code. Make sure there are encoding functions defined for XML data. Consider the following when evaluating XML encoding: data has to be converted to a uniform character encoding first, XML entities have to be escaped properly, and code that loads XML documents should be able to restore the original data from the encoded data.\n Verify that validation and encoding are used. Make sure that all XML data is validated and encoded before being inserted into XML documents.",
      "Identify XML documents used by the application. Examine the application design to identify all XML documents and XML document types used by the application.\n Identify code that uses XML documents. Review application code to find code that uses XML documents.\n Add data validation code. Add methods that validate all the data types that are stored in XML documents and used by the application.\n Use validation code. Add code that uses the data validation methods from the previous step to code that uses XML documents. Validation should be performed before encoding.\n Add encoding code. Add methods that escape XML entities. Unfortunately, there are no stable libraries available for escaping XML entities for iOS. When writing code that escapes XML entities, consider the following: data has to be converted to a uniform character encoding first, XML entities have to be escaped properly, and code that loads XML documents should be able to restore the original data from the encoded data.\n Use encoding code. Add code that encodes data to code that uses XML documents."
    ],
    "li": [
      "Identify XML documents used by the application. Examine the application design to identify all XML documents and XML document types used by the application.",
      "Identify code that uses XML documents. Review application code to find code that uses XML documents.",
      "Review validation code. Make sure there are clear validation functions defined for each type of XML data handled by the application.",
      "Review encoding code. Make sure there are encoding functions defined for XML data. Consider the following when evaluating XML encoding: data has to be converted to a uniform character encoding first, XML entities have to be escaped properly, and code that loads XML documents should be able to restore the original data from the encoded data.",
      "Verify that validation and encoding are used. Make sure that all XML data is validated and encoded before being inserted into XML documents.",
      "Identify XML documents used by the application. Examine the application design to identify all XML documents and XML document types used by the application.",
      "Identify code that uses XML documents. Review application code to find code that uses XML documents.",
      "Add data validation code. Add methods that validate all the data types that are stored in XML documents and used by the application.",
      "Use validation code. Add code that uses the data validation methods from the previous step to code that uses XML documents. Validation should be performed before encoding.",
      "Add encoding code. Add methods that escape XML entities. Unfortunately, there are no stable libraries available for escaping XML entities for iOS. When writing code that escapes XML entities, consider the following: data has to be converted to a uniform character encoding first, XML entities have to be escaped properly, and code that loads XML documents should be able to restore the original data from the encoded data.",
      "Use encoding code. Add code that encodes data to code that uses XML documents.",
      "Canonicalize File Names and Paths",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "File Formats Are Validated"
    ],
    "strong": [
      "Identify XML documents used by the application.",
      "Identify code that uses XML documents.",
      "Review validation code.",
      "Review encoding code.",
      "Verify that validation and encoding are used.",
      "Identify XML documents used by the application.",
      "Identify code that uses XML documents.",
      "Add data validation code.",
      "Use validation code.",
      "Add encoding code.",
      "Use encoding code."
    ],
    "ul": [
      "Canonicalize File Names and Paths\n Validate All Input\n Validate and Encode Data Inserted into XML Documents\n Validate File Formats",
      "File Names and Paths Are Canonicalized\n All Input Is Validated\n Data Inserted into XML Documents Is Validated and Encoded\n File Formats Are Validated"
    ],
    "a": [
      "Canonicalize File Names and Paths",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "File Formats Are Validated"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-0000008d3cec",
      "text": "Canonicalize File Names and Paths"
    },
    {
      "href": "00000000-0000-0000-0000-0000008149ca",
      "text": "Validate All Input"
    },
    {
      "href": "00000000-0000-0000-0000-0000006c7089",
      "text": "Validate and Encode Data Inserted into XML Documents"
    },
    {
      "href": "00000000-0000-0000-0000-0000007635ae",
      "text": "Validate File Formats"
    },
    {
      "href": "00000000-0000-0000-0000-0000009763b8",
      "text": "File Names and Paths Are Canonicalized"
    },
    {
      "href": "00000000-0000-0000-0000-0000004f2fec",
      "text": "All Input Is Validated"
    },
    {
      "href": "00000000-0000-0000-0000-00000071b4f0",
      "text": "Data Inserted into XML Documents Is Validated and Encoded"
    },
    {
      "href": "00000000-0000-0000-0000-00000080c790",
      "text": "File Formats Are Validated"
    }
  ],
  "html": "<h2>What to Check For</h2><p>Verify that data inserted into XML documents is validated and encoded.\n</p><h2>Why</h2><p>Validating and encoding data inserted into XML documents helps prevent XML injection vulnerabilities.\n</p><h2>How to Check</h2><p>To verify that data inserted into XML documents is validated and encoded:\n</p><ol>\n<li> <strong>Identify XML documents used by the application.</strong> Examine the application design to identify all XML documents and XML document types used by the application.</li>\n<li> <strong>Identify code that uses XML documents.</strong> Review application code to find code that uses XML documents.</li>\n<li> <strong>Review validation code.</strong> Make sure there are clear validation functions defined for each type of XML data handled by the application.</li>\n<li> <strong>Review encoding code.</strong> Make sure there are encoding functions defined for XML data. Consider the following when evaluating XML encoding: data has to be converted to a uniform character encoding first, XML entities have to be escaped properly, and code that loads XML documents should be able to restore the original data from the encoded data.</li>\n<li> <strong>Verify that validation and encoding are used.</strong> Make sure that all XML data is validated and encoded before being inserted into XML documents.</li>\n</ol><h2>How to Fix</h2><p>To validate and encode data inserted into XML documents:\n</p><ol>\n<li> <strong>Identify XML documents used by the application.</strong> Examine the application design to identify all XML documents and XML document types used by the application.</li>\n<li> <strong>Identify code that uses XML documents.</strong> Review application code to find code that uses XML documents.</li>\n<li> <strong>Add data validation code.</strong> Add methods that validate all the data types that are stored in XML documents and used by the application.</li>\n<li> <strong>Use validation code.</strong> Add code that uses the data validation methods from the previous step to code that uses XML documents. Validation should be performed before encoding.</li>\n<li> <strong>Add encoding code.</strong> Add methods that escape XML entities. Unfortunately, there are no stable libraries available for escaping XML entities for iOS. When writing code that escapes XML entities, consider the following: data has to be converted to a uniform character encoding first, XML entities have to be escaped properly, and code that loads XML documents should be able to restore the original data from the encoded data.</li>\n<li> <strong>Use encoding code.</strong> Add code that encodes data to code that uses XML documents. </li>\n</ol><h2>Data Validation Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000008d3cec\">Canonicalize File Names and Paths</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000008149ca\">Validate All Input</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000006c7089\">Validate and Encode Data Inserted into XML Documents</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000007635ae\">Validate File Formats</a></li>\n</ul><h2>Data Validation Checklists</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000009763b8\">File Names and Paths Are Canonicalized</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000004f2fec\">All Input Is Validated</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000071b4f0\">Data Inserted into XML Documents Is Validated and Encoded</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000080c790\">File Formats Are Validated</a></li></ul>"
}