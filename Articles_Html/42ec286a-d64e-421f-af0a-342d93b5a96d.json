{
  "id": "42ec286a-d64e-421f-af0a-342d93b5a96d",
  "checksum": "3d0650ccf1bd6b70bb2c24c3d928b85e9e2fddf8",
  "words": {
    "description": [
      "h1"
    ],
    "a": [
      "p",
      "p",
      "p"
    ],
    "parameter": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "tampering": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "vulnerability": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "occurs": [
      "p"
    ],
    "when": [
      "p"
    ],
    "an": [
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "modify": [
      "p",
      "p"
    ],
    "parameters": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "used": [
      "p"
    ],
    "by": [
      "p",
      "p"
    ],
    "web": [
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "h1"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "have": [
      "p"
    ],
    "security": [
      "p",
      "p"
    ],
    "implications": [
      "p"
    ],
    "for": [
      "p",
      "p",
      "p"
    ],
    "example": [
      "p"
    ],
    "vulnerable": [
      "p",
      "p"
    ],
    "may": [
      "p"
    ],
    "allow": [
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "change": [
      "p",
      "p",
      "p"
    ],
    "his": [
      "p",
      "p",
      "p",
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "id": [
      "p",
      "p"
    ],
    "changing": [
      "p"
    ],
    "request": [
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "stems": [
      "p"
    ],
    "from": [
      "p",
      "p"
    ],
    "relying": [
      "p"
    ],
    "on": [
      "p",
      "p"
    ],
    "user-accessible": [
      "p"
    ],
    "store": [
      "p",
      "p"
    ],
    "sensitive": [
      "p",
      "p"
    ],
    "information": [
      "p"
    ],
    "common": [
      "p",
      "p"
    ],
    "areas": [
      "p"
    ],
    "are": [
      "p",
      "p"
    ],
    "data": [
      "p",
      "p",
      "p",
      "p"
    ],
    "stored": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "cookies": [
      "p"
    ],
    "hidden": [
      "p"
    ],
    "form": [
      "p"
    ],
    "fields": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "http": [
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p"
    ],
    "type": [
      "p"
    ],
    "applies": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "impact": [
      "h1",
      "p",
      "p"
    ],
    "exact": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p"
    ],
    "depends": [
      "p"
    ],
    "available": [
      "p"
    ],
    "usually": [
      "p",
      "p"
    ],
    "allows": [
      "p",
      "p"
    ],
    "status": [
      "p"
    ],
    "regular": [
      "p"
    ],
    "admin": [
      "p"
    ],
    "case": [
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p"
    ],
    "able": [
      "p",
      "p"
    ],
    "take": [
      "p"
    ],
    "full": [
      "p"
    ],
    "control": [
      "p"
    ],
    "its": [
      "p"
    ],
    "another": [
      "p",
      "p"
    ],
    "access": [
      "p"
    ],
    "user's": [
      "p"
    ],
    "impersonate": [
      "p",
      "p"
    ],
    "any": [
      "p"
    ],
    "choosing": [
      "p"
    ],
    "countermeasures": [
      "h1"
    ],
    "prevent": [
      "p"
    ],
    "problem": [
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "platform": [
      "p"
    ],
    "provided": [
      "p"
    ],
    "session": [
      "p",
      "p"
    ],
    "management": [
      "p"
    ],
    "don't": [
      "p"
    ],
    "accessible": [
      "p"
    ],
    "strong": [
      "p"
    ],
    "identifiers": [
      "p"
    ],
    "check": [
      "h1",
      "p"
    ],
    "adequate": [
      "p"
    ],
    "protection": [
      "p"
    ],
    "against": [
      "p"
    ],
    "identify": [
      "p"
    ],
    "all": [
      "p"
    ],
    "user-mutable": [
      "p"
    ],
    "verify": [
      "p"
    ],
    "with": [
      "p"
    ],
    "them": [
      "p"
    ],
    "does": [
      "p"
    ],
    "not": [
      "p"
    ],
    "result": [
      "p"
    ],
    "elevated": [
      "p"
    ],
    "privileges": [
      "p"
    ],
    "specific": [
      "h1"
    ],
    "technologies": [
      "h1"
    ],
    "aspnet": [
      "ul",
      "li",
      "a"
    ],
    "java": [
      "ul",
      "li",
      "a"
    ],
    "php": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Description",
      "Impact",
      "Countermeasures",
      "Application Check",
      "Specific Technologies"
    ],
    "p": [
      "A parameter tampering vulnerability occurs when an attacker can modify parameters used by a web application that have security implications. For example, a vulnerable application may allow an attacker to change his user id by changing request parameters. The vulnerability stems from relying on user-accessible parameters to store security sensitive information. Common vulnerable areas are data stored in cookies, hidden form fields, and HTTP request parameters. This vulnerability type applies to web applications.",
      "The exact impact of parameter tampering depends on the parameters that are available for tampering. This vulnerability usually allows the attacker to change his status from regular user to admin. In that case, the attacker is able to take full control of the application and its data. Another common impact is that the attacker is able to change his user id to that of another user. In that case the attacker can access and modify the user's data and impersonate that user. Parameter tampering usually allows the attacker to impersonate any user of his choosing.",
      "To prevent this problem, use platform provided session management, don't store sensitive data in user accessible parameters, and use strong session identifiers.",
      "To check for adequate protection against this vulnerability, identify all user-mutable parameters and verify that tampering with them does not result in elevated privileges."
    ],
    "ul": [
      "ASP.NET Parameter Tampering\n Java Parameter Tampering\n PHP Parameter Tampering"
    ],
    "li": [
      "ASP.NET Parameter Tampering",
      "Java Parameter Tampering",
      "PHP Parameter Tampering"
    ],
    "a": [
      "ASP.NET Parameter Tampering",
      "Java Parameter Tampering",
      "PHP Parameter Tampering"
    ]
  },
  "links": [
    {
      "href": "64071685-f105-4cf1-8196-b2599d534d46",
      "text": "ASP.NET Parameter Tampering"
    },
    {
      "href": "db479b30-f48e-4d2f-94f7-8fc050021021",
      "text": "Java Parameter Tampering"
    },
    {
      "href": "e7bb21cb-13d1-4ada-a64b-987b96b49baa",
      "text": "PHP Parameter Tampering"
    }
  ],
  "html": "<h1>Description</h1><p>A parameter tampering vulnerability occurs when an attacker can modify parameters used by a web application that have security implications. For example, a vulnerable application may allow an attacker to change his user id by changing request parameters. The vulnerability stems from relying on user-accessible parameters to store security sensitive information. Common vulnerable areas are data stored in cookies, hidden form fields, and HTTP request parameters. This vulnerability type applies to web applications. \n</p><h1>Impact</h1><p>The exact impact of parameter tampering depends on the parameters that are available for tampering. This vulnerability usually allows the attacker to change his status from regular user to admin. In that case, the attacker is able to take full control of the application and its data. Another common impact is that the attacker is able to change his user id to that of another user. In that case the attacker can access and modify the user's data and impersonate that user. Parameter tampering usually allows the attacker to impersonate any user of his choosing. \n</p><h1>Countermeasures</h1><p>To prevent this problem, use platform provided session management, don't store sensitive data in user accessible parameters, and use strong session identifiers. \n</p><h1>Application Check</h1><p>To check for adequate protection against this vulnerability, identify all user-mutable parameters and verify that tampering with them does not result in elevated privileges. \n</p><h1>Specific Technologies</h1><ul><li> <a href=\"64071685-f105-4cf1-8196-b2599d534d46\">ASP.NET Parameter Tampering</a></li>\n<li> <a href=\"db479b30-f48e-4d2f-94f7-8fc050021021\">Java Parameter Tampering</a></li>\n<li> <a href=\"e7bb21cb-13d1-4ada-a64b-987b96b49baa\">PHP Parameter Tampering</a></li></ul>"
}