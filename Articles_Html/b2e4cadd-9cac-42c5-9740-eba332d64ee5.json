{
  "id": "b2e4cadd-9cac-42c5-9740-eba332d64ee5",
  "checksum": "81d073b4737850895ca1a9c3c83d4e62be3768c7",
  "words": {
    "description": [
      "h1"
    ],
    "information": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "exposure": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "through": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "error": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "message": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "occurs": [
      "p"
    ],
    "when": [
      "p"
    ],
    "discloses": [
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "may": [
      "p"
    ],
    "help": [
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p",
      "p"
    ],
    "typical": [
      "p"
    ],
    "examples": [
      "p"
    ],
    "include": [
      "p"
    ],
    "disclosing": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "whether": [
      "p",
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "username": [
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "valid": [
      "p",
      "p"
    ],
    "during": [
      "p",
      "p",
      "p"
    ],
    "failed": [
      "p",
      "p"
    ],
    "authentication": [
      "p",
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "sql": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "queries": [
      "p",
      "p",
      "p",
      "p"
    ],
    "cause": [
      "p"
    ],
    "database": [
      "p",
      "p",
      "p",
      "p"
    ],
    "errors": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "latter": [
      "p"
    ],
    "example": [
      "p"
    ],
    "particularly": [
      "p"
    ],
    "dangerous": [
      "p",
      "p"
    ],
    "because": [
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p"
    ],
    "greatly": [
      "p",
      "p"
    ],
    "simplifies": [
      "p",
      "p"
    ],
    "injection": [
      "p",
      "p",
      "p",
      "p"
    ],
    "attacks": [
      "p",
      "p",
      "p",
      "p"
    ],
    "danger": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p"
    ],
    "disclosure": [
      "p",
      "p",
      "p"
    ],
    "makes": [
      "p",
      "p"
    ],
    "other": [
      "p"
    ],
    "easier": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p"
    ],
    "some": [
      "p"
    ],
    "cases": [
      "p"
    ],
    "required": [
      "p"
    ],
    "for": [
      "p",
      "p",
      "p"
    ],
    "attack": [
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "succeed": [
      "p"
    ],
    "general": [
      "p"
    ],
    "messages": [
      "p",
      "p",
      "p"
    ],
    "should": [
      "p"
    ],
    "not": [
      "p"
    ],
    "disclose": [
      "p"
    ],
    "end": [
      "p"
    ],
    "user": [
      "p"
    ],
    "all": [
      "p",
      "p",
      "p"
    ],
    "applications": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p"
    ],
    "affected": [
      "p"
    ],
    "by": [
      "p"
    ],
    "this": [
      "p",
      "p"
    ],
    "vulnerability": [
      "p",
      "p",
      "p"
    ],
    "type": [
      "p"
    ],
    "but": [
      "p"
    ],
    "especially": [
      "p"
    ],
    "ones": [
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "databases": [
      "p"
    ],
    "impact": [
      "h1"
    ],
    "provides": [
      "p"
    ],
    "enables": [
      "p"
    ],
    "him": [
      "p"
    ],
    "carry": [
      "p"
    ],
    "out": [
      "p"
    ],
    "additional": [
      "p"
    ],
    "two": [
      "p"
    ],
    "most": [
      "p"
    ],
    "common": [
      "p"
    ],
    "scenarios": [
      "p"
    ],
    "after": [
      "p"
    ],
    "knowing": [
      "p"
    ],
    "password": [
      "p",
      "p"
    ],
    "guessing": [
      "p"
    ],
    "helps": [
      "p"
    ],
    "determine": [
      "p"
    ],
    "present": [
      "p"
    ],
    "what": [
      "p"
    ],
    "exactly": [
      "p"
    ],
    "syntax": [
      "p"
    ],
    "displaying": [
      "p"
    ],
    "invalid": [
      "p"
    ],
    "also": [
      "p"
    ],
    "extracting": [
      "p"
    ],
    "data": [
      "p",
      "p"
    ],
    "from": [
      "p",
      "p"
    ],
    "via": [
      "p"
    ],
    "lot": [
      "p"
    ],
    "can": [
      "p"
    ],
    "be": [
      "p"
    ],
    "formed": [
      "p"
    ],
    "such": [
      "p"
    ],
    "way": [
      "p"
    ],
    "displayed": [
      "p"
    ],
    "as": [
      "p"
    ],
    "part": [
      "p"
    ],
    "invaild": [
      "p"
    ],
    "query": [
      "p"
    ],
    "scenario": [
      "p"
    ],
    "commonly": [
      "p"
    ],
    "used": [
      "p",
      "p"
    ],
    "extract": [
      "p"
    ],
    "hashes": [
      "p"
    ],
    "administrative": [
      "p"
    ],
    "accounts": [
      "p"
    ],
    "countermeasures": [
      "h1"
    ],
    "prevent": [
      "p"
    ],
    "handle": [
      "p"
    ],
    "simple": [
      "p",
      "p"
    ],
    "log": [
      "p"
    ],
    "detailed": [
      "p",
      "p"
    ],
    "application": [
      "h1"
    ],
    "check": [
      "h1",
      "p"
    ],
    "adequate": [
      "p"
    ],
    "protection": [
      "p"
    ],
    "against": [
      "p"
    ],
    "verify": [
      "p"
    ],
    "handled": [
      "p"
    ],
    "logged": [
      "p"
    ],
    "specific": [
      "h1"
    ],
    "technologies": [
      "h1"
    ],
    "aspnet": [
      "ul",
      "li",
      "a"
    ],
    "java": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Description",
      "Impact",
      "Countermeasures",
      "Application Check",
      "Specific Technologies"
    ],
    "p": [
      "Information exposure through an error message occurs when an error message discloses sensitive information that may help an attacker. Typical examples include disclosing whether a username is valid during failed authentication and disclosing SQL queries that cause database errors. The latter example is particularly dangerous because it greatly simplifies SQL injection attacks. The danger of error message information disclosure is that it makes other attacks easier and, in some cases, it is required for an attack to succeed. In general, error messages should not disclose sensitive information to the end user. All applications are affected by this vulnerability type, but especially ones that use authentication and SQL databases.",
      "Information exposure through an error message provides information to the attacker that enables him to carry out additional attacks. The two most common and dangerous scenarios are disclosing whether a username is valid during failed authentication, and disclosing SQL queries after database errors. Knowing the username greatly simplifies password guessing attacks. Disclosing SQL queries during errors helps the attacker determine whether a SQL injection vulnerability is present and what exactly the syntax of the vulnerability is. Displaying invalid SQL queries to the attacker also makes extracting data from the database via SQL injection a lot easier, because SQL injection can be formed in such a way that sensitive data is displayed as a part of an invaild query. This scenario is commonly used to extract password hashes from the database for administrative accounts.",
      "To prevent error message information disclosure, handle all errors, use simple error messages, and log detailed error information.",
      "To check for adequate protection against error message information disclosure, verify that all errors are handled, that simple error messages are used, and detailed error information is logged."
    ],
    "ul": [
      "ASP.NET Information Exposure Through an Error Message\n Java Information Exposure Through an Error Message"
    ],
    "li": [
      "ASP.NET Information Exposure Through an Error Message",
      "Java Information Exposure Through an Error Message"
    ],
    "a": [
      "ASP.NET Information Exposure Through an Error Message",
      "Java Information Exposure Through an Error Message"
    ]
  },
  "links": [
    {
      "href": "e724620c-b128-403f-b1a0-e9261c8375e6",
      "text": "ASP.NET Information Exposure Through an Error Message"
    },
    {
      "href": "066bf23c-37c9-4bff-9ab9-5fa9bd59449b",
      "text": "Java Information Exposure Through an Error Message"
    }
  ],
  "html": "<h1>Description</h1><p>Information exposure through an error message occurs when an error message discloses sensitive information that may help an attacker. Typical examples include disclosing whether a username is valid during failed authentication and disclosing SQL queries that cause database errors. The latter example is particularly dangerous because it greatly simplifies SQL injection attacks. The danger of error message information disclosure is that it makes other attacks easier and, in some cases, it is required for an attack to succeed. In general, error messages should not disclose sensitive information to the end user. All applications are affected by this vulnerability type, but especially ones that use authentication and SQL databases. \n</p><h1>Impact</h1><p>Information exposure through an error message provides information to the attacker that enables him to carry out additional attacks. The two most common and dangerous scenarios are disclosing whether a username is valid during failed authentication, and disclosing SQL queries after database errors. Knowing the username greatly simplifies password guessing attacks. Disclosing SQL queries during errors helps the attacker determine whether a SQL injection vulnerability is present and what exactly the syntax of the vulnerability is. Displaying invalid SQL queries to the attacker also makes extracting data from the database via SQL injection a lot easier, because SQL injection can be formed in such a way that sensitive data is displayed as a part of an invaild query. This scenario is commonly used to extract password hashes from the database for administrative accounts. \n</p><h1>Countermeasures</h1><p>To prevent error message information disclosure, handle all errors, use simple error messages, and log detailed error information. \n</p><h1>Application Check</h1><p>To check for adequate protection against error message information disclosure, verify that all errors are handled, that simple error messages are used, and detailed error information is logged. \n</p><h1>Specific Technologies</h1><ul><li> <a href=\"e724620c-b128-403f-b1a0-e9261c8375e6\">ASP.NET Information Exposure Through an Error Message</a></li>\n<li> <a href=\"066bf23c-37c9-4bff-9ab9-5fa9bd59449b\">Java Information Exposure Through an Error Message</a></li></ul>"
}