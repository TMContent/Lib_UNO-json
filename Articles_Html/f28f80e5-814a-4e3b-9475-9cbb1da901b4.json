{
  "id": "f28f80e5-814a-4e3b-9475-9cbb1da901b4",
  "checksum": "0e0361323c8eecc2106f1ff4ee3f55865be786b3",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "p"
    ],
    "ensure": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "pre"
    ],
    "your": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "handles": [
      "p"
    ],
    "exceptions": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "properly": [
      "p",
      "p"
    ],
    "during": [
      "p"
    ],
    "impersonation": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "blocks": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "contain": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "pre",
      "pre",
      "p"
    ],
    "global": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "exception": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "a",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "pre",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "a"
    ],
    "handler": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "of": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "pre",
      "p",
      "p"
    ],
    "type": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "systemexception": [
      "p",
      "strong",
      "strong"
    ],
    "prevent": [
      "p"
    ],
    "any": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "from": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "propagating": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "other": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "parts": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "if": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "occur": [
      "p"
    ],
    "while": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "impersonating": [
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "it": [
      "p"
    ],
    "is": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "a",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "pre",
      "p"
    ],
    "possible": [
      "p"
    ],
    "malicious": [
      "p"
    ],
    "code": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "pre",
      "pre",
      "p"
    ],
    "higher": [
      "p"
    ],
    "in": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "pre",
      "ul",
      "li"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "call": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "stack": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "run": [
      "p"
    ],
    "using": [
      "p",
      "p"
    ],
    "impersonated": [
      "p",
      "p",
      "pre",
      "p"
    ],
    "identity": [
      "p"
    ],
    "this": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "can": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "present": [
      "p"
    ],
    "security": [
      "p",
      "p"
    ],
    "issues": [
      "p"
    ],
    "particularly": [
      "p"
    ],
    "you": [
      "p"
    ],
    "impersonate": [
      "p"
    ],
    "highly": [
      "p"
    ],
    "privileged": [
      "p",
      "p"
    ],
    "account": [
      "p",
      "p"
    ],
    "how": [
      "h1"
    ],
    "identify": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "impersonates": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "users": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "review": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "li",
      "p"
    ],
    "base": [
      "ol",
      "li",
      "p"
    ],
    "and": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "where": [
      "ol",
      "li",
      "p"
    ],
    "user": [
      "ol",
      "li",
      "p",
      "pre",
      "p",
      "p"
    ],
    "takes": [
      "ol",
      "li",
      "p"
    ],
    "place": [
      "ol",
      "li",
      "p"
    ],
    "such": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "pre"
    ],
    "identified": [
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "pre"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "windowsidentityimpersonate": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "method": [
      "ol",
      "li",
      "p"
    ],
    "structured": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "a"
    ],
    "handling": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "a",
      "li",
      "p",
      "strong",
      "pre",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "a"
    ],
    "used": [
      "ol",
      "ol",
      "li",
      "p",
      "a",
      "li",
      "p",
      "strong"
    ],
    "checklist": [
      "ol",
      "li",
      "p"
    ],
    "proper": [
      "ol",
      "li",
      "p"
    ],
    "systemexception.": [
      "ol",
      "li",
      "p"
    ],
    "prevents": [
      "ol",
      "li",
      "p"
    ],
    "uncaught": [
      "ol",
      "li",
      "p"
    ],
    "handlers": [
      "ol",
      "li",
      "p"
    ],
    "furthermore": [
      "ol",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "li",
      "p"
    ],
    "clr-compliant": [
      "ol",
      "li",
      "p"
    ],
    "those": [
      "ol",
      "li",
      "p"
    ],
    "derived": [
      "ol",
      "li",
      "p"
    ],
    "class": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "li",
      "p",
      "pre",
      "pre",
      "p"
    ],
    "generated": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "accomplished": [
      "ol",
      "li",
      "p"
    ],
    "via": [
      "ol",
      "li",
      "p"
    ],
    "two": [
      "ol",
      "li",
      "p"
    ],
    "methods": [
      "ol",
      "li",
      "p"
    ],
    "catch": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "e": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "ctxundo();": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "throw": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "}": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "or": [
      "ol",
      "li",
      "p"
    ],
    "reverted": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "upon": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "encountering": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "an": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "exception ensure": [
      "ol",
      "li",
      "p"
    ],
    "windowsimpersonationcontextundo": [
      "ol",
      "li",
      "p",
      "strong",
      "strong"
    ],
    "called": [
      "ol",
      "li",
      "p"
    ],
    "when": [
      "ol",
      "li",
      "p"
    ],
    "occurs": [
      "ol",
      "li",
      "p"
    ],
    "needs": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "propagate": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "details": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "another": [
      "ol",
      "li",
      "p"
    ],
    "terminates": [
      "ol",
      "li",
      "p"
    ],
    "before": [
      "ol",
      "li",
      "p"
    ],
    "passing": [
      "ol",
      "li",
      "p"
    ],
    "windowsimpersonationcontext": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "pre"
    ],
    "ctx": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "winidentityimpersonate();try": [
      "ol",
      "li",
      "pre"
    ],
    "..}catch": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "throw}": [
      "ol",
      "li",
      "pre"
    ],
    "finally": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "strong"
    ],
    "instances": [
      "ol",
      "li",
      "p"
    ],
    "end": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "li",
      "p"
    ],
    "block": [
      "ol",
      "li",
      "p"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "invokes": [
      "ol",
      "li",
      "p"
    ],
    "windowsimpersonationcontextundo.": [
      "ol",
      "li",
      "p"
    ],
    "winidentityimpersonate();try{": [
      "ol",
      "li",
      "pre"
    ],
    "e{": [
      "ol",
      "li",
      "pre"
    ],
    "..}finally{": [
      "ol",
      "li",
      "pre"
    ],
    "ctxundo();}": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "problem": [
      "h1"
    ],
    "example": [
      "h1"
    ],
    "myapp": [
      "p",
      "p"
    ],
    "hr": [
      "p"
    ],
    "at": [
      "p"
    ],
    "mycorp": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "part": [
      "p"
    ],
    "its": [
      "p",
      "p"
    ],
    "requirements": [
      "p"
    ],
    "uses": [
      "p",
      "p"
    ],
    "company's": [
      "p",
      "pre"
    ],
    "active": [
      "p",
      "pre"
    ],
    "directory": [
      "p"
    ],
    "authentication": [
      "p"
    ],
    "although": [
      "p"
    ],
    "operates": [
      "p"
    ],
    "under": [
      "p"
    ],
    "aspnet": [
      "p"
    ],
    "local": [
      "p"
    ],
    "system": [
      "p"
    ],
    "certain": [
      "p"
    ],
    "actions": [
      "p"
    ],
    "file": [
      "p",
      "pre"
    ],
    "uploads": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "title"
    ],
    "performed": [
      "p"
    ],
    "users'": [
      "p"
    ],
    "windows": [
      "p"
    ],
    "accounts": [
      "p"
    ],
    "unfortunately": [
      "p"
    ],
    "does": [
      "p"
    ],
    "not": [
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "handle": [
      "p"
    ],
    "within": [
      "p",
      "pre",
      "p"
    ],
    "context": [
      "p",
      "pre",
      "p"
    ],
    "//": [
      "pre",
      "pre",
      "pre"
    ],
    "assumes": [
      "pre"
    ],
    "following": [
      "pre"
    ],
    "true//": [
      "pre"
    ],
    "-": [
      "pre",
      "pre",
      "pre"
    ],
    "fileinfo": [
      "pre",
      "pre"
    ],
    "represents": [
      "pre",
      "pre",
      "pre"
    ],
    "valid": [
      "pre",
      "pre",
      "pre"
    ],
    "filename//": [
      "pre"
    ],
    "filebuff": [
      "pre",
      "pre",
      "pre"
    ],
    "contents": [
      "pre"
    ],
    "stored//": [
      "pre"
    ],
    "into": [
      "pre"
    ],
    "represented": [
      "pre"
    ],
    "fileinfo//": [
      "pre"
    ],
    "username": [
      "pre"
    ],
    "directorywindowsidentity": [
      "pre"
    ],
    "winidentity": [
      "pre",
      "pre"
    ],
    "new": [
      "pre"
    ],
    "windowsidentityusername": [
      "pre"
    ],
    "+": [
      "pre"
    ],
    "\"@mycorp\";try": [
      "pre"
    ],
    "callstorefilefileinfo,": [
      "pre"
    ],
    "winidentity;}catch": [
      "pre"
    ],
    "ioexception": [
      "pre"
    ],
    "ioe": [
      "pre"
    ],
    "add": [
      "pre"
    ],
    "appropriate": [
      "pre"
    ],
    "logging": [
      "pre"
    ],
    "mechanisms": [
      "pre"
    ],
    "execute": [
      "pre",
      "p"
    ],
    "user!}..public": [
      "pre"
    ],
    "void": [
      "pre"
    ],
    "callstorefilefileinfo": [
      "pre"
    ],
    "byte]": [
      "pre"
    ],
    "windowsidentity": [
      "pre"
    ],
    "winidentityimpersonate();": [
      "pre"
    ],
    "storefilefileinfo,": [
      "pre"
    ],
    "filebuff;": [
      "pre"
    ],
    "thrown": [
      "p"
    ],
    "feature": [
      "p"
    ],
    "because": [
      "p"
    ],
    "improper": [
      "p"
    ],
    "calling": [
      "p"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "learn": [
      "ul",
      "li"
    ],
    "more": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "net": [
      "ul",
      "li"
    ],
    "framework": [
      "ul",
      "li"
    ],
    "visit": [
      "ul",
      "li"
    ],
    "statements": [
      "ul",
      "li",
      "a"
    ],
    "c#": [
      "ul",
      "li",
      "a"
    ],
    "reference on": [
      "ul",
      "li"
    ],
    "msdn": [
      "ul",
      "li"
    ],
    "reference": [
      "a"
    ],
    "related": [
      "h1"
    ],
    "guideline": [
      "h1",
      "ul",
      "li",
      "a"
    ],
    "do": [
      "ul",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "propagated": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How to Check",
      "Problem Example",
      "Additional Resources",
      "Related Guideline"
    ],
    "p": [
      "Ensure that your application handles exceptions properly during impersonation. Verify that all impersonation blocks contain a global exception handler of type System.Exception to prevent any exceptions from propagating to other parts of your application.",
      "If exceptions occur while impersonating, it is possible for malicious code higher in the call stack to run using the impersonated identity. This can present security issues, particularly if you impersonate a highly privileged account.",
      "Identify all code that impersonates users. Review your application's code base and identify all blocks of code where user impersonation takes place. Such code can be identified by the use of the WindowsIdentity.Impersonate method.",
      "Ensure the use of structured exception handling. Review the Structured Exception Handling is Used checklist to ensure the proper use of exception handling while impersonating.",
      "Ensure the use of global exception handling. Ensure that all impersonation blocks use a global exception handler of type System.Exception. This prevents any uncaught exceptions from propagating to other exception handlers in the call stack. Furthermore, ensure that only CLR-compliant exceptions (those derived from the Exception class) will be generated by the impersonation code. This can be accomplished via two methods:",
      "or",
      "Verify that impersonation is reverted upon encountering an exception. Ensure that WindowsImpersonationContext.Undo is called when an exception occurs. If your application needs to propagate the exception details to another exception handler in the call stack, verify that your application terminates the impersonation before passing the exception details:",
      "Verify that finally is used. Verify that all impersonation instances end with a finally block, which invokes WindowsImpersonationContext.Undo.",
      "MyApp is the HR application at MyCorp. As part of its security requirements, the application uses the company's Active Directory for its authentication needs. Although MyApp operates under the ASP.NET local system account, certain actions, such as file uploads, are performed using the users' Windows accounts. Unfortunately, the application does not handle the exceptions that are generated within the impersonated context properly.",
      "An exception is thrown while a privileged user uses the feature. Because of the improper exception handling, the code calling the impersonation will execute within the context of the impersonated user.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "strong": [
      "System.Exception",
      "Identify all code that impersonates users.",
      "WindowsIdentity.Impersonate",
      "Ensure the use of structured exception handling.",
      "Ensure the use of global exception handling.",
      "System.Exception",
      "Exception",
      "Verify that impersonation is reverted upon encountering an exception.",
      "WindowsImpersonationContext.Undo",
      "Verify that finally is used.",
      "finally",
      "WindowsImpersonationContext.Undo"
    ],
    "ol": [
      "Identify all code that impersonates users. Review your application's code base and identify all blocks of code where user impersonation takes place. Such code can be identified by the use of the WindowsIdentity.Impersonate method.\r\n      \r\n        \r\n          Ensure the use of structured exception handling. Review the Structured Exception Handling is Used checklist to ensure the proper use of exception handling while impersonating.\r\n        \r\n          \r\n            Ensure the use of global exception handling. Ensure that all impersonation blocks use a global exception handler of type System.Exception. This prevents any uncaught exceptions from propagating to other exception handlers in the call stack. Furthermore, ensure that only CLR-compliant exceptions (those derived from the Exception class) will be generated by the impersonation code. This can be accomplished via two methods:\r\n          catch (Exception e) {    ctx.Undo();    throw; }\r\n          or \r\n          catch {    ctx.Undo();    throw; }\r\n          \r\n            \r\n              Verify that impersonation is reverted upon encountering an exception. Ensure that WindowsImpersonationContext.Undo is called when an exception occurs. If your application needs to propagate the exception details to another exception handler in the call stack, verify that your application terminates the impersonation before passing the exception details:\r\n            WindowsImpersonationContext ctx = winIdentity.Impersonate();try {    ...}catch (Exception e) {    ctx.Undo();    throw;}\r\n            \r\n              \r\n                Verify that finally is used. Verify that all impersonation instances end with a finally block, which invokes WindowsImpersonationContext.Undo.\r\n              WindowsImpersonationContext ctx = winIdentity.Impersonate();try{    ...}catch (Exception e){    ...}finally{    ctx.Undo();}"
    ],
    "li": [
      "Identify all code that impersonates users. Review your application's code base and identify all blocks of code where user impersonation takes place. Such code can be identified by the use of the WindowsIdentity.Impersonate method.",
      "Ensure the use of structured exception handling. Review the Structured Exception Handling is Used checklist to ensure the proper use of exception handling while impersonating.",
      "Ensure the use of global exception handling. Ensure that all impersonation blocks use a global exception handler of type System.Exception. This prevents any uncaught exceptions from propagating to other exception handlers in the call stack. Furthermore, ensure that only CLR-compliant exceptions (those derived from the Exception class) will be generated by the impersonation code. This can be accomplished via two methods:\r\n          catch (Exception e) {    ctx.Undo();    throw; }\r\n          or \r\n          catch {    ctx.Undo();    throw; }",
      "Verify that impersonation is reverted upon encountering an exception. Ensure that WindowsImpersonationContext.Undo is called when an exception occurs. If your application needs to propagate the exception details to another exception handler in the call stack, verify that your application terminates the impersonation before passing the exception details:\r\n            WindowsImpersonationContext ctx = winIdentity.Impersonate();try {    ...}catch (Exception e) {    ctx.Undo();    throw;}",
      "Verify that finally is used. Verify that all impersonation instances end with a finally block, which invokes WindowsImpersonationContext.Undo.\r\n              WindowsImpersonationContext ctx = winIdentity.Impersonate();try{    ...}catch (Exception e){    ...}finally{    ctx.Undo();}",
      "To learn more about exception handling in the .NET framework, visit: Exception Handling Statements (C# Reference) on MSDN.",
      "Guideline: Do Not Propagate Exceptions While Impersonating"
    ],
    "a": [
      "Structured Exception Handling is Used",
      "Exception Handling Statements (C# Reference)",
      "Guideline: Do Not Propagate Exceptions While Impersonating"
    ],
    "pre": [
      "catch (Exception e) {    ctx.Undo();    throw; }",
      "catch {    ctx.Undo();    throw; }",
      "WindowsImpersonationContext ctx = winIdentity.Impersonate();try {    ...}catch (Exception e) {    ctx.Undo();    throw;}",
      "WindowsImpersonationContext ctx = winIdentity.Impersonate();try{    ...}catch (Exception e){    ...}finally{    ctx.Undo();}",
      "// This code assumes the following is true:// - fileInfo represents a valid filename// - fileBuff represents valid contents that will be stored// into the file represented by fileInfo// - username represents a valid user in the company's Active DirectoryWindowsIdentity winIdentity = new WindowsIdentity(username + \"@MyCorp\");try {    CallStoreFile(fileInfo, fileBuff, winIdentity);}catch (IOException ioe) {    // Add the appropriate logging and exception handling mechanisms    // This code will execute within the context of the impersonated user!}...public void CallStoreFile(FileInfo fileInfo, byte[] fileBuff, WindowsIdentity winIdentity) {    WindowsImpersonationContext ctx = winIdentity.Impersonate();    StoreFile(fileInfo, fileBuff);    ctx.Undo();}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "ul": [
      "To learn more about exception handling in the .NET framework, visit: Exception Handling Statements (C# Reference) on MSDN.",
      "Guideline: Do Not Propagate Exceptions While Impersonating"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "/article/bc10306c-f37c-4780-a096-847070ae67da",
      "text": "Structured Exception Handling is Used"
    },
    {
      "href": "http://msdn2.microsoft.com/en-us/library/s7fekhdy(VS.80).aspx",
      "text": "Exception Handling Statements (C# Reference)"
    },
    {
      "href": "/article/5b6c71b0-cb89-4435-b30e-2fd76347078e",
      "text": "Guideline: Do Not Propagate Exceptions While Impersonating "
    }
  ],
  "html": "<h1>What to Check For</h1>\r\n  <p>Ensure that your application handles exceptions properly during impersonation. Verify that all impersonation blocks contain a global exception handler of type <strong>System.Exception</strong> to prevent any exceptions from propagating to other parts of your application. </p>\r\n  <h1>Why</h1>\r\n  <p>If exceptions occur while impersonating, it is possible for malicious code higher in the call stack to run using the impersonated identity. This can present security issues, particularly if you impersonate a highly privileged account. </p>\r\n  <h1>How to Check</h1>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all code that impersonates users. </strong>Review your application's code base and identify all blocks of code where user impersonation takes place. Such code can be identified by the use of the <strong>WindowsIdentity.Impersonate</strong> method.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Ensure the use of structured exception handling. </strong>Review the <a href=\"/article/bc10306c-f37c-4780-a096-847070ae67da\">Structured Exception Handling is Used</a> checklist to ensure the proper use of exception handling while impersonating.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Ensure the use of global exception handling. </strong>Ensure that all impersonation blocks use a global exception handler of type <strong>System.Exception</strong>. This prevents any uncaught exceptions from propagating to other exception handlers in the call stack. Furthermore, ensure that only CLR-compliant exceptions (those derived from the <strong>Exception</strong> class) will be generated by the impersonation code. This can be accomplished via two methods:</p>\r\n          <pre>catch (Exception e)<br /> &#123;<br />    ctx.Undo();<br />    throw;<br /> &#125;</pre>\r\n          <p>or </p>\r\n          <pre>catch<br /> &#123;<br />    ctx.Undo();<br />    throw;<br /> &#125;</pre>\r\n          <li>\r\n            <p>\r\n              <strong>Verify that impersonation is reverted upon encountering an exception.&nbsp;</strong>Ensure that <strong>WindowsImpersonationContext.Undo</strong> is called when an exception occurs. If your application needs to propagate the exception details to another exception handler in the call stack, verify that your application terminates the impersonation before passing the exception details:</p>\r\n            <pre>WindowsImpersonationContext ctx = winIdentity.Impersonate();<br />try<br /> &#123;<br />    ...<br />&#125;<br />catch (Exception e)<br /> &#123;<br />    ctx.Undo();<br />    throw;<br />&#125;</pre>\r\n            <li>\r\n              <p>\r\n                <strong>Verify that finally is used. </strong>Verify that all impersonation instances end with a <strong>finally</strong> block, which invokes <strong>WindowsImpersonationContext.Undo</strong>.</p>\r\n              <pre>WindowsImpersonationContext ctx = winIdentity.Impersonate();<br />try<br />&#123;<br />    ...<br />&#125;<br />catch (Exception e)<br />&#123;<br />    ...<br />&#125;<br />finally<br />&#123;<br />    ctx.Undo();<br />&#125;</pre>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>MyApp is the HR application at MyCorp. As part of its security requirements, the application uses the company's Active Directory for its authentication needs. Although MyApp operates under the ASP.NET local system account, certain actions, such as file uploads, are performed using the users' Windows accounts. Unfortunately, the application does not handle the exceptions that are generated within the impersonated context properly.</p>\r\n  <pre>// This code assumes the following is true:<br />// - fileInfo represents a valid filename<br />// - fileBuff represents valid contents that will be stored<br />// into the file represented by fileInfo<br />// - username represents a valid user in the company's Active Directory<br />WindowsIdentity winIdentity = new WindowsIdentity(username &#43; \"&#64;MyCorp\");<br />try <br />&#123;<br />    CallStoreFile(fileInfo, fileBuff, winIdentity);<br />&#125;<br />catch (IOException ioe) <br />&#123;<br />    // Add the appropriate logging and exception handling mechanisms<br />    // This code will execute within the context of the impersonated user&#33;<br />&#125;<br /><br />...<br /><br />public void CallStoreFile(FileInfo fileInfo, byte&#91;&#93; fileBuff, WindowsIdentity winIdentity) <br />&#123;<br />    WindowsImpersonationContext ctx = winIdentity.Impersonate();<br />    StoreFile(fileInfo, fileBuff);<br />    ctx.Undo();<br />&#125;</pre>\r\n  <p>An exception is thrown while a privileged user uses the feature. Because of the improper exception handling, the code calling the impersonation will execute within the context of the impersonated user. </p>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>To learn more about exception handling in the .NET framework, visit: <a href=\"http://msdn2.microsoft.com/en-us/library/s7fekhdy(VS.80).aspx\">Exception Handling Statements (C# Reference)</a>&nbsp;on MSDN.</li>\r\n  </ul>\r\n  <h1>Related Guideline</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/5b6c71b0-cb89-4435-b30e-2fd76347078e\">Guideline: Do Not Propagate Exceptions While Impersonating </a>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}