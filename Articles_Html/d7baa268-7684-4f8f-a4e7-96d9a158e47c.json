{
  "id": "d7baa268-7684-4f8f-a4e7-96d9a158e47c",
  "checksum": "1521191028b22ff11748e034a7d2ee4d6a9ea4bb",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "java": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2"
    ],
    "avoid": [
      "p",
      "ol",
      "li",
      "strong"
    ],
    "allowing": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "user": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "specify": [
      "p",
      "ol",
      "li"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "title"
    ],
    "names": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "and/or": [
      "p"
    ],
    "paths": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "if": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "such": [
      "p"
    ],
    "functionality": [
      "p"
    ],
    "is": [
      "p",
      "p"
    ],
    "necessary": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "canonicalize": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "title"
    ],
    "all": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "title"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "obtained": [
      "p"
    ],
    "as": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "input": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "title"
    ],
    "before": [
      "p",
      "p"
    ],
    "making": [
      "p"
    ],
    "security": [
      "p"
    ],
    "decisions": [
      "p"
    ],
    "using": [
      "p"
    ],
    "getcanonicalpath).": [
      "p"
    ],
    "why": [
      "h2"
    ],
    "when": [
      "p",
      "p"
    ],
    "validation": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "applied": [
      "p"
    ],
    "it": [
      "p"
    ],
    "only": [
      "p"
    ],
    "works": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "are": [
      "p",
      "p"
    ],
    "canonicalized": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "not": [
      "p"
    ],
    "a": [
      "p",
      "p"
    ],
    "number": [
      "p"
    ],
    "of": [
      "p"
    ],
    "vulnerabilities": [
      "p",
      "p"
    ],
    "may": [
      "p",
      "ol",
      "li"
    ],
    "be": [
      "p"
    ],
    "introduced": [
      "p"
    ],
    "result": [
      "p"
    ],
    "possible": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "range": [
      "p"
    ],
    "from": [
      "p"
    ],
    "reading": [
      "p"
    ],
    "arbitrary": [
      "p"
    ],
    "files": [
      "p"
    ],
    "uploading": [
      "p"
    ],
    "web": [
      "p"
    ],
    "shells": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "path": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "title"
    ],
    "name": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "title"
    ],
    "identify": [
      "ol",
      "li",
      "strong"
    ],
    "examine": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "application": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "find": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "cases": [
      "ol",
      "li"
    ],
    "where": [
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "that": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "handles": [
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li"
    ],
    "review": [
      "ol",
      "li"
    ],
    "functions": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "handle": [
      "ol",
      "li"
    ],
    "supplied": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "remove": [
      "ol",
      "li"
    ],
    "replace": [
      "ol",
      "li"
    ],
    "allows": [
      "ol",
      "li"
    ],
    "users": [
      "ol",
      "li"
    ],
    "enter": [
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "function": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "re-write": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "these": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "use": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "getcanonicalpath)": [
      "ol",
      "li"
    ],
    "validate": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "positive": [
      "ol",
      "li"
    ],
    "on": [
      "ol",
      "li"
    ],
    "ensure": [
      "ol",
      "li"
    ],
    "routines": [
      "ol",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "sufficient": [
      "ol",
      "li"
    ],
    "rights": [
      "ol",
      "li"
    ],
    "access": [
      "ol",
      "li"
    ],
    "requested": [
      "ol",
      "li"
    ],
    "resource": [
      "ol",
      "li"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "for": [
      "ul",
      "li"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "canonicalizing": [
      "ul",
      "li"
    ],
    "in": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "https//www.securecoding.cert.org/confluence/display/java/ids02-j.+canonicalize+path+names+before+validating+them": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How",
      "Additional Resources"
    ],
    "ul": [
      "Java",
      "For more information about canonicalizing file paths in Java, see https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    ],
    "li": [
      "Java",
      "Identify all file path and name input. Examine the application and find all cases where the user may specify file names or paths.",
      "Find code that handles file path and name input. Review application code and find all functions that handle user supplied file names or paths.",
      "Avoid file path and name input if possible. If possible, remove or replace the code that allows users to enter file names or paths.",
      "Canonicalize file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use getCanonicalPath() to canonicalize file names and paths.",
      "Validate file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use positive validation on canonicalized file names and paths. Ensure that the validation routines validate that the user has sufficient rights to access the requested resource.",
      "For more information about canonicalizing file paths in Java, see https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    ],
    "p": [
      "Avoid allowing the user to specify file names and/or paths. If such functionality is necessary, canonicalize all file paths and names obtained as input before making security decisions using getCanonicalPath().",
      "When input validation is applied to file paths and names, it only works properly when file paths and names are canonicalized. If file names and paths are not canonicalized before validation, a number of vulnerabilities may be introduced as a result. The possible vulnerabilities range from reading arbitrary files to uploading web shells.",
      "To canonicalize all file path and name input:"
    ],
    "ol": [
      "Identify all file path and name input. Examine the application and find all cases where the user may specify file names or paths.\n Find code that handles file path and name input. Review application code and find all functions that handle user supplied file names or paths.\n Avoid file path and name input if possible. If possible, remove or replace the code that allows users to enter file names or paths.\n Canonicalize file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use getCanonicalPath() to canonicalize file names and paths.\n Validate file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use positive validation on canonicalized file names and paths. Ensure that the validation routines validate that the user has sufficient rights to access the requested resource."
    ],
    "strong": [
      "Identify all file path and name input.",
      "Find code that handles file path and name input.",
      "Avoid file path and name input if possible.",
      "Canonicalize file path and name input.",
      "Validate file path and name input."
    ],
    "a": [
      "https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    ]
  },
  "links": [
    {
      "href": "https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them",
      "text": "https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> Java</li>\n</ul><h2>What to Do</h2><p>Avoid allowing the user to specify file names and/or paths. If such functionality is necessary, canonicalize all file paths and names obtained as input before making security decisions using getCanonicalPath().\n</p><h2>Why</h2><p>When input validation is applied to file paths and names, it only works properly when file paths and names are canonicalized. If file names and paths are not canonicalized before validation, a number of vulnerabilities may be introduced as a result. The possible vulnerabilities range from reading arbitrary files to uploading web shells. \n</p><h2>How</h2><p>To canonicalize all file path and name input:\n</p><ol>\n<li> <strong>Identify all file path and name input.</strong> Examine the application and find all cases where the user may specify file names or paths.</li>\n<li> <strong>Find code that handles file path and name input.</strong> Review application code and find all functions that handle user supplied file names or paths.</li>\n<li> <strong>Avoid file path and name input if possible.</strong> If possible, remove or replace the code that allows users to enter file names or paths.</li>\n<li> <strong>Canonicalize file path and name input.</strong> Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use getCanonicalPath() to canonicalize file names and paths.</li>\n<li> <strong>Validate file path and name input.</strong> Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use positive validation on canonicalized file names and paths. Ensure that the validation routines validate that the user has sufficient rights to access the requested resource.</li>\n</ol><h2>Additional Resources</h2><ul><li> For more information about canonicalizing file paths in Java, see <a href=\"https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them\">https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them</a></li>\n</ul>"
}