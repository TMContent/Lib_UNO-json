{
  "id": "08f2f28f-d09a-4b82-843e-8d971fc50553",
  "checksum": "0ef638cda52e44386c982bce004814576f8798f3",
  "words": {
    "what": [
      "h1",
      "ol",
      "li",
      "p"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "do": [
      "h1",
      "p",
      "title"
    ],
    "ensure": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "all": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "error": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "title"
    ],
    "messages": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "title"
    ],
    "are": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "generic": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "and": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "not": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "pre",
      "p",
      "title"
    ],
    "disclose": [
      "p",
      "p",
      "title"
    ],
    "any": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "valuable": [
      "p",
      "title"
    ],
    "or": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "p"
    ],
    "sensitive": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "information": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "should": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "take": [
      "p"
    ],
    "care": [
      "p"
    ],
    "could": [
      "p"
    ],
    "be": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "useful": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "why": [
      "h1",
      "p"
    ],
    "attackers": [
      "p"
    ],
    "often": [
      "p"
    ],
    "probe": [
      "p"
    ],
    "web": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "for": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "as": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "first": [
      "p"
    ],
    "attempt": [
      "p"
    ],
    "understand": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "underlying": [
      "p"
    ],
    "technologies": [
      "p"
    ],
    "in": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "title"
    ],
    "place": [
      "p"
    ],
    "will": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "look": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "discrepancies": [
      "p"
    ],
    "between": [
      "p"
    ],
    "discover": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "when": [
      "p",
      "h1",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "different": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "code": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "paths": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "being": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "taken": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "about": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "quality": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "their": [
      "p",
      "p"
    ],
    "input": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "directly": [
      "p"
    ],
    "echoed": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "from": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "backend": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "systems": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "such": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sql": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "os": [
      "p"
    ],
    "can": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "help": [
      "p"
    ],
    "malicious": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "choose": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "next": [
      "p"
    ],
    "attacks": [
      "p"
    ],
    "whenever": [
      "p"
    ],
    "message": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "has": [
      "p"
    ],
    "relayed": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "make": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "no": [
      "ol",
      "li",
      "p"
    ],
    "displays": [
      "ol",
      "li",
      "p"
    ],
    "too": [
      "ol",
      "li",
      "p"
    ],
    "much": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "data": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "processed": [
      "ol",
      "li",
      "p"
    ],
    "mechanisms": [
      "ol",
      "li",
      "p"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "process": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "p",
      "h1",
      "h1"
    ],
    "“the": [
      "ol",
      "li",
      "p"
    ],
    "contains": [
      "ol",
      "li",
      "p"
    ],
    "invalid": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "characters”": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "more": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "secure": [
      "ol",
      "li",
      "p"
    ],
    "than": [
      "ol",
      "li",
      "p"
    ],
    "\"the": [
      "ol",
      "li",
      "p"
    ],
    "cannot": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "contain": [
      "ol",
      "li",
      "p"
    ],
    "''": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "characters\"": [
      "ol",
      "li",
      "p"
    ],
    "careful": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "with": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "dynamically": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "generated": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "dynamic": [
      "ol",
      "li",
      "p"
    ],
    "difficult": [
      "ol",
      "li",
      "p"
    ],
    "get": [
      "ol",
      "li",
      "p"
    ],
    "right": [
      "ol",
      "li",
      "p"
    ],
    "unless": [
      "ol",
      "li",
      "p"
    ],
    "absolutely": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "if": [
      "ol",
      "li",
      "p",
      "pre",
      "pre",
      "p",
      "pre"
    ],
    "they": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "must": [
      "ol",
      "li",
      "p"
    ],
    "aid": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "way": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "may": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "open": [
      "ol",
      "li",
      "p"
    ],
    "application": [
      "ol",
      "li",
      "p"
    ],
    "up": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "other": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "vulnerabilities": [
      "ol",
      "li",
      "p"
    ],
    "injection": [
      "ol",
      "li",
      "p"
    ],
    "buffer": [
      "ol",
      "li",
      "p"
    ],
    "overflows": [
      "ol",
      "li",
      "p"
    ],
    "cross": [
      "ol",
      "li",
      "p"
    ],
    "site": [
      "ol",
      "li",
      "p"
    ],
    "scripting": [
      "ol",
      "li",
      "p"
    ],
    "debug": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "but": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "logged": [
      "ol",
      "li",
      "p"
    ],
    "database": [
      "ol",
      "li",
      "p"
    ],
    "write": [
      "ol",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong"
    ],
    "permissions": [
      "ol",
      "li",
      "p"
    ],
    "accessible": [
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "administrator": [
      "ol",
      "li",
      "p"
    ],
    "display": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "basic": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "authentication": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "failure": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "single": [
      "ol",
      "li",
      "p"
    ],
    "displayed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "on": [
      "ol",
      "li",
      "p"
    ],
    "failures": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "p"
    ],
    "time": [
      "ol",
      "li",
      "p"
    ],
    "fails": [
      "ol",
      "li",
      "p"
    ],
    "authenticate": [
      "ol",
      "li",
      "p"
    ],
    "following": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "reasons": [
      "ol",
      "li",
      "p"
    ],
    "username": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "valid": [
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "password": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "account": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "locked": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "set": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "customerrors": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "\"remoteonly\"": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "\"on\"": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "webconfig": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "file": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "aspnet": [
      "ol",
      "li",
      "p"
    ],
    "allows": [
      "ol",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "li",
      "p"
    ],
    "specify": [
      "ol",
      "li",
      "p"
    ],
    "custom": [
      "ol",
      "li",
      "p"
    ],
    "instead": [
      "ol",
      "li",
      "p"
    ],
    "describes": [
      "ol",
      "li",
      "p"
    ],
    "detail": [
      "ol",
      "li",
      "p"
    ],
    "leaving": [
      "ol",
      "li",
      "p"
    ],
    "customerrors=\"off\"": [
      "ol",
      "li",
      "p"
    ],
    "means": [
      "ol",
      "li",
      "p"
    ],
    "see": [
      "ol",
      "li",
      "p"
    ],
    "complete": [
      "ol",
      "li",
      "p"
    ],
    "stack": [
      "ol",
      "li",
      "p"
    ],
    "trace": [
      "ol",
      "li",
      "p"
    ],
    "well": [
      "ol",
      "li",
      "p"
    ],
    "highly": [
      "ol",
      "li",
      "p"
    ],
    "detailed": [
      "ol",
      "li",
      "p"
    ],
    "net": [
      "ol",
      "li",
      "p"
    ],
    "runtime": [
      "ol",
      "li",
      "p"
    ],
    "reporting": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "exactly": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "multiple": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "compared": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "system": [
      "ol",
      "li",
      "p"
    ],
    "individually": [
      "ol",
      "li",
      "p"
    ],
    "side": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "differ": [
      "ol",
      "li",
      "p"
    ],
    "language": [
      "ol",
      "li",
      "p"
    ],
    "punctuation": [
      "ol",
      "li",
      "p"
    ],
    "these": [
      "ol",
      "li",
      "p"
    ],
    "differences": [
      "ol",
      "li",
      "p"
    ],
    "tell": [
      "ol",
      "li",
      "p"
    ],
    "using": [
      "ol",
      "li",
      "p"
    ],
    "common": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "resource": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "locations": [
      "ol",
      "li",
      "p"
    ],
    "easier": [
      "ol",
      "li",
      "p"
    ],
    "create": [
      "ol",
      "li",
      "p"
    ],
    "links": [
      "ol",
      "li",
      "p"
    ],
    "text": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "number": [
      "ol",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "li",
      "p"
    ],
    "certain": [
      "ol",
      "li",
      "p"
    ],
    "happens": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "simply": [
      "ol",
      "li",
      "p"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "ensures": [
      "ol",
      "li",
      "p"
    ],
    "places": [
      "ol",
      "li",
      "p"
    ],
    "problem": [
      "h1"
    ],
    "authenticates": [
      "p",
      "p"
    ],
    "unfortunately": [
      "p"
    ],
    "reveals": [
      "p"
    ],
    "through": [
      "p"
    ],
    "its": [
      "p"
    ],
    "whether": [
      "p"
    ],
    "credentials": [
      "p",
      "p"
    ],
    "sent": [
      "p"
    ],
    "represent": [
      "p",
      "p"
    ],
    "public": [
      "pre",
      "pre"
    ],
    "void": [
      "pre",
      "pre"
    ],
    "login){": [
      "pre",
      "pre"
    ],
    "!validuser())": [
      "pre"
    ],
    "{": [
      "pre",
      "pre",
      "pre"
    ],
    "throw": [
      "pre",
      "pre",
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre"
    ],
    "exception\"user": [
      "pre"
    ],
    "found\");": [
      "pre"
    ],
    "}": [
      "pre",
      "pre",
      "pre"
    ],
    "!validpass())": [
      "pre"
    ],
    "exception\"wrong": [
      "pre"
    ],
    "password\");": [
      "pre"
    ],
    "commit);}": [
      "pre",
      "pre"
    ],
    "solution": [
      "h1"
    ],
    "since": [
      "p"
    ],
    "presents": [
      "p"
    ],
    "regardless": [
      "p"
    ],
    "failed": [
      "p"
    ],
    "can't": [
      "p"
    ],
    "determine": [
      "p"
    ],
    "tried": [
      "p"
    ],
    "!validuser()": [
      "pre"
    ],
    "||": [
      "pre"
    ],
    "!validpass))": [
      "pre"
    ],
    "exception\"authentication": [
      "pre"
    ],
    "failed\");": [
      "pre"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "sink]": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How",
      "Problem Example",
      "Solution Example"
    ],
    "p": [
      "Ensure that all error messages are generic and do not disclose any valuable or sensitive information. All error messages should take care to not disclose any information that could be useful to an attacker.",
      "Attackers often probe web applications for error messages as a first attempt to understand the underlying technologies in place. An attacker will look for discrepancies between error messages to discover when different code paths are being taken or to discover information about the quality of their input. Error messages that are directly echoed from backend systems such as SQL or OS error messages can help a malicious user choose their next attacks.",
      "Whenever an error message has to be relayed to a user.",
      "Ensure all error messages are generic: Make sure no error message displays too much information about the quality of the data being processed or what mechanisms are being used to process the data. For example, an error message such as “the input contains invalid characters” is much more secure than \"the input cannot contain '<' or '>' characters\".",
      "Be careful with dynamically generated error messages: Dynamic error messages are difficult to get right and should not be used unless absolutely necessary. If they must be used, be sure the error message cannot aid an attacker in any way. Dynamically generated error messages may open the application up for other vulnerabilities, such as SQL injection, Buffer Overflows or Cross Site Scripting.",
      "Make sure debug information is not echoed to the user: Debug information can be generated but should be logged to a database with write only permissions that is accessible only by an administrator.",
      "Display only basic authentication failure messages: For authentication error messages be sure to choose a single error message to be displayed on all authentication failures. Ensure that the same generic error message is displayed any time a user fails to authenticate for any of the following reasons:",
      "Set customErrors to \"RemoteOnly\" or \"On\" in the web.config file: ASP.NET allows you to specify a custom error message instead of an error message that describes the error in detail. Leaving customErrors=\"Off\" means that an attacker will see a complete stack trace as well as a highly detailed error message generated by the .NET runtime or other backend systems.",
      "Ensure error messages reporting the same message are exactly the same: Multiple error messages may be compared to discover more information about the system. Individually the error message may not display sensitive information, but when compared side by side they may aid an attacker. Error messages may differ in language or punctuation, but these differences will tell an attacker different code paths are being taken. Using a common error resource file can make reporting the same error message from multiple locations much easier. Create a common error resource file that links error text with an error number, this way when a certain error happens it can simply look up the error text in the error message resource file, which ensures the same message will be used in all places.",
      "The following code authenticates a user. Unfortunately, the code reveals through its error messages whether the credentials sent represent a valid user or an invalid user:",
      "The following code authenticates a user. Since it presents the same error message regardless of why the authentication failed, an attacker can't determine if the credentials tried represent a valid user or not.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Ensure all error messages are generic: Make sure no error message displays too much information about the quality of the data being processed or what mechanisms are being used to process the data. For example, an error message such as “the input contains invalid characters” is much more secure than \"the input cannot contain '<' or '>' characters\".\n    \n    \n      \n        Be careful with dynamically generated error messages: Dynamic error messages are difficult to get right and should not be used unless absolutely necessary. If they must be used, be sure the error message cannot aid an attacker in any way. Dynamically generated error messages may open the application up for other vulnerabilities, such as SQL injection, Buffer Overflows or Cross Site Scripting.\n    \n    \n      \n        Make sure debug information is not echoed to the user: Debug information can be generated but should be logged to a database with write only permissions that is accessible only by an administrator.\n    \n    \n      \n        Display only basic authentication failure messages: For authentication error messages be sure to choose a single error message to be displayed on all authentication failures. Ensure that the same generic error message is displayed any time a user fails to authenticate for any of the following reasons:\n      \n        Invalid username \n        Valid username, but invalid password \n        Account locked\n      \n    \n    \n      \n        Set customErrors to \"RemoteOnly\" or \"On\" in the web.config file: ASP.NET allows you to specify a custom error message instead of an error message that describes the error in detail. Leaving customErrors=\"Off\" means that an attacker will see a complete stack trace as well as a highly detailed error message generated by the .NET runtime or other backend systems.\n    \n    \n      \n        Ensure error messages reporting the same message are exactly the same: Multiple error messages may be compared to discover more information about the system. Individually the error message may not display sensitive information, but when compared side by side they may aid an attacker. Error messages may differ in language or punctuation, but these differences will tell an attacker different code paths are being taken. Using a common error resource file can make reporting the same error message from multiple locations much easier. Create a common error resource file that links error text with an error number, this way when a certain error happens it can simply look up the error text in the error message resource file, which ensures the same message will be used in all places.",
      "Invalid username \n        Valid username, but invalid password \n        Account locked"
    ],
    "li": [
      "Ensure all error messages are generic: Make sure no error message displays too much information about the quality of the data being processed or what mechanisms are being used to process the data. For example, an error message such as “the input contains invalid characters” is much more secure than \"the input cannot contain '<' or '>' characters\".",
      "Be careful with dynamically generated error messages: Dynamic error messages are difficult to get right and should not be used unless absolutely necessary. If they must be used, be sure the error message cannot aid an attacker in any way. Dynamically generated error messages may open the application up for other vulnerabilities, such as SQL injection, Buffer Overflows or Cross Site Scripting.",
      "Make sure debug information is not echoed to the user: Debug information can be generated but should be logged to a database with write only permissions that is accessible only by an administrator.",
      "Display only basic authentication failure messages: For authentication error messages be sure to choose a single error message to be displayed on all authentication failures. Ensure that the same generic error message is displayed any time a user fails to authenticate for any of the following reasons:\n      \n        Invalid username \n        Valid username, but invalid password \n        Account locked",
      "Invalid username",
      "Valid username, but invalid password",
      "Account locked",
      "Set customErrors to \"RemoteOnly\" or \"On\" in the web.config file: ASP.NET allows you to specify a custom error message instead of an error message that describes the error in detail. Leaving customErrors=\"Off\" means that an attacker will see a complete stack trace as well as a highly detailed error message generated by the .NET runtime or other backend systems.",
      "Ensure error messages reporting the same message are exactly the same: Multiple error messages may be compared to discover more information about the system. Individually the error message may not display sensitive information, but when compared side by side they may aid an attacker. Error messages may differ in language or punctuation, but these differences will tell an attacker different code paths are being taken. Using a common error resource file can make reporting the same error message from multiple locations much easier. Create a common error resource file that links error text with an error number, this way when a certain error happens it can simply look up the error text in the error message resource file, which ensures the same message will be used in all places."
    ],
    "strong": [
      "Ensure all error messages are generic",
      "Be careful with dynamically generated error messages",
      "Make sure debug information is not echoed to the user",
      "Display only basic authentication failure messages",
      "Set customErrors to \"RemoteOnly\" or \"On\" in the web.config file",
      "Ensure error messages reporting the same message are exactly the same"
    ],
    "pre": [
      "public void login(){      if (!validUser())      {            throw new Exception(\"User not found.\");      }       if (!validPass())      {            throw new Exception(\"Wrong password.\");      }      commit();}",
      "public void login(){         if (!validUser() || !validPass())      {            throw new Exception(\"Authentication failed.\");      }      commit();}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Do</h1>\n  <p>Ensure that all error messages are generic and do not disclose any valuable or sensitive information. All error messages should take care to not disclose any information that could be useful to an attacker. </p>\n  <h1>Why</h1>\n  <p>Attackers often probe web applications for error messages as a first attempt to understand the underlying technologies in place. An attacker will look for discrepancies between error messages to discover when different code paths are being taken or to discover information about the quality of their input. Error messages that are directly echoed from backend systems such as SQL or OS error messages can help a malicious user choose their next attacks. </p>\n  <h1>When</h1>\n  <p>Whenever an error message has to be relayed to a user. </p>\n  <h1>How</h1>\n  <ol>\n    <li>\n      <p>\n        <strong>Ensure all error messages are generic</strong>: Make sure no error message displays too much information about the quality of the data being processed or what mechanisms are being used to process the data. For example, an error message such as “the input contains invalid characters” is much more secure than \"the input cannot contain '&lt;' or '&gt;' characters\".</p>\n    </li>\n    <li>\n      <p>\n        <strong>Be careful with dynamically generated error messages</strong>: Dynamic error messages are difficult to get right and should not be used unless absolutely necessary. If they must be used, be sure the error message cannot aid an attacker in any way. Dynamically generated error messages may open the application up for other vulnerabilities, such as SQL injection, Buffer Overflows or Cross Site Scripting.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Make sure debug information is not echoed to the user</strong>: Debug information can be generated but should be logged to a database with write only permissions that is accessible only by an administrator.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Display only basic authentication failure messages</strong>: For authentication error messages be sure to choose a single error message to be displayed on all authentication failures. Ensure that the same generic error message is displayed any time a user fails to authenticate for any of the following reasons:</p>\n      <ol>\n        <li>Invalid username </li>\n        <li>Valid username, but invalid password </li>\n        <li>Account locked</li>\n      </ol>\n    </li>\n    <li>\n      <p>\n        <strong>Set customErrors to \"RemoteOnly\" or \"On\" in the web.config file</strong>: ASP.NET allows you to specify a custom error message instead of an error message that describes the error in detail. Leaving customErrors=\"Off\" means that an attacker will see a complete stack trace as well as a highly detailed error message generated by the .NET runtime or other backend systems.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure error messages reporting the same message are exactly the same</strong>: Multiple error messages may be compared to discover more information about the system. Individually the error message may not display sensitive information, but when compared side by side they may aid an attacker. Error messages may differ in language or punctuation, but these differences will tell an attacker different code paths are being taken. Using a common error resource file can make reporting the same error message from multiple locations much easier. Create a common error resource file that links error text with an error number, this way when a certain error happens it can simply look up the error text in the error message resource file, which ensures the same message will be used in all places.</p>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>The following code authenticates a user. Unfortunately, the code reveals through its error messages whether the credentials sent represent a valid user or an invalid user:</p>\n  <pre>public void login()<br />{<br />      if (!validUser())<br />      {<br />            throw new Exception(\"User not found.\");<br />      }<br />       if (!validPass())<br />      {<br />            throw new Exception(\"Wrong password.\");<br />      }<br />      commit();<br />}</pre>\n  <h1>Solution Example</h1>\n  <p>The following code authenticates a user. Since it presents the same error message regardless of why the authentication failed, an attacker can't determine if the credentials tried represent a valid user or not.</p>\n  <pre>public void login()<br />{<br />         if (!validUser() || !validPass())<br />      {<br />            throw new Exception(\"Authentication failed.\");<br />      }<br />      commit();<br />}</pre>\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
}