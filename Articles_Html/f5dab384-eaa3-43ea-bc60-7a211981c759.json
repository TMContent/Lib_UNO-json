{
  "id": "f5dab384-eaa3-43ea-bc60-7a211981c759",
  "checksum": "7ce0df4a04fe5efff343660cc9d6ad739277a27c",
  "words": {
    "0": [
      "p",
      "ul",
      "li"
    ],
    "512": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "do": [
      "h1",
      "p",
      "ul",
      "li"
    ],
    "why": [
      "h1"
    ],
    "unmanaged": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "title"
    ],
    "code": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "may": [
      "p"
    ],
    "contain": [
      "p"
    ],
    "buffer": [
      "p"
    ],
    "overflows": [
      "p"
    ],
    "or": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "use": [
      "p",
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "dangerous": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "b",
      "title"
    ],
    "apis": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "title"
    ],
    "whose": [
      "p"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "result": [
      "p"
    ],
    "in": [
      "p",
      "p"
    ],
    "security": [
      "p"
    ],
    "vulnerabilities": [
      "p"
    ],
    "when": [
      "h1"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "you": [
      "p",
      "p"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "calling": [
      "p"
    ],
    "into": [
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "have": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "access": [
      "p"
    ],
    "source": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "should": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "review": [
      "p",
      "p"
    ],
    "for": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "title"
    ],
    "potentially": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "b"
    ],
    "such": [
      "p"
    ],
    "as": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "strcpy": [
      "p",
      "b",
      "td"
    ],
    "strcat": [
      "p",
      "b",
      "td",
      "td"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "complete": [
      "p"
    ],
    "list": [
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "listed": [
      "p"
    ],
    "table": [
      "p",
      "p"
    ],
    "below": [
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "sure": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "any": [
      "p"
    ],
    "interop": [
      "p"
    ],
    "calls": [
      "p"
    ],
    "well": [
      "p"
    ],
    "itself": [
      "p"
    ],
    "make": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "bad": [
      "p"
    ],
    "assumptions": [
      "p"
    ],
    "not": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "made": [
      "p"
    ],
    "execution": [
      "p"
    ],
    "control": [
      "p"
    ],
    "passes": [
      "p"
    ],
    "from": [
      "p",
      "p"
    ],
    "managed": [
      "p"
    ],
    "functions": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "b",
      "li",
      "li",
      "b",
      "th"
    ],
    "categorized": [
      "p"
    ],
    "follows": [
      "p"
    ],
    "unbound": [
      "p",
      "ul",
      "li",
      "b"
    ],
    "uf).": [
      "p",
      "ul",
      "li",
      "b"
    ],
    "these": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "expect": [
      "p",
      "ul",
      "li"
    ],
    "an": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "explicit": [
      "p",
      "ul",
      "li"
    ],
    "bound": [
      "p",
      "ul",
      "li"
    ],
    "parameter": [
      "p",
      "ul",
      "li"
    ],
    "number": [
      "p",
      "ul",
      "li"
    ],
    "bytes": [
      "p",
      "ul",
      "li"
    ],
    "might": [
      "p",
      "ul",
      "li"
    ],
    "modified": [
      "p",
      "ul",
      "li"
    ],
    "one": [
      "p",
      "ul",
      "li"
    ],
    "their": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "parameters": [
      "p",
      "ul",
      "li"
    ],
    "typically": [
      "p",
      "ul",
      "li"
    ],
    "most": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "never": [
      "p",
      "ul",
      "li"
    ],
    "used": [
      "p",
      "ul",
      "li"
    ],
    "null": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "b",
      "li",
      "li"
    ],
    "terminated": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "b"
    ],
    "ntf).": [
      "p",
      "ul",
      "li",
      "b"
    ],
    "require": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "string": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "they": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "provided": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "without": [
      "p",
      "ul",
      "li"
    ],
    "termination": [
      "p",
      "ul",
      "li"
    ],
    "could": [
      "p",
      "ul",
      "li"
    ],
    "overwrite": [
      "p",
      "ul",
      "li"
    ],
    "memory": [
      "p",
      "ul",
      "li"
    ],
    "uses": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "loop": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "does": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "additional": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "placeholder": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "example": [
      "p",
      "ul",
      "li"
    ],
    "fori": [
      "p",
      "ul",
      "li"
    ],
    "=": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "i": [
      "p",
      "ul",
      "li"
    ],
    "i++": [
      "p",
      "ul",
      "li"
    ],
    "non-null": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b"
    ],
    "nntf).": [
      "p",
      "ul",
      "li",
      "b"
    ],
    "output": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "however": [
      "p",
      "ul",
      "li"
    ],
    "few": [
      "p",
      "ul",
      "li"
    ],
    "special": [
      "p",
      "ul",
      "li"
    ],
    "treatment": [
      "p",
      "ul",
      "li"
    ],
    "avoid": [
      "p",
      "ul",
      "li"
    ],
    "programming": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "defects": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "format": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "b"
    ],
    "ff).": [
      "p",
      "ul",
      "li",
      "b"
    ],
    "allow": [
      "p",
      "ul",
      "li"
    ],
    "programmer": [
      "p",
      "ul",
      "li"
    ],
    "input": [
      "p",
      "ul",
      "li"
    ],
    "data": [
      "p",
      "ul",
      "li"
    ],
    "manipulated": [
      "p",
      "ul",
      "li"
    ],
    "lead": [
      "p",
      "ul",
      "li"
    ],
    "shows": [
      "p"
    ],
    "range": [
      "p"
    ],
    "associated": [
      "p"
    ],
    "categories": [
      "p"
    ],
    "which": [
      "p"
    ],
    "fall": [
      "p"
    ],
    "functionscategorystrcpyuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfstrcatuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfstrcatntfstrlenntfstrncpynntfstrncatntfstrcmpntfstrcmpntfmbcstowsnntf_strdupntf_strrevntfstrstrntfstrstrntfsprintfff": [
      "p",
      "table",
      "tbody"
    ],
    "ntf_snprintfff": [
      "p",
      "table",
      "tbody"
    ],
    "ntfprintfff": [
      "p",
      "table",
      "tbody"
    ],
    "ntffprintfff": [
      "p",
      "table",
      "tbody"
    ],
    "ntfgetsufscanfff": [
      "p",
      "table",
      "tbody"
    ],
    "ntffscanfff": [
      "p",
      "table",
      "tbody"
    ],
    "ntfsscanfff": [
      "p",
      "table",
      "tbody"
    ],
    "ntf": [
      "p",
      "table",
      "tbody",
      "tr",
      "td",
      "tr",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "tr",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td"
    ],
    "strcspnntfmultibytetowidecharnntfwidechartomultibytenntfgetshortpathnamewntfgetlongpathnamewntfwinexecntfcreateprocesswntfgetenvironmentvariablewntfsetenvironmentvariablewntfsetenvironmentvariablewntfexpandenvironmentstringswntfsearchpathwntfsearchpathwntfsearchpathwntflstrcpyuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfwcscpyuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntf_mbscpyuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfstrcpyauf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfstrcpywuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntflstrcatauf": [
      "p",
      "table",
      "tbody"
    ],
    "ntflstrcatwuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfwcscatuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntf_mbscatuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfwcslenntf_mbslenntf_mbstrlenntflstrlenantflstrlenwntfwcsncpynntf_mbsncpynntfstrcpynnntflstrcpynwntflstrcatnantflstrcatnwntfwcsncatntf_mbsncatntf_mbsnbcatntf": [
      "p",
      "table",
      "tbody"
    ],
    "lstrcmpantflstrcmpwntfstrcmpntfwcscmpntf_mbscmpntfstrcollntfwcscollntf_mbscollntf_stricmpntflstrcmpiantflstrcmpiwntf_wcsicmpntf_mbsicmpntfstrcmpntf_stricollntf_wcsicollntf_mbsicollntfstrcollntf_wcsdupntf_mbsdupntfstrdupntf_wcsrevntf_mbsrevntf_strlwrntf_mbslwrntf_wcslwrntf_struprntf_mbsuprntf_wcsuprntfwcsstrntf_mbsstrntfstrspnntfwcsspnntf_mbsspnntfstrpbrkntfwcspbrkntf_mbspbrkntfwcsxfrmntfwcscspnntf_mbcscpnntfswprintfffwsprintfaffwsprintfwffvsprintfffvswprintfff_snwprintfff_vsnprintfff_vsnwprintfffvprintfffvwprintfffvfprintfffvwfprintfff_getwsuffwscanfffwscanfffswscanfffoemtocharauf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfoemtocharwuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfchartooemauf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfchartooemwuf": [
      "p",
      "table",
      "tbody"
    ],
    "ntfcharupperantfcharupperwntfcharupperbuffwntfcharlowerantfcharlowerwntfcharlowerbuffwntf": [
      "p",
      "table",
      "tbody"
    ],
    "functionscategory": [
      "tr"
    ],
    "category": [
      "th"
    ],
    "strcpyuf": [
      "tr"
    ],
    "uf": [
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td"
    ],
    "strcatuf": [
      "tr"
    ],
    "strcatntf": [
      "tr"
    ],
    "strlenntf": [
      "tr"
    ],
    "strlen": [
      "td"
    ],
    "strncpynntf": [
      "tr"
    ],
    "strncpy": [
      "td"
    ],
    "nntf": [
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td"
    ],
    "strncatntf": [
      "tr"
    ],
    "strncat": [
      "td"
    ],
    "strcmpntf": [
      "tr",
      "tr",
      "tr",
      "tr"
    ],
    "strcmp": [
      "td",
      "td",
      "td",
      "td"
    ],
    "mbcstowsnntf": [
      "tr"
    ],
    "mbcstows": [
      "td"
    ],
    "_strdupntf": [
      "tr"
    ],
    "_strdup": [
      "td"
    ],
    "_strrevntf": [
      "tr"
    ],
    "_strrev": [
      "td"
    ],
    "strstrntf": [
      "tr",
      "tr"
    ],
    "strstr": [
      "td",
      "td"
    ],
    "sprintfff": [
      "tr"
    ],
    "sprintf": [
      "td"
    ],
    "ff": [
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td",
      "td"
    ],
    "_snprintfff": [
      "tr"
    ],
    "_snprintf": [
      "td"
    ],
    "printfff": [
      "tr"
    ],
    "printf": [
      "td"
    ],
    "fprintfff": [
      "tr"
    ],
    "fprintf": [
      "td"
    ],
    "getsuf": [
      "tr"
    ],
    "gets": [
      "td"
    ],
    "scanfff": [
      "tr"
    ],
    "scanf": [
      "td"
    ],
    "fscanfff": [
      "tr"
    ],
    "fscanf": [
      "td"
    ],
    "sscanfff": [
      "tr"
    ],
    "sscanf": [
      "td"
    ],
    "strcspnntf": [
      "tr"
    ],
    "strcspn": [
      "td"
    ],
    "multibytetowidecharnntf": [
      "tr"
    ],
    "multibytetowidechar": [
      "td"
    ],
    "widechartomultibytenntf": [
      "tr"
    ],
    "widechartomultibyte": [
      "td"
    ],
    "getshortpathnamewntf": [
      "tr"
    ],
    "getshortpathnamew": [
      "td"
    ],
    "getlongpathnamewntf": [
      "tr"
    ],
    "getlongpathnamew": [
      "td"
    ],
    "winexecntf": [
      "tr"
    ],
    "winexec": [
      "td"
    ],
    "createprocesswntf": [
      "tr"
    ],
    "createprocessw": [
      "td"
    ],
    "getenvironmentvariablewntf": [
      "tr"
    ],
    "getenvironmentvariablew": [
      "td"
    ],
    "setenvironmentvariablewntf": [
      "tr",
      "tr"
    ],
    "setenvironmentvariablew": [
      "td",
      "td"
    ],
    "expandenvironmentstringswntf": [
      "tr"
    ],
    "expandenvironmentstringsw": [
      "td"
    ],
    "searchpathwntf": [
      "tr",
      "tr",
      "tr"
    ],
    "searchpathw": [
      "td",
      "td",
      "td"
    ],
    "lstrcpyuf": [
      "tr"
    ],
    "lstrcpy": [
      "td"
    ],
    "wcscpyuf": [
      "tr"
    ],
    "wcscpy": [
      "td"
    ],
    "_mbscpyuf": [
      "tr"
    ],
    "_mbscpy": [
      "td"
    ],
    "strcpyauf": [
      "tr"
    ],
    "strcpya": [
      "td"
    ],
    "strcpywuf": [
      "tr"
    ],
    "strcpyw": [
      "td"
    ],
    "lstrcatauf": [
      "tr"
    ],
    "lstrcata": [
      "td"
    ],
    "lstrcatwuf": [
      "tr"
    ],
    "lstrcatw": [
      "td"
    ],
    "wcscatuf": [
      "tr"
    ],
    "wcscat": [
      "td"
    ],
    "_mbscatuf": [
      "tr"
    ],
    "_mbscat": [
      "td"
    ],
    "wcslenntf": [
      "tr"
    ],
    "wcslen": [
      "td"
    ],
    "_mbslenntf": [
      "tr"
    ],
    "_mbslen": [
      "td"
    ],
    "_mbstrlenntf": [
      "tr"
    ],
    "_mbstrlen": [
      "td"
    ],
    "lstrlenantf": [
      "tr"
    ],
    "lstrlena": [
      "td"
    ],
    "lstrlenwntf": [
      "tr"
    ],
    "lstrlenw": [
      "td"
    ],
    "wcsncpynntf": [
      "tr"
    ],
    "wcsncpy": [
      "td"
    ],
    "_mbsncpynntf": [
      "tr"
    ],
    "_mbsncpy": [
      "td"
    ],
    "strcpynnntf": [
      "tr"
    ],
    "strcpyn": [
      "td"
    ],
    "lstrcpynwntf": [
      "tr"
    ],
    "lstrcpynw": [
      "td"
    ],
    "lstrcatnantf": [
      "tr"
    ],
    "lstrcatna": [
      "td"
    ],
    "lstrcatnwntf": [
      "tr"
    ],
    "lstrcatnw": [
      "td"
    ],
    "wcsncatntf": [
      "tr"
    ],
    "wcsncat": [
      "td"
    ],
    "_mbsncatntf": [
      "tr"
    ],
    "_mbsncat": [
      "td"
    ],
    "_mbsnbcatntf": [
      "tr"
    ],
    "_mbsnbcat": [
      "td"
    ],
    "lstrcmpantf": [
      "tr"
    ],
    "lstrcmpa": [
      "td"
    ],
    "lstrcmpwntf": [
      "tr"
    ],
    "lstrcmpw": [
      "td"
    ],
    "wcscmpntf": [
      "tr"
    ],
    "wcscmp": [
      "td"
    ],
    "_mbscmpntf": [
      "tr"
    ],
    "_mbscmp": [
      "td"
    ],
    "strcollntf": [
      "tr",
      "tr"
    ],
    "strcoll": [
      "td",
      "td"
    ],
    "wcscollntf": [
      "tr"
    ],
    "wcscoll": [
      "td"
    ],
    "_mbscollntf": [
      "tr"
    ],
    "_mbscoll": [
      "td"
    ],
    "_stricmpntf": [
      "tr"
    ],
    "_stricmp": [
      "td"
    ],
    "lstrcmpiantf": [
      "tr"
    ],
    "lstrcmpia": [
      "td"
    ],
    "lstrcmpiwntf": [
      "tr"
    ],
    "lstrcmpiw": [
      "td"
    ],
    "_wcsicmpntf": [
      "tr"
    ],
    "_wcsicmp": [
      "td"
    ],
    "_mbsicmpntf": [
      "tr"
    ],
    "_mbsicmp": [
      "td"
    ],
    "_stricollntf": [
      "tr"
    ],
    "_stricoll": [
      "td"
    ],
    "_wcsicollntf": [
      "tr"
    ],
    "_wcsicoll": [
      "td"
    ],
    "_mbsicollntf": [
      "tr"
    ],
    "_mbsicoll": [
      "td"
    ],
    "_wcsdupntf": [
      "tr"
    ],
    "_wcsdup": [
      "td"
    ],
    "_mbsdupntf": [
      "tr"
    ],
    "_mbsdup": [
      "td"
    ],
    "strdupntf": [
      "tr"
    ],
    "strdup": [
      "td"
    ],
    "_wcsrevntf": [
      "tr"
    ],
    "_wcsrev": [
      "td"
    ],
    "_mbsrevntf": [
      "tr"
    ],
    "_mbsrev": [
      "td"
    ],
    "_strlwrntf": [
      "tr"
    ],
    "_strlwr": [
      "td"
    ],
    "_mbslwrntf": [
      "tr"
    ],
    "_mbslwr": [
      "td"
    ],
    "_wcslwrntf": [
      "tr"
    ],
    "_wcslwr": [
      "td"
    ],
    "_struprntf": [
      "tr"
    ],
    "_strupr": [
      "td"
    ],
    "_mbsuprntf": [
      "tr"
    ],
    "_mbsupr": [
      "td"
    ],
    "_wcsuprntf": [
      "tr"
    ],
    "_wcsupr": [
      "td"
    ],
    "wcsstrntf": [
      "tr"
    ],
    "wcsstr": [
      "td"
    ],
    "_mbsstrntf": [
      "tr"
    ],
    "_mbsstr": [
      "td"
    ],
    "strspnntf": [
      "tr"
    ],
    "strspn": [
      "td"
    ],
    "wcsspnntf": [
      "tr"
    ],
    "wcsspn": [
      "td"
    ],
    "_mbsspnntf": [
      "tr"
    ],
    "_mbsspn": [
      "td"
    ],
    "strpbrkntf": [
      "tr"
    ],
    "strpbrk": [
      "td"
    ],
    "wcspbrkntf": [
      "tr"
    ],
    "wcspbrk": [
      "td"
    ],
    "_mbspbrkntf": [
      "tr"
    ],
    "_mbspbrk": [
      "td"
    ],
    "wcsxfrmntf": [
      "tr"
    ],
    "wcsxfrm": [
      "td"
    ],
    "wcscspnntf": [
      "tr"
    ],
    "wcscspn": [
      "td"
    ],
    "_mbcscpnntf": [
      "tr"
    ],
    "_mbcscpn": [
      "td"
    ],
    "swprintfff": [
      "tr"
    ],
    "swprintf": [
      "td"
    ],
    "wsprintfaff": [
      "tr"
    ],
    "wsprintfa": [
      "td"
    ],
    "wsprintfwff": [
      "tr"
    ],
    "wsprintfw": [
      "td"
    ],
    "vsprintfff": [
      "tr"
    ],
    "vsprintf": [
      "td"
    ],
    "vswprintfff": [
      "tr"
    ],
    "vswprintf": [
      "td"
    ],
    "_snwprintfff": [
      "tr"
    ],
    "_snwprintf": [
      "td"
    ],
    "_vsnprintfff": [
      "tr"
    ],
    "_vsnprintf": [
      "td"
    ],
    "_vsnwprintfff": [
      "tr"
    ],
    "_vsnwprintf": [
      "td"
    ],
    "vprintfff": [
      "tr"
    ],
    "vprintf": [
      "td"
    ],
    "vwprintfff": [
      "tr"
    ],
    "vwprintf": [
      "td"
    ],
    "vfprintfff": [
      "tr"
    ],
    "vfprintf": [
      "td"
    ],
    "vwfprintfff": [
      "tr"
    ],
    "vwfprintf": [
      "td"
    ],
    "_getwsuf": [
      "tr"
    ],
    "_getws": [
      "td"
    ],
    "fwscanfff": [
      "tr"
    ],
    "fwscanf": [
      "td"
    ],
    "wscanfff": [
      "tr"
    ],
    "wscanf": [
      "td"
    ],
    "swscanfff": [
      "tr"
    ],
    "swscanf": [
      "td"
    ],
    "oemtocharauf": [
      "tr"
    ],
    "oemtochara": [
      "td"
    ],
    "oemtocharwuf": [
      "tr"
    ],
    "oemtocharw": [
      "td"
    ],
    "chartooemauf": [
      "tr"
    ],
    "chartooema": [
      "td"
    ],
    "chartooemwuf": [
      "tr"
    ],
    "chartooemw": [
      "td"
    ],
    "charupperantf": [
      "tr"
    ],
    "charuppera": [
      "td"
    ],
    "charupperwntf": [
      "tr"
    ],
    "charupperw": [
      "td"
    ],
    "charupperbuffwntf": [
      "tr"
    ],
    "charupperbuffw": [
      "td"
    ],
    "charlowerantf": [
      "tr"
    ],
    "charlowera": [
      "td"
    ],
    "charlowerwntf": [
      "tr"
    ],
    "charlowerw": [
      "td"
    ],
    "charlowerbuffwntf": [
      "tr"
    ],
    "charlowerbuffw": [
      "td"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "inspect": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How"
    ],
    "p": [
      "Unmanaged code may contain buffer overflows or the use of dangerous APIs whose use can result in security vulnerabilities.",
      "If you are calling into unmanaged code and have access to the source.",
      "You should review unmanaged code for the use of potentially dangerous APIs such as strcpy and strcat. A complete list of potentially dangerous APIs is listed in the table below. Be sure to review any interop calls, as well as the unmanaged code itself, to make sure that bad assumptions are not made as execution control passes from managed to unmanaged code.",
      "Potentially dangerous unmanaged functions can be categorized as follows: Unbound Functions (UF). These functions do not expect an explicit bound parameter for the number of bytes that might be modified for one of their parameters. These are typically the most potentially dangerous functions and should never be used. NULL Terminated Functions (NTF). These functions require a NULL terminated string. If they are provided a string without NULL termination, they could overwrite memory. If the code uses NULL terminated functions, make sure that the loop does not have an additional placeholder for NULL; for example, for(i = 0; i <= 512; i++) should be < 512 not <= 512. Non-NULL Terminated Functions (NNTF). The output of most string functions is NULL terminated; however, the output of a few is not. These require special treatment to avoid programming defects. If the code uses non-NULL terminated functions, make sure that the loop does have an additional placeholder for NULL. Format Functions (FF). Format string functions allow a programmer to format their input and output. If the format is not provided, data can be manipulated and can lead to programming defects.",
      "The table below shows a range of potentially dangerous unmanaged APIs and the associated categories into which they fall.",
      "Potentially Dangerous Unmanaged APIs",
      "FunctionsCategoryStrcpyUF, NTFStrcatUF, NTFStrcatNTFStrlenNTFStrncpyNNTFStrncatNTFStrcmpNTFStrcmpNTFMbcstowsNNTF_strdupNTF_strrevNTFStrstrNTFStrstrNTFSprintfFF, NTF_snprintfFF, NTFPrintfFF, NTFFprintfFF, NTFGetsUFScanfFF, NTFFscanfFF, NTFSscanfFF, NTF, StrcspnNTFMultiByteToWideCharNNTFWideCharToMultiByteNNTFGetShortPathNameWNTFGetLongPathNameWNTFWinExecNTFCreateProcessWNTFGetEnvironmentVariableWNTFSetEnvironmentVariableWNTFSetEnvironmentVariableWNTFExpandEnvironmentStringsWNTFSearchPathWNTFSearchPathWNTFSearchPathWNTFLstrcpyUF, NTFWcscpyUF, NTF_mbscpyUF, NTFStrCpyAUF, NTFStrCpyWUF, NTFlstrcatAUF, NTFlstrcatWUF, NTFWcscatUF, NTF_mbscatUF, NTFWcslenNTF_mbslenNTF_mbstrlenNTFlstrlenANTFlstrlenWNTFWcsncpyNNTF_mbsncpyNNTFStrCpyNNNTFlstrcpynWNTFlstrcatnANTFlstrcatnWNTFWcsncatNTF_mbsncatNTF_mbsnbcatNTF lstrcmpANTFlstrcmpWNTFStrCmpNTFWcscmpNTF_mbscmpNTFStrcollNTFWcscollNTF_mbscollNTF_stricmpNTFlstrcmpiANTFlstrcmpiWNTF_wcsicmpNTF_mbsicmpNTFStrCmpNTF_stricollNTF_wcsicollNTF_mbsicollNTFStrCollNTF_wcsdupNTF_mbsdupNTFStrDupNTF_wcsrevNTF_mbsrevNTF_strlwrNTF_mbslwrNTF_wcslwrNTF_struprNTF_mbsuprNTF_wcsuprNTFWcsstrNTF_mbsstrNTFStrspnNTFWcsspnNTF_mbsspnNTFStrpbrkNTFWcspbrkNTF_mbspbrkNTFWcsxfrmNTFWcscspnNTF_mbcscpnNTFSwprintfFFwsprintfAFFwsprintfWFFVsprintfFFVswprintfFF_snwprintfFF_vsnprintfFF_vsnwprintfFFVprintfFFVwprintfFFVfprintfFFVwfprintfFF_getwsUFFwscanfFFWscanfFFSwscanfFFOemToCharAUF, NTFOemToCharWUF, NTFCharToOemAUF, NTFCharToOemWUF, NTFCharUpperANTFCharUpperWNTFCharUpperBuffWNTFCharLowerANTFCharLowerWNTFCharLowerBuffWNTF",
      "",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "b": [
      "strcpy",
      "strcat",
      "Unbound Functions (UF).",
      "NULL Terminated Functions (NTF).",
      "Non-NULL Terminated Functions (NNTF).",
      "Format Functions (FF).",
      "Potentially Dangerous Unmanaged APIs"
    ],
    "ul": [
      "Unbound Functions (UF). These functions do not expect an explicit bound parameter for the number of bytes that might be modified for one of their parameters. These are typically the most potentially dangerous functions and should never be used. NULL Terminated Functions (NTF). These functions require a NULL terminated string. If they are provided a string without NULL termination, they could overwrite memory. If the code uses NULL terminated functions, make sure that the loop does not have an additional placeholder for NULL; for example, for(i = 0; i <= 512; i++) should be < 512 not <= 512. Non-NULL Terminated Functions (NNTF). The output of most string functions is NULL terminated; however, the output of a few is not. These require special treatment to avoid programming defects. If the code uses non-NULL terminated functions, make sure that the loop does have an additional placeholder for NULL. Format Functions (FF). Format string functions allow a programmer to format their input and output. If the format is not provided, data can be manipulated and can lead to programming defects."
    ],
    "li": [
      "Unbound Functions (UF). These functions do not expect an explicit bound parameter for the number of bytes that might be modified for one of their parameters. These are typically the most potentially dangerous functions and should never be used.",
      "NULL Terminated Functions (NTF). These functions require a NULL terminated string. If they are provided a string without NULL termination, they could overwrite memory. If the code uses NULL terminated functions, make sure that the loop does not have an additional placeholder for NULL; for example, for(i = 0; i <= 512; i++) should be < 512 not <= 512.",
      "Non-NULL Terminated Functions (NNTF). The output of most string functions is NULL terminated; however, the output of a few is not. These require special treatment to avoid programming defects. If the code uses non-NULL terminated functions, make sure that the loop does have an additional placeholder for NULL.",
      "Format Functions (FF). Format string functions allow a programmer to format their input and output. If the format is not provided, data can be manipulated and can lead to programming defects."
    ],
    "table": [
      "FunctionsCategoryStrcpyUF, NTFStrcatUF, NTFStrcatNTFStrlenNTFStrncpyNNTFStrncatNTFStrcmpNTFStrcmpNTFMbcstowsNNTF_strdupNTF_strrevNTFStrstrNTFStrstrNTFSprintfFF, NTF_snprintfFF, NTFPrintfFF, NTFFprintfFF, NTFGetsUFScanfFF, NTFFscanfFF, NTFSscanfFF, NTF, StrcspnNTFMultiByteToWideCharNNTFWideCharToMultiByteNNTFGetShortPathNameWNTFGetLongPathNameWNTFWinExecNTFCreateProcessWNTFGetEnvironmentVariableWNTFSetEnvironmentVariableWNTFSetEnvironmentVariableWNTFExpandEnvironmentStringsWNTFSearchPathWNTFSearchPathWNTFSearchPathWNTFLstrcpyUF, NTFWcscpyUF, NTF_mbscpyUF, NTFStrCpyAUF, NTFStrCpyWUF, NTFlstrcatAUF, NTFlstrcatWUF, NTFWcscatUF, NTF_mbscatUF, NTFWcslenNTF_mbslenNTF_mbstrlenNTFlstrlenANTFlstrlenWNTFWcsncpyNNTF_mbsncpyNNTFStrCpyNNNTFlstrcpynWNTFlstrcatnANTFlstrcatnWNTFWcsncatNTF_mbsncatNTF_mbsnbcatNTF lstrcmpANTFlstrcmpWNTFStrCmpNTFWcscmpNTF_mbscmpNTFStrcollNTFWcscollNTF_mbscollNTF_stricmpNTFlstrcmpiANTFlstrcmpiWNTF_wcsicmpNTF_mbsicmpNTFStrCmpNTF_stricollNTF_wcsicollNTF_mbsicollNTFStrCollNTF_wcsdupNTF_mbsdupNTFStrDupNTF_wcsrevNTF_mbsrevNTF_strlwrNTF_mbslwrNTF_wcslwrNTF_struprNTF_mbsuprNTF_wcsuprNTFWcsstrNTF_mbsstrNTFStrspnNTFWcsspnNTF_mbsspnNTFStrpbrkNTFWcspbrkNTF_mbspbrkNTFWcsxfrmNTFWcscspnNTF_mbcscpnNTFSwprintfFFwsprintfAFFwsprintfWFFVsprintfFFVswprintfFF_snwprintfFF_vsnprintfFF_vsnwprintfFFVprintfFFVwprintfFFVfprintfFFVwfprintfFF_getwsUFFwscanfFFWscanfFFSwscanfFFOemToCharAUF, NTFOemToCharWUF, NTFCharToOemAUF, NTFCharToOemWUF, NTFCharUpperANTFCharUpperWNTFCharUpperBuffWNTFCharLowerANTFCharLowerWNTFCharLowerBuffWNTF"
    ],
    "tbody": [
      "FunctionsCategoryStrcpyUF, NTFStrcatUF, NTFStrcatNTFStrlenNTFStrncpyNNTFStrncatNTFStrcmpNTFStrcmpNTFMbcstowsNNTF_strdupNTF_strrevNTFStrstrNTFStrstrNTFSprintfFF, NTF_snprintfFF, NTFPrintfFF, NTFFprintfFF, NTFGetsUFScanfFF, NTFFscanfFF, NTFSscanfFF, NTF, StrcspnNTFMultiByteToWideCharNNTFWideCharToMultiByteNNTFGetShortPathNameWNTFGetLongPathNameWNTFWinExecNTFCreateProcessWNTFGetEnvironmentVariableWNTFSetEnvironmentVariableWNTFSetEnvironmentVariableWNTFExpandEnvironmentStringsWNTFSearchPathWNTFSearchPathWNTFSearchPathWNTFLstrcpyUF, NTFWcscpyUF, NTF_mbscpyUF, NTFStrCpyAUF, NTFStrCpyWUF, NTFlstrcatAUF, NTFlstrcatWUF, NTFWcscatUF, NTF_mbscatUF, NTFWcslenNTF_mbslenNTF_mbstrlenNTFlstrlenANTFlstrlenWNTFWcsncpyNNTF_mbsncpyNNTFStrCpyNNNTFlstrcpynWNTFlstrcatnANTFlstrcatnWNTFWcsncatNTF_mbsncatNTF_mbsnbcatNTF lstrcmpANTFlstrcmpWNTFStrCmpNTFWcscmpNTF_mbscmpNTFStrcollNTFWcscollNTF_mbscollNTF_stricmpNTFlstrcmpiANTFlstrcmpiWNTF_wcsicmpNTF_mbsicmpNTFStrCmpNTF_stricollNTF_wcsicollNTF_mbsicollNTFStrCollNTF_wcsdupNTF_mbsdupNTFStrDupNTF_wcsrevNTF_mbsrevNTF_strlwrNTF_mbslwrNTF_wcslwrNTF_struprNTF_mbsuprNTF_wcsuprNTFWcsstrNTF_mbsstrNTFStrspnNTFWcsspnNTF_mbsspnNTFStrpbrkNTFWcspbrkNTF_mbspbrkNTFWcsxfrmNTFWcscspnNTF_mbcscpnNTFSwprintfFFwsprintfAFFwsprintfWFFVsprintfFFVswprintfFF_snwprintfFF_vsnprintfFF_vsnwprintfFFVprintfFFVwprintfFFVfprintfFFVwfprintfFF_getwsUFFwscanfFFWscanfFFSwscanfFFOemToCharAUF, NTFOemToCharWUF, NTFCharToOemAUF, NTFCharToOemWUF, NTFCharUpperANTFCharUpperWNTFCharUpperBuffWNTFCharLowerANTFCharLowerWNTFCharLowerBuffWNTF"
    ],
    "tr": [
      "FunctionsCategory",
      "StrcpyUF, NTF",
      "StrcatUF, NTF",
      "StrcatNTF",
      "StrlenNTF",
      "StrncpyNNTF",
      "StrncatNTF",
      "StrcmpNTF",
      "StrcmpNTF",
      "MbcstowsNNTF",
      "_strdupNTF",
      "_strrevNTF",
      "StrstrNTF",
      "StrstrNTF",
      "SprintfFF, NTF",
      "_snprintfFF, NTF",
      "PrintfFF, NTF",
      "FprintfFF, NTF",
      "GetsUF",
      "ScanfFF, NTF",
      "FscanfFF, NTF",
      "SscanfFF, NTF,",
      "StrcspnNTF",
      "MultiByteToWideCharNNTF",
      "WideCharToMultiByteNNTF",
      "GetShortPathNameWNTF",
      "GetLongPathNameWNTF",
      "WinExecNTF",
      "CreateProcessWNTF",
      "GetEnvironmentVariableWNTF",
      "SetEnvironmentVariableWNTF",
      "SetEnvironmentVariableWNTF",
      "ExpandEnvironmentStringsWNTF",
      "SearchPathWNTF",
      "SearchPathWNTF",
      "SearchPathWNTF",
      "LstrcpyUF, NTF",
      "WcscpyUF, NTF",
      "_mbscpyUF, NTF",
      "StrCpyAUF, NTF",
      "StrCpyWUF, NTF",
      "lstrcatAUF, NTF",
      "lstrcatWUF, NTF",
      "WcscatUF, NTF",
      "_mbscatUF, NTF",
      "WcslenNTF",
      "_mbslenNTF",
      "_mbstrlenNTF",
      "lstrlenANTF",
      "lstrlenWNTF",
      "WcsncpyNNTF",
      "_mbsncpyNNTF",
      "StrCpyNNNTF",
      "lstrcpynWNTF",
      "lstrcatnANTF",
      "lstrcatnWNTF",
      "WcsncatNTF",
      "_mbsncatNTF",
      "_mbsnbcatNTF",
      "lstrcmpANTF",
      "lstrcmpWNTF",
      "StrCmpNTF",
      "WcscmpNTF",
      "_mbscmpNTF",
      "StrcollNTF",
      "WcscollNTF",
      "_mbscollNTF",
      "_stricmpNTF",
      "lstrcmpiANTF",
      "lstrcmpiWNTF",
      "_wcsicmpNTF",
      "_mbsicmpNTF",
      "StrCmpNTF",
      "_stricollNTF",
      "_wcsicollNTF",
      "_mbsicollNTF",
      "StrCollNTF",
      "_wcsdupNTF",
      "_mbsdupNTF",
      "StrDupNTF",
      "_wcsrevNTF",
      "_mbsrevNTF",
      "_strlwrNTF",
      "_mbslwrNTF",
      "_wcslwrNTF",
      "_struprNTF",
      "_mbsuprNTF",
      "_wcsuprNTF",
      "WcsstrNTF",
      "_mbsstrNTF",
      "StrspnNTF",
      "WcsspnNTF",
      "_mbsspnNTF",
      "StrpbrkNTF",
      "WcspbrkNTF",
      "_mbspbrkNTF",
      "WcsxfrmNTF",
      "WcscspnNTF",
      "_mbcscpnNTF",
      "SwprintfFF",
      "wsprintfAFF",
      "wsprintfWFF",
      "VsprintfFF",
      "VswprintfFF",
      "_snwprintfFF",
      "_vsnprintfFF",
      "_vsnwprintfFF",
      "VprintfFF",
      "VwprintfFF",
      "VfprintfFF",
      "VwfprintfFF",
      "_getwsUF",
      "FwscanfFF",
      "WscanfFF",
      "SwscanfFF",
      "OemToCharAUF, NTF",
      "OemToCharWUF, NTF",
      "CharToOemAUF, NTF",
      "CharToOemWUF, NTF",
      "CharUpperANTF",
      "CharUpperWNTF",
      "CharUpperBuffWNTF",
      "CharLowerANTF",
      "CharLowerWNTF",
      "CharLowerBuffWNTF"
    ],
    "th": [
      "Functions",
      "Category"
    ],
    "td": [
      "Strcpy",
      "UF, NTF",
      "Strcat",
      "UF, NTF",
      "Strcat",
      "NTF",
      "Strlen",
      "NTF",
      "Strncpy",
      "NNTF",
      "Strncat",
      "NTF",
      "Strcmp",
      "NTF",
      "Strcmp",
      "NTF",
      "Mbcstows",
      "NNTF",
      "_strdup",
      "NTF",
      "_strrev",
      "NTF",
      "Strstr",
      "NTF",
      "Strstr",
      "NTF",
      "Sprintf",
      "FF, NTF",
      "_snprintf",
      "FF, NTF",
      "Printf",
      "FF, NTF",
      "Fprintf",
      "FF, NTF",
      "Gets",
      "UF",
      "Scanf",
      "FF, NTF",
      "Fscanf",
      "FF, NTF",
      "Sscanf",
      "FF, NTF,",
      "Strcspn",
      "NTF",
      "MultiByteToWideChar",
      "NNTF",
      "WideCharToMultiByte",
      "NNTF",
      "GetShortPathNameW",
      "NTF",
      "GetLongPathNameW",
      "NTF",
      "WinExec",
      "NTF",
      "CreateProcessW",
      "NTF",
      "GetEnvironmentVariableW",
      "NTF",
      "SetEnvironmentVariableW",
      "NTF",
      "SetEnvironmentVariableW",
      "NTF",
      "ExpandEnvironmentStringsW",
      "NTF",
      "SearchPathW",
      "NTF",
      "SearchPathW",
      "NTF",
      "SearchPathW",
      "NTF",
      "Lstrcpy",
      "UF, NTF",
      "Wcscpy",
      "UF, NTF",
      "_mbscpy",
      "UF, NTF",
      "StrCpyA",
      "UF, NTF",
      "StrCpyW",
      "UF, NTF",
      "lstrcatA",
      "UF, NTF",
      "lstrcatW",
      "UF, NTF",
      "Wcscat",
      "UF, NTF",
      "_mbscat",
      "UF, NTF",
      "Wcslen",
      "NTF",
      "_mbslen",
      "NTF",
      "_mbstrlen",
      "NTF",
      "lstrlenA",
      "NTF",
      "lstrlenW",
      "NTF",
      "Wcsncpy",
      "NNTF",
      "_mbsncpy",
      "NNTF",
      "StrCpyN",
      "NNTF",
      "lstrcpynW",
      "NTF",
      "lstrcatnA",
      "NTF",
      "lstrcatnW",
      "NTF",
      "Wcsncat",
      "NTF",
      "_mbsncat",
      "NTF",
      "_mbsnbcat",
      "NTF",
      "lstrcmpA",
      "NTF",
      "lstrcmpW",
      "NTF",
      "StrCmp",
      "NTF",
      "Wcscmp",
      "NTF",
      "_mbscmp",
      "NTF",
      "Strcoll",
      "NTF",
      "Wcscoll",
      "NTF",
      "_mbscoll",
      "NTF",
      "_stricmp",
      "NTF",
      "lstrcmpiA",
      "NTF",
      "lstrcmpiW",
      "NTF",
      "_wcsicmp",
      "NTF",
      "_mbsicmp",
      "NTF",
      "StrCmp",
      "NTF",
      "_stricoll",
      "NTF",
      "_wcsicoll",
      "NTF",
      "_mbsicoll",
      "NTF",
      "StrColl",
      "NTF",
      "_wcsdup",
      "NTF",
      "_mbsdup",
      "NTF",
      "StrDup",
      "NTF",
      "_wcsrev",
      "NTF",
      "_mbsrev",
      "NTF",
      "_strlwr",
      "NTF",
      "_mbslwr",
      "NTF",
      "_wcslwr",
      "NTF",
      "_strupr",
      "NTF",
      "_mbsupr",
      "NTF",
      "_wcsupr",
      "NTF",
      "Wcsstr",
      "NTF",
      "_mbsstr",
      "NTF",
      "Strspn",
      "NTF",
      "Wcsspn",
      "NTF",
      "_mbsspn",
      "NTF",
      "Strpbrk",
      "NTF",
      "Wcspbrk",
      "NTF",
      "_mbspbrk",
      "NTF",
      "Wcsxfrm",
      "NTF",
      "Wcscspn",
      "NTF",
      "_mbcscpn",
      "NTF",
      "Swprintf",
      "FF",
      "wsprintfA",
      "FF",
      "wsprintfW",
      "FF",
      "Vsprintf",
      "FF",
      "Vswprintf",
      "FF",
      "_snwprintf",
      "FF",
      "_vsnprintf",
      "FF",
      "_vsnwprintf",
      "FF",
      "Vprintf",
      "FF",
      "Vwprintf",
      "FF",
      "Vfprintf",
      "FF",
      "Vwfprintf",
      "FF",
      "_getws",
      "UF",
      "Fwscanf",
      "FF",
      "Wscanf",
      "FF",
      "Swscanf",
      "FF",
      "OemToCharA",
      "UF, NTF",
      "OemToCharW",
      "UF, NTF",
      "CharToOemA",
      "UF, NTF",
      "CharToOemW",
      "UF, NTF",
      "CharUpperA",
      "NTF",
      "CharUpperW",
      "NTF",
      "CharUpperBuffW",
      "NTF",
      "CharLowerA",
      "NTF",
      "CharLowerW",
      "NTF",
      "CharLowerBuffW",
      "NTF"
    ],
    "br": [
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Do</h1>Subject any unmanaged code included in your application to a thorough code review <h1>Why</h1><p>Unmanaged code may contain buffer overflows or the use of dangerous APIs whose use can result in security vulnerabilities. </p><h1>When</h1><p>If you are calling into unmanaged code and have access to the source.</p><h1>How</h1><p>You should review unmanaged code for the use of potentially dangerous APIs such as <b>strcpy</b> and <b>strcat</b>. A complete list of potentially dangerous APIs is listed in the table below. Be sure to review any interop calls, as well as the unmanaged code itself, to make sure that bad assumptions are not made as execution control passes from managed to unmanaged code.</p><p />Potentially dangerous unmanaged functions can be categorized as follows: <ul><li><b>Unbound Functions (UF).</b> These functions do not expect an explicit bound parameter for the number of bytes that might be modified for one of their parameters. These are typically the most potentially dangerous functions and should never be used. </li><li><b>NULL Terminated Functions (NTF).</b> These functions require a NULL terminated string. If they are provided a string without NULL termination, they could overwrite memory. If the code uses NULL terminated functions, make sure that the loop does not have an additional placeholder for NULL; for example, for(i = 0; i &lt;= 512; i++) should be &lt; 512 not &lt;= 512. </li><li><b>Non-NULL Terminated Functions (NNTF).</b> The output of most string functions is NULL terminated; however, the output of a few is not. These require special treatment to avoid programming defects. If the code uses non-NULL terminated functions, make sure that the loop does have an additional placeholder for NULL. </li><li><b>Format Functions (FF).</b> Format string functions allow a programmer to format their input and output. If the format is not provided, data can be manipulated and can lead to programming defects. </li></ul><p>The table below shows a range of potentially dangerous unmanaged APIs and the associated categories into which they fall.</p><p><b>Potentially Dangerous Unmanaged APIs</b></p><p /><table><tbody><tr><th>Functions</th><th>Category</th></tr><tr><td>Strcpy</td><td>UF, NTF</td></tr><tr><td>Strcat</td><td>UF, NTF</td></tr><tr><td>Strcat</td><td>NTF</td></tr><tr><td>Strlen</td><td>NTF</td></tr><tr><td>Strncpy</td><td>NNTF</td></tr><tr><td>Strncat</td><td>NTF</td></tr><tr><td>Strcmp</td><td>NTF</td></tr><tr><td>Strcmp</td><td>NTF</td></tr><tr><td>Mbcstows</td><td>NNTF</td></tr><tr><td>_strdup</td><td>NTF</td></tr><tr><td>_strrev</td><td>NTF</td></tr><tr><td>Strstr</td><td>NTF</td></tr><tr><td>Strstr</td><td>NTF</td></tr><tr><td>Sprintf</td><td>FF, NTF</td></tr><tr><td>_snprintf</td><td>FF, NTF</td></tr><tr><td>Printf</td><td>FF, NTF</td></tr><tr><td>Fprintf</td><td>FF, NTF</td></tr><tr><td>Gets</td><td>UF</td></tr><tr><td>Scanf</td><td>FF, NTF</td></tr><tr><td>Fscanf</td><td>FF, NTF</td></tr><tr><td>Sscanf</td><td>FF, NTF, </td></tr><tr><td>Strcspn</td><td>NTF</td></tr><tr><td>MultiByteToWideChar</td><td>NNTF</td></tr><tr><td>WideCharToMultiByte</td><td>NNTF</td></tr><tr><td>GetShortPathNameW</td><td>NTF</td></tr><tr><td>GetLongPathNameW</td><td>NTF</td></tr><tr><td>WinExec</td><td>NTF</td></tr><tr><td>CreateProcessW</td><td>NTF</td></tr><tr><td>GetEnvironmentVariableW</td><td>NTF</td></tr><tr><td>SetEnvironmentVariableW</td><td>NTF</td></tr><tr><td>SetEnvironmentVariableW</td><td>NTF</td></tr><tr><td>ExpandEnvironmentStringsW</td><td>NTF</td></tr><tr><td>SearchPathW</td><td>NTF</td></tr><tr><td>SearchPathW</td><td>NTF</td></tr><tr><td>SearchPathW</td><td>NTF</td></tr><tr><td>Lstrcpy</td><td>UF, NTF</td></tr><tr><td>Wcscpy</td><td>UF, NTF</td></tr><tr><td>_mbscpy</td><td>UF, NTF</td></tr><tr><td>StrCpyA</td><td>UF, NTF</td></tr><tr><td>StrCpyW</td><td>UF, NTF</td></tr><tr><td>lstrcatA</td><td>UF, NTF</td></tr><tr><td>lstrcatW</td><td>UF, NTF</td></tr><tr><td>Wcscat</td><td>UF, NTF</td></tr><tr><td>_mbscat</td><td>UF, NTF</td></tr><tr><td>Wcslen</td><td>NTF</td></tr><tr><td>_mbslen</td><td>NTF</td></tr><tr><td>_mbstrlen</td><td>NTF</td></tr><tr><td>lstrlenA</td><td>NTF</td></tr><tr><td>lstrlenW</td><td>NTF</td></tr><tr><td>Wcsncpy</td><td>NNTF</td></tr><tr><td>_mbsncpy</td><td>NNTF</td></tr><tr><td>StrCpyN</td><td>NNTF</td></tr><tr><td>lstrcpynW</td><td>NTF</td></tr><tr><td>lstrcatnA</td><td>NTF</td></tr><tr><td>lstrcatnW</td><td>NTF</td></tr><tr><td>Wcsncat</td><td>NTF</td></tr><tr><td>_mbsncat</td><td>NTF</td></tr><tr><td>_mbsnbcat</td><td>NTF </td></tr><tr><td>lstrcmpA</td><td>NTF</td></tr><tr><td>lstrcmpW</td><td>NTF</td></tr><tr><td>StrCmp</td><td>NTF</td></tr><tr><td>Wcscmp</td><td>NTF</td></tr><tr><td>_mbscmp</td><td>NTF</td></tr><tr><td>Strcoll</td><td>NTF</td></tr><tr><td>Wcscoll</td><td>NTF</td></tr><tr><td>_mbscoll</td><td>NTF</td></tr><tr><td>_stricmp</td><td>NTF</td></tr><tr><td>lstrcmpiA</td><td>NTF</td></tr><tr><td>lstrcmpiW</td><td>NTF</td></tr><tr><td>_wcsicmp</td><td>NTF</td></tr><tr><td>_mbsicmp</td><td>NTF</td></tr><tr><td>StrCmp</td><td>NTF</td></tr><tr><td>_stricoll</td><td>NTF</td></tr><tr><td>_wcsicoll</td><td>NTF</td></tr><tr><td>_mbsicoll</td><td>NTF</td></tr><tr><td>StrColl</td><td>NTF</td></tr><tr><td>_wcsdup</td><td>NTF</td></tr><tr><td>_mbsdup</td><td>NTF</td></tr><tr><td>StrDup</td><td>NTF</td></tr><tr><td>_wcsrev</td><td>NTF</td></tr><tr><td>_mbsrev</td><td>NTF</td></tr><tr><td>_strlwr</td><td>NTF</td></tr><tr><td>_mbslwr</td><td>NTF</td></tr><tr><td>_wcslwr</td><td>NTF</td></tr><tr><td>_strupr</td><td>NTF</td></tr><tr><td>_mbsupr</td><td>NTF</td></tr><tr><td>_wcsupr</td><td>NTF</td></tr><tr><td>Wcsstr</td><td>NTF</td></tr><tr><td>_mbsstr</td><td>NTF</td></tr><tr><td>Strspn</td><td>NTF</td></tr><tr><td>Wcsspn</td><td>NTF</td></tr><tr><td>_mbsspn</td><td>NTF</td></tr><tr><td>Strpbrk</td><td>NTF</td></tr><tr><td>Wcspbrk</td><td>NTF</td></tr><tr><td>_mbspbrk</td><td>NTF</td></tr><tr><td>Wcsxfrm</td><td>NTF</td></tr><tr><td>Wcscspn</td><td>NTF</td></tr><tr><td>_mbcscpn</td><td>NTF</td></tr><tr><td>Swprintf</td><td>FF</td></tr><tr><td>wsprintfA</td><td>FF</td></tr><tr><td>wsprintfW</td><td>FF</td></tr><tr><td>Vsprintf</td><td>FF</td></tr><tr><td>Vswprintf</td><td>FF</td></tr><tr><td>_snwprintf</td><td>FF</td></tr><tr><td>_vsnprintf</td><td>FF</td></tr><tr><td>_vsnwprintf</td><td>FF</td></tr><tr><td>Vprintf</td><td>FF</td></tr><tr><td>Vwprintf</td><td>FF</td></tr><tr><td>Vfprintf</td><td>FF</td></tr><tr><td>Vwfprintf</td><td>FF</td></tr><tr><td>_getws</td><td>UF</td></tr><tr><td>Fwscanf</td><td>FF</td></tr><tr><td>Wscanf</td><td>FF</td></tr><tr><td>Swscanf</td><td>FF</td></tr><tr><td>OemToCharA</td><td>UF, NTF</td></tr><tr><td>OemToCharW</td><td>UF, NTF</td></tr><tr><td>CharToOemA</td><td>UF, NTF</td></tr><tr><td>CharToOemW</td><td>UF, NTF</td></tr><tr><td>CharUpperA</td><td>NTF</td></tr><tr><td>CharUpperW</td><td>NTF</td></tr><tr><td>CharUpperBuffW</td><td>NTF</td></tr><tr><td>CharLowerA</td><td>NTF</td></tr><tr><td>CharLowerW</td><td>NTF</td></tr><tr><td>CharLowerBuffW</td><td>NTF</td></tr></tbody></table><p /><br /><hr /><p>Adapted from Microsoft patterns & practices guidance.</p>"
}