{
  "id": "1f4a41a3-1598-4a12-a63c-966d0c6ad77c",
  "checksum": "0d8efe930260ce172af1269b01f3c2fd583a1a3d",
  "words": {
    "212": [
      "p",
      "a"
    ],
    "312": [
      "p",
      "a"
    ],
    "description": [
      "h1"
    ],
    "an": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "insufficiently": [
      "p",
      "p",
      "p"
    ],
    "protected": [
      "p",
      "p",
      "p"
    ],
    "credential": [
      "p",
      "p",
      "p"
    ],
    "weakness": [
      "p",
      "p"
    ],
    "occurs": [
      "p"
    ],
    "when": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "application": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p"
    ],
    "doesn't": [
      "p"
    ],
    "store": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "or": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "transmit": [
      "p"
    ],
    "authentication": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "credentials": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em",
      "em"
    ],
    "securely": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "if": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "em"
    ],
    "passwords": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a"
    ],
    "are": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "em"
    ],
    "not": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "hashed": [
      "ul",
      "li"
    ],
    "and": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "salted": [
      "ul",
      "li"
    ],
    "attacker": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "may": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "be": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "able": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "to": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "recover": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "stored": [
      "ul",
      "li",
      "ul",
      "li",
      "a"
    ],
    "after": [
      "ul",
      "li",
      "p"
    ],
    "compromising": [
      "ul",
      "li",
      "p"
    ],
    "hashes": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "encrypted": [
      "ul",
      "li",
      "p"
    ],
    "during": [
      "ul",
      "li"
    ],
    "transmission": [
      "ul",
      "li"
    ],
    "intercept": [
      "ul",
      "li"
    ],
    "via": [
      "ul",
      "li"
    ],
    "a": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "man-in-the-middle": [
      "ul",
      "li"
    ],
    "attack": [
      "ul",
      "li"
    ],
    "hard-coded": [
      "ul",
      "li"
    ],
    "then": [
      "ul",
      "li"
    ],
    "will": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "them": [
      "ul",
      "li"
    ],
    "by": [
      "ul",
      "li",
      "p"
    ],
    "reverse": [
      "ul",
      "li"
    ],
    "engineering": [
      "ul",
      "li"
    ],
    "code": [
      "ul",
      "ul",
      "li",
      "li",
      "h2",
      "p",
      "a",
      "h2",
      "p",
      "p",
      "a"
    ],
    "has": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "get": [
      "ul",
      "li"
    ],
    "copy": [
      "ul",
      "li"
    ],
    "of": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "for": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "that": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "possible": [
      "ul",
      "li"
    ],
    "but": [
      "ul",
      "li"
    ],
    "is": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "usually": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "minor": [
      "ul",
      "li"
    ],
    "obstacle": [
      "ul",
      "li"
    ],
    "does": [
      "ul",
      "li"
    ],
    "provide": [
      "ul",
      "li",
      "p"
    ],
    "sufficient": [
      "ul",
      "li"
    ],
    "protection": [
      "ul",
      "li",
      "p"
    ],
    "password": [
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "blank": [
      "ul",
      "li"
    ],
    "null": [
      "ul",
      "li"
    ],
    "purpose": [
      "ul",
      "li"
    ],
    "largely": [
      "ul",
      "li"
    ],
    "defeated": [
      "ul",
      "li"
    ],
    "as": [
      "ul",
      "li"
    ],
    "can": [
      "ul",
      "li",
      "p"
    ],
    "login": [
      "ul",
      "li",
      "p",
      "p",
      "em",
      "em"
    ],
    "without": [
      "ul",
      "li"
    ],
    "supplying": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "li"
    ],
    "all": [
      "ul",
      "li",
      "p"
    ],
    "applications": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "potentially": [
      "p"
    ],
    "affected": [
      "p"
    ],
    "vulnerabilities": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "impact": [
      "h1"
    ],
    "vulnerability": [
      "p",
      "p",
      "p",
      "p"
    ],
    "makes": [
      "p"
    ],
    "it": [
      "p",
      "p",
      "p"
    ],
    "easier": [
      "p"
    ],
    "gain": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "p",
      "em"
    ],
    "some": [
      "p"
    ],
    "other": [
      "p",
      "p",
      "p"
    ],
    "present": [
      "p"
    ],
    "once": [
      "p"
    ],
    "he": [
      "p"
    ],
    "impersonate": [
      "p",
      "p"
    ],
    "user": [
      "p",
      "p",
      "p"
    ],
    "whose": [
      "p"
    ],
    "have": [
      "p"
    ],
    "been": [
      "p"
    ],
    "compromised": [
      "p"
    ],
    "malicious": [
      "p"
    ],
    "hackers": [
      "p"
    ],
    "target": [
      "p"
    ],
    "privileged": [
      "p"
    ],
    "accounts": [
      "p"
    ],
    "take": [
      "p",
      "p"
    ],
    "over": [
      "p",
      "p",
      "p",
      "p"
    ],
    "taking": [
      "p"
    ],
    "leverage": [
      "p"
    ],
    "platform": [
      "p"
    ],
    "pivot": [
      "p"
    ],
    "attacks": [
      "p"
    ],
    "also": [
      "p",
      "p"
    ],
    "gives": [
      "p"
    ],
    "data": [
      "p"
    ],
    "thus": [
      "p"
    ],
    "enabling": [
      "p"
    ],
    "him": [
      "p"
    ],
    "countermeasures": [
      "h1"
    ],
    "prevent": [
      "p",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "type": [
      "p",
      "p",
      "p"
    ],
    "pbkdf2": [
      "p",
      "p"
    ],
    "secure": [
      "p",
      "p",
      "h2",
      "p",
      "a",
      "h2",
      "p",
      "p",
      "a"
    ],
    "send": [
      "p"
    ],
    "tunnels": [
      "p"
    ],
    "check": [
      "h1",
      "p"
    ],
    "adequate": [
      "p"
    ],
    "against": [
      "p"
    ],
    "verify": [
      "p"
    ],
    "used": [
      "p"
    ],
    "never": [
      "p"
    ],
    "sent": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "plain-text": [
      "p"
    ],
    "computer": [
      "h1",
      "p"
    ],
    "based": [
      "h1",
      "p"
    ],
    "training": [
      "h1",
      "p"
    ],
    "links": [
      "h1"
    ],
    "following": [
      "p"
    ],
    "courses": [
      "p"
    ],
    "more": [
      "p"
    ],
    "background": [
      "p"
    ],
    "information": [
      "p",
      "p"
    ],
    "about": [
      "p"
    ],
    "creating": [
      "h2",
      "p",
      "a",
      "h2",
      "p",
      "a"
    ],
    "â€“": [
      "h2",
      "p",
      "a"
    ],
    "c/c++": [
      "h2",
      "p",
      "a",
      "h2",
      "p",
      "a"
    ],
    "foundations": [
      "h2",
      "p",
      "a"
    ],
    "course": [
      "p",
      "p",
      "p",
      "em"
    ],
    "overview": [
      "p"
    ],
    "threat": [
      "p",
      "p"
    ],
    "modeling": [
      "p"
    ],
    "process": [
      "p"
    ],
    "describe": [
      "p"
    ],
    "ways": [
      "p"
    ],
    "collect": [
      "p"
    ],
    "your": [
      "p",
      "p"
    ],
    "build": [
      "p"
    ],
    "activity-matrix": [
      "p"
    ],
    "profile": [
      "p"
    ],
    "analyze": [
      "p"
    ],
    "risks": [
      "p"
    ],
    "teach": [
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "nine": [
      "p"
    ],
    "defensive": [
      "p"
    ],
    "coding": [
      "p",
      "p"
    ],
    "principles": [
      "p",
      "p"
    ],
    "how": [
      "p"
    ],
    "these": [
      "p"
    ],
    "common": [
      "p",
      "p",
      "p"
    ],
    "security": [
      "p",
      "p",
      "p"
    ],
    "cod": [
      "p",
      "a",
      "p",
      "a"
    ],
    "learn": [
      "p",
      "p"
    ],
    "detect": [
      "p",
      "p"
    ],
    "errors": [
      "p"
    ],
    "lead": [
      "p"
    ],
    "effectively": [
      "p"
    ],
    "remediate": [
      "p"
    ],
    "most": [
      "p"
    ],
    "right": [
      "p"
    ],
    "tools": [
      "p"
    ],
    "early": [
      "p"
    ],
    "project": [
      "p"
    ],
    "lifestyle": [
      "p"
    ],
    "valid": [
      "p",
      "em"
    ],
    "enrollment": [
      "p",
      "em"
    ],
    "itself": [
      "p",
      "em"
    ],
    "required": [
      "p",
      "em"
    ],
    "team": [
      "p",
      "em"
    ],
    "professor": [
      "p",
      "em"
    ],
    "content": [
      "p",
      "em"
    ],
    "need": [
      "p",
      "em"
    ],
    "please": [
      "p",
      "em"
    ],
    "contact": [
      "p",
      "em"
    ],
    "support@securityinnovationcom": [
      "p",
      "em"
    ],
    "help": [
      "p",
      "em"
    ],
    "management": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Description",
      "Impact",
      "Countermeasures",
      "Application Check",
      "Computer Based Training Links"
    ],
    "p": [
      "An insufficiently protected credential weakness occurs when the application doesn't store or transmit the authentication credentials securely.",
      "All applications that use authentication are potentially affected by insufficiently protected credential weakness vulnerabilities.",
      "An insufficiently protected credential vulnerability makes it easier for an attacker to gain access to the authentication credentials. Usually, some other vulnerability has to be present for the attacker to recover the credentials. Once the attacker has the credentials, he can impersonate the user whose credentials have been compromised.",
      "Malicious hackers usually target privileged accounts to take over the application. After taking over the application, an attacker may leverage other vulnerabilities to take over the application platform and use it to pivot for other attacks. Compromising the application also gives the attacker access to user data, thus enabling him to impersonate the user.",
      "To prevent this vulnerability type, use PBKDF2 to secure passwords, and send authentication credentials over encrypted tunnels.",
      "To check for adequate protection against this vulnerability type, verify that PBKDF2 is used to secure passwords, and authentication credentials are never sent in plain-text.",
      "Use the following Computer Based Training courses for more background information about this type of vulnerabilities.",
      "This course will provide an overview of the threat modeling process and describe the ways to collect information for your application, build the activity-matrix and threat profile, and analyze risks.  It will also teach you the nine defensive coding principles and how to use these principles to prevent common security vulnerabilities.",
      "COD 212 Creating Secure Code â€“ C/C++ Foundations",
      "In this course, you will learn to detect common coding errors that lead to vulnerabilities. You will learn to effectively remediate the most common security vulnerabilities, and use the right tools to secure your code and detect security vulnerabilities early in the project lifestyle.",
      "COD 312 Creating Secure C/C++ Code",
      "Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help."
    ],
    "ul": [
      "If the passwords are not hashed and salted, an attacker may be able to recover stored passwords after compromising the application. \nIf the passwords or hashes are not encrypted during transmission, an attacker may be able to intercept passwords or hashes via a man-in-the-middle attack. \nIf passwords are hard-coded, then the attacker will be able to recover them by reverse engineering application code. The attacker has to get the copy of the code for that to be possible, but that is usually a minor obstacle and does not provide sufficient protection. \nIf the password is blank or null, the purpose of authentication is largely defeated, as the attacker can login without supplying a password at all.",
      "Store Passwords Securely",
      "Passwords Are Stored Securely"
    ],
    "li": [
      "If the passwords are not hashed and salted, an attacker may be able to recover stored passwords after compromising the application.",
      "If the passwords or hashes are not encrypted during transmission, an attacker may be able to intercept passwords or hashes via a man-in-the-middle attack.",
      "If passwords are hard-coded, then the attacker will be able to recover them by reverse engineering application code. The attacker has to get the copy of the code for that to be possible, but that is usually a minor obstacle and does not provide sufficient protection.",
      "If the password is blank or null, the purpose of authentication is largely defeated, as the attacker can login without supplying a password at all.",
      "Store Passwords Securely",
      "Passwords Are Stored Securely"
    ],
    "a": [
      "Store Passwords Securely",
      "Passwords Are Stored Securely",
      "COD 212 Creating Secure Code â€“ C/C++ Foundations",
      "COD 312 Creating Secure C/C++ Code"
    ],
    "h2": [
      "Creating Secure Code â€“ C/C++ Foundations",
      "Creating Secure C/C++ Code"
    ],
    "em": [
      "Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help."
    ]
  },
  "links": [
    {
      "href": "db8663bc-c0ee-4fba-8eb3-95f777c97a00",
      "text": "Store Passwords Securely"
    },
    {
      "href": "c936d4cc-5b20-4da0-a8eb-eb2153f9353e",
      "text": "Passwords Are Stored Securely"
    },
    {
      "href": "https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127613",
      "text": "COD 212 Creating Secure Code â€“ C/C++ Foundations"
    },
    {
      "href": "https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127609",
      "text": "COD 312 Creating Secure C/C++ Code"
    }
  ],
  "html": "<h1>Description</h1><p>An insufficiently protected credential weakness occurs when the application doesn't store or transmit the authentication credentials securely. </p><ul>\n<li>If the passwords are not hashed and salted, an attacker may be able to recover stored passwords after compromising the application. </li>\n<li>If the passwords or hashes are not encrypted during transmission, an attacker may be able to intercept passwords or hashes via a man-in-the-middle attack. </li>\n<li>If passwords are hard-coded, then the attacker will be able to recover them by reverse engineering application code. The attacker has to get the copy of the code for that to be possible, but that is usually a minor obstacle and does not provide sufficient protection. </li>\n<li>If the password is blank or null, the purpose of authentication is largely defeated, as the attacker can login without supplying a password at all. </li>\n</ul><p>\nAll applications that use authentication are potentially affected by insufficiently protected credential weakness vulnerabilities. \n</p><h1>Impact</h1><p>An insufficiently protected credential vulnerability makes it easier for an attacker to gain access to the authentication credentials. Usually, some other vulnerability has to be present for the attacker to recover the credentials. Once the attacker has the credentials, he can impersonate the user whose credentials have been compromised. \n</p><p>\nMalicious hackers usually target privileged accounts to take over the application. After taking over the application, an attacker may leverage other vulnerabilities to take over the application platform and use it to pivot for other attacks. Compromising the application also gives the attacker access to user data, thus enabling him to impersonate the user. \n</p><h1>Countermeasures</h1><p>To prevent this vulnerability type, use PBKDF2 to secure passwords, and send authentication credentials over encrypted tunnels. \n</p><ul>\n<li> <a href=\"db8663bc-c0ee-4fba-8eb3-95f777c97a00\">Store Passwords Securely</a></li>\n</ul><h1>Application Check</h1><p>To check for adequate protection against this vulnerability type, verify that PBKDF2 is used to secure passwords, and authentication credentials are never sent in plain-text. \n</p><ul>\n<li> <a href=\"c936d4cc-5b20-4da0-a8eb-eb2153f9353e\">Passwords Are Stored Securely</a></li>\n</ul><h1>Computer Based Training Links</h1><p>Use the following Computer Based Training courses for more background information about this type of vulnerabilities.\n</p><h2>Creating Secure Code â€“ C/C++ Foundations</h2><p>This course will provide an overview of the threat modeling process and describe the ways to collect information for your application, build the activity-matrix and threat profile, and analyze risks.  It will also teach you the nine defensive coding principles and how to use these principles to prevent common security vulnerabilities.\n</p><p>\n<a href=\"https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127613\">COD 212 Creating Secure Code â€“ C/C++ Foundations</a>\n</p><h2>Creating Secure C/C++ Code</h2><p>In this course, you will learn to detect common coding errors that lead to vulnerabilities. You will learn to effectively remediate the most common security vulnerabilities, and use the right tools to secure your code and detect security vulnerabilities early in the project lifestyle.\n</p><p>\n<a href=\"https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127609\">COD 312 Creating Secure C/C++ Code</a>\n</p><p>\n<em>Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.</em></p>"
}