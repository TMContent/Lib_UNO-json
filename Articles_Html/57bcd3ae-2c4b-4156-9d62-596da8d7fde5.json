{
  "id": "57bcd3ae-2c4b-4156-9d62-596da8d7fde5",
  "checksum": "dacfbe8b5c63cab2c90aadbbe00bb6088c185e29",
  "words": {
    "35": [
      "ul",
      "li"
    ],
    "2008": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "title"
    ],
    "microsoftÂ®": [
      "ul",
      "li"
    ],
    "windows": [
      "ul",
      "li"
    ],
    "communication": [
      "ul",
      "li"
    ],
    "foundation": [
      "ul",
      "li"
    ],
    "wcf)": [
      "ul",
      "li"
    ],
    "microsoft": [
      "ul",
      "li",
      "p"
    ],
    "visual": [
      "ul",
      "li"
    ],
    "studioÂ®": [
      "ul",
      "li"
    ],
    "description": [
      "h1"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "steps": [
      "p"
    ],
    "validate": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "title"
    ],
    "parameters": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "title"
    ],
    "with": [
      "p",
      "ol",
      "li",
      "title"
    ],
    "parameter": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "title"
    ],
    "inspectors": [
      "p",
      "title"
    ],
    "create": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li"
    ],
    "a": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "class": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "that": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "implements": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "validation": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "logic": [
      "ol",
      "li",
      "li"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "has": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li"
    ],
    "derive": [
      "ol",
      "li"
    ],
    "from": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "iparameterinspector": [
      "ol",
      "li",
      "strong"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li"
    ],
    "you": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "will": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "have": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li"
    ],
    "characteristics\nit": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "aftercall)": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "strong",
      "strong"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "beforecall)": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "strong",
      "strong"
    ],
    "methods": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "those": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "logic\nwhen": [
      "ol",
      "li",
      "ul"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "as": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "part": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "of": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "service": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li"
    ],
    "invoked": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "before": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "are": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "dispatched": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "operation": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "after": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "processed": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "call": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li"
    ],
    "returning": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "response": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "client": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "your": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "input": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "output": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "parameters\nwhen": [
      "ol",
      "li",
      "ul"
    ],
    "calling": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "serviceâs": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "code": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "return": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "servicecreate": [
      "ol"
    ],
    "custom": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "endpoint": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "behavior": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "derives": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "iendpointbehavior": [
      "ol",
      "li"
    ],
    "/": [
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "configuration": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "extensibility": [
      "ol",
      "li"
    ],
    "point": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "for": [
      "ol",
      "li",
      "ul",
      "li",
      "li"
    ],
    "characteristicsit": [
      "ol",
      "li"
    ],
    "applyclientbehavior)": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "add": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "paramaterinspector": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "enable": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "client-side": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "it": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "applydispatchbehavior)": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "toadd": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "parameterinspector": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "strong",
      "li"
    ],
    "dispatch": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "service-side": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "verifies": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "enabled": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "adding": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "run": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "timecreate": [
      "ol"
    ],
    "element": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "behaviorextensionelement": [
      "ol",
      "li",
      "strong"
    ],
    "allows": [
      "ol",
      "li"
    ],
    "expose": [
      "ol",
      "li"
    ],
    "wcf": [
      "ol",
      "li"
    ],
    "extension": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "can": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "by": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "an": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li"
    ],
    "e": [
      "ol",
      "li"
    ],
    "createbehavior)": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "instance": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "validationbehavior": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "behaviortype)": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "type": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li"
    ],
    "allow": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "exposed": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "sectionsadd": [
      "ol"
    ],
    "file": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "items": [
      "ol",
      "li"
    ],
    "so": [
      "ol",
      "li"
    ],
    "tool": [
      "ol",
      "li"
    ],
    "browsing": [
      "ol",
      "li"
    ],
    "assembly": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "selecting": [
      "ol",
      "li"
    ],
    "type\ncreate": [
      "ol"
    ],
    "map": [
      "ol",
      "li"
    ],
    "extensible": [
      "ol",
      "li"
    ],
    "provided": [
      "ol",
      "li"
    ],
    "implementing": [
      "ol",
      "li"
    ],
    "inspectorconfigure": [
      "ol"
    ],
    "configure": [
      "ol",
      "li",
      "li"
    ],
    "using": [
      "ol",
      "li"
    ],
    "inspector": [
      "ol",
      "li",
      "li"
    ],
    "when": [
      "li",
      "li"
    ],
    "time": [
      "li",
      "ul",
      "li"
    ],
    "sections": [
      "li",
      "ul",
      "li"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "more": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "âhow": [
      "ul",
      "li"
    ],
    "inspect": [
      "ul",
      "li"
    ],
    "modify": [
      "ul",
      "li"
    ],
    "parametersâ": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "http//msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overviewfor": [
      "ul"
    ],
    "âmessage": [
      "ul",
      "li"
    ],
    "inspectorsâ": [
      "ul",
      "li"
    ],
    "http//msdn.microsoft.com/en-us/library/aa717047.aspx": [
      "ul",
      "li",
      "a"
    ],
    "http//msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overview": [
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "how": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Description",
      "Additional Resources"
    ],
    "ul": [
      "MicrosoftÂ® Windows Communication Foundation (WCF) 3.5 \nMicrosoft Visual StudioÂ® 2008",
      "It implements AfterCall() and BeforeCall() methods. Those methods will have the validation logic.\nWhen used as part of the service, BeforeCall() will be invoked before the parameters are dispatched to the service operation. AfterCall() will be invoked after the service has processed the call and is returning a the response to the client. Use BeforeCall() to validate your input parameters and AfterCall() to validate your output parameters.\nWhen used as part of the client, BeforeCall() will be invoked before calling the service, and AfterCall() before the serviceâs response is dispatched to the client code. Use AfterCall() to validate the response from the service, and BeforeCall() to validate the return from the service",
      "It implements ApplyClientBehavior() to add the ParamaterInspector to the client operation and enable client-side validation. \nIt implements ApplyDispatchBehavior() toadd the ParameterInspector to the dispatch operation and enable service-side validation. \nIt verifies that it is enabled in the configuration before adding the ParameterInspector to the client or dispatch run time.",
      "It implements CreateBehavior() to create an instance of the ValidationBehavior class. \nIt implements BehaviorType() to return the ValidationBehavior type. This will allow the custom behavior to be exposed in the service or client configuration sections.",
      "For more information see âHow to: Inspect or Modify Parametersâ at http://msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overviewFor more information see âMessage Inspectorsâ at http://msdn.microsoft.com/en-us/library/aa717047.aspx"
    ],
    "li": [
      "MicrosoftÂ® Windows Communication Foundation (WCF) 3.5",
      "Microsoft Visual StudioÂ® 2008",
      "Create a Class That Implements the Validation Logic. This class has to derive from IParameterInspector. In the class you will have the following characteristics:\nIt implements AfterCall() and BeforeCall() methods. Those methods will have the validation logic.\nWhen used as part of the service, BeforeCall() will be invoked before the parameters are dispatched to the service operation. AfterCall() will be invoked after the service has processed the call and is returning a the response to the client. Use BeforeCall() to validate your input parameters and AfterCall() to validate your output parameters.\nWhen used as part of the client, BeforeCall() will be invoked before calling the service, and AfterCall() before the serviceâs response is dispatched to the client code. Use AfterCall() to validate the response from the service, and BeforeCall() to validate the return from the service",
      "It implements AfterCall() and BeforeCall() methods. Those methods will have the validation logic.",
      "When used as part of the service, BeforeCall() will be invoked before the parameters are dispatched to the service operation. AfterCall() will be invoked after the service has processed the call and is returning a the response to the client. Use BeforeCall() to validate your input parameters and AfterCall() to validate your output parameters.",
      "When used as part of the client, BeforeCall() will be invoked before calling the service, and AfterCall() before the serviceâs response is dispatched to the client code. Use AfterCall() to validate the response from the service, and BeforeCall() to validate the return from the service",
      "Create a Class That Implements a Custom Endpoint Behavior. This class derives from IEndpointBehavior that the service and / or client endpoint will use as a configuration extensibility point for the endpoint. This class has the following characteristics\nIt implements ApplyClientBehavior() to add the ParamaterInspector to the client operation and enable client-side validation. \nIt implements ApplyDispatchBehavior() toadd the ParameterInspector to the dispatch operation and enable service-side validation. \nIt verifies that it is enabled in the configuration before adding the ParameterInspector to the client or dispatch run time.",
      "It implements ApplyClientBehavior() to add the ParamaterInspector to the client operation and enable client-side validation.",
      "It implements ApplyDispatchBehavior() toadd the ParameterInspector to the dispatch operation and enable service-side validation.",
      "It verifies that it is enabled in the configuration before adding the ParameterInspector to the client or dispatch run time.",
      "Create a Class That Implements a Custom Configuration Element. This class derives from BehaviorExtensionElement, This class allows to expose the endpoint configuration in WCF as a behavior element extension, that can be used by the service as an endpoint behavior configuration. This class has theÂ  e following characteristics:\nIt implements CreateBehavior() to create an instance of the ValidationBehavior class. \nIt implements BehaviorType() to return the ValidationBehavior type. This will allow the custom behavior to be exposed in the service or client configuration sections.",
      "It implements CreateBehavior() to create an instance of the ValidationBehavior class.",
      "It implements BehaviorType() to return the ValidationBehavior type. This will allow the custom behavior to be exposed in the service or client configuration sections.",
      "Add the Custom Behavior to the Configuration File . You will add the custom behavior element to the behavior element extension items, so it can be used by the endpoint behavior. You add it in the configuration file with the configuration tool, by browsing to the assembly, and selecting the type that is your custom behavior type.",
      "Create an Endpoint Behavior and Map It to Use the Custom Behavior. You will create a endpoint behavior to use the custom behavior extensible point provided by your assembly implementing the parameter inspector",
      "Configure the Service Endpoint to Use the Endpoint Behavior. You will configure the endpoint to use the endpoint behavior that is using the parameter inspector.",
      "For more information see âHow to: Inspect or Modify Parametersâ at http://msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overview",
      "For more information see âMessage Inspectorsâ at http://msdn.microsoft.com/en-us/library/aa717047.aspx"
    ],
    "p": [
      "Use the following steps to validate parameters with parameter inspectors:",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Create a Class That Implements the Validation Logic. This class has to derive from IParameterInspector. In the class you will have the following characteristics:\nIt implements AfterCall() and BeforeCall() methods. Those methods will have the validation logic.\nWhen used as part of the service, BeforeCall() will be invoked before the parameters are dispatched to the service operation. AfterCall() will be invoked after the service has processed the call and is returning a the response to the client. Use BeforeCall() to validate your input parameters and AfterCall() to validate your output parameters.\nWhen used as part of the client, BeforeCall() will be invoked before calling the service, and AfterCall() before the serviceâs response is dispatched to the client code. Use AfterCall() to validate the response from the service, and BeforeCall() to validate the return from the serviceCreate a Class That Implements a Custom Endpoint Behavior. This class derives from IEndpointBehavior that the service and / or client endpoint will use as a configuration extensibility point for the endpoint. This class has the following characteristics\nIt implements ApplyClientBehavior() to add the ParamaterInspector to the client operation and enable client-side validation. \nIt implements ApplyDispatchBehavior() toadd the ParameterInspector to the dispatch operation and enable service-side validation. \nIt verifies that it is enabled in the configuration before adding the ParameterInspector to the client or dispatch run time.Create a Class That Implements a Custom Configuration Element. This class derives from BehaviorExtensionElement, This class allows to expose the endpoint configuration in WCF as a behavior element extension, that can be used by the service as an endpoint behavior configuration. This class has theÂ  e following characteristics:\nIt implements CreateBehavior() to create an instance of the ValidationBehavior class. \nIt implements BehaviorType() to return the ValidationBehavior type. This will allow the custom behavior to be exposed in the service or client configuration sections.Add the Custom Behavior to the Configuration File . You will add the custom behavior element to the behavior element extension items, so it can be used by the endpoint behavior. You add it in the configuration file with the configuration tool, by browsing to the assembly, and selecting the type that is your custom behavior type.\nCreate an Endpoint Behavior and Map It to Use the Custom Behavior. You will create a endpoint behavior to use the custom behavior extensible point provided by your assembly implementing the parameter inspector\nConfigure the Service Endpoint to Use the Endpoint Behavior. You will configure the endpoint to use the endpoint behavior that is using the parameter inspector."
    ],
    "strong": [
      "IParameterInspector",
      "AfterCall()",
      "BeforeCall()",
      "BeforeCall()",
      "AfterCall()",
      "BeforeCall()",
      "AfterCall()",
      "BeforeCall()",
      "AfterCall()",
      "AfterCall()",
      "BeforeCall()",
      "ApplyClientBehavior()",
      "ParamaterInspector",
      "ApplyDispatchBehavior()",
      "ParameterInspector",
      "BehaviorExtensionElement",
      "CreateBehavior()",
      "ValidationBehavior",
      "BehaviorType()",
      "ValidationBehavior"
    ],
    "a": [
      "http://msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overview",
      "http://msdn.microsoft.com/en-us/library/aa717047.aspx"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overview",
      "text": "http://msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overview"
    },
    {
      "href": "http://msdn.microsoft.com/en-us/library/aa717047.aspx",
      "text": "http://msdn.microsoft.com/en-us/library/aa717047.aspx"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>MicrosoftÂ® Windows Communication Foundation (WCF) 3.5 \n<li>Microsoft Visual StudioÂ® 2008</li></li>\n  </ul>\n  <h1>Description</h1>\n  <p>Use the following steps to validate parameters with parameter inspectors:</p>\n  <ol>\n    <li>Create a Class That Implements the Validation Logic. This class has to derive from <strong>IParameterInspector</strong>. In the class you will have the following characteristics:\n<ul><li>It implements <strong>AfterCall()</strong> and <strong>BeforeCall()</strong> methods. Those methods will have the validation logic.\n<li>When used as part of the service, <strong>BeforeCall()</strong> will be invoked before the parameters are dispatched to the service operation. <strong>AfterCall()</strong> will be invoked after the service has processed the call and is returning a the response to the client. Use <strong>BeforeCall()</strong> to validate your input parameters and <strong>AfterCall()</strong> to validate your output parameters.\n<li>When used as part of the client, <strong>BeforeCall()</strong> will be invoked before calling the service, and <strong>AfterCall()</strong> before the serviceâs response is dispatched to the client code. Use <strong>AfterCall()</strong> to validate the response from the service, and <strong>BeforeCall()</strong> to validate the return from the service</li></li></li></ul><li>Create a Class That Implements a Custom Endpoint Behavior. This class derives from IEndpointBehavior that the service and / or client endpoint will use as a configuration extensibility point for the endpoint. This class has the following characteristics\n<ul><li>It implements <strong>ApplyClientBehavior()</strong> to add the <strong>ParamaterInspector</strong> to the client operation and enable client-side validation. \n<li>It implements <strong>ApplyDispatchBehavior()</strong> toadd the <strong>ParameterInspector</strong> to the dispatch operation and enable service-side validation. \n<li>It verifies that it is enabled in the configuration before adding the ParameterInspector to the client or dispatch run time.</li></li></li></ul><li>Create a Class That Implements a Custom Configuration Element. This class derives from <strong>BehaviorExtensionElement</strong>, This class allows to expose the endpoint configuration in WCF as a behavior element extension, that can be used by the service as an endpoint behavior configuration. This class has the&nbsp; e following characteristics:\n<ul><li>It implements <strong>CreateBehavior()</strong> to create an instance of the <strong>ValidationBehavior</strong> class. \n<li>It implements <strong>BehaviorType()</strong> to return the <strong>ValidationBehavior</strong> type. This will allow the custom behavior to be exposed in the service or client configuration sections.</li></li></ul><li>Add the Custom Behavior to the Configuration File . You will add the custom behavior element to the behavior element extension items, so it can be used by the endpoint behavior. You add it in the configuration file with the configuration tool, by browsing to the assembly, and selecting the type that is your custom behavior type.\n<li>Create an Endpoint Behavior and Map It to Use the Custom Behavior. You will create a endpoint behavior to use the custom behavior extensible point provided by your assembly implementing the parameter inspector\n<li>Configure the Service Endpoint to Use the Endpoint Behavior. You will configure the endpoint to use the endpoint behavior that is using the parameter inspector.</li></li></li></li></li></li>\n  </ol>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information see âHow to: Inspect or Modify Parametersâ at <a href=\"http://msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overview\">http://msdn.microsoft.com/en-us/library/ms733747.aspx?wt.svl=overview</a><li>For more information see âMessage Inspectorsâ at <a href=\"http://msdn.microsoft.com/en-us/library/aa717047.aspx\">http://msdn.microsoft.com/en-us/library/aa717047.aspx</a></li></li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}