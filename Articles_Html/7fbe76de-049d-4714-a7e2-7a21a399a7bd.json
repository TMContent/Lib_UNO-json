{
  "id": "7fbe76de-049d-4714-a7e2-7a21a399a7bd",
  "checksum": "98305699c97d5d5ec86ac58747f48c980b6c5b6c",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h1"
    ],
    "use": [
      "p",
      "p",
      "p",
      "title"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "authorization": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "when": [
      "p",
      "h1",
      "p"
    ],
    "using": [
      "p",
      "p",
      "p"
    ],
    "windows": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "authentication": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "with": [
      "p",
      "p",
      "title"
    ],
    "allows": [
      "p"
    ],
    "you": [
      "p",
      "p"
    ],
    "leverage": [
      "p"
    ],
    "groups": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p"
    ],
    "roles": [
      "p"
    ],
    "defined": [
      "p"
    ],
    "in": [
      "p",
      "p"
    ],
    "your": [
      "p",
      "p",
      "p"
    ],
    "company's": [
      "p"
    ],
    "active": [
      "p"
    ],
    "directory": [
      "p"
    ],
    "control": [
      "p",
      "p"
    ],
    "per-file": [
      "p"
    ],
    "inside": [
      "p"
    ],
    "application": [
      "p"
    ],
    "while": [
      "p"
    ],
    "not": [
      "p",
      "p"
    ],
    "necessarily": [
      "p"
    ],
    "sufficient": [
      "p"
    ],
    "for": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "all": [
      "p",
      "p"
    ],
    "of": [
      "p",
      "p"
    ],
    "needs": [
      "p"
    ],
    "it": [
      "p",
      "p"
    ],
    "can": [
      "p"
    ],
    "be": [
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p"
    ],
    "very": [
      "p"
    ],
    "powerful": [
      "p"
    ],
    "tool": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "which": [
      "p",
      "p"
    ],
    "should": [
      "p"
    ],
    "as": [
      "p"
    ],
    "part": [
      "p"
    ],
    "their": [
      "p"
    ],
    "toolkit": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "works": [
      "p"
    ],
    "automatically": [
      "p"
    ],
    "there": [
      "p"
    ],
    "is": [
      "p",
      "p"
    ],
    "no": [
      "p"
    ],
    "need": [
      "p"
    ],
    "impersonate": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "original": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p"
    ],
    "fileauthorizationmodule": [
      "p",
      "p",
      "p",
      "b",
      "b",
      "b"
    ],
    "only": [
      "p"
    ],
    "performs": [
      "p",
      "p"
    ],
    "access": [
      "p",
      "p",
      "p"
    ],
    "checks": [
      "p",
      "p"
    ],
    "against": [
      "p"
    ],
    "requested": [
      "p"
    ],
    "example": [
      "p"
    ],
    "if": [
      "p"
    ],
    "request": [
      "p"
    ],
    "defaultaspx": [
      "p",
      "p"
    ],
    "contains": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p"
    ],
    "embedded": [
      "p"
    ],
    "usercontrol.ascx),": [
      "p"
    ],
    "turn": [
      "p"
    ],
    "includes": [
      "p"
    ],
    "image": [
      "p"
    ],
    "tag": [
      "p"
    ],
    "pointing": [
      "p"
    ],
    "imagegif),": [
      "p"
    ],
    "check": [
      "p",
      "p"
    ],
    "usercontrolascx,": [
      "p"
    ],
    "because": [
      "p",
      "p",
      "p"
    ],
    "these": [
      "p"
    ],
    "types": [
      "p"
    ],
    "are": [
      "p",
      "p"
    ],
    "mapped": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "p"
    ],
    "iis": [
      "p",
      "p",
      "p"
    ],
    "aspnet": [
      "p"
    ],
    "isapi": [
      "p"
    ],
    "extension": [
      "p"
    ],
    "does": [
      "p"
    ],
    "perform": [
      "p"
    ],
    "imagegif,": [
      "p"
    ],
    "this": [
      "p"
    ],
    "static": [
      "p",
      "p"
    ],
    "handled": [
      "p"
    ],
    "internally": [
      "p"
    ],
    "however": [
      "p"
    ],
    "files": [
      "p"
    ],
    "performed": [
      "p"
    ],
    "authenticated": [
      "p"
    ],
    "must": [
      "p"
    ],
    "still": [
      "p"
    ],
    "granted": [
      "p"
    ],
    "read": [
      "p"
    ],
    "permission": [
      "p"
    ],
    "appropriately": [
      "p"
    ],
    "configured": [
      "p"
    ],
    "acl": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "from": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How"
    ],
    "p": [
      "Use file authorization when using windows authentication.",
      "Using file authorization with Windows authentication allows you to leverage groups and roles defined in your company's Active Directory to control per-file authorization inside your application.  While not necessarily sufficient for all of your authorization needs, it can be a very powerful tool.",
      "All applications which use Windows authentication should use file authorization as part of their authorization toolkit.",
      "File authorization works automatically when using Windows authentication, and there is no need to impersonate the original user.  The FileAuthorizationModule only performs access checks against the requested file.  For example, if you request Default.aspx and it contains an embedded user control (Usercontrol.ascx), which in turn includes an image tag (pointing to Image.gif), the FileAuthorizationModule performs an access check for Default.aspx and Usercontrol.ascx, because these file types are mapped by IIS to the ASP.NET ISAPI extension.  The FileAuthorizationModule does not perform a check for Image.gif, because this is a static file handled internally by IIS.  However, because access checks for static files are performed by IIS, the authenticated user must still be granted read permission to the file with an appropriately configured ACL.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "b": [
      "FileAuthorizationModule",
      "FileAuthorizationModule",
      "FileAuthorizationModule"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Do</h1>\r\n  <p>Use file authorization when using windows authentication. </p>\r\n  <h1>Why</h1>\r\n  <p>Using file authorization with Windows authentication allows you to leverage groups and roles defined in your company's Active Directory to control per-file authorization inside your application.&nbsp; While not necessarily sufficient for all of your authorization needs, it can be a very powerful tool. </p>\r\n  <h1>When</h1>\r\n  <p>All applications which use Windows authentication should use file authorization as part of their authorization toolkit. </p>\r\n  <h1>How</h1>\r\n  <p>File authorization works automatically when using Windows authentication, and there is no need to impersonate the original user.&nbsp; The <b>FileAuthorizationModule</b> only performs access checks against the requested file.&nbsp; For example, if you request Default.aspx and it contains an embedded user control (Usercontrol.ascx), which in turn includes an image tag (pointing to Image.gif), the <b>FileAuthorizationModule</b> performs an access check for Default.aspx and Usercontrol.ascx, because these file types are mapped by IIS to the ASP.NET ISAPI extension.&nbsp; The <b>FileAuthorizationModule</b> does not perform a check for Image.gif, because this is a static file handled internally by IIS.&nbsp; However, because access checks for static files are performed by IIS, the authenticated user must still be granted read permission to the file with an appropriately configured ACL. </p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}