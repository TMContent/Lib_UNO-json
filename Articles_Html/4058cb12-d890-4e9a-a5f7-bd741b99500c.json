{
  "id": "4058cb12-d890-4e9a-a5f7-bd741b99500c",
  "checksum": "ae575c95c8476726c86171c47938f8cf0399d7c8",
  "words": {
    "2003": [
      "p"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "blockquote"
    ],
    "check": [
      "h1",
      "p"
    ],
    "for": [
      "h1",
      "p",
      "p",
      "p"
    ],
    "ensure": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "your": [
      "p",
      "p",
      "p",
      "blockquote"
    ],
    "application": [
      "p",
      "p"
    ],
    "does": [
      "p",
      "blockquote"
    ],
    "not": [
      "p",
      "blockquote",
      "title"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p"
    ],
    "logonuser": [
      "p",
      "p",
      "b",
      "title"
    ],
    "api": [
      "p",
      "p",
      "title"
    ],
    "creating": [
      "p"
    ],
    "impersonation": [
      "p",
      "p",
      "title"
    ],
    "token": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "how": [
      "h1",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "avoid": [
      "p"
    ],
    "writing": [
      "p"
    ],
    "code": [
      "p",
      "p"
    ],
    "calls": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "blockquote",
      "blockquote"
    ],
    "create": [
      "p",
      "p"
    ],
    "tokens": [
      "p"
    ],
    "because": [
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p"
    ],
    "forces": [
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "blockquote"
    ],
    "store": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "blockquote"
    ],
    "names": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "blockquote"
    ],
    "passwords": [
      "p"
    ],
    "on": [
      "p"
    ],
    "web": [
      "p"
    ],
    "server": [
      "p",
      "p",
      "p"
    ],
    "instead": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "blockquote",
      "blockquote",
      "blockquote",
      "blockquote"
    ],
    "unique": [
      "p",
      "blockquote"
    ],
    "pool": [
      "p"
    ],
    "with": [
      "p"
    ],
    "specific": [
      "p",
      "p"
    ],
    "process": [
      "p"
    ],
    "identity": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "blockquote"
    ],
    "need": [
      "p",
      "p"
    ],
    "access": [
      "p",
      "p",
      "p"
    ],
    "downstream": [
      "p",
      "p"
    ],
    "resources": [
      "p",
      "p"
    ],
    "multiple": [
      "p"
    ],
    "identities": [
      "p"
    ],
    "range": [
      "p"
    ],
    "of": [
      "p"
    ],
    "services": [
      "p"
    ],
    "windows": [
      "p",
      "p",
      "p"
    ],
    "protocol": [
      "p"
    ],
    "transition": [
      "p"
    ],
    "new": [
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "windowsidentity": [
      "p",
      "b",
      "p",
      "pre"
    ],
    "constructor": [
      "p",
      "p"
    ],
    "allows": [
      "p"
    ],
    "is": [
      "p",
      "blockquote",
      "blockquote",
      "blockquote",
      "title"
    ],
    "given": [
      "p",
      "p"
    ],
    "only": [
      "p"
    ],
    "an": [
      "p"
    ],
    "account's": [
      "p",
      "blockquote"
    ],
    "principal": [
      "p"
    ],
    "name": [
      "p",
      "blockquote"
    ],
    "upn).": [
      "p"
    ],
    "network": [
      "p"
    ],
    "resource": [
      "p"
    ],
    "need a": [
      "p"
    ],
    "delegate-level": [
      "p"
    ],
    "get": [
      "p"
    ],
    "type": [
      "p"
    ],
    "needs": [
      "p"
    ],
    "be": [
      "p",
      "blockquote",
      "blockquote"
    ],
    "configured": [
      "p"
    ],
    "as": [
      "p"
    ],
    "trusted": [
      "p"
    ],
    "delegation": [
      "p"
    ],
    "in": [
      "p"
    ],
    "active": [
      "p"
    ],
    "directory": [
      "p"
    ],
    "following": [
      "p"
    ],
    "shows": [
      "p"
    ],
    "obtain": [
      "p"
    ],
    "using": [
      "p",
      "pre",
      "title"
    ],
    "systemusing": [
      "p",
      "pre"
    ],
    "systemsecurity.principal;public": [
      "p",
      "pre"
    ],
    "void": [
      "p",
      "pre"
    ],
    "constructtokenstring": [
      "p",
      "pre"
    ],
    "upn": [
      "p",
      "pre",
      "blockquote",
      "blockquote",
      "blockquote",
      "blockquote"
    ],
    "out": [
      "p",
      "pre"
    ],
    "windowsprincipal": [
      "p",
      "pre"
    ],
    "p{": [
      "p",
      "pre"
    ],
    "id": [
      "p",
      "pre"
    ],
    "=": [
      "p",
      "p",
      "pre",
      "pre"
    ],
    "windowsidentityupn);": [
      "p",
      "pre"
    ],
    "p": [
      "p",
      "pre"
    ],
    "windowsprincipalid);}": [
      "p",
      "pre"
    ],
    "note   an": [
      "blockquote"
    ],
    "guaranteed": [
      "blockquote"
    ],
    "within": [
      "blockquote"
    ],
    "forest": [
      "blockquote"
    ],
    "frequently": [
      "blockquote"
    ],
    "user's": [
      "blockquote"
    ],
    "e-mail": [
      "blockquote"
    ],
    "address": [
      "blockquote"
    ],
    "but": [
      "blockquote"
    ],
    "it": [
      "blockquote",
      "blockquote"
    ],
    "have": [
      "blockquote"
    ],
    "always": [
      "blockquote"
    ],
    "has": [
      "blockquote"
    ],
    "by": [
      "blockquote",
      "blockquote",
      "title"
    ],
    "default": [
      "blockquote"
    ],
    "userlogonname@fullyqualifieddomainname": [
      "blockquote"
    ],
    "are": [
      "blockquote"
    ],
    "logged": [
      "blockquote"
    ],
    "into": [
      "blockquote"
    ],
    "domain": [
      "blockquote"
    ],
    "can": [
      "blockquote"
    ],
    "find": [
      "blockquote"
    ],
    "running": [
      "blockquote"
    ],
    "whoami": [
      "blockquote",
      "b"
    ],
    "/upn": [
      "blockquote",
      "b"
    ],
    "from": [
      "blockquote",
      "p"
    ],
    "command": [
      "blockquote"
    ],
    "window": [
      "blockquote"
    ],
    "note": [
      "b"
    ],
    "userlogonname": [
      "i"
    ],
    "fullyqualifieddomainname": [
      "i"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "created": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "How to Fix"
    ],
    "p": [
      "Check to ensure that your application does not use LogonUser API for creating impersonation token.",
      "Avoid writing code that calls the LogonUser API to create impersonation tokens because this forces you to store user names and passwords on your Web server.",
      "Instead, use a unique application pool with a specific process identity if you need a specific identity to access downstream resources. If you need multiple identities to access a range of downstream resources and services, use Windows Server 2003 protocol transition and the new WindowsIdentity constructor; this allows you to create a Windows token that is given only an account's user principal name (UPN). To access a network resource, you need a delegate-level token. To get this token type, your server needs to be configured as trusted for delegation in Active Directory.",
      "The following code shows how to use this constructor to obtain a Windows token for a given user.",
      "using System;using System.Security.Principal;public void ConstructToken(string upn, out WindowsPrincipal p){  WindowsIdentity id = new WindowsIdentity(upn);  p = new WindowsPrincipal(id);}",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "b": [
      "LogonUser",
      "WindowsIdentity",
      "Note",
      "whoami /upn"
    ],
    "pre": [
      "using System;using System.Security.Principal;public void ConstructToken(string upn, out WindowsPrincipal p){  WindowsIdentity id = new WindowsIdentity(upn);  p = new WindowsPrincipal(id);}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      ""
    ],
    "blockquote": [
      "Note   An account's UPN is guaranteed to be unique within a forest. Frequently, the UPN is the user's e-mail address, but it does not have to be. A user always has a UPN and by default, it is userlogonname@fullyqualifieddomainname. If you are logged into a domain, you can find your UPN name by running whoami /upn from a command window."
    ],
    "i": [
      "userlogonname",
      "fullyqualifieddomainname"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Check For</h1>\n  <p>Check to ensure that your application does not use LogonUser API for creating impersonation token. </p>\n  <h1>How to Fix</h1>\n  <p>Avoid writing code that calls the <b>LogonUser</b> API to create impersonation tokens because this forces you to store user names and passwords on your Web server. </p>\n  <p>Instead, use a unique application pool with a specific process identity if you need a specific identity to access downstream resources. If you need multiple identities to access a range of downstream resources and services, use Windows Server 2003 protocol transition and the new <b>WindowsIdentity</b> constructor; this allows you to create a Windows token that is given only an account's user principal name (UPN). To access a network resource, you need&nbsp;a delegate-level token. To get this token type, your server needs to be configured as trusted for delegation in Active Directory.</p>\n  <p>The following code shows how to use this constructor to obtain a Windows token for a given user.</p>\n  <p>\n    <pre>using System;<br />using System.Security.Principal;<br />public void ConstructToken(string upn, out WindowsPrincipal p)&#123;<br />  WindowsIdentity id = new WindowsIdentity(upn);<br />  p = new WindowsPrincipal(id);<br />&#125;</pre>\n  </p>\n  <blockquote>\n    <b>Note</b>&nbsp;&nbsp;&nbsp;An account's UPN is guaranteed to be unique within a forest. Frequently, the UPN is the user's e-mail address, but it does not have to be. A user always has a UPN and by default, it is <i>userlogonname</i>&#64;<i>fullyqualifieddomainname</i>. If you are logged into a domain, you can find your UPN name by running <b>whoami /upn</b> from a command window.</blockquote>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}