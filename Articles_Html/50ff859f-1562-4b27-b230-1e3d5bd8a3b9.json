{
  "id": "50ff859f-1562-4b27-b230-1e3d5bd8a3b9",
  "checksum": "e201e04795634a48215bf07495a774cf0d68160c",
  "words": {
    "1": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "2": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "php": [
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "unused": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "dangerous": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "title"
    ],
    "functions": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "title"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "title"
    ],
    "disabled": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "title"
    ],
    "make": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "sure": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "used": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "they": [
      "p",
      "p"
    ],
    "safely": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "disabling": [
      "p",
      "p",
      "p"
    ],
    "helps": [
      "p"
    ],
    "not": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "by": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "application": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "prevents": [
      "p"
    ],
    "attackers": [
      "p",
      "p",
      "p"
    ],
    "from": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "using": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "them": [
      "p"
    ],
    "most": [
      "p"
    ],
    "allow": [
      "p",
      "p"
    ],
    "executing": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "external": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "system": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "pre"
    ],
    "commands": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "-": [
      "p"
    ],
    "this": [
      "p"
    ],
    "functionality": [
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "inherently": [
      "p"
    ],
    "because": [
      "p"
    ],
    "it": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "may": [
      "p"
    ],
    "command": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "injection": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "vulnerabilities": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "implemented": [
      "p"
    ],
    "correctly": [
      "p"
    ],
    "best": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "avoid": [
      "p"
    ],
    "such": [
      "p",
      "p"
    ],
    "possible": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "required": [
      "p"
    ],
    "extra": [
      "p",
      "p"
    ],
    "caution": [
      "p"
    ],
    "has": [
      "p"
    ],
    "be": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "taken": [
      "p"
    ],
    "when": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "writing": [
      "p"
    ],
    "code": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "also": [
      "p"
    ],
    "makes": [
      "p",
      "p"
    ],
    "privilege": [
      "p"
    ],
    "escalation": [
      "p"
    ],
    "more": [
      "p",
      "p"
    ],
    "difficult": [
      "p",
      "p"
    ],
    "many": [
      "p"
    ],
    "common": [
      "p"
    ],
    "attacks": [
      "p"
    ],
    "on": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "involve": [
      "p"
    ],
    "uploading": [
      "p"
    ],
    "so-called": [
      "p"
    ],
    "\"web": [
      "p"
    ],
    "shells\"": [
      "p"
    ],
    "which": [
      "p"
    ],
    "scripts": [
      "p"
    ],
    "give": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "access": [
      "p",
      "p"
    ],
    "purpose": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "taking": [
      "p"
    ],
    "over": [
      "p"
    ],
    "web": [
      "p",
      "p",
      "p"
    ],
    "server": [
      "p"
    ],
    "shells": [
      "p",
      "p"
    ],
    "typically": [
      "p"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "thus": [
      "p"
    ],
    "adding": [
      "p"
    ],
    "an": [
      "p"
    ],
    "layer": [
      "p"
    ],
    "defense": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "search": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "following": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "operators):": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "system)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "exec)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "eval)shell_exec()": [
      "ol",
      "li",
      "p",
      "ul",
      "ol",
      "li",
      "p",
      "ul"
    ],
    "passthru)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "popen)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "proc_open)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "parse_ini_file)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "show_source)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "symlink)": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "'": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "em"
    ],
    "backtick": [
      "ol",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p"
    ],
    "operator": [
      "ol",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p"
    ],
    "a": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "list": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "in": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "your": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "copying": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "step": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "removing": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "any": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "phpini": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "file": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "disable_functions": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "em",
      "pre"
    ],
    "directive": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "match": [
      "ol",
      "li",
      "p"
    ],
    "review": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "instances": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "each": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "case": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "done": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "accordance": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "practices": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "passes": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "arguments": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "shell": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "escapeshellarg)": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "should": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "prevent": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "absolute": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "paths": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "users": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "allowed": [
      "ol",
      "li",
      "p"
    ],
    "execute": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "arbitrary": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "')": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "avoided": [
      "ol",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "li",
      "p"
    ],
    "eval)": [
      "li",
      "em",
      "li",
      "em"
    ],
    "shell_exec)": [
      "li",
      "em",
      "li",
      "em"
    ],
    "fix": [
      "h1"
    ],
    "disable": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "like": [
      "ol",
      "li",
      "p"
    ],
    "so": [
      "ol",
      "li",
      "p"
    ],
    "=": [
      "ol",
      "li",
      "pre"
    ],
    "exec": [
      "ol",
      "li",
      "pre"
    ],
    "eval": [
      "ol",
      "li",
      "pre"
    ],
    "shell_exec": [
      "ol",
      "li",
      "pre"
    ],
    "passthru": [
      "ol",
      "li",
      "pre"
    ],
    "popen": [
      "ol",
      "li",
      "pre"
    ],
    "proc_open": [
      "ol",
      "li",
      "pre"
    ],
    "parse_ini_file": [
      "ol",
      "li",
      "pre"
    ],
    "show_shource": [
      "ol",
      "li",
      "pre"
    ],
    "symlink": [
      "ol",
      "li",
      "pre"
    ],
    "do": [
      "ol",
      "li",
      "p"
    ],
    "let": [
      "ol",
      "li",
      "p"
    ],
    "particularly": [
      "ol",
      "li",
      "p"
    ],
    "careful": [
      "ol",
      "li",
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix"
    ],
    "ul": [
      "PHP",
      "system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator)",
      "system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator)"
    ],
    "li": [
      "PHP",
      "Search code for dangerous functions. Search application code for the following functions and operator(s): system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator) Make a list of used dangerous functions.",
      "system()",
      "exec()",
      "eval()",
      "shell_exec()",
      "passthru()",
      "popen()",
      "proc_open()",
      "parse_ini_file()",
      "show_source()",
      "symlink()",
      "' (backtick operator)",
      "Identify dangerous functions that are not used. Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.",
      "Verify that unused dangerous functions are disabled. Search the php.ini file for the disable_functions directive. Verify that the disabled functions match the list from Step 2.",
      "Review all instances of used dangerous functions. Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, escapeshellarg() should be used to prevent command injection vulnerabilities. Absolute paths should be used when executing external commands. Users should not be allowed execute arbitrary commands. The backtick (') operator should be avoided, if at all possible.",
      "Search code for dangerous functions. Search application code for the following functions and operator(s): system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator) Make a list of used dangerous functions.",
      "system()",
      "exec()",
      "eval()",
      "shell_exec()",
      "passthru()",
      "popen()",
      "proc_open()",
      "parse_ini_file()",
      "show_source()",
      "symlink()",
      "' (backtick operator)",
      "Identify dangerous functions that are not used. Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.",
      "Disable unused dangerous functions. Use the list from Step 2 to disable unused dangerous functions in the php.ini file by using the disable_functions directive, like so:\r\n      disable_functions = system, exec, eval, shell_exec, passthru, popen, proc_open, parse_ini_file, show_shource, symlink.",
      "Review all instances of used dangerous functions. Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, use escapeshellarg() to prevent command injection vulnerabilities. Use absolute paths when executing external commands. Do not let users execute arbitrary commands. Be particularly careful with the backtick (') operator."
    ],
    "p": [
      "Verify that unused dangerous functions are disabled. Make sure that if dangerous functions are used, they are used safely.",
      "Disabling dangerous functions helps make sure they are not used by the application and prevents attackers from using them. Most dangerous functions allow executing external system commands - this functionality is inherently dangerous, because it may allow command injection vulnerabilities if not implemented correctly. It is best to avoid such functions, if possible. If executing system commands is required, extra caution has to be taken when writing such code.",
      "Disabling dangerous functions also makes privilege escalation more difficult for attackers. Many common attacks on PHP applications involve attackers uploading so-called \"Web Shells\", which are scripts that give the attacker access to system functions for the purpose of taking over the web server. Web Shells typically use the dangerous PHP functions for access to system commands. Disabling dangerous PHP functions makes using Web Shells more difficult, thus adding an extra layer of defense.",
      "To verify that unused dangerous functions are disabled:",
      "Search code for dangerous functions. Search application code for the following functions and operator(s): system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator)",
      "Make a list of used dangerous functions.",
      "Identify dangerous functions that are not used. Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.",
      "Verify that unused dangerous functions are disabled. Search the php.ini file for the disable_functions directive. Verify that the disabled functions match the list from Step 2.",
      "Review all instances of used dangerous functions. Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, escapeshellarg() should be used to prevent command injection vulnerabilities. Absolute paths should be used when executing external commands. Users should not be allowed execute arbitrary commands. The backtick (') operator should be avoided, if at all possible.",
      "To disable dangerous functions:",
      "Search code for dangerous functions. Search application code for the following functions and operator(s): system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator)",
      "Make a list of used dangerous functions.",
      "Identify dangerous functions that are not used. Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.",
      "Disable unused dangerous functions. Use the list from Step 2 to disable unused dangerous functions in the php.ini file by using the disable_functions directive, like so:",
      "Review all instances of used dangerous functions. Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, use escapeshellarg() to prevent command injection vulnerabilities. Use absolute paths when executing external commands. Do not let users execute arbitrary commands. Be particularly careful with the backtick (') operator."
    ],
    "ol": [
      "Search code for dangerous functions. Search application code for the following functions and operator(s): system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator) Make a list of used dangerous functions.\r\n    \r\n      \r\n        Identify dangerous functions that are not used. Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.\r\n    \r\n    \r\n      \r\n        Verify that unused dangerous functions are disabled. Search the php.ini file for the disable_functions directive. Verify that the disabled functions match the list from Step 2.\r\n    \r\n    \r\n      \r\n        Review all instances of used dangerous functions. Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, escapeshellarg() should be used to prevent command injection vulnerabilities. Absolute paths should be used when executing external commands. Users should not be allowed execute arbitrary commands. The backtick (') operator should be avoided, if at all possible.",
      "Search code for dangerous functions. Search application code for the following functions and operator(s): system() exec() eval()shell_exec() passthru() popen() proc_open() parse_ini_file() show_source() symlink() ' (backtick operator) Make a list of used dangerous functions.\r\n    \r\n      \r\n        Identify dangerous functions that are not used. Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.\r\n    \r\n    \r\n      \r\n        Disable unused dangerous functions. Use the list from Step 2 to disable unused dangerous functions in the php.ini file by using the disable_functions directive, like so:\r\n      disable_functions = system, exec, eval, shell_exec, passthru, popen, proc_open, parse_ini_file, show_shource, symlink.\r\n    \r\n    \r\n      \r\n        Review all instances of used dangerous functions. Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, use escapeshellarg() to prevent command injection vulnerabilities. Use absolute paths when executing external commands. Do not let users execute arbitrary commands. Be particularly careful with the backtick (') operator."
    ],
    "strong": [
      "Search code for dangerous functions.",
      "Identify dangerous functions that are not used.",
      "Verify that unused dangerous functions are disabled.",
      "Review all instances of used dangerous functions.",
      "Search code for dangerous functions.",
      "Identify dangerous functions that are not used.",
      "Disable unused dangerous functions.",
      "Review all instances of used dangerous functions."
    ],
    "em": [
      "system()",
      "exec()",
      "eval()",
      "shell_exec()",
      "passthru()",
      "popen()",
      "proc_open()",
      "parse_ini_file()",
      "show_source()",
      "symlink()",
      "'",
      "php.ini",
      "disable_functions",
      "escapeshellarg()",
      "system()",
      "exec()",
      "eval()",
      "shell_exec()",
      "passthru()",
      "popen()",
      "proc_open()",
      "parse_ini_file()",
      "show_source()",
      "symlink()",
      "'",
      "php.ini",
      "disable_functions",
      "escapeshellarg()"
    ],
    "pre": [
      "disable_functions = system, exec, eval, shell_exec, passthru, popen, proc_open, parse_ini_file, show_shource, symlink."
    ],
    "br": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>PHP</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that unused dangerous functions are disabled. Make sure that if dangerous functions are used, they are used safely.</p>\r\n  <h1>Why</h1>\r\n  <p>Disabling dangerous functions helps make sure they are not used by the application and prevents attackers from using them. Most dangerous functions allow executing external system commands - this functionality is inherently dangerous, because it may allow command injection vulnerabilities if not implemented correctly. It is best to avoid such functions, if possible. If executing system commands is required, extra caution has to be taken when writing such code. </p>\r\n  <p>Disabling dangerous functions also makes privilege escalation more difficult for attackers. Many common attacks on PHP applications involve attackers uploading so-called \"Web Shells\", which are scripts that give the attacker access to system functions for the purpose of taking over the web server. Web Shells typically use the dangerous PHP functions for access to system commands. Disabling dangerous PHP functions makes using Web Shells more difficult, thus adding an extra layer of defense.</p>\r\n  <h1>How to Check</h1>\r\n  <p>To verify that unused dangerous functions are disabled:</p>\r\n  <ol>\r\n    <li>\r\n      <p />\r\n      <strong>Search code for dangerous functions.</strong> Search application code for the following functions and operator(s): <ul><li><em>system() </em></li><li><em>exec() </em></li><li><em>eval()</em></li><li><em>shell_exec() </em></li><li><em>passthru() </em></li><li><em>popen() </em></li><li><em>proc_open() </em></li><li><em>parse_ini_file() </em></li><li><em>show_source() </em></li><li><em>symlink() </em></li><li><em>'</em> (backtick operator) </li></ul><p>Make a list of used dangerous functions.</p></li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify dangerous functions that are not used.</strong> Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that unused dangerous functions are disabled.</strong> Search the<em> php.ini</em> file for the <em>disable_functions</em> directive. Verify that the disabled functions match the list from Step 2.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Review all instances of used dangerous functions.</strong> Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, <em>escapeshellarg()</em> should be used to prevent command injection vulnerabilities. Absolute paths should be used when executing external commands. Users should not be allowed execute arbitrary commands. The backtick (') operator should be avoided, if at all possible.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>To disable dangerous functions:</p>\r\n  <ol>\r\n    <li>\r\n      <p />\r\n      <strong>Search code for dangerous functions.</strong> Search application code for the following functions and operator(s): <ul><li><em>system() </em></li><li><em>exec() </em></li><li><em>eval()</em></li><li><em>shell_exec() </em></li><li><em>passthru() </em></li><li><em>popen() </em></li><li><em>proc_open() </em></li><li><em>parse_ini_file() </em></li><li><em>show_source() </em></li><li><em>symlink() </em></li><li><em>'</em> (backtick operator) </li></ul><p>Make a list of used dangerous functions.</p></li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify dangerous functions that are not used.</strong> Make a list of the functions that are not used in your application, by copying the list from Step 1 and removing any dangerous functions that are used from it.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Disable unused dangerous functions.</strong> Use the list from Step 2 to disable unused dangerous functions in the <em>php.ini</em> file by using the <em>disable_functions</em> directive, like so:</p>\r\n      <pre>disable_functions = system, exec, eval, shell_exec, passthru, popen, proc_open, parse_ini_file, show_shource, symlink.</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Review all instances of used dangerous functions.</strong> Make sure that each case of using a dangerous function is necessary and is done in accordance with best practices. For code that passes arguments to shell commands, use <em>escapeshellarg()</em> to prevent command injection vulnerabilities. Use absolute paths when executing external commands. Do not let users execute arbitrary commands. Be particularly careful with the backtick (') operator.</p>\r\n    </li>\r\n  </ol>\r\n  <br />"
}