{
  "id": "6cf135ed-e070-4c46-a960-c4989feb921f",
  "checksum": "88eccc7c8ffd6bc3bdded20481da8303b54d6f1d",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "b",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "aspnet": [
      "ul",
      "li"
    ],
    "what": [
      "h1",
      "p"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "ol",
      "li"
    ],
    "ensure": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "b",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "input": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "b",
      "b",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "title"
    ],
    "not": [
      "p",
      "p",
      "p"
    ],
    "echoed": [
      "p",
      "p"
    ],
    "back": [
      "p",
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "b",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "without": [
      "p"
    ],
    "first": [
      "p"
    ],
    "validating": [
      "p"
    ],
    "and/or": [
      "p"
    ],
    "encoding": [
      "p",
      "p"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "b",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "which": [
      "p",
      "p"
    ],
    "can": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "be": [
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "modified": [
      "p",
      "p"
    ],
    "by": [
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "must": [
      "p"
    ],
    "treated": [
      "p",
      "p"
    ],
    "as": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "untrusted": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "title"
    ],
    "why": [
      "h1"
    ],
    "echoing": [
      "p"
    ],
    "directly": [
      "p"
    ],
    "makes": [
      "p"
    ],
    "your": [
      "p"
    ],
    "application": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "susceptible": [
      "p"
    ],
    "some": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "code": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ol",
      "li",
      "p"
    ],
    "injection": [
      "p"
    ],
    "attacks": [
      "p",
      "p"
    ],
    "such": [
      "p"
    ],
    "cross-site": [
      "p"
    ],
    "scripting": [
      "p"
    ],
    "constitutes": [
      "p"
    ],
    "malicious": [
      "p"
    ],
    "varies": [
      "p"
    ],
    "widely": [
      "p"
    ],
    "depending": [
      "p"
    ],
    "on": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "system": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "in": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "b",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "question": [
      "p"
    ],
    "web": [
      "p"
    ],
    "it": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "normally": [
      "p"
    ],
    "means": [
      "p"
    ],
    "kind": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "javascript": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "use": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "p"
    ],
    "following": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "validated": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "b",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "encoded": [
      "p",
      "ol",
      "li",
      "title"
    ],
    "before": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "being": [
      "p",
      "ol",
      "li",
      "b",
      "ol",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "title"
    ],
    "sources": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "determine": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "tainted": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "inputs": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "list": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "includes": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "common": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "form": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "fields": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "query": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "strings": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "databases": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "access": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "methods": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "cookie": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "collection": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "session": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "variables": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "output": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "title"
    ],
    "trace": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "though": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "part": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "html": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "url": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "css": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "xml": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "contexts": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "b",
      "ol",
      "li",
      "p"
    ],
    "spreadsheet": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "contains": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "title"
    ],
    "this": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "information": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "li",
      "b"
    ],
    "microsoft": [
      "ol",
      "li",
      "b",
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "p",
      "p"
    ],
    "antixss": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "b",
      "li",
      "p"
    ],
    "library": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "b",
      "li",
      "p",
      "ul",
      "li"
    ],
    "used": [
      "ol",
      "ol",
      "li",
      "li",
      "b"
    ],
    "encode": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "special": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "characters": [
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "displayed": [
      "ol",
      "li",
      "b",
      "ol",
      "li",
      "p"
    ],
    "examine": [
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "piece": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "displays": [
      "ol",
      "li"
    ],
    "corresponding": [
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "functions": [
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "from": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "are": [
      "ol",
      "li"
    ],
    "at": [
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "very": [
      "ol",
      "li"
    ],
    "last": [
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "moment": [
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "if": [
      "p"
    ],
    "you": [
      "p",
      "p"
    ],
    "write": [
      "p"
    ],
    "or": [
      "p",
      "p"
    ],
    "shared": [
      "p"
    ],
    "database": [
      "p"
    ],
    "local": [
      "p"
    ],
    "file": [
      "p"
    ],
    "do": [
      "p"
    ],
    "trust": [
      "p"
    ],
    "ensures": [
      "p"
    ],
    "literal": [
      "p"
    ],
    "text": [
      "p"
    ],
    "script": [
      "p"
    ],
    "guidelines": [
      "p"
    ],
    "net": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "starting": [
      "ol",
      "li"
    ],
    "with": [
      "ol",
      "li"
    ],
    "45.": [
      "ol",
      "li"
    ],
    "projects": [
      "ol",
      "li"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "40,": [
      "ol",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "added": [
      "ol",
      "li"
    ],
    "nuget": [
      "ol",
      "li"
    ],
    "based": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "context": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "displaying": [
      "ol",
      "li",
      "p"
    ],
    "reduce": [
      "ol",
      "li",
      "p"
    ],
    "possibility": [
      "ol",
      "li",
      "p"
    ],
    "double-encoding": [
      "ol",
      "li",
      "p"
    ],
    "bugs": [
      "ol",
      "li",
      "p"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "download": [
      "ul",
      "li"
    ],
    "anti-xss": [
      "ul",
      "li"
    ],
    "go": [
      "ul",
      "li"
    ],
    "https//www.nuget.org/packages/antixss/": [
      "ul",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix",
      "Additional Resources"
    ],
    "ul": [
      "ASP.NET 4.0",
      "Form Fields \r\n        Query strings \r\n        Databases and data access methods \r\n        Cookie collection \r\n        Session and application variables",
      "Form Fields \r\n        Query strings \r\n        Databases and data access methods \r\n        Cookie collection \r\n        Session and application variables",
      "To download the Anti-XSS library, go to https://www.nuget.org/packages/AntiXSS/"
    ],
    "li": [
      "ASP.NET 4.0",
      "Identify all sources of user input. Determine all the possible tainted inputs to the application. The following list includes some common input sources:\r\n      \r\n        Form Fields \r\n        Query strings \r\n        Databases and data access methods \r\n        Cookie collection \r\n        Session and application variables",
      "Form Fields",
      "Query strings",
      "Databases and data access methods",
      "Cookie collection",
      "Session and application variables",
      "Identify all output that includes user input. Trace all inputs to the system though and determine all the code that will output it as a part of HTML, URL, JavaScript, CSS and XML contexts. Make a spreadsheet that contains all this information.",
      "Make sure the Microsoft AntiXSS library is used to encode special characters in data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts. Examine each piece of code that displays untrusted data in HTML, URL, JavaScript, CSS and XML contexts and make sure that corresponding functions from the AntiXSS library are used to encode the special characters in each piece of untrusted data at the very last moment before that piece of data is output.",
      "Use the Microsoft AntiXSS library. The AntiXSS library is a part of .NET starting with .NET 4.5. For projects using .NET 4.0, it has to be added using NuGet. The AntiXSS library can encoded data in HTML, URL, JavaScript, CSS and XML contexts.",
      "Identify all sources of user input. Determine all the possible tainted inputs to the application. The following list includes some common input sources:\r\n      \r\n        Form Fields \r\n        Query strings \r\n        Databases and data access methods \r\n        Cookie collection \r\n        Session and application variables",
      "Form Fields",
      "Query strings",
      "Databases and data access methods",
      "Cookie collection",
      "Session and application variables",
      "Identify all output that includes user input. Trace all inputs to the system though and determine all the code that \r\nwill output it as a part of HTML, URL, JavaScript, CSS and XML contexts.\r\n Make a spreadsheet that contains all this information.",
      "Encode all special characters based on context. Use the corresponding functions in the Microsoft AntiXSS library to encode the data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts. Encode that data at the last possible moment before displaying it to reduce the possibility of double-encoding bugs.",
      "To download the Anti-XSS library, go to https://www.nuget.org/packages/AntiXSS/"
    ],
    "p": [
      "Ensure that input is not echoed back to the user without first validating and/or encoding the data. Data which can be modified by a user must be treated as untrusted data.",
      "Echoing input directly back to the user makes your application susceptible to some code injection attacks, such as Cross-Site Scripting attacks. What constitutes malicious input varies widely depending on the system in question. On the web, it normally means some kind of JavaScript.",
      "Use the following steps to ensure that input which can be modified by a user is properly validated and encoded before being echoed back to the user:",
      "Identify all sources of user input. Determine all the possible tainted inputs to the application. The following list includes some common input sources:",
      "Identify all output that includes user input. Trace all inputs to the system though and determine all the code that will output it as a part of HTML, URL, JavaScript, CSS and XML contexts. Make a spreadsheet that contains all this information.",
      "If you write output that includes user input or data from a shared database or a local file that you do not trust, encode it. Encoding the data ensures that it is treated as literal text and not as script. Use the following guidelines to encode user input:",
      "Identify all sources of user input. Determine all the possible tainted inputs to the application. The following list includes some common input sources:",
      "Identify all output that includes user input. Trace all inputs to the system though and determine all the code that \r\nwill output it as a part of HTML, URL, JavaScript, CSS and XML contexts.\r\n Make a spreadsheet that contains all this information.",
      "Encode all special characters based on context. Use the corresponding functions in the Microsoft AntiXSS library to encode the data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts. Encode that data at the last possible moment before displaying it to reduce the possibility of double-encoding bugs.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Identify all sources of user input. Determine all the possible tainted inputs to the application. The following list includes some common input sources:\r\n      \r\n        Form Fields \r\n        Query strings \r\n        Databases and data access methods \r\n        Cookie collection \r\n        Session and application variables\r\n      \r\n    \r\n    \r\n      \r\n        Identify all output that includes user input. Trace all inputs to the system though and determine all the code that will output it as a part of HTML, URL, JavaScript, CSS and XML contexts. Make a spreadsheet that contains all this information.\r\n    \r\n    \r\n      Make sure the Microsoft AntiXSS library is used to encode special characters in data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts. Examine each piece of code that displays untrusted data in HTML, URL, JavaScript, CSS and XML contexts and make sure that corresponding functions from the AntiXSS library are used to encode the special characters in each piece of untrusted data at the very last moment before that piece of data is output.",
      "Use the Microsoft AntiXSS library. The AntiXSS library is a part of .NET starting with .NET 4.5. For projects using .NET 4.0, it has to be added using NuGet. The AntiXSS library can encoded data in HTML, URL, JavaScript, CSS and XML contexts.\r\n    \r\n      \r\n        Identify all sources of user input. Determine all the possible tainted inputs to the application. The following list includes some common input sources:\r\n      \r\n        Form Fields \r\n        Query strings \r\n        Databases and data access methods \r\n        Cookie collection \r\n        Session and application variables\r\n      \r\n    \r\n    \r\n      \r\n        Identify all output that includes user input. Trace all inputs to the system though and determine all the code that \r\nwill output it as a part of HTML, URL, JavaScript, CSS and XML contexts.\r\n Make a spreadsheet that contains all this information.\r\n    \r\n    \r\n      \r\n        Encode all special characters based on context. Use the corresponding functions in the Microsoft AntiXSS library to encode the data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts. Encode that data at the last possible moment before displaying it to reduce the possibility of double-encoding bugs.",
      ""
    ],
    "strong": [
      "Identify all sources of user input.",
      "Identify all output that includes user input.",
      "Identify all sources of user input.",
      "Identify all output that includes user input.",
      "Encode all special characters based on context."
    ],
    "br": [
      "",
      "",
      "",
      ""
    ],
    "b": [
      "Make sure the Microsoft AntiXSS library is used to encode special characters in data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts.",
      "Use the Microsoft AntiXSS library."
    ],
    "a": [
      "https://www.nuget.org/packages/AntiXSS/"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "https://www.nuget.org/packages/AntiXSS/",
      "text": "https://www.nuget.org/packages/AntiXSS/\r\n"
    }
  ],
  "html": "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Ensure that input is not echoed back to the user without first validating and/or encoding the data. Data which can be modified by a user must be treated as untrusted data.</p>\r\n  <h1>Why</h1>\r\n  <p>Echoing input directly back to the user makes your application susceptible to some code injection attacks, such as Cross-Site Scripting attacks. What constitutes malicious input varies widely depending on the system in question. On the web, it normally means some kind of JavaScript.</p>\r\n  <h1>How To Check</h1>\r\n  <p>Use the following steps to ensure that input which can be modified by a user is properly validated and encoded before being echoed back to the user:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all sources of user input.</strong> Determine all the possible tainted inputs to the application. The following list includes some common input sources:</p>\r\n      <ul>\r\n        <li>Form Fields </li>\r\n        <li>Query strings </li>\r\n        <li>Databases and data access methods </li>\r\n        <li>Cookie collection </li>\r\n        <li>Session and application variables</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all output that includes user input.</strong> Trace all inputs to the system though and determine all the code that will output it as a part of HTML, URL, JavaScript, CSS and XML contexts. Make a spreadsheet that contains all this information.<br /></p>\r\n    </li>\r\n    <li>\r\n      <b>Make sure the Microsoft AntiXSS library is used to encode special characters in data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts.</b> Examine each piece of code that displays untrusted data in HTML, URL, JavaScript, CSS and XML contexts and make sure that corresponding functions from the AntiXSS library are used to encode the special characters in each piece of untrusted data at the very last moment before that piece of data is output. <br /></li>\r\n  </ol>\r\n  <h1>How To Fix</h1>\r\n  <p>If you write output that includes user input or data from a shared database or a local file that you do not trust, encode it. Encoding the data ensures that it is treated as literal text and not as script. Use the following guidelines to encode user input:</p>\r\n  <ol>\r\n    <li>\r\n      <b>Use the Microsoft AntiXSS library. </b>The AntiXSS library is a part of .NET starting with .NET 4.5. For projects using .NET 4.0, it has to be added using NuGet. The AntiXSS library can encoded data in HTML, URL, JavaScript, CSS and XML contexts.<br /></li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all sources of user input.</strong> Determine all the possible tainted inputs to the application. The following list includes some common input sources:</p>\r\n      <ul>\r\n        <li>Form Fields </li>\r\n        <li>Query strings </li>\r\n        <li>Databases and data access methods </li>\r\n        <li>Cookie collection </li>\r\n        <li>Session and application variables</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all output that includes user input.</strong> Trace all inputs to the system though and determine all the code that \r\nwill output it as a part of HTML, URL, JavaScript, CSS and XML contexts.\r\n Make a spreadsheet that contains all this information.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Encode all special characters based on context.</strong> Use the corresponding functions in the Microsoft AntiXSS library to encode the data that is being displayed in HTML, URL, JavaScript, CSS and XML contexts. Encode that data at the last possible moment before displaying it to reduce the possibility of double-encoding bugs.<br /></p>\r\n    </li>\r\n  </ol>\r\n  <ol>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>To download the Anti-XSS library, go to <a href=\"https://www.nuget.org/packages/AntiXSS/\">https://www.nuget.org/packages/AntiXSS/\r\n</a></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}