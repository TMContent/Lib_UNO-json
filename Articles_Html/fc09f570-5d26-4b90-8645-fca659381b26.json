{
  "id": "fc09f570-5d26-4b90-8645-fca659381b26",
  "checksum": "b6d19e5005b0f7b86b9f1cb5919907135be0368c",
  "words": {
    "56": [
      "ol",
      "li",
      "p"
    ],
    "128": [
      "ol",
      "li",
      "p"
    ],
    "192": [
      "ol",
      "li",
      "p"
    ],
    "256": [
      "ol",
      "li",
      "p"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li"
    ],
    "check": [
      "h1",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "p",
      "strong"
    ],
    "for": [
      "h1",
      "p",
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "information": [
      "p"
    ],
    "must": [
      "p"
    ],
    "be": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li"
    ],
    "stored": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li"
    ],
    "viewstate": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li"
    ],
    "verify": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "it": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li"
    ],
    "encrypted": [
      "p",
      "ol",
      "li",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "protected": [
      "p"
    ],
    "against": [
      "p"
    ],
    "tampering": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "p"
    ],
    "default": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "with": [
      "p",
      "ol",
      "li"
    ],
    "an": [
      "p"
    ],
    "hmac": [
      "p"
    ],
    "integrity": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p"
    ],
    "tls": [
      "p"
    ],
    "can": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "used": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "protect": [
      "p"
    ],
    "on": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "network": [
      "p",
      "p"
    ],
    "however": [
      "p"
    ],
    "unless": [
      "p"
    ],
    "encryption": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "any": [
      "p",
      "p"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "vulnerable": [
      "p"
    ],
    "local": [
      "p"
    ],
    "machine": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "easiest": [
      "p"
    ],
    "way": [
      "p"
    ],
    "turned": [
      "p"
    ],
    "review": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "html": [
      "p"
    ],
    "source": [
      "p"
    ],
    "returned": [
      "p"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li"
    ],
    "application": [
      "p",
      "ol",
      "li"
    ],
    "client-side": [
      "p"
    ],
    "scan": [
      "p"
    ],
    "__viewstate": [
      "p"
    ],
    "__viewstateencrypted&nbsphidden": [
      "p"
    ],
    "fields": [
      "p"
    ],
    "viewstateencrypted": [
      "em"
    ],
    "form": [
      "pre"
    ],
    "name=\"testform\"": [
      "pre"
    ],
    "method=\"post\"": [
      "pre"
    ],
    "action=\"viewstateaspx\"": [
      "pre"
    ],
    "id=\"testform\"<input": [
      "pre"
    ],
    "type=\"hidden\"": [
      "pre",
      "pre"
    ],
    "name=\"__viewstate\"..<input": [
      "pre"
    ],
    "name=\"__viewstateencrypted\"": [
      "pre"
    ],
    "id=\"__viewstateencrypted\"": [
      "pre"
    ],
    "value=\"\"": [
      "pre"
    ],
    "/": [
      "pre",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre",
      "pre"
    ],
    "fix": [
      "h1"
    ],
    "aspnet": [
      "p"
    ],
    "settings": [
      "p"
    ],
    "ensure": [
      "p"
    ],
    "tamper": [
      "p"
    ],
    "proof": [
      "p"
    ],
    "this": [
      "p"
    ],
    "ensures": [
      "p"
    ],
    "modification": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "either": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "client's": [
      "p"
    ],
    "computer": [
      "p"
    ],
    "or": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "over": [
      "p"
    ],
    "detected": [
      "p"
    ],
    "when": [
      "p"
    ],
    "server": [
      "p"
    ],
    "processes": [
      "p"
    ],
    "you": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "em"
    ],
    "need": [
      "p",
      "ol",
      "li"
    ],
    "use": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "round": [
      "p"
    ],
    "trips": [
      "p"
    ],
    "potentially": [
      "p"
    ],
    "force": [
      "p"
    ],
    "a": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "specific": [
      "p"
    ],
    "page": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "these": [
      "p",
      "em"
    ],
    "steps": [
      "p"
    ],
    "pages>": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "element": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "viewstateencryptionmode": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "em",
      "p",
      "em"
    ],
    "attribute": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p"
    ],
    "set": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li"
    ],
    "always": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "as": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "shown": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li"
    ],
    "example": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li"
    ],
    "pages": [
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "pre",
      "em",
      "pre"
    ],
    "..": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "viewstateencryptionmode=\"always\"": [
      "ol",
      "li",
      "pre"
    ],
    "do": [
      "ol",
      "li",
      "p"
    ],
    "not": [
      "ol",
      "li",
      "p"
    ],
    "want": [
      "ol",
      "li",
      "p"
    ],
    "every": [
      "ol",
      "li",
      "p"
    ],
    "auto": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "viewstateencryptionmode=\"auto\"": [
      "ol",
      "li",
      "pre"
    ],
    "then": [
      "ol",
      "li",
      "p"
    ],
    "from": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "within": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "li",
      "p"
    ],
    "call": [
      "ol",
      "li",
      "p"
    ],
    "registerrequiresviewstateencryption": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "method": [
      "ol",
      "li",
      "p"
    ],
    "pageregisterrequiresviewstateencryption();": [
      "ol",
      "li",
      "pre"
    ],
    "specify": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "algorithm": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "validation": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "machinekey": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "em",
      "pre"
    ],
    "validation=\"aes\"": [
      "ol",
      "li",
      "pre"
    ],
    "overloaded": [
      "ol",
      "li",
      "p"
    ],
    "hashing": [
      "ol",
      "li",
      "p"
    ],
    "3des": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "aes": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "because": [
      "ol",
      "li",
      "p"
    ],
    "offers": [
      "ol",
      "li",
      "p"
    ],
    "larger": [
      "ol",
      "li",
      "p"
    ],
    "key": [
      "ol",
      "li",
      "p"
    ],
    "sizes": [
      "ol",
      "li",
      "p"
    ],
    "bits": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "than": [
      "ol",
      "li",
      "p"
    ],
    "bits,": [
      "ol",
      "li",
      "p"
    ],
    "considered": [
      "ol",
      "li",
      "p"
    ],
    "more": [
      "ol",
      "li",
      "p"
    ],
    "secure": [
      "ol",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li"
    ],
    "machinekey>": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "decryptionkey": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "em",
      "em",
      "em"
    ],
    "validationkey": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "em",
      "em",
      "em"
    ],
    "validationkey=\"autogenerateisolateapps\"": [
      "ol",
      "li",
      "pre"
    ],
    "decryptionkey=\"autogenerateisolateapps\"": [
      "ol",
      "li",
      "pre"
    ],
    "/unless": [
      "ol",
      "li"
    ],
    "installed": [
      "ol",
      "li"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "farm": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "leave": [
      "ol",
      "li"
    ],
    "values": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "encrypt": [
      "ol",
      "li",
      "ul",
      "li",
      "a"
    ],
    "manually": [
      "ol",
      "li"
    ],
    "value—these": [
      "ol",
      "li"
    ],
    "same": [
      "ol",
      "li"
    ],
    "across": [
      "ol",
      "li"
    ],
    "all": [
      "ol",
      "li"
    ],
    "machines": [
      "ol",
      "li"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "may": [
      "em"
    ],
    "find": [
      "em"
    ],
    "additional": [
      "em"
    ],
    "articles": [
      "em"
    ],
    "useful": [
      "em"
    ],
    "viewstates": [
      "ul",
      "li",
      "a",
      "title"
    ],
    "contain": [
      "ul",
      "li",
      "a",
      "title"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "are": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix",
      "Related Items",
      "",
      ""
    ],
    "p": [
      "If sensitive information must be stored in ViewState, verify that it is encrypted.",
      "ViewState is protected against tampering by default with an HMAC integrity check, and TLS can be used to protect ViewState on the network. However, unless ViewState encryption is used, any sensitive data stored in ViewState is vulnerable on the local machine.",
      "The easiest way to check if ViewState encryption is turned on is to review the HTML source returned by your application on the client-side and scan for the __VIEWSTATE and __VIEWSTATEENCRYPTED&nbsp;hidden fields:",
      "The default ASP.NET settings ensure that ViewState is tamper proof. This ensures that any modification of the ViewState either on the client's computer or over the network is detected when the server processes the data. If you need to use round trips for potentially sensitive data, you can force encryption of ViewState for a specific page by following these steps:",
      "Check the <pages> element. Check that the viewStateEncryptionMode attribute of the <pages> element is set to Always, as shown in the following example.",
      "If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example.",
      "Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example.",
      "Specify the encryption algorithm. Specify the encryption algorithm to use on the validation attribute, as shown in the following example.",
      "The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES. Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES (56 bits), it is considered more secure and should be used.",
      "Check the <machineKey> element. Review the decryptionKey and validationKey attribute of the <machineKey> element:",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "em": [
      "VIEWSTATE",
      "VIEWSTATEENCRYPTED",
      "viewStateEncryptionMode",
      "pages",
      "Always",
      "viewStateEncryptionMode",
      "pages",
      "Auto",
      "RegisterRequiresViewStateEncryption",
      "decryptionKey",
      "validationKey",
      "machineKey",
      "decryptionKey",
      "validationKey",
      "validationKey",
      "decryptionKey",
      "You may find these additional articles useful"
    ],
    "pre": [
      "<form name=\"testForm\" method=\"post\" action=\"viewstate.aspx\" id=\"testForm\"><input type=\"hidden\" name=\"__VIEWSTATE\"...<input type=\"hidden\" name=\"__VIEWSTATEENCRYPTED\" id=\"__VIEWSTATEENCRYPTED\" value=\"\" />",
      "<pages ... viewStateEncryptionMode=\"Always\" ... />",
      "<pages ... viewStateEncryptionMode=\"Auto\" ... />",
      "Page.RegisterRequiresViewStateEncryption();",
      "<machineKey ... validation=\"AES\" ... />",
      "<machineKey validationKey=\"AutoGenerate,IsolateApps\" decryptionKey=\"AutoGenerate,IsolateApps\" ... />"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "ol": [
      "Check the <pages> element. Check that the viewStateEncryptionMode attribute of the <pages> element is set to Always, as shown in the following example.\n      <pages ... viewStateEncryptionMode=\"Always\" ... />\n      If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example.\n      <pages ... viewStateEncryptionMode=\"Auto\" ... />\n      Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example.\n      Page.RegisterRequiresViewStateEncryption();\n    \n    \n      \n        Specify the encryption algorithm. Specify the encryption algorithm to use on the validation attribute, as shown in the following example.\n      <machineKey ... validation=\"AES\" ... />\n      The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES. Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES (56 bits), it is considered more secure and should be used.\n    \n    \n      \n        Check the <machineKey> element. Review the decryptionKey and validationKey attribute of the <machineKey> element:\n      <machineKey validationKey=\"AutoGenerate,IsolateApps\" decryptionKey=\"AutoGenerate,IsolateApps\" ... />Unless your application is installed in a Web farm, you should leave the decryptionKey and validationKey attribute with the default values shown in the example. To encrypt ViewState in a web farm, you need to manually set the validationKey and decryptionKey value—these values should be same across all machines in the web farm."
    ],
    "li": [
      "Check the <pages> element. Check that the viewStateEncryptionMode attribute of the <pages> element is set to Always, as shown in the following example.\n      <pages ... viewStateEncryptionMode=\"Always\" ... />\n      If you do not want every page to used encrypted ViewState, check that the viewStateEncryptionMode attribute of the <pages> element is set to Auto, as shown in the following example.\n      <pages ... viewStateEncryptionMode=\"Auto\" ... />\n      Then, from within your code, call the RegisterRequiresViewStateEncryption method as shown in the following example.\n      Page.RegisterRequiresViewStateEncryption();",
      "Specify the encryption algorithm. Specify the encryption algorithm to use on the validation attribute, as shown in the following example.\n      <machineKey ... validation=\"AES\" ... />\n      The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES. Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES (56 bits), it is considered more secure and should be used.",
      "Check the <machineKey> element. Review the decryptionKey and validationKey attribute of the <machineKey> element:\n      <machineKey validationKey=\"AutoGenerate,IsolateApps\" decryptionKey=\"AutoGenerate,IsolateApps\" ... />Unless your application is installed in a Web farm, you should leave the decryptionKey and validationKey attribute with the default values shown in the example. To encrypt ViewState in a web farm, you need to manually set the validationKey and decryptionKey value—these values should be same across all machines in the web farm.",
      "Encrypt ViewStates that Contain Sensitive Data"
    ],
    "strong": [
      "Check the <pages> element.",
      "Specify the encryption algorithm.",
      "Check the <machineKey> element."
    ],
    "ul": [
      "Encrypt ViewStates that Contain Sensitive Data"
    ],
    "a": [
      "Encrypt ViewStates that Contain Sensitive Data"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "/article/aa7c35a0-08c6-4858-be58-25d91315f301",
      "text": "Encrypt ViewStates that Contain Sensitive Data"
    }
  ],
  "html": "<h1>What to Check For</h1>\n  <p>If sensitive information must be stored in ViewState, verify that it is encrypted.</p>\n  <h1>Why</h1>\n  <p>ViewState is protected against tampering by default with an HMAC integrity check, and TLS can be used to protect ViewState on the network. However, unless ViewState encryption is used, any sensitive data stored in ViewState is vulnerable on the local machine.</p>\n  <h1>How To Check</h1>\n  <p>The easiest way to check if ViewState encryption is turned on is to review the HTML source returned by your application on the client-side and scan for the __<em>VIEWSTATE</em> and __<em>VIEWSTATEENCRYPTED</em>&amp;nbsp;hidden fields:</p>\n  <pre>&lt;form name=\"testForm\" method=\"post\" action=\"viewstate.aspx\" id=\"testForm\"&gt;<br />&lt;input type=\"hidden\" name=\"__VIEWSTATE\"<br />...<br />&lt;input type=\"hidden\" name=\"__VIEWSTATEENCRYPTED\" id=\"__VIEWSTATEENCRYPTED\" value=\"\" /&gt;</pre>\n  <h1>How To Fix</h1>\n  <p>The default ASP.NET settings ensure that ViewState is tamper proof. This ensures that any modification of the ViewState either on the client's computer or over the network is detected when the server processes the data. If you need to use round trips for potentially sensitive data, you can force encryption of ViewState for a specific page by following these steps:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Check the &lt;pages&gt; element.</strong> Check that the <em>viewStateEncryptionMode</em> attribute of the &lt;<em>pages</em>&gt; element is set to <em>Always</em>, as shown in the following example.</p>\n      <pre>&lt;pages<br /> ...<br /> viewStateEncryptionMode=\"Always\"<br /> ...<br /> /&gt;</pre>\n      <p>If you do not want every page to used encrypted ViewState, check that the <em>viewStateEncryptionMode</em> attribute of the &lt;<em>pages</em>&gt; element is set to <em>Auto</em>, as shown in the following example.</p>\n      <pre>&lt;pages<br /> ...<br /> viewStateEncryptionMode=\"Auto\"<br /> ...<br /> /&gt;</pre>\n      <p>Then, from within your code, call the <em>RegisterRequiresViewStateEncryption</em> method as shown in the following example.</p>\n      <pre>Page.RegisterRequiresViewStateEncryption();</pre>\n    </li>\n    <li>\n      <p>\n        <strong>Specify the encryption algorithm.</strong> Specify the encryption algorithm to use on the validation attribute, as shown in the following example.</p>\n      <pre>&lt;machineKey<br /> ...<br /> validation=\"AES\"<br /> ...<br /> /&gt;</pre>\n      <p>The validation attribute is overloaded and can be used to specify either the hashing algorithm or the encryption algorithm. You can specify either 3DES or AES. Because AES offers larger key sizes (128 bits, 192 bits, or 256 bits) than 3DES (56 bits), it is considered more secure and should be used.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Check the &lt;machineKey&gt; element.</strong> Review the <em>decryptionKey</em> and <em>validationKey</em> attribute of the &lt;<em>machineKey</em>&gt; element:</p>\n      <pre>&lt;machineKey validationKey=\"AutoGenerate,IsolateApps\"<br /> decryptionKey=\"AutoGenerate,IsolateApps\"<br /> ...<br /> /&gt;</pre>Unless your application is installed in a Web farm, you should leave the <em>decryptionKey</em> and <em>validationKey</em> attribute with the default values shown in the example. To encrypt ViewState in a web farm, you need to manually set the <em>validationKey</em> and <em>decryptionKey</em> value—these values should be same across all machines in the web farm. </li>\n  </ol>\n  <h1>Related Items</h1>\n  <em>You may find these additional articles useful</em>\n  <ul>\n    <li>\n      <a href=\"/article/aa7c35a0-08c6-4858-be58-25d91315f301\">Encrypt ViewStates that Contain Sensitive Data</a>\n    </li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>\n  <h1>\n  </h1>\n  <h1>\n  </h1>"
}