{
  "id": "72900050-60e7-4562-9812-2f80bf0310bb",
  "checksum": "98366c9183edcad853db03dfadff8d7616055f70",
  "words": {
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "h1",
      "p",
      "h1",
      "p",
      "p"
    ],
    "c++": [
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p"
    ],
    "verify": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p"
    ],
    "exceptions": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "are": [
      "p",
      "p",
      "title"
    ],
    "used": [
      "p",
      "title"
    ],
    "instead": [
      "p",
      "p",
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p"
    ],
    "error": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "codes": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "whenever": [
      "p"
    ],
    "possible": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h1"
    ],
    "more": [
      "p"
    ],
    "secure": [
      "p"
    ],
    "than": [
      "p"
    ],
    "because": [
      "p"
    ],
    "a": [
      "p"
    ],
    "program": [
      "p",
      "p"
    ],
    "may": [
      "p"
    ],
    "ignore": [
      "p"
    ],
    "and": [
      "p",
      "p"
    ],
    "keep": [
      "p"
    ],
    "running": [
      "p"
    ],
    "but": [
      "p"
    ],
    "unhandled": [
      "p"
    ],
    "make": [
      "p"
    ],
    "the": [
      "p"
    ],
    "terminate": [
      "p"
    ],
    "thus": [
      "p"
    ],
    "preventing": [
      "p"
    ],
    "unintended": [
      "p"
    ],
    "behavior": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "review": [
      "p"
    ],
    "code": [
      "p",
      "p"
    ],
    "look": [
      "p"
    ],
    "functions": [
      "p",
      "p"
    ],
    "return": [
      "p",
      "p"
    ],
    "consider": [
      "p"
    ],
    "whether": [
      "p"
    ],
    "it": [
      "p"
    ],
    "is": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "fix": [
      "h1"
    ],
    "rewrite": [
      "p",
      "p"
    ],
    "throw": [
      "p"
    ],
    "handles": [
      "p"
    ],
    "errors": [
      "p"
    ],
    "exception": [
      "p"
    ],
    "handling": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "checking": [
      "p"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "where": [
      "ul",
      "li",
      "a",
      "title"
    ],
    "centralize": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Related Items"
    ],
    "ul": [
      "C++",
      "Use C++ Exceptions Where Possible\n        \n          Centralize Error Handling"
    ],
    "li": [
      "C++",
      "Use C++ Exceptions Where Possible",
      "Centralize Error Handling"
    ],
    "p": [
      "Verify that exceptions are used instead of error codes whenever possible.",
      "Exceptions are more secure than error codes, because a program may ignore error codes and keep running, but unhandled exceptions make the program terminate, thus preventing unintended behavior.",
      "Review code and look for functions that return error codes. Consider whether it is possible to use exceptions instead of error codes.",
      "Rewrite functions that return error codes to throw exceptions instead. Rewrite code that handles errors to use exception handling instead of checking error codes."
    ],
    "a": [
      "Use C++ Exceptions Where Possible",
      "Centralize Error Handling"
    ]
  },
  "links": [
    {
      "href": "/article/25d6522f-77d2-4f08-abee-88247a7b4118",
      "text": "Use C++ Exceptions Where Possible"
    },
    {
      "href": "/article/e4a3052e-13f2-4062-9a83-49185ff14b0a",
      "text": "Centralize Error Handling"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>C&#43;&#43;</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Verify that exceptions are used instead of error codes whenever possible.</p>\n  <h1>Why</h1>\n  <p>Exceptions are more secure than error codes, because a program may ignore error codes and keep running, but unhandled exceptions make the program terminate, thus preventing unintended behavior.</p>\n  <h1>How to Check</h1>\n  <p>Review code and look for functions that return error codes. Consider whether it is possible to use exceptions instead of error codes.</p>\n  <h1>How to Fix</h1>\n  <p>Rewrite functions that return error codes to throw exceptions instead. Rewrite code that handles errors to use exception handling instead of checking error codes.</p>\n  <h1>Related Items</h1>\n  <ul>\n    <li>\n      <a href=\"/article/25d6522f-77d2-4f08-abee-88247a7b4118\">Use C&#43;&#43; Exceptions Where Possible</a>\n        <li>\n          <a href=\"/article/e4a3052e-13f2-4062-9a83-49185ff14b0a\">Centralize Error Handling</a>\n        </li>\n    </li>\n  </ul>"
}