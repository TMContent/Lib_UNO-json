{
  "id": "b58ab197-126d-43e4-a402-b11f12dc5ada",
  "checksum": "2d59ff6c3e79d443a802f737bea746ac1c252704",
  "words": {
    "0": [
      "pre",
      "pre",
      "pre"
    ],
    "1": [
      "p",
      "h3",
      "pre",
      "pre",
      "h3"
    ],
    "2": [
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "h3",
      "h3"
    ],
    "5": [
      "pre"
    ],
    "9": [
      "pre",
      "pre"
    ],
    "16": [
      "pre",
      "pre"
    ],
    "97": [
      "pre"
    ],
    "128": [
      "pre"
    ],
    "130": [
      "pre"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p"
    ],
    "c#": [
      "ul",
      "li"
    ],
    "web": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "pre",
      "p",
      "p",
      "title"
    ],
    "services": [
      "ul",
      "li",
      "p"
    ],
    "summary": [
      "h1"
    ],
    "the": [
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "ul",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "purpose": [
      "p"
    ],
    "of": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "ul",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "this": [
      "p",
      "pre",
      "p"
    ],
    "code": [
      "p",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "sample": [
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "is": [
      "p",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "demonstrate": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "ul",
      "li",
      "p"
    ],
    "technique": [
      "p"
    ],
    "securely": [
      "p"
    ],
    "validate": [
      "p",
      "pre"
    ],
    "xml": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "h3",
      "pre",
      "pre",
      "h3",
      "pre",
      "h3",
      "pre",
      "h3",
      "p",
      "ul",
      "li",
      "li",
      "title"
    ],
    "payload": [
      "p",
      "ul",
      "li",
      "title"
    ],
    "received": [
      "p",
      "p"
    ],
    "during": [
      "p",
      "pre"
    ],
    "service": [
      "p",
      "p",
      "title"
    ],
    "method": [
      "p",
      "p",
      "strong",
      "p"
    ],
    "call": [
      "p"
    ],
    "using": [
      "p",
      "ul",
      "li",
      "pre",
      "p"
    ],
    "net.": [
      "p"
    ],
    "objectives": [
      "h1"
    ],
    "mitigate": [
      "ul",
      "li"
    ],
    "data": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "validation": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "pre",
      "ul",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "induced": [
      "ul",
      "li",
      "p"
    ],
    "vulnerabilities": [
      "ul",
      "li",
      "p"
    ],
    "through": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "use": [
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "p",
      "p"
    ],
    "schema": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "pre",
      "ul",
      "li",
      "p",
      "title"
    ],
    "which": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "employs": [
      "ul",
      "li"
    ],
    "strong": [
      "ul",
      "li"
    ],
    "regular": [
      "ul",
      "li",
      "p",
      "li"
    ],
    "expression": [
      "ul",
      "li"
    ],
    "patterns": [
      "ul",
      "li",
      "p"
    ],
    "on": [
      "ul",
      "li",
      "p",
      "strong",
      "pre",
      "ul",
      "li",
      "pre"
    ],
    "expected": [
      "ul",
      "li",
      "h1"
    ],
    "improve": [
      "ul",
      "li"
    ],
    "application": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "efficiency": [
      "ul",
      "li"
    ],
    "by": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "first": [
      "ul",
      "li"
    ],
    "requiring": [
      "ul",
      "li"
    ],
    "prior": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "executing": [
      "ul",
      "li"
    ],
    "business": [
      "ul",
      "li"
    ],
    "logic": [
      "ul",
      "li",
      "p"
    ],
    "scenarios": [
      "h1"
    ],
    "component": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "needs": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "access": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "functionality": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "that": [
      "ul",
      "li",
      "pre"
    ],
    "only": [
      "ul",
      "li"
    ],
    "exists": [
      "ul",
      "li"
    ],
    "in": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "different": [
      "ul",
      "li",
      "pre"
    ],
    "runtime": [
      "ul",
      "li"
    ],
    "occasionally": [
      "ul",
      "li"
    ],
    "privileged": [
      "ul",
      "li"
    ],
    "but": [
      "ul",
      "li",
      "pre"
    ],
    "wants": [
      "ul",
      "li"
    ],
    "low-privileged": [
      "ul",
      "li"
    ],
    "security": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "context": [
      "ul",
      "li"
    ],
    "for": [
      "ul",
      "li",
      "p",
      "strong",
      "pre",
      "pre",
      "p"
    ],
    "enhanced": [
      "ul",
      "li"
    ],
    "overall": [
      "ul",
      "li"
    ],
    "solution": [
      "h1"
    ],
    "example": [
      "h1",
      "h1",
      "p"
    ],
    "custom": [
      "p",
      "strong",
      "p",
      "strong"
    ],
    "performing": [
      "p",
      "strong"
    ],
    "some": [
      "p",
      "strong"
    ],
    "action": [
      "p",
      "strong"
    ],
    "an": [
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "string": [
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "blob": [
      "p",
      "strong"
    ],
    "//": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "following": [
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "private": [
      "pre",
      "pre"
    ],
    "members": [
      "pre"
    ],
    "must": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "be": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "p"
    ],
    "defined": [
      "pre",
      "p",
      "strong",
      "p"
    ],
    "exampleprivate": [
      "pre"
    ],
    "int": [
      "pre"
    ],
    "validationerrcnt": [
      "pre",
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "lasterror": [
      "pre",
      "pre",
      "pre"
    ],
    "\"\"[webmethod]": [
      "pre"
    ],
    "public": [
      "pre"
    ],
    "bool": [
      "pre",
      "pre",
      "pre"
    ],
    "processvaluestring": [
      "pre"
    ],
    "strxml{": [
      "pre",
      "pre"
    ],
    "connectionstring": [
      "pre"
    ],
    "\"initial": [
      "pre"
    ],
    "catalog=snippetsdata": [
      "pre"
    ],
    "source=winxp\\\\sqlexpressintegrated": [
      "pre"
    ],
    "security=sspi\";": [
      "pre"
    ],
    "sqlconnection": [
      "pre"
    ],
    "cn": [
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "sqlconnectionconnectionstring);": [
      "pre"
    ],
    "retval": [
      "pre",
      "pre"
    ],
    "false": [
      "pre"
    ],
    "try": [
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "create": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "xmlreadersettings": [
      "pre",
      "pre"
    ],
    "object": [
      "pre"
    ],
    "since": [
      "pre",
      "pre"
    ],
    "we'll": [
      "pre",
      "pre",
      "pre"
    ],
    "need": [
      "pre"
    ],
    "add": [
      "pre"
    ],
    "our": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "it": [
      "pre"
    ],
    "xrs": [
      "pre"
    ],
    "xmlreadersettings);": [
      "pre"
    ],
    "set": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "document": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "against": [
      "pre",
      "pre"
    ],
    "xmlschemaset": [
      "pre"
    ],
    "xset": [
      "pre"
    ],
    "xmlschemaset);": [
      "pre"
    ],
    "read": [
      "pre"
    ],
    "under": [
      "pre"
    ],
    "root": [
      "pre"
    ],
    "xmlreader": [
      "pre",
      "pre",
      "pre"
    ],
    "xmlschemareader": [
      "pre"
    ],
    "xmltextreaderhttpcontext.current.request.physicalapplicationpath": [
      "pre"
    ],
    "+": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "\"\\\\xsd\\\\userschemaxsd\");": [
      "pre"
    ],
    "\\\\xsd\\\\userschemaxsd": [
      "a"
    ],
    "attribute": [
      "pre"
    ],
    "with": [
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "pre",
      "pre",
      "p",
      "ul",
      "li"
    ],
    "xsetadd(null,": [
      "pre"
    ],
    "xmlschemareader;": [
      "pre"
    ],
    "finally": [
      "pre"
    ],
    "attach": [
      "pre"
    ],
    "reader": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "h3",
      "h3",
      "h3",
      "h3",
      "ul",
      "li"
    ],
    "settings": [
      "pre",
      "pre",
      "pre"
    ],
    "xrsschemas.add(xset);": [
      "pre"
    ],
    "we": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "define": [
      "pre"
    ],
    "event": [
      "pre",
      "pre",
      "p",
      "strong"
    ],
    "handler": [
      "pre",
      "p",
      "strong"
    ],
    "xrsvalidationeventhandler": [
      "pre"
    ],
    "+=": [
      "pre"
    ],
    "validationeventhandlervalidationeventhandler);": [
      "pre"
    ],
    "want": [
      "pre"
    ],
    "report": [
      "pre"
    ],
    "warnings": [
      "pre",
      "pre"
    ],
    "as": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "p"
    ],
    "well": [
      "pre"
    ],
    "errors": [
      "pre",
      "pre",
      "pre"
    ],
    "xrsvalidationflags": [
      "pre",
      "pre"
    ],
    "|": [
      "pre"
    ],
    "xmlschemavalidationflagsreportvalidationwarnings;": [
      "pre"
    ],
    "type": [
      "pre",
      "pre"
    ],
    "should": [
      "pre"
    ],
    "so": [
      "pre",
      "pre"
    ],
    "enforce": [
      "pre"
    ],
    "xrsvalidationtype": [
      "pre"
    ],
    "validationtypeschema;": [
      "pre"
    ],
    "and": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "associate": [
      "pre",
      "pre"
    ],
    "stringreader": [
      "pre",
      "pre"
    ],
    "sreader": [
      "pre",
      "pre"
    ],
    "stringreaderstrxml);": [
      "pre",
      "pre"
    ],
    "xmlread": [
      "pre",
      "pre"
    ],
    "xmlreadercreate(sreader,": [
      "pre"
    ],
    "xrs;": [
      "pre"
    ],
    "lastly": [
      "pre",
      "pre"
    ],
    "load": [
      "pre",
      "pre"
    ],
    "forces": [
      "pre",
      "pre"
    ],
    "performed": [
      "pre",
      "pre"
    ],
    "process": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "xmldocument": [
      "pre",
      "pre"
    ],
    "xmldoc": [
      "pre",
      "pre"
    ],
    "xmldocument);": [
      "pre",
      "pre"
    ],
    "xmldocload(xmlread);": [
      "pre",
      "pre"
    ],
    "if": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "returns": [
      "pre"
    ],
    "throw": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "exception": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "last": [
      "pre"
    ],
    "error": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "message": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "failed": [
      "pre",
      "pre"
    ],
    "encountered": [
      "pre"
    ],
    "while": [
      "pre"
    ],
    "validating": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "exceptionlasterror);": [
      "pre"
    ],
    "}": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "else": [
      "pre",
      "pre"
    ],
    "passed": [
      "pre",
      "ul",
      "li"
    ],
    "otherwise": [
      "pre"
    ],
    "request": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "normal": [
      "pre"
    ],
    "sqlcommand": [
      "pre",
      "pre"
    ],
    "sqlcmd": [
      "pre",
      "pre"
    ],
    "sqlcommand\"xmlvalidationsample\",cn);": [
      "pre"
    ],
    "sqlparameter": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "sqlparam": [
      "pre",
      "pre"
    ],
    "sqlparameter\"@strxml\",": [
      "pre",
      "pre"
    ],
    "sqldbtypevarchar,": [
      "pre",
      "pre"
    ],
    "strxmllength);": [
      "pre",
      "pre"
    ],
    "outparam": [
      "pre",
      "pre"
    ],
    "sqlparameter\"@retval\",": [
      "pre",
      "pre"
    ],
    "sqldbtypeint);": [
      "pre",
      "pre"
    ],
    "outparamdirection": [
      "pre",
      "pre"
    ],
    "parameterdirectionreturnvalue;": [
      "pre",
      "pre"
    ],
    "sqlparamvalue": [
      "pre",
      "pre"
    ],
    "strxml": [
      "pre",
      "pre",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "sqlcmdcommandtype": [
      "pre",
      "pre"
    ],
    "commandtypestoredprocedure;": [
      "pre",
      "pre"
    ],
    "sqlcmdparameters.add(sqlparam);": [
      "pre",
      "pre"
    ],
    "sqlcmdparameters.add(outparam);": [
      "pre",
      "pre"
    ],
    "cnopen();": [
      "pre",
      "pre"
    ],
    "sqlcmdexecutenonquery();": [
      "pre",
      "pre"
    ],
    "converttoint16(outparam.value)": [
      "pre"
    ],
    "true": [
      "pre"
    ],
    "cnclose();": [
      "pre",
      "pre"
    ],
    "catch": [
      "pre",
      "pre"
    ],
    "ex": [
      "pre",
      "pre"
    ],
    "replace": [
      "pre"
    ],
    "user": [
      "pre"
    ],
    "supplied": [
      "pre",
      "pre"
    ],
    "handling": [
      "pre",
      "pre"
    ],
    "log": [
      "pre"
    ],
    "perform": [
      "pre",
      "p",
      "title"
    ],
    "graceful": [
      "pre"
    ],
    "exception\"error": [
      "pre"
    ],
    "\"": [
      "pre",
      "pre",
      "pre"
    ],
    "exmessage);": [
      "pre"
    ],
    "return": [
      "pre",
      "pre",
      "pre"
    ],
    "result": [
      "pre",
      "h1",
      "p",
      "p"
    ],
    "retval}": [
      "pre"
    ],
    "void": [
      "pre"
    ],
    "validationeventhandlerobject": [
      "pre"
    ],
    "sender": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "systemxml.schema.validationeventargs": [
      "pre"
    ],
    "args{": [
      "pre"
    ],
    "validationerrcnt++": [
      "pre"
    ],
    "args.severity.equals(xmlseveritytype.warning))": [
      "pre"
    ],
    "\"warning": [
      "pre"
    ],
    "argsmessage;": [
      "pre",
      "pre"
    ],
    "args.severity.equals(xmlseveritytype.error))": [
      "pre"
    ],
    "\"error": [
      "pre"
    ],
    "}}": [
      "pre"
    ],
    "pattern": [
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "match": [
      "p",
      "strong",
      "pre",
      "pre",
      "pre"
    ],
    "validators": [
      "p",
      "strong"
    ],
    "?xml": [
      "pre",
      "pre"
    ],
    "version=\"10\"": [
      "pre",
      "pre"
    ],
    "encoding=\"utf-8\"?": [
      "pre"
    ],
    "xs:schema": [
      "pre"
    ],
    "id=\"userschema\"": [
      "pre"
    ],
    "targetnamespace=\"http//tempuri.org/xmlschema.xsd\"": [
      "pre"
    ],
    "elementformdefault=\"qualified\"": [
      "pre"
    ],
    "xmlns=\"http//tempuri.org/xmlschema.xsd\"": [
      "pre"
    ],
    "xmlnsmstns=\"http://tempuri.org/xmlschema.xsd\"": [
      "pre"
    ],
    "xmlnsxs=\"http://www.w3.org/2001/xmlschema\">": [
      "pre"
    ],
    "xs:element": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "name=\"users\"": [
      "pre"
    ],
    "xs:complextype>": [
      "pre",
      "pre"
    ],
    "xs:sequence>": [
      "pre",
      "pre"
    ],
    "minoccurs=\"1\"": [
      "pre"
    ],
    "maxoccurs=\"100\"": [
      "pre"
    ],
    "name=\"user\"": [
      "pre"
    ],
    "http//tempuri.org/xmlschema.xsd": [
      "a",
      "a",
      "a",
      "a",
      "a",
      "a"
    ],
    "http//www.w3.org/2001/xmlschema": [
      "a",
      "a"
    ],
    "name=\"username\"": [
      "pre"
    ],
    "type=\"usernamestring\"": [
      "pre"
    ],
    "/": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "name=\"password\"": [
      "pre"
    ],
    "type=\"passwordstring\"": [
      "pre"
    ],
    "name=\"name\"": [
      "pre"
    ],
    "type=\"namestring\"": [
      "pre",
      "pre"
    ],
    "maxoccurs=\"2\"": [
      "pre"
    ],
    "name=\"streetaddress\"": [
      "pre"
    ],
    "type=\"addressstring\"": [
      "pre"
    ],
    "name=\"city\"": [
      "pre"
    ],
    "name=\"state\"": [
      "pre"
    ],
    "type=\"statevalue\"": [
      "pre"
    ],
    "name=\"postalcode\"": [
      "pre"
    ],
    "type=\"postalstring\"": [
      "pre"
    ],
    "name=\"phone\"": [
      "pre"
    ],
    "type=\"phonestring\"": [
      "pre"
    ],
    "name=\"ssn\"": [
      "pre"
    ],
    "type=\"ssnstring\"": [
      "pre"
    ],
    "name=\"emailaddress\"": [
      "pre"
    ],
    "type=\"emailstring\"": [
      "pre"
    ],
    "minoccurs=\"0\"": [
      "pre"
    ],
    "name=\"url\"": [
      "pre"
    ],
    "type=\"xsanyuri\"": [
      "pre"
    ],
    "/xs:sequence>": [
      "pre",
      "pre"
    ],
    "/xs:complextype>": [
      "pre",
      "pre"
    ],
    "/xs:element>": [
      "pre",
      "pre"
    ],
    "xs:simpletype": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "name=\"usernamestring\"": [
      "pre"
    ],
    "xs:restriction": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "base=\"xsstring\">": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "!--": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "allows": [
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "word": [
      "pre",
      "pre",
      "pre"
    ],
    "characters": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "a-za-z0-9_],": [
      "pre",
      "pre"
    ],
    "single": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "quote": [
      "pre",
      "pre"
    ],
    "dash": [
      "pre",
      "pre"
    ],
    "period": [
      "pre",
      "pre",
      "pre"
    ],
    "at": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "least": [
      "pre",
      "pre",
      "pre"
    ],
    "two": [
      "pre",
      "pre"
    ],
    "long": [
      "pre",
      "pre",
      "pre"
    ],
    "less": [
      "pre",
      "pre",
      "p"
    ],
    "than": [
      "pre",
      "pre",
      "pre"
    ],
    "--": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "xs:minlength": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "value=\"2\"": [
      "pre",
      "pre",
      "pre"
    ],
    "xs:maxlength": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "value=\"16\"": [
      "pre",
      "pre"
    ],
    "xs:pattern": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "value=\"^\\w-'\\.]{2,16}$\"": [
      "pre"
    ],
    "/xs:restriction>": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "/xs:simpletype>": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "name=\"passwordstring\"": [
      "pre"
    ],
    "value=\"8\"": [
      "pre"
    ],
    "value=\"^*(?=.*\\d)(?=.*[a-z])(?=.*[a-z])(?=.*\t\t\t[`~!@#\\$%\\^\\&\\*\\(\\)-_\\=\\+\\[\\{\\]\\}\\\\\\|;:',<\\.>/?]).*$\"": [
      "pre"
    ],
    "name=\"namestring\"": [
      "pre"
    ],
    "names": [
      "pre"
    ],
    "no": [
      "pre",
      "ul",
      "li"
    ],
    "more": [
      "pre",
      "h1"
    ],
    "consist": [
      "pre",
      "pre",
      "pre"
    ],
    "alphabetic": [
      "pre"
    ],
    "may": [
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "contain": [
      "pre",
      "pre",
      "pre"
    ],
    "hyphens": [
      "pre",
      "pre",
      "pre"
    ],
    "quotes": [
      "pre"
    ],
    "periods": [
      "pre"
    ],
    "spaces": [
      "pre"
    ],
    "value=\"128\"": [
      "pre"
    ],
    "value=\"^a-za-z-'\\.\\s]{2,128}$\"": [
      "pre"
    ],
    "name=\"addressstring\"": [
      "pre"
    ],
    "many": [
      "pre"
    ],
    "types": [
      "pre",
      "pre"
    ],
    "address": [
      "pre",
      "pre"
    ],
    "formats": [
      "pre",
      "pre"
    ],
    "do": [
      "pre"
    ],
    "series": [
      "pre",
      "pre"
    ],
    "digits": [
      "pre",
      "pre"
    ],
    "potentially": [
      "pre",
      "pre"
    ],
    "containing": [
      "pre"
    ],
    "punctuation": [
      "pre"
    ],
    "followed": [
      "pre",
      "pre",
      "pre"
    ],
    "representing": [
      "pre"
    ],
    "street": [
      "pre",
      "pre"
    ],
    "name": [
      "pre",
      "pre"
    ],
    "then": [
      "pre"
    ],
    "unit": [
      "pre"
    ],
    "number": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "value=\"^\\d{13}.?\\d{0,3}\\s[a-za-z]{2,30}(\\s[a-za-z]{2,15})?([#\\.0-9a-za-z]*)?$\"": [
      "pre"
    ],
    "name=\"statevalue\"": [
      "pre"
    ],
    "states": [
      "pre"
    ],
    "one": [
      "pre"
    ],
    "predefined": [
      "pre"
    ],
    "enumeration": [
      "pre"
    ],
    "exactly": [
      "pre"
    ],
    "xs:length": [
      "pre"
    ],
    "xs:enumeration": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "value=\"al\"": [
      "pre"
    ],
    "value=\"ak\"": [
      "pre"
    ],
    "value=\"ar\"": [
      "pre"
    ],
    "value=\"az\"": [
      "pre"
    ],
    "value=\"ca\"": [
      "pre"
    ],
    "value=\"co\"": [
      "pre"
    ],
    "value=\"ct\"": [
      "pre"
    ],
    "value=\"de\"": [
      "pre"
    ],
    "value=\"dc\"": [
      "pre"
    ],
    "value=\"fl\"": [
      "pre"
    ],
    "value=\"ga\"": [
      "pre"
    ],
    "value=\"hi\"": [
      "pre"
    ],
    "value=\"id\"": [
      "pre"
    ],
    "value=\"il\"": [
      "pre"
    ],
    "value=\"in\"": [
      "pre"
    ],
    "value=\"ia\"": [
      "pre"
    ],
    "value=\"ks\"": [
      "pre"
    ],
    "value=\"ky\"": [
      "pre"
    ],
    "value=\"la\"": [
      "pre"
    ],
    "value=\"me\"": [
      "pre"
    ],
    "value=\"md\"": [
      "pre"
    ],
    "value=\"ma\"": [
      "pre"
    ],
    "value=\"mi\"": [
      "pre"
    ],
    "value=\"mn\"": [
      "pre"
    ],
    "value=\"ms\"": [
      "pre"
    ],
    "value=\"mo\"": [
      "pre"
    ],
    "value=\"mt\"": [
      "pre"
    ],
    "value=\"ne\"": [
      "pre"
    ],
    "value=\"nv\"": [
      "pre"
    ],
    "value=\"nh\"": [
      "pre"
    ],
    "value=\"nj\"": [
      "pre"
    ],
    "value=\"nm\"": [
      "pre"
    ],
    "value=\"ny\"": [
      "pre"
    ],
    "value=\"nc\"": [
      "pre"
    ],
    "value=\"nd\"": [
      "pre"
    ],
    "value=\"oh\"": [
      "pre"
    ],
    "value=\"ok\"": [
      "pre"
    ],
    "value=\"or\"": [
      "pre"
    ],
    "value=\"pa\"": [
      "pre"
    ],
    "value=\"ri\"": [
      "pre"
    ],
    "value=\"sc\"": [
      "pre"
    ],
    "value=\"sd\"": [
      "pre"
    ],
    "value=\"tn\"": [
      "pre"
    ],
    "value=\"tx\"": [
      "pre"
    ],
    "value=\"ut\"": [
      "pre"
    ],
    "value=\"vt\"": [
      "pre"
    ],
    "value=\"va\"": [
      "pre"
    ],
    "value=\"wa\"": [
      "pre"
    ],
    "value=\"wv\"": [
      "pre"
    ],
    "value=\"wi\"": [
      "pre"
    ],
    "value=\"wy\"": [
      "pre"
    ],
    "name=\"postalstring\"": [
      "pre"
    ],
    "us": [
      "pre",
      "pre",
      "p"
    ],
    "postal": [
      "pre"
    ],
    "format": [
      "pre"
    ],
    "zip": [
      "pre"
    ],
    "digit": [
      "pre"
    ],
    "or": [
      "pre",
      "pre",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "zip+4": [
      "pre"
    ],
    "separated": [
      "pre"
    ],
    "value=\"^\\d{5}-]?(\\d{4})?$\"": [
      "pre"
    ],
    "value=\"5\"": [
      "pre"
    ],
    "value=\"10\"": [
      "pre",
      "pre"
    ],
    "name=\"ssnstring\"": [
      "pre"
    ],
    "ssns": [
      "pre"
    ],
    "optional": [
      "pre"
    ],
    "value=\"9\"": [
      "pre"
    ],
    "value=\"11\"": [
      "pre"
    ],
    "value=\"^\\d{3}-]?\\d{2}[-]?\\d{4}$$\"": [
      "pre"
    ],
    "name=\"phonestring\"": [
      "pre"
    ],
    "defines": [
      "pre"
    ],
    "formatted": [
      "pre"
    ],
    "telephone": [
      "pre"
    ],
    "value=\"^01]?[-": [
      "pre"
    ],
    "]?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})[-": [
      "pre"
    ],
    "]?\\d{3}[-": [
      "pre"
    ],
    "]?\\d{4}$\"": [
      "pre"
    ],
    "value=\"32\"": [
      "pre"
    ],
    "name=\"emailstring\"": [
      "pre"
    ],
    "common": [
      "pre"
    ],
    "email": [
      "pre"
    ],
    "can": [
      "pre"
    ],
    "start": [
      "pre"
    ],
    "alphanumeric": [
      "pre"
    ],
    "char": [
      "pre"
    ],
    "hyphen": [
      "pre"
    ],
    "domain": [
      "pre"
    ],
    "meeting": [
      "pre"
    ],
    "same": [
      "pre"
    ],
    "criteria": [
      "pre"
    ],
    "alpha": [
      "pre"
    ],
    "suffix": [
      "pre"
    ],
    "between": [
      "pre"
    ],
    "character": [
      "pre",
      "pre"
    ],
    "value=\"^[0-9a-za-z]([-.\\w]*[0-9a-za-z])*@([0-9a-za-z][-\\w]*[0-9a-za-z]\\.)+[a-za-z]{2,9})$\"": [
      "pre"
    ],
    "value=\"7\"": [
      "pre"
    ],
    "value=\"256\"": [
      "pre"
    ],
    "/xs:schema>": [
      "pre"
    ],
    "problem": [
      "h1"
    ],
    "demonstrates": [
      "p",
      "p"
    ],
    "unvalidated": [
      "p",
      "h3",
      "h3"
    ],
    "webmethod]public": [
      "pre"
    ],
    "processvaluenovalidationstring": [
      "pre"
    ],
    "xmlreadercreate(sreader);": [
      "pre"
    ],
    "sqlcommand\"xmlvalidationsample\",": [
      "pre"
    ],
    "cn;": [
      "pre"
    ],
    "exceptionex.message);": [
      "pre"
    ],
    "true}": [
      "pre"
    ],
    "passing": [
      "ul",
      "li"
    ],
    "sql": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "pre",
      "p"
    ],
    "stored": [
      "ul",
      "ul",
      "li",
      "li",
      "pre"
    ],
    "procedure": [
      "ul",
      "ul",
      "li",
      "li",
      "pre"
    ],
    "depending": [
      "ul",
      "li"
    ],
    "implementation": [
      "ul",
      "li"
    ],
    "injection": [
      "ul",
      "li",
      "pre",
      "p"
    ],
    "possible": [
      "ul",
      "li",
      "pre"
    ],
    "particularly": [
      "ul",
      "li"
    ],
    "instances": [
      "ul",
      "li"
    ],
    "where": [
      "ul",
      "li"
    ],
    "dynamic": [
      "ul",
      "li"
    ],
    "constructed": [
      "ul",
      "li"
    ],
    "from": [
      "ul",
      "li",
      "h3",
      "h3",
      "h3",
      "h3",
      "p"
    ],
    "element": [
      "ul",
      "li",
      "pre",
      "pre",
      "p"
    ],
    "values": [
      "ul",
      "li"
    ],
    "arguments": [
      "ul",
      "li"
    ],
    "sp_executesql": [
      "ul",
      "li"
    ],
    "clear": [
      "ul",
      "li"
    ],
    "text": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "file": [
      "ul",
      "li"
    ],
    "database": [
      "ul",
      "li"
    ],
    "other": [
      "p"
    ],
    "secure": [
      "p"
    ],
    "coding": [
      "p"
    ],
    "issues": [
      "p"
    ],
    "potential": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li",
      "h1"
    ],
    "leakage": [
      "ul",
      "li"
    ],
    "internals": [
      "ul",
      "li"
    ],
    "exceptions": [
      "ul",
      "li"
    ],
    "case": [
      "h1"
    ],
    "classes": [
      "p"
    ],
    "included": [
      "p"
    ],
    "any": [
      "p"
    ],
    "project": [
      "p"
    ],
    "making": [
      "p"
    ],
    "provided": [
      "p"
    ],
    "above": [
      "p"
    ],
    "systemweb.services;using": [
      "pre"
    ],
    "systemweb.services.protocols;using": [
      "pre"
    ],
    "systemxml;using": [
      "pre"
    ],
    "systemxml.schema;using": [
      "pre"
    ],
    "systemio;using": [
      "pre"
    ],
    "systemdata;using": [
      "pre"
    ],
    "systemdata.sqlclient;": [
      "pre"
    ],
    "leveraging": [
      "p"
    ],
    "webservice": [
      "p"
    ],
    "studio": [
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "pass": [
      "p"
    ],
    "various": [
      "p"
    ],
    "strings": [
      "p"
    ],
    "observe": [
      "p"
    ],
    "server": [
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "response": [
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "behavior": [
      "p"
    ],
    "input": [
      "p",
      "strong"
    ],
    "users": [
      "pre",
      "pre"
    ],
    "xmlns=\"http//tempuri.org/xmlschema.xsd\">": [
      "pre",
      "pre"
    ],
    "user>": [
      "pre",
      "pre"
    ],
    "username>foobar</username>": [
      "pre",
      "pre"
    ],
    "password>pdw123a@1234": [
      "pre"
    ],
    "/password>": [
      "pre"
    ],
    "name>foo": [
      "pre",
      "pre"
    ],
    "bar/name>": [
      "pre",
      "pre"
    ],
    "streetaddress><![cdata[<]]>script<![cdata[>]]>alert(‘xss’);<![cdata[<]]>/script<![cdata[>]]>": [
      "pre"
    ],
    "/streetaddress>": [
      "pre"
    ],
    "city>redmond</city>": [
      "pre"
    ],
    "state>wa</state>": [
      "pre"
    ],
    "postalcode>01234</postalcode>": [
      "pre"
    ],
    "phone>1-223-123-1234</phone>": [
      "pre"
    ],
    "ssn>123-12-1234</ssn>": [
      "pre"
    ],
    "emailaddress><![cdata['": [
      "pre"
    ],
    "1=1": [
      "pre",
      "pre"
    ],
    "''=']": [
      "pre"
    ],
    "</emailaddress>": [
      "pre"
    ],
    "url>http://www.microsoft.com</url>": [
      "pre"
    ],
    "/user></users>": [
      "pre",
      "pre"
    ],
    "xmlns=\"http//tempuri.org/xmlschema.xsd": [
      "pre"
    ],
    "user> <username>foobar</username> <password>pdw123a@1234</password> <name>foo": [
      "pre"
    ],
    "bar/name> <streetaddress>aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</streetaddress> <city>redmond</city> <state>wa</state> <postalcode>01234</postalcode> <phone>1-223-123-1234</phone> <ssn>123-12-1234</ssn> <emailaddress>example@microsoft.com</emailaddress> <url>http://www.microsoft.com</url>": [
      "pre"
    ],
    "output": [
      "h3",
      "h3",
      "h3",
      "h3"
    ],
    "within": [
      "pre"
    ],
    "processing": [
      "pre"
    ],
    "*******": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "systemreflection.targetinvocationexception:": [
      "pre",
      "pre",
      "pre"
    ],
    "has": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "been": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "thrown": [
      "pre",
      "pre",
      "pre"
    ],
    "target": [
      "pre",
      "pre",
      "pre"
    ],
    "invocation": [
      "pre",
      "pre",
      "pre"
    ],
    "---": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "systemweb.services.protocols.soapexception:system.web.services.protocols.soapexception:": [
      "pre",
      "pre"
    ],
    "was": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "unable": [
      "pre",
      "pre",
      "pre"
    ],
    "systemexception:": [
      "pre",
      "pre"
    ],
    "description": [
      "pre"
    ],
    "'an": [
      "pre"
    ],
    "invalid": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "found": [
      "pre"
    ],
    "content'.could": [
      "pre"
    ],
    "not": [
      "pre"
    ],
    "find": [
      "pre"
    ],
    "prepared": [
      "pre"
    ],
    "statement": [
      "pre",
      "pre"
    ],
    "handle": [
      "pre",
      "p"
    ],
    "0sp_xml_removedocument:": [
      "pre"
    ],
    "value": [
      "pre",
      "pre",
      "pre"
    ],
    "parameter": [
      "pre"
    ],
    "invalidthe": [
      "pre"
    ],
    "parse": [
      "pre"
    ],
    "0xc00ce508": [
      "pre"
    ],
    "occurred": [
      "pre"
    ],
    "line": [
      "pre"
    ],
    "near": [
      "pre"
    ],
    "\"users": [
      "pre"
    ],
    "password>pdw123a@1234</password>": [
      "pre"
    ],
    "streetaddress><![cdata[<]]>script<![cdata[>]]>alert(\".the": [
      "pre"
    ],
    "terminated": [
      "pre"
    ],
    "serviceprocessvaluenovalidation(string": [
      "pre",
      "pre"
    ],
    "c\\documents": [
      "pre",
      "pre",
      "pre"
    ],
    "settings\\xxx\\\t\tmy": [
      "pre"
    ],
    "documents\\visual": [
      "pre",
      "pre"
    ],
    "2005\\websites\\website2\\app_code\\servicecs:line": [
      "pre",
      "pre",
      "pre"
    ],
    "end": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "inner": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "stack": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "trace": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "systemweb.services.protocols.soaphttpclientprotocol.readresponse(soapclientmessage": [
      "pre",
      "pre",
      "pre"
    ],
    "webresponse": [
      "pre",
      "pre",
      "pre"
    ],
    "stream": [
      "pre",
      "pre",
      "pre"
    ],
    "responsestream": [
      "pre",
      "pre"
    ],
    "systemweb.services.protocols.soaphttpclientprotocol.invoke(string": [
      "pre",
      "pre",
      "pre"
    ],
    "methodname": [
      "pre",
      "pre",
      "pre"
    ],
    "object]": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "parameters": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "systemreflection.runtimemethodinfo.internalinvoke(object": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "obj": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "bindingflags": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "invokeattr": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "binder": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "cultureinfo": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "culture": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "boolean": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "isbinderdefault": [
      "pre",
      "pre",
      "pre"
    ],
    "assembly": [
      "pre",
      "pre",
      "pre"
    ],
    "caller": [
      "pre",
      "pre",
      "pre"
    ],
    "verifyaccess": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "systemreflection.runtimemethodinfo.invoke(object": [
      "pre",
      "pre",
      "pre"
    ],
    "webservicestudiomainform.invokewebmethod()": [
      "pre",
      "pre"
    ],
    "webservicestudiomainform.buttoninvoke_click(object": [
      "pre",
      "pre",
      "pre"
    ],
    "eventargs": [
      "pre",
      "pre",
      "pre"
    ],
    "e": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.control.onclick(eventargs": [
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.button.onclick(eventargs": [
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.button.onmouseup(mouseeventargs": [
      "pre",
      "pre",
      "pre"
    ],
    "mevent": [
      "pre",
      "pre"
    ],
    "systemwindows.forms.control.wmmouseup(message&": [
      "pre",
      "pre",
      "pre"
    ],
    "m": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "mousebuttons": [
      "pre",
      "pre",
      "pre"
    ],
    "button": [
      "pre",
      "pre",
      "pre"
    ],
    "int32": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "clicks": [
      "pre",
      "pre"
    ],
    "systemwindows.forms.control.wndproc(message&": [
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.buttonbase.wndproc(message&": [
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.button.wndproc(message&": [
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.controlnativewindow.onmessage(message&": [
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.controlnativewindow.wndproc(message&": [
      "pre",
      "pre",
      "pre"
    ],
    "systemwindows.forms.nativewindow.callback(intptr": [
      "pre",
      "pre",
      "pre"
    ],
    "hwnd": [
      "pre",
      "pre",
      "pre"
    ],
    "msg": [
      "pre",
      "pre",
      "pre"
    ],
    "intptr": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "wparam": [
      "pre",
      "pre",
      "pre"
    ],
    "lparam": [
      "pre",
      "pre",
      "pre"
    ],
    "validated": [
      "h3",
      "h3"
    ],
    "caught": [
      "pre",
      "pre"
    ],
    "systemweb.services.protocols.soapexception:": [
      "pre",
      "pre"
    ],
    "'http//tempuri.org/xmlschema.xsd:emailaddress'": [
      "pre"
    ],
    "-": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "''": [
      "pre"
    ],
    "''=''": [
      "pre"
    ],
    "according": [
      "pre"
    ],
    "its": [
      "pre",
      "pre"
    ],
    "datatype": [
      "pre",
      "pre"
    ],
    "'http//tempuri.org/xmlschema.xsd:emailstring'": [
      "pre"
    ],
    "constraint": [
      "pre",
      "pre"
    ],
    "failedat": [
      "pre"
    ],
    "serviceprocessvalue(string": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "settings\\xxx\\my": [
      "pre",
      "pre"
    ],
    "97---": [
      "pre"
    ],
    "---at": [
      "pre",
      "pre"
    ],
    "responsestreamat": [
      "pre"
    ],
    "parametersat": [
      "pre"
    ],
    "strxml---": [
      "pre"
    ],
    "verifyaccessat": [
      "pre",
      "pre"
    ],
    "cultureat": [
      "pre"
    ],
    "webservicestudiomainform.invokewebmethod()at": [
      "pre"
    ],
    "eat": [
      "pre",
      "pre",
      "pre"
    ],
    "meventat": [
      "pre"
    ],
    "clicksat": [
      "pre"
    ],
    "mat": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "---system.exception:": [
      "pre"
    ],
    "errorthe": [
      "pre"
    ],
    "'http//tempuri.org/xmlschema.xsd:streetaddress'": [
      "pre"
    ],
    "'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'": [
      "pre"
    ],
    "accordingto": [
      "pre"
    ],
    "'http//tempuri.org/xmlschema.xsd:addressstring'": [
      "pre"
    ],
    "documents\t\t\t\\visual": [
      "pre"
    ],
    "simply": [
      "pre"
    ],
    "processed": [
      "pre"
    ],
    "without": [
      "pre"
    ],
    "results": [
      "pre"
    ],
    "encoding=\"utf-16\"?<soap:envelope": [
      "pre"
    ],
    "xmlnssoap=\"http://schemas.xmlsoap.org/soap/envelope/\"": [
      "pre"
    ],
    "xmlnsxsi=\"http://www.w3.org/2001/xmlschema-instance\"": [
      "pre"
    ],
    "xmlnsxsd=\"http://www.w3.org/2001/xmlschema\">": [
      "pre"
    ],
    "soap:body>": [
      "pre"
    ],
    "processvaluenovalidationresponse": [
      "pre"
    ],
    "xmlns=\"http//codesamples.microsoft.com/xmlvalidationexample/\">": [
      "pre"
    ],
    "http//schemas.xmlsoap.org/soap/envelope/": [
      "a"
    ],
    "http//www.w3.org/2001/xmlschema-instance": [
      "a"
    ],
    "http//codesamples.microsoft.com/xmlvalidationexample/": [
      "a"
    ],
    "processvaluenovalidationresult>true</processvaluenovalidationresult>": [
      "pre"
    ],
    "/processvaluenovalidationresponse>": [
      "pre"
    ],
    "/soap:body></soap:envelope>": [
      "pre"
    ],
    "leverarage": [
      "p"
    ],
    "known": [
      "p"
    ],
    "good": [
      "p"
    ],
    "characters,": [
      "p"
    ],
    "minimum": [
      "p",
      "p"
    ],
    "maximum": [
      "p",
      "p"
    ],
    "length": [
      "p"
    ],
    "bounds": [
      "p"
    ],
    "checking": [
      "p"
    ],
    "occurances": [
      "p"
    ],
    "signficantly": [
      "p"
    ],
    "likely": [
      "p"
    ],
    "manipulation": [
      "p"
    ],
    "such": [
      "p",
      "p"
    ],
    "cross-site": [
      "p"
    ],
    "scripting": [
      "p"
    ],
    "failure": [
      "p"
    ],
    "conditions": [
      "p"
    ],
    "task": [
      "p"
    ],
    "xsd": [
      "p"
    ],
    "strongly": [
      "p"
    ],
    "expressions": [
      "p",
      "ul",
      "li"
    ],
    "typical": [
      "p"
    ],
    "elements": [
      "p"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "schemas": [
      "ul",
      "li"
    ],
    "http//msdn.microsoft.com/library/en-us/cpguide/html/cpconvalidationofxmlwithschemas.aspxml": [
      "ul"
    ],
    "usage": [
      "ul",
      "li"
    ],
    "http//msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconreadingxmlwithxmlreader.aspregular": [
      "ul"
    ],
    ".net": [
      "ul",
      "li"
    ],
    "framework:": [
      "ul",
      "li"
    ],
    "http//msdn2.microsoft.com/en-us/library/hs600312(vs.80).aspx": [
      "ul",
      "li",
      "a"
    ],
    "http//msdn.microsoft.com/library/en-us/cpguide/html/cpconvalidationofxmlwithschemas.asp": [
      "li",
      "a"
    ],
    "http//msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconreadingxmlwithxmlreader.asp": [
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Objectives",
      "Scenarios",
      "Solution Example",
      "Problem Example",
      "Case",
      "Expected Result",
      "More Information",
      "Additional Resources"
    ],
    "ul": [
      "C# Web Services",
      "Mitigate data validation induced vulnerabilities through use of XML schema validation which employs strong validation using regular expression patterns on expected data Improve application efficiency by first requiring validation of XML payload prior to executing business logic",
      "Application component needs to access functionality that only exists in a different runtime component Application occasionally needs access to privileged functionality but wants to use a low-privileged security context for enhanced overall security",
      "No XML schema validation prior to passing the strXML string to SQL stored procedure Depending on stored procedure implementation SQL injection may be possible (particularly in instances where dynamic SQL is constructed from XML element values and passed as arguments to sp_executesql) clear text in a file or database",
      "Potential information leakage of application internals through throw exceptions",
      "Validation of XML with Schemas: http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.aspXML Reader usage: http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.aspRegular Expressions (.NET Framework): http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx"
    ],
    "li": [
      "C#",
      "Web Services",
      "Mitigate data validation induced vulnerabilities through use of XML schema validation which employs strong validation using regular expression patterns on expected data",
      "Improve application efficiency by first requiring validation of XML payload prior to executing business logic",
      "Application component needs to access functionality that only exists in a different runtime component",
      "Application occasionally needs access to privileged functionality but wants to use a low-privileged security context for enhanced overall security",
      "No XML schema validation prior to passing the strXML string to SQL stored procedure",
      "Depending on stored procedure implementation SQL injection may be possible (particularly in instances where dynamic SQL is constructed from XML element values and passed as arguments to sp_executesql) clear text in a file or database",
      "Potential information leakage of application internals through throw exceptions",
      "Validation of XML with Schemas: http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp",
      "XML Reader usage: http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp",
      "Regular Expressions (.NET Framework): http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx"
    ],
    "p": [
      "The purpose of this code sample is to demonstrate a technique to securely validate the XML payload received during a web service web method call using .NET.",
      "Custom Web method for performing some action on an XML String Blob",
      "Custom Defined XML Validation Event Handler",
      "Sample XML Schema with pattern match validators",
      "The following example demonstrates the use of unvalidated XML received by a web service method.",
      "Other Secure Coding Issues",
      "The following classes must be included in any project making use of the sample code provided above:",
      "Leveraging WebService Studio to pass in various XML strings allows us to observe server response behavior:",
      "Input XML",
      "1)",
      "2)",
      "Web services which leverarage XML schema validation to perform pattern validation (known good characters), minimum and maximum length and bounds checking, and minimum / maximum occurances of an element is signficantly less likely to result in manipulation of application logic or result in data validation induced vulnerabilities such as SQL injection, Cross-site Scripting and failure to handle error conditions. This code sample demonstrates such a task using the an XSD with strongly defined regular expressions for typical data elements.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "strong": [
      "Custom Web method for performing some action on an XML String Blob",
      "Custom Defined XML Validation Event Handler",
      "Sample XML Schema with pattern match validators",
      "Input XML"
    ],
    "pre": [
      "// The following private members must be defined for this exampleprivate int validationErrCnt = 0;        private string lastError = \"\";[WebMethod]",
      "public bool ProcessValue(string strXML){    string connectionString = \"Initial Catalog=snippets;Data Source=winxp\\\\sqlexpress;Integrated Security=SSPI;\";    SqlConnection cn = New SqlConnection(connectionString);    bool retval = false;    try {        // Create an XmlReaderSettings object since  we'll need to add our schema to it        XmlReaderSettings xrs = new XmlReaderSettings();        // Create a schema set which we'll use to validate our XML Document against        XmlSchemaSet xset = new XmlSchemaSet();",
      "// Read in our schema under the web root.        XmlReader xmlschemareader = new XmlTextReader(HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\xsd\\\\Userschema.xsd\");",
      "// Attribute the XML schema with our schema set        xset.Add(null, xmlschemareader);",
      "// Finally attach our XML schema set to the reader settings        xrs.Schemas.Add(xset);",
      "// We define a Validation Event Handler        xrs.ValidationEventHandler += new ValidationEventHandler(ValidationEventHandler);        // We want to report warnings as well as errors        xrs.ValidationFlags = xrs.ValidationFlags | XmlSchemaValidationFlags.ReportValidationWarnings;        // Our validation type should be set to schema so we enforce the schema on the document        xrs.ValidationType = ValidationType.Schema;",
      "// Create our XML reader and associate our reader settings        StringReader sreader = new StringReader(strXML);        XmlReader xmlread = XmlReader.Create(sreader, xrs);",
      "// Lastly load the document which forces a schema validation to be performed in the process        XmlDocument xmldoc = new XmlDocument();        xmldoc.Load(xmlread);",
      "// If our event returns errors (and warnings) throw a new exception with our last error as the message        if (validationErrCnt > 0)        {            // FAILED VALIDATION: If we encountered errors while validating the XML",
      "throw new Exception(lastError);        }        else        {            // PASSED VALIDATION: Otherwise process our request as normal",
      "SqlCommand sqlcmd = new SqlCommand(\"XMLValidationSample\",cn);            SqlParameter sqlparam = new SqlParameter(\"@strxml\", SqlDbType.VarChar, strXML.Length);            SqlParameter outparam = new SqlParameter(\"@retval\", SqlDbType.Int);            outparam.Direction = ParameterDirection.ReturnValue;            sqlparam.Value = strXML;            sqlcmd.CommandType = CommandType.StoredProcedure;            sqlcmd.Parameters.Add(sqlparam);            sqlcmd.Parameters.Add(outparam);",
      "cn.Open();            sqlcmd.ExecuteNonQuery();",
      "if( Convert.ToInt16(outparam.Value) > 0)            {       retval = true;            }            cn.Close();        }     }    catch (Exception ex)    {        // Replace following throw with User supplied exception handling code:         //  Log exception and perform graceful error handling        throw new Exception(\"Error validating XML: \" + ex.Message);    }    // return result    return retval;}",
      "void ValidationEventHandler(object sender, System.Xml.Schema.ValidationEventArgs args){    validationErrCnt++;    if (args.Severity.Equals(XmlSeverityType.Warning))    {        lastError = \"Warning: \" + args.Message;    }    else if (args.Severity.Equals(XmlSeverityType.Error))    {       lastError = \"Error: \" + args.Message;    }}",
      "<?xml version=\"1.0\" encoding=\"utf-8\"?>",
      "<xs:schema id=\"UserSchema\" targetNamespace=\"http://tempuri.org/XMLSchema.xsd\" \telementFormDefault=\"qualified\" xmlns=\"http://tempuri.org/XMLSchema.xsd\"\t xmlns:mstns=\"http://tempuri.org/XMLSchema.xsd\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">          <xs:element name=\"Users\">            <xs:complexType>              <xs:sequence>                <xs:element minOccurs=\"1\" maxOccurs=\"100\" name=\"User\">          <xs:complexType>",
      "<xs:sequence>              <xs:element name=\"username\" type=\"usernamestring\" />              <xs:element name=\"password\" type=\"passwordstring\" />              <xs:element name=\"name\" type=\"namestring\" />              <xs:element maxOccurs=\"2\" name=\"streetaddress\" type=\"addressstring\" />              <xs:element name=\"city\" type=\"namestring\" />",
      "<xs:element name=\"state\" type=\"statevalue\" />              <xs:element name=\"postalcode\" type=\"postalstring\" />              <xs:element name=\"phone\" type=\"phonestring\" />              <xs:element name=\"ssn\" type=\"ssnstring\" />              <xs:element name=\"emailaddress\" type=\"emailstring\" />              <xs:element minOccurs=\"0\" name=\"url\" type=\"xs:anyURI\" />",
      "</xs:sequence>          </xs:complexType>        </xs:element>      </xs:sequence>    </xs:complexType>  </xs:element>",
      "<xs:simpleType name=\"usernamestring\">    <xs:restriction base=\"xs:string\">      <!-- Allows word characters [A-Za-z0-9_], single quote, dash and period           must be at least two characters long and less than 16 -->      <xs:minLength value=\"2\" />      <xs:maxLength value=\"16\" />      <xs:pattern value=\"^[\\w-'\\.]{2,16}$\" />",
      "</xs:restriction>  </xs:simpleType>  <xs:simpleType name=\"passwordstring\">    <xs:restriction base=\"xs:string\">      <!-- Allows word characters [A-Za-z0-9_], single quote, dash and period           must be at least two characters long and less than 16 -->      <xs:minLength value=\"8\" />",
      "<xs:maxLength value=\"16\" />      <xs:pattern value=\"^.*(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\t\t\t[`~!@#\\$%\\^\\&\\*\\(\\)-_\\=\\+\\[\\{\\]\\}\\\\\\|;:',<\\.>/?]).*$\" />    </xs:restriction>  </xs:simpleType>  <xs:simpleType name=\"namestring\">",
      "<xs:restriction base=\"xs:string\">      <!-- Names must be at least 2 characters, no more than 128 characters, and consist of   alphabetic characters, and may contain hyphens, single quotes, periods and spaces -->      <xs:minLength value=\"2\" />      <xs:maxLength value=\"128\" />      <xs:pattern value=\"^[a-zA-Z-'\\.\\s]{2,128}$\" />    </xs:restriction>",
      "</xs:simpleType>  <xs:simpleType name=\"addressstring\">    <xs:restriction base=\"xs:string\">      <!-- Since so many different types of address formats we'll do a match against a series    of digits (potentially containing punctuation, followed by a series of characters    representing the street name and then potentially a type of street and unit number -->      <xs:pattern value=\"^\\d{1,3}.?\\d{0,3}\\s[a-zA-Z]{2,30}(\\s[a-zA-Z]{2,15})?([#\\.0-9a-zA-Z]*)?$\" />    </xs:restriction>",
      "</xs:simpleType>  <xs:simpleType name=\"statevalue\">    <xs:restriction base=\"xs:string\">      <!-- States must be one of our predefined enumeration types and consist of exactly 2 characters -->      <xs:length value=\"2\" />      <xs:enumeration value=\"AL\" />",
      "<xs:enumeration value=\"AK\" />      <xs:enumeration value=\"AR\" />      <xs:enumeration value=\"AZ\" />      <xs:enumeration value=\"CA\" />      <xs:enumeration value=\"CO\" />      <xs:enumeration value=\"CT\" />",
      "<xs:enumeration value=\"DE\" />      <xs:enumeration value=\"DC\" />      <xs:enumeration value=\"FL\" />      <xs:enumeration value=\"GA\" />      <xs:enumeration value=\"HI\" />      <xs:enumeration value=\"ID\" />",
      "<xs:enumeration value=\"IL\" />      <xs:enumeration value=\"IN\" />      <xs:enumeration value=\"IA\" />      <xs:enumeration value=\"KS\" />      <xs:enumeration value=\"KY\" />      <xs:enumeration value=\"LA\" />",
      "<xs:enumeration value=\"ME\" />      <xs:enumeration value=\"MD\" />      <xs:enumeration value=\"MA\" />      <xs:enumeration value=\"MI\" />      <xs:enumeration value=\"MN\" />      <xs:enumeration value=\"MS\" />",
      "<xs:enumeration value=\"MO\" />      <xs:enumeration value=\"MT\" />      <xs:enumeration value=\"NE\" />      <xs:enumeration value=\"NV\" />      <xs:enumeration value=\"NH\" />      <xs:enumeration value=\"NJ\" />",
      "<xs:enumeration value=\"NM\" />      <xs:enumeration value=\"NY\" />      <xs:enumeration value=\"NC\" />      <xs:enumeration value=\"ND\" />      <xs:enumeration value=\"OH\" />      <xs:enumeration value=\"OK\" />",
      "<xs:enumeration value=\"OR\" />      <xs:enumeration value=\"PA\" />      <xs:enumeration value=\"RI\" />      <xs:enumeration value=\"SC\" />      <xs:enumeration value=\"SD\" />      <xs:enumeration value=\"TN\" />",
      "<xs:enumeration value=\"TX\" />      <xs:enumeration value=\"UT\" />      <xs:enumeration value=\"VT\" />      <xs:enumeration value=\"VA\" />      <xs:enumeration value=\"WA\" />      <xs:enumeration value=\"WV\" />",
      "<xs:enumeration value=\"WI\" />      <xs:enumeration value=\"WY\" />    </xs:restriction>  </xs:simpleType>  <xs:simpleType name=\"postalstring\">    <xs:restriction base=\"xs:string\">",
      "<!-- The following US postal code format allows ZIP (5 digit) or ZIP+4 formats   as a single string or separated by hyphens -->      <xs:pattern value=\"^\\d{5}[-]?(\\d{4})?$\" />      <xs:minLength value=\"5\" />      <xs:maxLength value=\"10\" />    </xs:restriction>  </xs:simpleType>",
      "<xs:simpleType name=\"ssnstring\">    <xs:restriction base=\"xs:string\">      <!-- SSNs consist of 9 digits but may contain an optional 2 hyphens -->      <xs:minLength value=\"9\" />      <xs:maxLength value=\"11\" />      <xs:pattern value=\"^\\d{3}[-]?\\d{2}[-]?\\d{4}$$\" />",
      "</xs:restriction>  </xs:simpleType>  <xs:simpleType name=\"phonestring\">    <xs:restriction base=\"xs:string\">      <!-- The following pattern defines a US formatted telephone number -->      <xs:pattern value=\"^[01]?[- .]?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})[- .]?\\d{3}[- .]?\\d{4}$\" />",
      "<xs:minLength value=\"10\" />      <xs:maxLength value=\"32\" />    </xs:restriction>  </xs:simpleType>  <xs:simpleType name=\"emailstring\">    <xs:restriction base=\"xs:string\">",
      "<!-- Allows common email address that can start with a alphanumeric char and contain word,       hyphen and period characters followed by a domain name meeting the same criteria followed       by a alpha suffix between 2 and 9 character long -->      <xs:pattern value=\"^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$\" />      <xs:minLength value=\"7\" />      <xs:maxLength value=\"256\" />    </xs:restriction>  </xs:simpleType>",
      "</xs:schema>",
      "[WebMethod]public bool ProcessValueNoValidation(string strXML){    try    {        // Create our XML reader and associate our reader settings        StringReader sreader = new StringReader(strXML);        XmlReader xmlread = XmlReader.Create(sreader);",
      "// Lastly load the document which forces a schema validation to be performed in the process        XmlDocument xmldoc = new XmlDocument();        xmldoc.Load(xmlread);",
      "SqlCommand sqlcmd = new SqlCommand(\"XMLValidationSample\", cn);        SqlParameter sqlparam = new SqlParameter(\"@strxml\", SqlDbType.VarChar, strXML.Length);        SqlParameter outparam = new SqlParameter(\"@retval\", SqlDbType.Int);",
      "outparam.Direction = ParameterDirection.ReturnValue;        sqlparam.Value = strXML;        sqlcmd.CommandType = CommandType.StoredProcedure;        sqlcmd.Parameters.Add(sqlparam);        sqlcmd.Parameters.Add(outparam);",
      "cn.Open();        sqlcmd.ExecuteNonQuery();        cn.Close();    } catch (Exception ex)    {        throw new Exception(ex.Message);    }    return true;}",
      "using System.Web.Services;using System.Web.Services.Protocols;using System.Xml;using System.Xml.Schema;using System.IO;using System.Data;using System.Data.SqlClient;",
      "<Users xmlns=\"http://tempuri.org/XMLSchema.xsd\">   <User>    <username>foobar</username>    <password>pdw123A@1234 </password>    <name>Foo Bar</name>    <streetaddress><![CDATA[<]]>SCRIPT<![CDATA[>]]>alert(‘XSS’);<![CDATA[<]]>/SCRIPT<![CDATA[>]]>    </streetaddress>    <city>Redmond</city>    <state>WA</state>    <postalcode>01234</postalcode>    <phone>1-223-123-1234</phone>    <ssn>123-12-1234</ssn>    <emailaddress><![CDATA[' or 1=1 or ''=']]        ></emailaddress>    <url>http://www.microsoft.com</url>   </User></Users>",
      "<Users xmlns=\"http://tempuri.org/XMLSchema.xsd >   <User> <username>foobar</username> <password>pdw123A@1234</password> <name>Foo Bar</name> <streetaddress>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</streetaddress> <city>Redmond</city> <state>WA</state> <postalcode>01234</postalcode> <phone>1-223-123-1234</phone> <ssn>123-12-1234</ssn> <emailaddress>example@microsoft.com</emailaddress> <url>http://www.microsoft.com</url>    </User></Users>",
      "Error within stored procedure, during processing. Possible SQL injection",
      "******* Exception Text ******* System.Reflection.TargetInvocationException: Exception has been thrown \t\tby the target of an invocation. ---> System.Web.Services.Protocols.SoapException:System.Web.Services.Protocols.SoapException: Server was unable to \t\tprocess request. --->         System.Exception: The error description is \t\t'An invalid character was found in text content.'.Could not find prepared statement with handle 0.sp_xml_removedocument: The value supplied for parameter number 1 is invalid.The XML parse error 0xc00ce508 occurred on line number 1, near the XML text \"<Users xmlns=\"http://tempuri.org/XMLSchema.xsd\">    <User>     <username>foobar</username>     <password>pdw123A@1234</password>     <name>Foo Bar</name>     <streetaddress><![CDATA[<]]>SCRIPT<![CDATA[>]]>alert(\".The statement has been terminated.   at Service.ProcessValueNoValidation(String strXML) in c:\\Documents and Settings\\XXX\\\t\tMy Documents\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 130   --- End of inner exception stack trace ---   at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message,\t         WebResponse response, Stream responseStream)   at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object[] parameters)   at Service.ProcessValueNoValidation(String strXML)   --- End of inner exception stack trace ---   at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, \t\tBindingFlags invokeAttr, Binder binder, Object[] parameters,\t\t CultureInfo culture, Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)   at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder,\t\t Object[] parameters, CultureInfo culture, Boolean verifyAccess)   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, \t\tObject[] parameters, CultureInfo culture)   at WebServiceStudio.MainForm.InvokeWebMethod()   at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)   at System.Windows.Forms.Control.OnClick(EventArgs e)   at System.Windows.Forms.Button.OnClick(EventArgs e)   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)   at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)   at System.Windows.Forms.Control.WndProc(Message& m)   at System.Windows.Forms.ButtonBase.WndProc(Message& m)   at System.Windows.Forms.Button.WndProc(Message& m)   at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)   at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)",
      "Pattern match validation caught error",
      "******* Exception Text ******* System.Reflection.TargetInvocationException: Exception has been thrown by the target\t\t of an invocation. ---> System.Web.Services.Protocols.SoapException:         System.Web.Services.Protocols.SoapException: Server was unable to process request. --->         System.Exception: Error validating XML: Error:         The 'http://tempuri.org/XMLSchema.xsd:emailaddress' element is invalid - The value '' or 1=1 or ''='' is         invalid according to its datatype 'http://tempuri.org/XMLSchema.xsd:emailstring' - The Pattern constraint failed.at Service.ProcessValue(String strXML) in c:\\Documents and Settings\\XXX\\My Documents\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 97--- End of inner exception stack trace ---at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message, WebResponse response, Stream responseStream)at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object[] parameters)at Service.ProcessValue(String strXML)--- End of inner exception stack trace ---at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters,\t\t CultureInfo culture, Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters,\t\t CultureInfo culture, Boolean verifyAccess)at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)at WebServiceStudio.MainForm.InvokeWebMethod()at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)at System.Windows.Forms.Control.OnClick(EventArgs e)at System.Windows.Forms.Button.OnClick(EventArgs e)at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)at System.Windows.Forms.Control.WndProc(Message& m)at System.Windows.Forms.ButtonBase.WndProc(Message& m)at System.Windows.Forms.Button.WndProc(Message& m)at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)",
      "Pattern match validation caught error",
      "******* Exception Text ******* System.Reflection.TargetInvocationException: Exception has been thrown by the \t\t\ttarget of an invocation. ---> System.Web.Services.Protocols.SoapException:System.Web.Services.Protocols.SoapException: Server was unable to process request. --->System.Exception: Error validating XML: Error:The 'http://tempuri.org/XMLSchema.xsd:streetaddress' element is invalid - The value 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\tAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' is invalid accordingto its datatype 'http://tempuri.org/XMLSchema.xsd:addressstring' - The Pattern constraint failed.   at Service.ProcessValue(String strXML) in c:\\Documents and Settings\\XXX\\My Documents\t\t\t\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 97   --- End of inner exception stack trace ---   at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message,\t\t WebResponse response, Stream responseStream)   at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object[] parameters)   at Service.ProcessValue(String strXML)   --- End of inner exception stack trace ---   at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags \t\tinvokeAttr, Binder binder, Object[] parameters, CultureInfo culture, \t\tBoolean isBinderDefault, Assembly caller, Boolean verifyAccess)   at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags \t\tinvokeAttr, Binder binder, Object[] parameters, CultureInfo culture,\t\t Boolean verifyAccess)   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr,\t\t Binder binder, Object[] parameters, CultureInfo culture)   at WebServiceStudio.MainForm.InvokeWebMethod()   at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)   at System.Windows.Forms.Control.OnClick(EventArgs e)   at System.Windows.Forms.Button.OnClick(EventArgs e)   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)   at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)   at System.Windows.Forms.Control.WndProc(Message& m)   at System.Windows.Forms.ButtonBase.WndProc(Message& m)   at System.Windows.Forms.Button.WndProc(Message& m)   at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)   at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)",
      "Request is simply processed without validating results",
      "<?xml version=\"1.0\" encoding=\"utf-16\"?><soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \txmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">  <soap:Body>            <ProcessValueNoValidationResponse xmlns=\"http://codesamples.microsoft.com/XMLValidationExample/\">",
      "<ProcessValueNoValidationResult>true</ProcessValueNoValidationResult>    </ProcessValueNoValidationResponse>          </soap:Body></soap:Envelope>"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "\\\\xsd\\\\Userschema.xsd",
      "http://tempuri.org/XMLSchema.xsd",
      "http://tempuri.org/XMLSchema.xsd",
      "http://tempuri.org/XMLSchema.xsd",
      "http://www.w3.org/2001/XMLSchema",
      "http://tempuri.org/XMLSchema.xsd",
      "http://tempuri.org/XMLSchema.xsd",
      "http://tempuri.org/XMLSchema.xsd",
      "http://schemas.xmlsoap.org/soap/envelope/",
      "http://www.w3.org/2001/XMLSchema-instance",
      "http://www.w3.org/2001/XMLSchema",
      "http://codesamples.microsoft.com/XMLValidationExample/",
      "http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp",
      "http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp",
      "http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx"
    ],
    "h3": [
      "1) Output from unvalidated XML Reader",
      "1) Output from validated XML Reader",
      "2) Output from validated XML Reader",
      "2) Output from unvalidated XML Reader"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "file://\\\\xsd\\\\Userschema.xsd",
      "text": "\\\\xsd\\\\Userschema.xsd"
    },
    {
      "href": "http://tempuri.org/XMLSchema.xsd",
      "text": "http://tempuri.org/XMLSchema.xsd"
    },
    {
      "href": "http://tempuri.org/XMLSchema.xsd",
      "text": "http://tempuri.org/XMLSchema.xsd"
    },
    {
      "href": "http://tempuri.org/XMLSchema.xsd",
      "text": "http://tempuri.org/XMLSchema.xsd"
    },
    {
      "href": "http://www.w3.org/2001/XMLSchema",
      "text": "http://www.w3.org/2001/XMLSchema"
    },
    {
      "href": "http://tempuri.org/XMLSchema.xsd",
      "text": "http://tempuri.org/XMLSchema.xsd"
    },
    {
      "href": "http://tempuri.org/XMLSchema.xsd",
      "text": "http://tempuri.org/XMLSchema.xsd"
    },
    {
      "href": "http://tempuri.org/XMLSchema.xsd",
      "text": "http://tempuri.org/XMLSchema.xsd"
    },
    {
      "href": "http://schemas.xmlsoap.org/soap/envelope/",
      "text": "http://schemas.xmlsoap.org/soap/envelope/"
    },
    {
      "href": "http://www.w3.org/2001/XMLSchema-instance",
      "text": "http://www.w3.org/2001/XMLSchema-instance"
    },
    {
      "href": "http://www.w3.org/2001/XMLSchema",
      "text": "http://www.w3.org/2001/XMLSchema"
    },
    {
      "href": "http://codesamples.microsoft.com/XMLValidationExample/",
      "text": "http://codesamples.microsoft.com/XMLValidationExample/"
    },
    {
      "href": "http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp",
      "text": "http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp"
    },
    {
      "href": "http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp",
      "text": "http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp"
    },
    {
      "href": "http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx",
      "text": "http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>C# <li>Web Services</li></li>\n  </ul>\n  <h1>Summary</h1>\n  <p>The purpose of this code sample is to demonstrate a technique to securely validate the XML payload received during a web service web method call using .NET.</p>\n  <h1>Objectives</h1>\n  <ul>\n    <li>Mitigate data validation induced vulnerabilities through use of XML schema validation which employs strong validation using regular expression patterns on expected data <li>Improve application efficiency by first requiring validation of XML payload prior to executing business logic</li></li>\n  </ul>\n  <h1>Scenarios</h1>\n  <ul>\n    <li>Application component needs to access functionality that only exists in a different runtime component <li>Application occasionally needs access to privileged functionality but wants to use a low-privileged security context for enhanced overall security</li></li>\n  </ul>\n  <h1>Solution Example</h1>\n  <p>\n    <strong>Custom Web method for performing some action on an XML String Blob</strong>\n  </p>\n  <pre>// The following private members must be defined for this example<br />private int validationErrCnt = 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />private string lastError = \"\";<br />&#91;WebMethod&#93;</pre>\n  <pre>\n    <br />public bool ProcessValue(string strXML)<br />&#123;<br />&nbsp;&nbsp;&nbsp; string connectionString = \"Initial Catalog=snippets;Data Source=winxp\\\\sqlexpress;Integrated Security=SSPI;\";<br />&nbsp;&nbsp;&nbsp; SqlConnection cn = New SqlConnection(connectionString);<br />&nbsp;&nbsp;&nbsp; bool retval = false;<br />&nbsp;&nbsp;&nbsp; try &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create an XmlReaderSettings object since&nbsp; we'll need to add our schema to it<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReaderSettings xrs = new XmlReaderSettings();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create a schema set which we'll use to validate our XML Document against<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlSchemaSet xset = new XmlSchemaSet();</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Read in our schema under the web root.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReader xmlschemareader = new XmlTextReader(HttpContext.Current.Request.PhysicalApplicationPath &#43; \"<a href=\"file://\\\\xsd\\\\Userschema.xsd\">\\\\xsd\\\\Userschema.xsd</a>\");</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Attribute the XML schema with our schema set<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xset.Add(null, xmlschemareader);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Finally attach our XML schema set to the reader settings<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.Schemas.Add(xset);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // We define a Validation Event Handler<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.ValidationEventHandler &#43;= new ValidationEventHandler(ValidationEventHandler);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // We want to report warnings as well as errors<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.ValidationFlags = xrs.ValidationFlags &#124; XmlSchemaValidationFlags.ReportValidationWarnings;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Our validation type should be set to schema so we enforce the schema on the document<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xrs.ValidationType = ValidationType.Schema;</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create our XML reader and associate our reader settings<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringReader sreader = new StringReader(strXML);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReader xmlread = XmlReader.Create(sreader, xrs);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Lastly load the document which forces a schema validation to be performed in the process<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlDocument xmldoc = new XmlDocument();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xmldoc.Load(xmlread);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // If our event returns errors (and warnings) throw a new exception with our last error as the message<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (validationErrCnt &gt; 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // FAILED VALIDATION: If we encountered errors while validating the XML</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception(lastError);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // PASSED VALIDATION: Otherwise process our request as normal</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommand sqlcmd = new SqlCommand(\"XMLValidationSample\",cn);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter sqlparam = new SqlParameter(\"&#64;strxml\", SqlDbType.VarChar, strXML.Length);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter outparam = new SqlParameter(\"&#64;retval\", SqlDbType.Int);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; outparam.Direction = ParameterDirection.ReturnValue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlparam.Value = strXML;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.CommandType = CommandType.StoredProcedure;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(sqlparam);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(outparam);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Open();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.ExecuteNonQuery();</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if( Convert.ToInt16(outparam.Value) &gt; 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; retval = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Close();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#125; <br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; catch (Exception ex)<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Replace following throw with User supplied exception handling code: <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; Log exception and perform graceful error handling<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception(\"Error validating XML: \" &#43; ex.Message);<br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; // return result<br />&nbsp;&nbsp;&nbsp; return retval;<br />&#125; </pre>\n  <p>\n    <strong>Custom Defined XML Validation Event Handler</strong>\n  </p>\n  <pre>void ValidationEventHandler(object sender, System.Xml.Schema.ValidationEventArgs args)<br />&#123;<br />&nbsp;&nbsp;&nbsp; validationErrCnt&#43;&#43;;<br />&nbsp;&nbsp;&nbsp; if (args.Severity.Equals(XmlSeverityType.Warning))<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lastError = \"Warning: \" &#43; args.Message;<br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; else if (args.Severity.Equals(XmlSeverityType.Error))<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lastError = \"Error: \" &#43; args.Message;<br />&nbsp;&nbsp;&nbsp; &#125;<br />&#125;</pre>\n  <p>\n    <strong>Sample XML Schema with pattern match validators</strong>\n  </p>\n  <pre>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</pre>\n  <pre>&lt;xs:schema id=\"UserSchema\" targetNamespace=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\" <br />&#9;elementFormDefault=\"qualified\" xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\"<br />&#9; xmlns:mstns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\" xmlns:xs=\"<a href=\"http://www.w3.org/2001/XMLSchema\">http://www.w3.org/2001/XMLSchema</a>\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"Users\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:complexType&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element minOccurs=\"1\" maxOccurs=\"100\" name=\"User\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:complexType&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"username\" type=\"usernamestring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"password\" type=\"passwordstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"name\" type=\"namestring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element maxOccurs=\"2\" name=\"streetaddress\" type=\"addressstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"city\" type=\"namestring\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"state\" type=\"statevalue\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"postalcode\" type=\"postalstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"phone\" type=\"phonestring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"ssn\" type=\"ssnstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element name=\"emailaddress\" type=\"emailstring\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:element minOccurs=\"0\" name=\"url\" type=\"xs:anyURI\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:complexType&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:element&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/xs:sequence&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:complexType&gt;<br />&nbsp; &lt;/xs:element&gt;</pre>\n  <pre>&nbsp; &lt;xs:simpleType name=\"usernamestring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Allows word characters &#91;A-Za-z0-9_&#93;, single quote, dash and period<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; must be at least two characters long and less than 16 --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"2\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"16\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;&#91;\\w-'\\.&#93;&#123;2,16&#125;&#36;\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"passwordstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Allows word characters &#91;A-Za-z0-9_&#93;, single quote, dash and period<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; must be at least two characters long and less than 16 --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"8\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"16\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;.&#42;(?=.&#42;\\d)(?=.&#42;&#91;a-z&#93;)(?=.&#42;&#91;A-Z&#93;)(?=.&#42;<br />&#9;&#9;&#9;&#91;&#96;~&#33;&#64;#\\&#36;&#37;\\&#94;\\&\\&#42;\\(\\)-_\\=\\&#43;\\&#91;\\&#123;\\&#93;\\&#125;\\\\\\&#124;;:',&lt;\\.&gt;/?&#93;).&#42;&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"namestring\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Names must be at least 2 characters, no more than 128 characters, and consist of<br />&nbsp;&nbsp; alphabetic characters, and may contain hyphens, single quotes, periods and spaces --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"2\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"128\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;&#91;a-zA-Z-'\\.\\s&#93;&#123;2,128&#125;&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;</pre>\n  <pre>&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"addressstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- Since so many different types of address formats we'll do a match against a series <br />&nbsp;&nbsp; of digits (potentially containing punctuation, followed by a series of characters <br />&nbsp;&nbsp; representing the street name and then potentially a type of street and unit number --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;\\d&#123;1,3&#125;.?\\d&#123;0,3&#125;\\s&#91;a-zA-Z&#93;&#123;2,30&#125;(\\s&#91;a-zA-Z&#93;&#123;2,15&#125;)?(&#91;#\\.0-9a-zA-Z&#93;&#42;)?&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;</pre>\n  <pre>&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"statevalue\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- States must be one of our predefined enumeration types and consist of exactly 2 characters --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:length value=\"2\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AL\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AK\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AR\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"AZ\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"CA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"CO\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"CT\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"DE\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"DC\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"FL\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"GA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"HI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"ID\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"IL\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"IN\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"IA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"KS\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"KY\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"LA\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"ME\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MD\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MN\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MS\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MO\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"MT\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NE\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NV\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NH\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NJ\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NM\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NY\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"NC\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"ND\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"OH\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"OK\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"OR\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"PA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"RI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"SC\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"SD\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"TN\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"TX\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"UT\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"VT\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"VA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WA\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WV\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WI\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:enumeration value=\"WY\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"postalstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- The following US postal code format allows ZIP (5 digit) or ZIP&#43;4 formats<br />&nbsp;&nbsp; as a single string or separated by hyphens --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;\\d&#123;5&#125;&#91;-&#93;?(\\d&#123;4&#125;)?&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"5\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"10\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;</pre>\n  <pre>&nbsp; &lt;xs:simpleType name=\"ssnstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- SSNs consist of 9 digits but may contain an optional 2 hyphens --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"9\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"11\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;\\d&#123;3&#125;&#91;-&#93;?\\d&#123;2&#125;&#91;-&#93;?\\d&#123;4&#125;&#36;&#36;\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"phonestring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&#33;-- The following pattern defines a US formatted telephone number --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;&#91;01&#93;?&#91;- .&#93;?(\\(&#91;2-9&#93;\\d&#123;2&#125;\\)&#124;&#91;2-9&#93;\\d&#123;2&#125;)&#91;- .&#93;?\\d&#123;3&#125;&#91;- .&#93;?\\d&#123;4&#125;&#36;\" /&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"10\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"32\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;<br />&nbsp; &lt;xs:simpleType name=\"emailstring\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;xs:restriction base=\"xs:string\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp; &lt;&#33;-- Allows common email address that can start with a alphanumeric char and contain word, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hyphen and period characters followed by a domain name meeting the same criteria followed <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; by a alpha suffix between 2 and 9 character long --&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:pattern value=\"&#94;(&#91;0-9a-zA-Z&#93;(&#91;-.\\w&#93;&#42;&#91;0-9a-zA-Z&#93;)&#42;&#64;(&#91;0-9a-zA-Z&#93;&#91;-\\w&#93;&#42;&#91;0-9a-zA-Z&#93;\\.)&#43;&#91;a-zA-Z&#93;&#123;2,9&#125;)&#36;\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:minLength value=\"7\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;xs:maxLength value=\"256\" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/xs:restriction&gt;<br />&nbsp; &lt;/xs:simpleType&gt;</pre>\n  <pre>&lt;/xs:schema&gt;</pre>\n  <h1>Problem Example</h1>\n  <p>The following example demonstrates the use of unvalidated XML received by a web service method.</p>\n  <pre>&#91;WebMethod&#93;<br />public bool ProcessValueNoValidation(string strXML)<br />&#123;<br />&nbsp;&nbsp;&nbsp; try<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create our XML reader and associate our reader settings<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringReader sreader = new StringReader(strXML);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlReader xmlread = XmlReader.Create(sreader);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Lastly load the document which forces a schema validation to be performed in the process<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XmlDocument xmldoc = new XmlDocument();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xmldoc.Load(xmlread);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommand sqlcmd = new SqlCommand(\"XMLValidationSample\", cn);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter sqlparam = new SqlParameter(\"&#64;strxml\", SqlDbType.VarChar, strXML.Length);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlParameter outparam = new SqlParameter(\"&#64;retval\", SqlDbType.Int);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; outparam.Direction = ParameterDirection.ReturnValue;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlparam.Value = strXML;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.CommandType = CommandType.StoredProcedure;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(sqlparam);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.Parameters.Add(outparam);</pre>\n  <pre>\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Open();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlcmd.ExecuteNonQuery();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Close();<br />&nbsp;&nbsp;&nbsp; &#125; catch (Exception ex)<br />&nbsp;&nbsp;&nbsp; &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception(ex.Message);<br />&nbsp;&nbsp;&nbsp; &#125;<br />&nbsp;&nbsp;&nbsp; return true;<br />&#125;</pre>\n  <ul>\n    <li>No XML schema validation prior to passing the strXML string to SQL stored procedure <li>Depending on stored procedure implementation SQL injection may be possible (particularly in instances where dynamic SQL is constructed from XML element values and passed as arguments to sp_executesql) clear text in a file or database</li></li>\n  </ul>\n  <p>Other Secure Coding Issues</p>\n  <ul>\n    <li>Potential information leakage of application internals through throw exceptions</li>\n  </ul>\n  <h1>Case</h1>\n  <p>The following classes must be included in any project making use of the sample code provided above:</p>\n  <pre>using System.Web.Services;<br />using System.Web.Services.Protocols;<br />using System.Xml;<br />using System.Xml.Schema;<br />using System.IO;<br />using System.Data;<br />using System.Data.SqlClient;</pre>\n  <p>Leveraging WebService Studio to pass in various XML strings allows us to observe server response behavior:</p>\n  <p>\n    <strong>Input XML</strong>\n  </p>\n  <p>1) </p>\n  <pre>&lt;Users xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\"&gt;<br />&nbsp;&nbsp; &lt;User&gt;<br />&nbsp;&nbsp; &nbsp;&lt;username&gt;foobar&lt;/username&gt;<br />&nbsp;&nbsp; &nbsp;&lt;password&gt;pdw123A&#64;1234 &lt;/password&gt;<br />&nbsp;&nbsp; &nbsp;&lt;name&gt;Foo Bar&lt;/name&gt;<br />&nbsp;&nbsp; &nbsp;&lt;streetaddress&gt;&lt;&#33;&#91;CDATA&#91;&lt;&#93;&#93;&gt;SCRIPT&lt;&#33;&#91;CDATA&#91;&gt;&#93;&#93;&gt;alert(&#8216;XSS&#8217;);&lt;&#33;&#91;CDATA&#91;&lt;&#93;&#93;&gt;/SCRIPT&lt;&#33;&#91;CDATA&#91;&gt;&#93;&#93;&gt;<br />&nbsp;&nbsp; &nbsp;&lt;/streetaddress&gt;<br />&nbsp;&nbsp; &nbsp;&lt;city&gt;Redmond&lt;/city&gt;<br />&nbsp;&nbsp; &nbsp;&lt;state&gt;WA&lt;/state&gt;<br />&nbsp;&nbsp; &nbsp;&lt;postalcode&gt;01234&lt;/postalcode&gt;<br />&nbsp;&nbsp; &nbsp;&lt;phone&gt;1-223-123-1234&lt;/phone&gt;<br />&nbsp;&nbsp; &nbsp;&lt;ssn&gt;123-12-1234&lt;/ssn&gt;<br />&nbsp;&nbsp; &nbsp;&lt;emailaddress&gt;&lt;&#33;&#91;CDATA&#91;' or 1=1 or ''='&#93;&#93;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &gt;&lt;/emailaddress&gt;<br />&nbsp;&nbsp; &nbsp;&lt;url&gt;http://www.microsoft.com&lt;/url&gt;<br />&nbsp;&nbsp; &lt;/User&gt;<br />&lt;/Users&gt;</pre>\n  <p>2) </p>\n  <pre>&lt;Users xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a> &gt;<br />&nbsp;&nbsp; &lt;User&gt;<br />&nbsp;&lt;username&gt;foobar&lt;/username&gt;<br />&nbsp;&lt;password&gt;pdw123A&#64;1234&lt;/password&gt;<br />&nbsp;&lt;name&gt;Foo Bar&lt;/name&gt;<br />&nbsp;&lt;streetaddress&gt;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<br />&#9;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;/streetaddress&gt;<br />&nbsp;&lt;city&gt;Redmond&lt;/city&gt;<br />&nbsp;&lt;state&gt;WA&lt;/state&gt;<br />&nbsp;&lt;postalcode&gt;01234&lt;/postalcode&gt;<br />&nbsp;&lt;phone&gt;1-223-123-1234&lt;/phone&gt;<br />&nbsp;&lt;ssn&gt;123-12-1234&lt;/ssn&gt;<br />&nbsp;&lt;emailaddress&gt;example&#64;microsoft.com&lt;/emailaddress&gt;<br />&nbsp;&lt;url&gt;http://www.microsoft.com&lt;/url&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/User&gt;<br />&lt;/Users&gt;<br /></pre>\n  <h1>Expected Result</h1>\n  <h3>1) Output from unvalidated XML Reader</h3>\n  <pre>Error within stored procedure, during processing. Possible SQL injection</pre>\n  <pre>&#42;&#42;&#42;&#42;&#42;&#42;&#42; Exception Text &#42;&#42;&#42;&#42;&#42;&#42;&#42; <br />System.Reflection.TargetInvocationException: Exception has been thrown <br />&#9;&#9;by the target of an invocation. ---&gt; System.Web.Services.Protocols.SoapException:<br />System.Web.Services.Protocols.SoapException: Server was unable to <br />&#9;&#9;process request. ---&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Exception: The error description is <br />&#9;&#9;'An invalid character was found in text content.'.<br />Could not find prepared statement with handle 0.<br />sp_xml_removedocument: The value supplied for parameter number 1 is invalid.<br />The XML parse error 0xc00ce508 occurred on line number 1, near the XML text <br />\"&lt;Users xmlns=\"<a href=\"http://tempuri.org/XMLSchema.xsd\">http://tempuri.org/XMLSchema.xsd</a>\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;User&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;username&gt;foobar&lt;/username&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;password&gt;pdw123A&#64;1234&lt;/password&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;name&gt;Foo Bar&lt;/name&gt;<br />&nbsp;&nbsp;&nbsp; &nbsp;&lt;streetaddress&gt;&lt;&#33;&#91;CDATA&#91;&lt;&#93;&#93;&gt;SCRIPT&lt;&#33;&#91;CDATA&#91;&gt;&#93;&#93;&gt;alert(\".<br />The statement has been terminated.<br />&nbsp;&nbsp; at Service.ProcessValueNoValidation(String strXML) in c:\\Documents and Settings\\XXX\\<br />&#9;&#9;My Documents\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 130<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message,<br />&#9;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebResponse response, Stream responseStream)<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object&#91;&#93; parameters)<br />&nbsp;&nbsp; at Service.ProcessValueNoValidation(String strXML)<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, <br />&#9;&#9;BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters,<br />&#9;&#9; CultureInfo culture, Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder,<br />&#9;&#9; Object&#91;&#93; parameters, CultureInfo culture, Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, <br />&#9;&#9;Object&#91;&#93; parameters, CultureInfo culture)<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.InvokeWebMethod()<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ButtonBase.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</pre>\n  <h3>\n    <br />1) Output from validated XML Reader</h3>\n  <pre>Pattern match validation caught error </pre>\n  <pre>&#42;&#42;&#42;&#42;&#42;&#42;&#42; Exception Text &#42;&#42;&#42;&#42;&#42;&#42;&#42; <br />System.Reflection.TargetInvocationException: Exception has been thrown by the target<br />&#9;&#9; of an invocation. ---&gt; System.Web.Services.Protocols.SoapException:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />System.Web.Services.Protocols.SoapException: Server was unable to process request. ---&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />System.Exception: Error validating XML: Error:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />The 'http://tempuri.org/XMLSchema.xsd:emailaddress' element is invalid - The value '' or 1=1 or ''='' is&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />invalid according to its datatype 'http://tempuri.org/XMLSchema.xsd:emailstring' - The Pattern constraint failed.<br />at Service.ProcessValue(String strXML) in c:\\Documents and Settings\\XXX\\My Documents\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 97<br />--- End of inner exception stack trace ---<br />at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message, WebResponse response, Stream responseStream)<br />at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object&#91;&#93; parameters)<br />at Service.ProcessValue(String strXML)<br />--- End of inner exception stack trace ---<br />at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters,<br />&#9;&#9; CultureInfo culture, Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)<br />at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters,<br />&#9;&#9; CultureInfo culture, Boolean verifyAccess)<br />at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object&#91;&#93; parameters, CultureInfo culture)<br />at WebServiceStudio.MainForm.InvokeWebMethod()<br />at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)<br />at System.Windows.Forms.Control.OnClick(EventArgs e)<br />at System.Windows.Forms.Button.OnClick(EventArgs e)<br />at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)<br />at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)<br />at System.Windows.Forms.Control.WndProc(Message& m)<br />at System.Windows.Forms.ButtonBase.WndProc(Message& m)<br />at System.Windows.Forms.Button.WndProc(Message& m)<br />at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)<br />at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)<br />at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</pre>\n  <h3>2) Output from validated XML Reader</h3>\n  <pre>Pattern match validation caught error </pre>\n  <pre>&#42;&#42;&#42;&#42;&#42;&#42;&#42; Exception Text &#42;&#42;&#42;&#42;&#42;&#42;&#42; <br />System.Reflection.TargetInvocationException: Exception has been thrown by the <br />&#9;&#9;&#9;target of an invocation. ---&gt; System.Web.Services.Protocols.SoapException:<br />System.Web.Services.Protocols.SoapException: Server was unable to process request. ---&gt;<br />System.Exception: Error validating XML: Error:<br />The 'http://tempuri.org/XMLSchema.xsd:streetaddress' element is invalid - <br />The value 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA<br />&#9;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' is invalid according<br />to its datatype 'http://tempuri.org/XMLSchema.xsd:addressstring' - The Pattern constraint failed.<br />&nbsp;&nbsp; at Service.ProcessValue(String strXML) in c:\\Documents and Settings\\XXX\\My Documents<br />&#9;&#9;&#9;\\Visual Studio 2005\\WebSites\\WebSite2\\App_Code\\Service.cs:line 97<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.ReadResponse(SoapClientMessage message,<br />&#9;&#9; WebResponse response, Stream responseStream)<br />&nbsp;&nbsp; at System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(String methodName, Object&#91;&#93; parameters)<br />&nbsp;&nbsp; at Service.ProcessValue(String strXML)<br />&nbsp;&nbsp; --- End of inner exception stack trace ---<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags <br />&#9;&#9;invokeAttr, Binder binder, Object&#91;&#93; parameters, CultureInfo culture, <br />&#9;&#9;Boolean isBinderDefault, Assembly caller, Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.InternalInvoke(Object obj, BindingFlags <br />&#9;&#9;invokeAttr, Binder binder, Object&#91;&#93; parameters, CultureInfo culture,<br />&#9;&#9; Boolean verifyAccess)<br />&nbsp;&nbsp; at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr,<br />&#9;&#9; Binder binder, Object&#91;&#93; parameters, CultureInfo culture)<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.InvokeWebMethod()<br />&nbsp;&nbsp; at WebServiceStudio.MainForm.buttonInvoke_Click(Object sender, EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnClick(EventArgs e)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)<br />&nbsp;&nbsp; at System.Windows.Forms.Control.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ButtonBase.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.Button.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.OnMessage(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.ControlNativeWindow.WndProc(Message& m)<br />&nbsp;&nbsp; at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)</pre>\n  <h3>2) Output from unvalidated XML Reader</h3>\n  <pre>Request is simply processed without validating results</pre>\n  <pre>&lt;?xml version=\"1.0\" encoding=\"utf-16\"?&gt;<br />&lt;soap:Envelope xmlns:soap=\"<a href=\"http://schemas.xmlsoap.org/soap/envelope/\">http://schemas.xmlsoap.org/soap/envelope/</a>\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xmlns:xsi=\"<a href=\"http://www.w3.org/2001/XMLSchema-instance\">http://www.w3.org/2001/XMLSchema-instance</a>\"<br /> &#9;xmlns:xsd=\"<a href=\"http://www.w3.org/2001/XMLSchema\">http://www.w3.org/2001/XMLSchema</a>\"&gt;<br />&nbsp; &lt;soap:Body&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ProcessValueNoValidationResponse xmlns=\"<a href=\"http://codesamples.microsoft.com/XMLValidationExample/\">http://codesamples.microsoft.com/XMLValidationExample/</a>\"&gt;</pre>\n  <pre>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ProcessValueNoValidationResult&gt;true&lt;/ProcessValueNoValidationResult&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/ProcessValueNoValidationResponse&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/soap:Body&gt;<br />&lt;/soap:Envelope&gt;</pre>\n  <h1>More Information</h1>\n  <p>Web services which leverarage XML schema validation to perform pattern validation (known good characters), minimum and maximum length and bounds checking, and minimum / maximum occurances of an element is signficantly less likely to result in manipulation of application logic or result in data validation induced vulnerabilities such as SQL injection, Cross-site Scripting and failure to handle error conditions. This code sample demonstrates such a task using the an XSD with strongly defined regular expressions for typical data elements.</p>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>Validation of XML with Schemas: <a href=\"http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp\">http://msdn.microsoft.com/library/en-us/cpguide/html/cpconValidationOfXMLWithSchemas.asp</a><li>XML Reader usage: <a href=\"http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp\">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cpguide/html/cpconReadingXMLWithXmlReader.asp</a><li>Regular Expressions (.NET Framework): <a href=\"http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx\">http://msdn2.microsoft.com/en-us/library/hs600312(VS.80).aspx</a></li></li></li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}