{
  "id": "00000000-0000-0000-0000-0000002f59fd",
  "checksum": "8ebe6da2054114eff985a72c156ff736932f41fb",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "a",
      "a",
      "ul",
      "li",
      "a"
    ],
    "html5": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "for": [
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "li",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "exchanged": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "between": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "strong"
    ],
    "server": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "web": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "h2",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "h2",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "workers": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "validated": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "on": [
      "p",
      "ol",
      "li"
    ],
    "why": [
      "h2"
    ],
    "validate": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "received": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "by": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "make": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "it": [
      "p",
      "ol",
      "li"
    ],
    "harder": [
      "p"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "manipulate": [
      "p"
    ],
    "worker's": [
      "p"
    ],
    "activity": [
      "p"
    ],
    "via": [
      "p"
    ],
    "a": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "man-in-the-middle": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "identify": [
      "ol",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "strong",
      "li"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "ul",
      "li",
      "a"
    ],
    "exchanges": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "create": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "spreadsheet": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "of": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "exchange": [
      "ol",
      "li"
    ],
    "messages": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "worker": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "h2",
      "h2"
    ],
    "this": [
      "ol",
      "li"
    ],
    "will": [
      "ol",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "within": [
      "ol",
      "li"
    ],
    "script": [
      "ol",
      "li"
    ],
    "validator": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "functions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "are": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "called": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "before": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "processing": [
      "ol",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "examine": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "piece": [
      "ol",
      "li"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "processed": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "does": [
      "ol",
      "li"
    ],
    "not": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "pass": [
      "ol",
      "li",
      "ul",
      "li",
      "a"
    ],
    "validation": [
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "list": [
      "ol",
      "li"
    ],
    "types": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "they": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "function": [
      "ol",
      "li"
    ],
    "effectively": [
      "ol",
      "li"
    ],
    "whether": [
      "ol",
      "li"
    ],
    "matches": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "expected": [
      "ol",
      "li"
    ],
    "length": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "characters": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "text": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "data,": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "format": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "formatted": [
      "ol",
      "li"
    ],
    "range": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "numerical": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "data.": [
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "define": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "valid": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "formats": [
      "ol",
      "li",
      "strong"
    ],
    "type": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "in": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "values.": [
      "ol",
      "li"
    ],
    "set": [
      "ol",
      "li"
    ],
    "add": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "regular": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "expressions": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "restrict": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "acceptable": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "if": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "specific": [
      "ol",
      "li"
    ],
    "pattern": [
      "ol",
      "li"
    ],
    "such": [
      "ol",
      "li"
    ],
    "as": [
      "ol",
      "li"
    ],
    "date": [
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "li"
    ],
    "phone": [
      "ol",
      "li"
    ],
    "number": [
      "ol",
      "li"
    ],
    "correct": [
      "ol",
      "li"
    ],
    "enforce": [
      "ol",
      "li"
    ],
    "strong": [
      "ol",
      "li"
    ],
    "password": [
      "ol",
      "li"
    ],
    "requirements": [
      "ol",
      "li"
    ],
    "input": [
      "ol",
      "li"
    ],
    "compare": [
      "ol",
      "li"
    ],
    "maximum": [
      "ol",
      "li"
    ],
    "minimum": [
      "ol",
      "li"
    ],
    "values": [
      "ol",
      "li"
    ],
    "find": [
      "ol",
      "li",
      "strong"
    ],
    "receives": [
      "ol",
      "li"
    ],
    "from": [
      "ol",
      "li"
    ],
    "handles": [
      "ol",
      "li"
    ],
    "actually": [
      "ol",
      "li"
    ],
    "guidelines": [
      "h2"
    ],
    "do": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "eval)": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklist": [
      "h2"
    ],
    "items": [
      "h2"
    ],
    "pased": [
      "ul",
      "li",
      "a"
    ],
    "them": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Web Worker Guidelines",
      "Web Worker Checklist Items"
    ],
    "ul": [
      "HTML5",
      "Do Not Pass Code to Web Workers to eval()\n Validate Data Received by Web Workers",
      "Web Workers Do Not eval() Data Pased to Them\n Data Received by Web Workers Is Validated"
    ],
    "li": [
      "HTML5",
      "Identify all code that exchanges data between Web Workers and the server. Create a spreadsheet of all code that is used to exchange messages between the Web Worker and the server. This code will be within the script that is used by the Web Worker.",
      "Verify that validator functions are called before processing data. Examine each piece of code that exchanges data between Web Workers and the server to make sure that validator functions are called before the received data is processed. Data that does not pass validation should not be processed. Create a spreadsheet to list the validator functions and the types of data that they validate.",
      "Examine validator functions. Examine each validator function used by Web Workers and make sure that they effectively check whether data matches the expected length, characters (for text data), format (for formatted data), and range (for numerical data).",
      "Identify all data types exchanged between the Web Workers and the server. Create a spreadsheet of all data types that are exchanged between the Web Workers and the server.",
      "Define valid data formats. For each type of data in the spreadsheet, define valid characters, length, format, and range (for numerical values).",
      "Define validator functions. Define a set of validator functions that should be used to validate each type of data exchanged between the server and the Web Workers. Data should be validated on the server.",
      "Validate length. Add code to check that the length of the data is valid.",
      "Validate characters. Use regular expressions to restrict the acceptable range of characters in text data.",
      "Validate format. If the data type has a specific pattern, such as a date or a phone number, add code to use regular expressions to make sure data matches the correct type. Use regular expressions to enforce strong password requirements.",
      "Validate range. To restrict the acceptable range of numerical input, compare the data to maximum and minimum acceptable values.",
      "Find code that exchanges data between the server and the Web Workers. Create a spreadsheet of all the code used by the Web Workers that receives data from the server.",
      "Use the validator functions. Identify all code that handles messages received by Web Workers. Add code to use the validator functions before actually processing the messages. If data is not valid, it should not be processed.",
      "Do Not Pass Code to Web Workers to eval()",
      "Validate Data Received by Web Workers",
      "Web Workers Do Not eval() Data Pased to Them",
      "Data Received by Web Workers Is Validated"
    ],
    "p": [
      "Verify that data exchanged between the server and the Web Workers is validated on the server.",
      "Validate data received by Web Workers to make it harder for an attacker to manipulate the Web Worker's activity via a Man-in-the-middle attack.",
      "To verify that data exchanged between the server and the Web Workers is validated:",
      "To validate data exchanged between the Web Worker and the server:"
    ],
    "ol": [
      "Identify all code that exchanges data between Web Workers and the server. Create a spreadsheet of all code that is used to exchange messages between the Web Worker and the server. This code will be within the script that is used by the Web Worker.\n Verify that validator functions are called before processing data. Examine each piece of code that exchanges data between Web Workers and the server to make sure that validator functions are called before the received data is processed. Data that does not pass validation should not be processed. Create a spreadsheet to list the validator functions and the types of data that they validate.\n Examine validator functions. Examine each validator function used by Web Workers and make sure that they effectively check whether data matches the expected length, characters (for text data), format (for formatted data), and range (for numerical data).",
      "Identify all data types exchanged between the Web Workers and the server. Create a spreadsheet of all data types that are exchanged between the Web Workers and the server.\n Define valid data formats. For each type of data in the spreadsheet, define valid characters, length, format, and range (for numerical values).\n Define validator functions. Define a set of validator functions that should be used to validate each type of data exchanged between the server and the Web Workers. Data should be validated on the server. \n Validate length. Add code to check that the length of the data is valid.\n Validate characters. Use regular expressions to restrict the acceptable range of characters in text data.\n Validate format. If the data type has a specific pattern, such as a date or a phone number, add code to use regular expressions to make sure data matches the correct type. Use regular expressions to enforce strong password requirements.\n Validate range. To restrict the acceptable range of numerical input, compare the data to maximum and minimum acceptable values.\n Find code that exchanges data between the server and the Web Workers. Create a spreadsheet of all the code used by the Web Workers that receives data from the server.\n Use the validator functions. Identify all code that handles messages received by Web Workers. Add code to use the validator functions before actually processing the messages. If data is not valid, it should not be processed."
    ],
    "strong": [
      "Identify all code that exchanges data between Web Workers and the server.",
      "Verify that validator functions are called before processing data.",
      "Examine validator functions.",
      "Identify all data types exchanged between the Web Workers and the server.",
      "Define valid data formats.",
      "Define validator functions.",
      "Validate length.",
      "Validate characters.",
      "Validate format.",
      "Validate range.",
      "Find code that exchanges data between the server and the Web Workers.",
      "Use the validator functions."
    ],
    "a": [
      "Do Not Pass Code to Web Workers to eval()",
      "Validate Data Received by Web Workers",
      "Web Workers Do Not eval() Data Pased to Them",
      "Data Received by Web Workers Is Validated"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-00000083c4cc",
      "text": "Do Not Pass Code to Web Workers to eval()"
    },
    {
      "href": "00000000-0000-0000-0000-00000006a783",
      "text": "Validate Data Received by Web Workers"
    },
    {
      "href": "00000000-0000-0000-0000-000000392041",
      "text": "Web Workers Do Not eval() Data Pased to Them"
    },
    {
      "href": "00000000-0000-0000-0000-0000002f59fd",
      "text": "Data Received by Web Workers Is Validated"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> HTML5</li>\n</ul><h2>What to Check For</h2><p>Verify that data exchanged between the server and the Web Workers is validated on the server.\n</p><h2>Why</h2><p>Validate data received by Web Workers to make it harder for an attacker to manipulate the Web Worker's activity via a Man-in-the-middle attack.\n</p><h2>How to Check</h2><p>To verify that data exchanged between the server and the Web Workers is validated:\n</p><ol>\n<li> <strong>Identify all code that exchanges data between Web Workers and the server.</strong> Create a spreadsheet of all code that is used to exchange messages between the Web Worker and the server. This code will be within the script that is used by the Web Worker.</li>\n<li> <strong>Verify that validator functions are called before processing data.</strong> Examine each piece of code that exchanges data between Web Workers and the server to make sure that validator functions are called before the received data is processed. Data that does not pass validation should not be processed. Create a spreadsheet to list the validator functions and the types of data that they validate.</li>\n<li> <strong>Examine validator functions.</strong> Examine each validator function used by Web Workers and make sure that they effectively check whether data matches the expected length, characters (for text data), format (for formatted data), and range (for numerical data). </li>\n</ol><h2>How to Fix</h2><p>To validate data exchanged between the Web Worker and the server:\n</p><ol>\n<li> <strong>Identify all data types exchanged between the Web Workers and the server.</strong> Create a spreadsheet of all data types that are exchanged between the Web Workers and the server.</li>\n<li> <strong>Define valid data formats.</strong> For each type of data in the spreadsheet, define valid characters, length, format, and range (for numerical values).</li>\n<li> <strong>Define validator functions.</strong> Define a set of validator functions that should be used to validate each type of data exchanged between the server and the Web Workers. Data should be validated on the server. </li>\n<li> <strong>Validate length.</strong> Add code to check that the length of the data is valid.</li>\n<li> <strong>Validate characters.</strong> Use regular expressions to restrict the acceptable range of characters in text data.</li>\n<li> <strong>Validate format.</strong> If the data type has a specific pattern, such as a date or a phone number, add code to use regular expressions to make sure data matches the correct type. Use regular expressions to enforce strong password requirements.</li>\n<li> <strong>Validate range.</strong> To restrict the acceptable range of numerical input, compare the data to maximum and minimum acceptable values.</li>\n<li> <strong>Find code that exchanges data between the server and the Web Workers.</strong> Create a spreadsheet of all the code used by the Web Workers that receives data from the server.</li>\n<li> <strong>Use the validator functions.</strong> Identify all code that handles messages received by Web Workers. Add code to use the validator functions before actually processing the messages. If data is not valid, it should not be processed. </li>\n</ol><h2>Web Worker Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-00000083c4cc\">Do Not Pass Code to Web Workers to eval()</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000006a783\">Validate Data Received by Web Workers</a></li>\n</ul><h2>Web Worker Checklist Items</h2><ul><li> <a href=\"00000000-0000-0000-0000-000000392041\">Web Workers Do Not eval() Data Pased to Them</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000002f59fd\">Data Received by Web Workers Is Validated</a></li>\n</ul>"
}