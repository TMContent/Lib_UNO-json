{
  "id": "09a478f6-b186-4ce0-9d3b-b27164eeb8e9",
  "checksum": "587242421585ce9879c29af7a2aa5d61594f9db8",
  "words": {
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "h1",
      "p",
      "p",
      "p"
    ],
    "c++": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1"
    ],
    "verify": [
      "p",
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "dangerous": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "apis": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "used": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "with": [
      "p",
      "title"
    ],
    "care": [
      "p",
      "p",
      "title"
    ],
    "when": [
      "p",
      "p",
      "p",
      "p"
    ],
    "they": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "some": [
      "p"
    ],
    "have": [
      "p"
    ],
    "been": [
      "p"
    ],
    "shown": [
      "p"
    ],
    "historically": [
      "p"
    ],
    "be": [
      "p",
      "p",
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "most": [
      "p"
    ],
    "likely": [
      "p"
    ],
    "result": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "security": [
      "p"
    ],
    "vulnerabilities": [
      "p",
      "p"
    ],
    "these": [
      "p",
      "p",
      "p"
    ],
    "known": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "special": [
      "p",
      "p"
    ],
    "should": [
      "p",
      "p",
      "p"
    ],
    "taken": [
      "p"
    ],
    "using": [
      "p"
    ],
    "them": [
      "p"
    ],
    "avoid": [
      "p"
    ],
    "making": [
      "p"
    ],
    "typical": [
      "p"
    ],
    "mistakes": [
      "p"
    ],
    "specifically": [
      "p"
    ],
    "input": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "data": [
      "p",
      "p",
      "p",
      "p"
    ],
    "passed": [
      "p"
    ],
    "validated": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p"
    ],
    "not": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "format": [
      "p",
      "p",
      "p",
      "p"
    ],
    "strings": [
      "p",
      "p",
      "p",
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "identify": [
      "p",
      "p"
    ],
    "all": [
      "p",
      "p"
    ],
    "code": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "uses": [
      "p",
      "p"
    ],
    "any": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "following": [
      "p"
    ],
    "strcpy": [
      "ul",
      "li"
    ],
    "strcat": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "strlen": [
      "ul",
      "li"
    ],
    "strncpy": [
      "ul",
      "li"
    ],
    "strncat": [
      "ul",
      "li"
    ],
    "strcmp": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "mbcstows_strdup": [
      "ul"
    ],
    "_strrev": [
      "ul",
      "li"
    ],
    "strstr": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "sprintf": [
      "ul",
      "li"
    ],
    "_snprintf": [
      "ul",
      "li"
    ],
    "printf": [
      "ul",
      "li"
    ],
    "fprintf": [
      "ul",
      "li"
    ],
    "gets": [
      "ul",
      "li"
    ],
    "scanf": [
      "ul",
      "li"
    ],
    "fscanf": [
      "ul",
      "li"
    ],
    "sscanf": [
      "ul",
      "li"
    ],
    "strcspn": [
      "ul",
      "li"
    ],
    "multibytetowidecharwidechartomultibyte": [
      "ul"
    ],
    "getshortpathnamew": [
      "ul",
      "li"
    ],
    "getlongpathnamew": [
      "ul",
      "li"
    ],
    "winexec": [
      "ul",
      "li"
    ],
    "createprocessw": [
      "ul",
      "li"
    ],
    "getenvironmentvariablew": [
      "ul",
      "li"
    ],
    "setenvironmentvariablew": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "expandenvironmentstringsw": [
      "ul",
      "li"
    ],
    "searchpathw": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "lstrcpy": [
      "ul",
      "li"
    ],
    "wcscpy": [
      "ul",
      "li"
    ],
    "_mbscpy": [
      "ul",
      "li"
    ],
    "strcpya": [
      "ul",
      "li"
    ],
    "strcpyw": [
      "ul",
      "li"
    ],
    "lstrcata": [
      "ul",
      "li"
    ],
    "lstrcatw": [
      "ul",
      "li"
    ],
    "wcscat": [
      "ul",
      "li"
    ],
    "_mbscat": [
      "ul",
      "li"
    ],
    "wcslen": [
      "ul",
      "li"
    ],
    "_mbslen": [
      "ul",
      "li"
    ],
    "_mbstrlen": [
      "ul",
      "li"
    ],
    "lstrlena": [
      "ul",
      "li"
    ],
    "lstrlenw": [
      "ul",
      "li"
    ],
    "wcsncpy": [
      "ul",
      "li"
    ],
    "_mbsncpy": [
      "ul",
      "li"
    ],
    "strcpyn": [
      "ul",
      "li"
    ],
    "lstrcpynw": [
      "ul",
      "li"
    ],
    "lstrcatna": [
      "ul",
      "li"
    ],
    "lstrcatnw": [
      "ul",
      "li"
    ],
    "wcsncat": [
      "ul",
      "li"
    ],
    "_mbsncat": [
      "ul",
      "li"
    ],
    "_mbsnbcat": [
      "ul",
      "li"
    ],
    "lstrcmpa": [
      "ul",
      "li"
    ],
    "lstrcmpw": [
      "ul",
      "li"
    ],
    "wcscmp": [
      "ul",
      "li"
    ],
    "_mbscmp": [
      "ul",
      "li"
    ],
    "strcoll": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "wcscoll": [
      "ul",
      "li"
    ],
    "_mbscoll": [
      "ul",
      "li"
    ],
    "_stricmp": [
      "ul",
      "li"
    ],
    "lstrcmpia": [
      "ul",
      "li"
    ],
    "lstrcmpiw": [
      "ul",
      "li"
    ],
    "_wcsicmp": [
      "ul",
      "li"
    ],
    "_mbsicmp": [
      "ul",
      "li"
    ],
    "_stricoll": [
      "ul",
      "li"
    ],
    "_wcsicoll": [
      "ul",
      "li"
    ],
    "_mbsicoll": [
      "ul",
      "li"
    ],
    "_wcsdup": [
      "ul",
      "li"
    ],
    "_mbsdup": [
      "ul",
      "li"
    ],
    "strdup": [
      "ul",
      "li"
    ],
    "_wcsrev": [
      "ul",
      "li"
    ],
    "_mbsrev": [
      "ul",
      "li"
    ],
    "_strlwr": [
      "ul",
      "li"
    ],
    "_mbslwr": [
      "ul",
      "li"
    ],
    "_wcslwr": [
      "ul",
      "li"
    ],
    "_strupr": [
      "ul",
      "li"
    ],
    "_mbsupr": [
      "ul",
      "li"
    ],
    "_wcsupr": [
      "ul",
      "li"
    ],
    "wcsstr": [
      "ul",
      "li"
    ],
    "_mbsstr": [
      "ul",
      "li"
    ],
    "strspn": [
      "ul",
      "li"
    ],
    "wcsspn": [
      "ul",
      "li"
    ],
    "_mbsspn": [
      "ul",
      "li"
    ],
    "strpbrk": [
      "ul",
      "li"
    ],
    "wcspbrk": [
      "ul",
      "li"
    ],
    "_mbspbrk": [
      "ul",
      "li"
    ],
    "wcsxfrm": [
      "ul",
      "li"
    ],
    "wcscspn": [
      "ul",
      "li"
    ],
    "_mbcscpn": [
      "ul",
      "li"
    ],
    "swprintf": [
      "ul",
      "li"
    ],
    "wsprintfa": [
      "ul",
      "li"
    ],
    "wsprintfw": [
      "ul",
      "li"
    ],
    "vsprintf": [
      "ul",
      "li"
    ],
    "vswprintf": [
      "ul",
      "li"
    ],
    "_snwprintf": [
      "ul",
      "li"
    ],
    "_vsnprintf": [
      "ul",
      "li"
    ],
    "_vsnwprintf": [
      "ul",
      "li"
    ],
    "vprintf": [
      "ul",
      "li"
    ],
    "vwprintf": [
      "ul",
      "li"
    ],
    "vfprintf": [
      "ul",
      "li"
    ],
    "vwfprintf": [
      "ul",
      "li"
    ],
    "_getws": [
      "ul",
      "li"
    ],
    "fwscanf": [
      "ul",
      "li"
    ],
    "wscanf": [
      "ul",
      "li"
    ],
    "swscanf": [
      "ul",
      "li"
    ],
    "oemtochara": [
      "ul",
      "li"
    ],
    "oemtocharw": [
      "ul",
      "li"
    ],
    "chartooema": [
      "ul",
      "li"
    ],
    "chartooemw": [
      "ul",
      "li"
    ],
    "charuppera": [
      "ul",
      "li"
    ],
    "charupperw": [
      "ul",
      "li"
    ],
    "charupperbuffw": [
      "ul",
      "li"
    ],
    "charlowera": [
      "ul",
      "li"
    ],
    "charlowerw": [
      "ul",
      "li"
    ],
    "charlowerbuffw": [
      "ul",
      "li"
    ],
    "mbcstows": [
      "li"
    ],
    "_strdup": [
      "li"
    ],
    "multibytetowidechar": [
      "li"
    ],
    "widechartomultibyte": [
      "li"
    ],
    "validation": [
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "performed": [
      "p"
    ],
    "functions": [
      "p",
      "p",
      "p"
    ],
    "called": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "listed": [
      "p"
    ],
    "\"how": [
      "p"
    ],
    "check\"": [
      "p"
    ],
    "section": [
      "p"
    ],
    "possible": [
      "p"
    ],
    "rewrite": [
      "p",
      "p"
    ],
    "this": [
      "p"
    ],
    "so": [
      "p",
      "p"
    ],
    "otherwise": [
      "p"
    ],
    "add": [
      "p"
    ],
    "performs": [
      "p"
    ],
    "it": [
      "p",
      "p",
      "p"
    ],
    "recommended": [
      "p"
    ],
    "write": [
      "p"
    ],
    "a": [
      "p",
      "p"
    ],
    "dedicated": [
      "p"
    ],
    "class": [
      "p"
    ],
    "or": [
      "p",
      "title"
    ],
    "library": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "pay": [
      "p"
    ],
    "attention": [
      "p"
    ],
    "there": [
      "p"
    ],
    "even": [
      "p"
    ],
    "remote": [
      "p"
    ],
    "possibility": [
      "p"
    ],
    "being": [
      "p"
    ],
    "impossible": [
      "p"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "do": [
      "ul",
      "li",
      "a"
    ],
    "avoided": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Related Items"
    ],
    "ul": [
      "C++",
      "strcpy   strcat   strcat  strlen  strncpy strncat  strcmp  strcmp  mbcstows_strdup  _strrev  strstr  strstr  sprintf   _snprintf   printf   fprintf   gets  scanf   fscanf   sscanf    strcspn  MultiByteToWideCharWideCharToMultiByte GetShortPathNameW  GetLongPathNameW  WinExec  CreateProcessW  GetEnvironmentVariableW  SetEnvironmentVariableW  SetEnvironmentVariableW  ExpandEnvironmentStringsW  SearchPathW  SearchPathW  SearchPathW  Lstrcpy   Wcscpy   _mbscpy   StrCpyA   StrCpyW   lstrcatA   lstrcatW   Wcscat   _mbscat   Wcslen  _mbslen  _mbstrlen  lstrlenA  lstrlenW  Wcsncpy _mbsncpy StrCpyN lstrcpynW  lstrcatnA  lstrcatnW  wcsncat  _mbsncat  _mbsnbcat   lstrcmpA  lstrcmpW  StrCmp  Wcscmp  _mbscmp  strcoll  wcscoll  _mbscoll  _stricmp  lstrcmpiA  lstrcmpiW  _wcsicmp  _mbsicmp  StrCmp  _stricoll  _wcsicoll  _mbsicoll  StrColl  _wcsdup  _mbsdup  StrDup  _wcsrev  _mbsrev  _strlwr  _mbslwr  _wcslwr  _strupr  _mbsupr  _wcsupr  wcsstr  _mbsstr  strspn  wcsspn  _mbsspn  strpbrk  wcspbrk  _mbspbrk  wcsxfrm  wcscspn  _mbcscpn  swprintf  wsprintfA  wsprintfW  vsprintf  vswprintf  _snwprintf  _vsnprintf  _vsnwprintf  vprintf  vwprintf  vfprintf  vwfprintf  _getws  fwscanf  wscanf  swscanf  OemToCharA   OemToCharW   CharToOemA   CharToOemW   CharUpperA  CharUpperW  CharUpperBuffW  CharLowerA  CharLowerW  CharLowerBuffW",
      "Do Not Use Dangerous APIs"
    ],
    "li": [
      "C++",
      "strcpy",
      "strcat",
      "strcat",
      "strlen",
      "strncpy",
      "strncat",
      "strcmp",
      "strcmp",
      "mbcstows",
      "_strdup",
      "_strrev",
      "strstr",
      "strstr",
      "sprintf",
      "_snprintf",
      "printf",
      "fprintf",
      "gets",
      "scanf",
      "fscanf",
      "sscanf",
      "strcspn",
      "MultiByteToWideChar",
      "WideCharToMultiByte",
      "GetShortPathNameW",
      "GetLongPathNameW",
      "WinExec",
      "CreateProcessW",
      "GetEnvironmentVariableW",
      "SetEnvironmentVariableW",
      "SetEnvironmentVariableW",
      "ExpandEnvironmentStringsW",
      "SearchPathW",
      "SearchPathW",
      "SearchPathW",
      "Lstrcpy",
      "Wcscpy",
      "_mbscpy",
      "StrCpyA",
      "StrCpyW",
      "lstrcatA",
      "lstrcatW",
      "Wcscat",
      "_mbscat",
      "Wcslen",
      "_mbslen",
      "_mbstrlen",
      "lstrlenA",
      "lstrlenW",
      "Wcsncpy",
      "_mbsncpy",
      "StrCpyN",
      "lstrcpynW",
      "lstrcatnA",
      "lstrcatnW",
      "wcsncat",
      "_mbsncat",
      "_mbsnbcat",
      "lstrcmpA",
      "lstrcmpW",
      "StrCmp",
      "Wcscmp",
      "_mbscmp",
      "strcoll",
      "wcscoll",
      "_mbscoll",
      "_stricmp",
      "lstrcmpiA",
      "lstrcmpiW",
      "_wcsicmp",
      "_mbsicmp",
      "StrCmp",
      "_stricoll",
      "_wcsicoll",
      "_mbsicoll",
      "StrColl",
      "_wcsdup",
      "_mbsdup",
      "StrDup",
      "_wcsrev",
      "_mbsrev",
      "_strlwr",
      "_mbslwr",
      "_wcslwr",
      "_strupr",
      "_mbsupr",
      "_wcsupr",
      "wcsstr",
      "_mbsstr",
      "strspn",
      "wcsspn",
      "_mbsspn",
      "strpbrk",
      "wcspbrk",
      "_mbspbrk",
      "wcsxfrm",
      "wcscspn",
      "_mbcscpn",
      "swprintf",
      "wsprintfA",
      "wsprintfW",
      "vsprintf",
      "vswprintf",
      "_snwprintf",
      "_vsnprintf",
      "_vsnwprintf",
      "vprintf",
      "vwprintf",
      "vfprintf",
      "vwfprintf",
      "_getws",
      "fwscanf",
      "wscanf",
      "swscanf",
      "OemToCharA",
      "OemToCharW",
      "CharToOemA",
      "CharToOemW",
      "CharUpperA",
      "CharUpperW",
      "CharUpperBuffW",
      "CharLowerA",
      "CharLowerW",
      "CharLowerBuffW",
      "Do Not Use Dangerous APIs"
    ],
    "p": [
      "Verify that dangerous APIs are used with care when they are used.",
      "Some APIs have been shown historically to be the most likely to result in security vulnerabilities. These APIs are known as dangerous APIs. Special care should be taken when using them to avoid making typical mistakes that result in vulnerabilities. Specifically, input and data passed to dangerous APIs should be validated, and user input should not be used in format strings.",
      "Identify all code that uses any of the following dangerous APIs:",
      "Verify that input and data validation is performed when any of these functions are called. Verify that user input is not used in format strings, if any.",
      "Identify all code that uses any of the dangerous APIs as listed in the \"How to Check\" section. If possible, rewrite this code so that dangerous APIs are not used. Otherwise, add code that performs input and data validation when any of these functions are called. It is recommended to write a dedicated input and data validation class or library and use it. Pay special attention to functions that use format strings. If there is even a remote possibility of user input being used in the format strings, rewrite code so that it is impossible."
    ],
    "a": [
      "Do Not Use Dangerous APIs"
    ]
  },
  "links": [
    {
      "href": "/article/3f725650-1e28-4ee0-810c-133cd5912c91",
      "text": "Do Not Use Dangerous APIs"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>C&#43;&#43;</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that dangerous APIs are used with care when they are used.</p>\r\n  <h1>Why</h1>\r\n  <p>Some APIs have been shown historically to be the most likely to result in security vulnerabilities. These APIs are known as dangerous APIs. Special care should be taken when using them to avoid making typical mistakes that result in vulnerabilities. Specifically, input and data passed to dangerous APIs should be validated, and user input should not be used in format strings.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Identify all code that uses any of the following dangerous APIs:</p>\r\n  <ul>\r\n    <li>strcpy&nbsp;&nbsp; <li>strcat&nbsp;&nbsp; <li>strcat&nbsp; <li>strlen&nbsp; <li>strncpy <li>strncat&nbsp; <li>strcmp&nbsp; <li>strcmp&nbsp; <li>mbcstows<li>_strdup&nbsp; <li>_strrev&nbsp; <li>strstr&nbsp; <li>strstr&nbsp; <li>sprintf&nbsp;&nbsp; <li>_snprintf&nbsp;&nbsp; <li>printf&nbsp;&nbsp; <li>fprintf&nbsp;&nbsp; <li>gets&nbsp; <li>scanf&nbsp;&nbsp; <li>fscanf&nbsp;&nbsp; <li>sscanf&nbsp;&nbsp;&nbsp; <li>strcspn&nbsp; <li>MultiByteToWideChar<li>WideCharToMultiByte <li>GetShortPathNameW&nbsp; <li>GetLongPathNameW&nbsp; <li>WinExec&nbsp; <li>CreateProcessW&nbsp; <li>GetEnvironmentVariableW&nbsp; <li>SetEnvironmentVariableW&nbsp; <li>SetEnvironmentVariableW&nbsp; <li>ExpandEnvironmentStringsW&nbsp; <li>SearchPathW&nbsp; <li>SearchPathW&nbsp; <li>SearchPathW&nbsp; <li>Lstrcpy&nbsp;&nbsp; <li>Wcscpy&nbsp;&nbsp; <li>_mbscpy&nbsp;&nbsp; <li>StrCpyA&nbsp;&nbsp; <li>StrCpyW&nbsp;&nbsp; <li>lstrcatA&nbsp;&nbsp; <li>lstrcatW&nbsp;&nbsp; <li>Wcscat&nbsp;&nbsp; <li>_mbscat&nbsp;&nbsp; <li>Wcslen&nbsp; <li>_mbslen&nbsp; <li>_mbstrlen&nbsp; <li>lstrlenA&nbsp; <li>lstrlenW&nbsp; <li>Wcsncpy <li>_mbsncpy <li>StrCpyN <li>lstrcpynW&nbsp; <li>lstrcatnA&nbsp; <li>lstrcatnW&nbsp; <li>wcsncat&nbsp; <li>_mbsncat&nbsp; <li>_mbsnbcat&nbsp;&nbsp; <li>lstrcmpA&nbsp; <li>lstrcmpW&nbsp; <li>StrCmp&nbsp; <li>Wcscmp&nbsp; <li>_mbscmp&nbsp; <li>strcoll&nbsp; <li>wcscoll&nbsp; <li>_mbscoll&nbsp; <li>_stricmp&nbsp; <li>lstrcmpiA&nbsp; <li>lstrcmpiW&nbsp; <li>_wcsicmp&nbsp; <li>_mbsicmp&nbsp; <li>StrCmp&nbsp; <li>_stricoll&nbsp; <li>_wcsicoll&nbsp; <li>_mbsicoll&nbsp; <li>StrColl&nbsp; <li>_wcsdup&nbsp; <li>_mbsdup&nbsp; <li>StrDup&nbsp; <li>_wcsrev&nbsp; <li>_mbsrev&nbsp; <li>_strlwr&nbsp; <li>_mbslwr&nbsp; <li>_wcslwr&nbsp; <li>_strupr&nbsp; <li>_mbsupr&nbsp; <li>_wcsupr&nbsp; <li>wcsstr&nbsp; <li>_mbsstr&nbsp; <li>strspn&nbsp; <li>wcsspn&nbsp; <li>_mbsspn&nbsp; <li>strpbrk&nbsp; <li>wcspbrk&nbsp; <li>_mbspbrk&nbsp; <li>wcsxfrm&nbsp; <li>wcscspn&nbsp; <li>_mbcscpn&nbsp; <li>swprintf&nbsp; <li>wsprintfA&nbsp; <li>wsprintfW&nbsp; <li>vsprintf&nbsp; <li>vswprintf&nbsp; <li>_snwprintf&nbsp; <li>_vsnprintf&nbsp; <li>_vsnwprintf&nbsp; <li>vprintf&nbsp; <li>vwprintf&nbsp; <li>vfprintf&nbsp; <li>vwfprintf&nbsp; <li>_getws&nbsp; <li>fwscanf&nbsp; <li>wscanf&nbsp; <li>swscanf&nbsp; <li>OemToCharA&nbsp;&nbsp; <li>OemToCharW&nbsp;&nbsp; <li>CharToOemA&nbsp;&nbsp; <li>CharToOemW&nbsp;&nbsp; <li>CharUpperA&nbsp; <li>CharUpperW&nbsp; <li>CharUpperBuffW&nbsp; <li>CharLowerA&nbsp; <li>CharLowerW&nbsp; <li>CharLowerBuffW&nbsp; </li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></li>\r\n  </ul>\r\n  <p>Verify that input and data validation is performed when any of these functions are called. Verify that user input is not used in format strings, if any.</p>\r\n  <h1>How to Fix</h1>\r\n  <p>Identify all code that uses any of the dangerous APIs as listed in the \"How to Check\" section. If possible, rewrite this code so that dangerous APIs are not used. Otherwise, add code that performs input and data validation when any of these functions are called. It is recommended to write a dedicated input and data validation class or library and use it. Pay special attention to functions that use format strings. If there is even a remote possibility of user input being used in the format strings, rewrite code so that it is impossible.</p>\r\n  <h1>Related Items</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/3f725650-1e28-4ee0-810c-133cd5912c91\">Do Not Use Dangerous APIs</a>\r\n    </li>\r\n  </ul>"
}