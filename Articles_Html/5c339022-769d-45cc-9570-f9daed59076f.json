{
  "id": "5c339022-769d-45cc-9570-f9daed59076f",
  "checksum": "7385c3f7e17de16f779f49aa0878aaddb858d6f3",
  "words": {
    "what": [
      "h2"
    ],
    "to": [
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h2",
      "ol",
      "li",
      "p"
    ],
    "generate": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "unique": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "title"
    ],
    "nonce": [
      "p",
      "p",
      "p",
      "p"
    ],
    "for": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "each": [
      "p"
    ],
    "form": [
      "p",
      "p",
      "p",
      "p"
    ],
    "place": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "into": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "verify": [
      "p"
    ],
    "upon": [
      "p"
    ],
    "receipt": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "be": [
      "p",
      "p",
      "p"
    ],
    "sure": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "not": [
      "p"
    ],
    "predictable": [
      "p"
    ],
    "cwe-330).": [
      "p"
    ],
    "note": [
      "p",
      "p",
      "strong"
    ],
    "this": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "bypassed": [
      "p"
    ],
    "using": [
      "p"
    ],
    "xss": [
      "p"
    ],
    "cwe-79).": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "csrf": [
      "p",
      "p",
      "ol",
      "li",
      "pre",
      "p"
    ],
    "may": [
      "p"
    ],
    "possible": [
      "p",
      "ol",
      "li",
      "pre",
      "p"
    ],
    "when": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "p"
    ],
    "url": [
      "p"
    ],
    "which": [
      "p"
    ],
    "performs": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "action": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "on": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "behalf": [
      "p"
    ],
    "authenticated": [
      "p"
    ],
    "user": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "forming": [
      "p"
    ],
    "such": [
      "p"
    ],
    "urls": [
      "p"
    ],
    "becomes": [
      "p"
    ],
    "much": [
      "p"
    ],
    "more": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "difficult": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "p"
    ],
    "tokens": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "title"
    ],
    "are": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "included": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "http": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "requests": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "including": [
      "p"
    ],
    "predict": [
      "p"
    ],
    "token": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "effective": [
      "p"
    ],
    "defense": [
      "p"
    ],
    "against": [
      "p"
    ],
    "attacks": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "include": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "sensitive": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "pre",
      "p"
    ],
    "operations": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "review": [
      "ol",
      "li",
      "p"
    ],
    "application": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "design": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "require": [
      "ol",
      "li",
      "p"
    ],
    "authorization": [
      "ol",
      "li",
      "p"
    ],
    "pages": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "involved": [
      "ol",
      "li",
      "p"
    ],
    "performing": [
      "ol",
      "li",
      "p"
    ],
    "-": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "includes": [
      "ol",
      "li",
      "p"
    ],
    "both": [
      "ol",
      "li",
      "p"
    ],
    "link": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "actually": [
      "ol",
      "li",
      "p"
    ],
    "carries": [
      "ol",
      "li",
      "p"
    ],
    "out": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "choose": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "method": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "generating": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "there": [
      "ol",
      "li",
      "p"
    ],
    "different": [
      "ol",
      "li",
      "p"
    ],
    "ways": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "one": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "approach": [
      "ol",
      "li",
      "p"
    ],
    "use": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "title"
    ],
    "uniqid": [
      "ol",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "li",
      "p"
    ],
    "combined": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "li",
      "p"
    ],
    "hash": [
      "ol",
      "li",
      "p"
    ],
    "based": [
      "ol",
      "li",
      "p"
    ],
    "current": [
      "ol",
      "li",
      "p"
    ],
    "time": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "uniqidmd5(microtime()),": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "true;": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "add": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "session": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "adds": [
      "ol",
      "li",
      "p"
    ],
    "generated": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "stores": [
      "ol",
      "li",
      "p"
    ],
    "them": [
      "ol",
      "li",
      "p"
    ],
    "variables": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "session_start);$_session['csrftoken']": [
      "ol",
      "li",
      "pre"
    ],
    "=": [
      "ol",
      "li",
      "pre"
    ],
    "sends": [
      "ol",
      "li",
      "p"
    ],
    "simplest": [
      "ol",
      "li",
      "p"
    ],
    "hidden": [
      "ol",
      "li",
      "p"
    ],
    "fields": [
      "ol",
      "li",
      "p"
    ],
    "forms": [
      "ol",
      "li",
      "p"
    ],
    "input": [
      "ol",
      "li",
      "pre",
      "ul",
      "li"
    ],
    "type=\"hidden\"": [
      "ol",
      "li",
      "pre"
    ],
    "name=\"csrftoken\"": [
      "ol",
      "li",
      "pre"
    ],
    "value=\"?php": [
      "ol",
      "li",
      "pre"
    ],
    "echo": [
      "ol",
      "li",
      "pre"
    ],
    "$_session'csrftoken']": [
      "ol",
      "li",
      "pre"
    ],
    "?\"": [
      "ol",
      "li",
      "pre"
    ],
    "/": [
      "ol",
      "li",
      "pre"
    ],
    "validation": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "pre",
      "p"
    ],
    "carry": [
      "ol",
      "li",
      "p"
    ],
    "compares": [
      "ol",
      "li",
      "p"
    ],
    "sent": [
      "ol",
      "li",
      "p"
    ],
    "stored": [
      "ol",
      "li",
      "p"
    ],
    "comparing": [
      "ol",
      "li",
      "p"
    ],
    "makes": [
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "server": [
      "ol",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "li",
      "p"
    ],
    "part": [
      "ol",
      "li",
      "p"
    ],
    "normal": [
      "ol",
      "li",
      "p"
    ],
    "workflow": [
      "ol",
      "li",
      "p"
    ],
    "therefore": [
      "ol",
      "li",
      "p"
    ],
    "requested": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "li",
      "p"
    ],
    "performed": [
      "ol",
      "li",
      "p"
    ],
    "legitimate": [
      "ol",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "look": [
      "ol",
      "li",
      "p"
    ],
    "something": [
      "ol",
      "li",
      "p"
    ],
    "like": [
      "ol",
      "li",
      "p"
    ],
    "following": [
      "ol",
      "li",
      "p"
    ],
    "session_start);if": [
      "ol",
      "li",
      "pre"
    ],
    "$_post['csrftoken']": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "!==": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "$_session'csrftoken'])": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "{": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "//": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "don't": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "match": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "detected": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "die'possible": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "csrf';}//": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "passed": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "so": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "perform": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "operation": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "about": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "\"cwe-330": [
      "ul",
      "li"
    ],
    "insufficiently": [
      "ul",
      "li"
    ],
    "random": [
      "ul",
      "li"
    ],
    "values\"": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "see\rhttp://cwe.mitre.org/data/definitions/330.html": [
      "ul",
      "li"
    ],
    "\"cwe-79": [
      "ul",
      "li"
    ],
    "improper": [
      "ul",
      "li"
    ],
    "neutralization": [
      "ul",
      "li"
    ],
    "during": [
      "ul",
      "li"
    ],
    "web": [
      "ul",
      "li"
    ],
    "page": [
      "ul",
      "li"
    ],
    "generation": [
      "ul",
      "li"
    ],
    "'cross-site": [
      "ul",
      "li"
    ],
    "scripting'\",": [
      "ul",
      "li"
    ],
    "see\rhttp://cwe.mitre.org/data/definitions/79.html": [
      "ul",
      "li"
    ],
    "http//cwe.mitre.org/data/definitions/330.html": [
      "a"
    ],
    "http//cwe.mitre.org/data/definitions/79.html": [
      "a"
    ]
  },
  "tags": {
    "h2": [
      "What to Do"
    ],
    "p": [
      "Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).",
      "Note: Note that this can be bypassed using XSS (CWE-79).",
      "CSRF may be possible when an attacker can form a URL, which performs an action on the behalf of an authenticated user. Forming such URLs becomes much more difficult, if unique tokens are included in HTTP requests. Including difficult to predict token in\r\n HTTP requests is an effective defense against CSRF attacks.",
      "To include unique tokens in HTTP requests:",
      "Identify sensitive operations. Review application design and code to identify all operations that require authorization.",
      "Identify code that performs sensitive operations. Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive\r\n operations.",
      "Choose a method for generating unique tokens. There are different ways to generate unique tokens. One approach is to use the uniqid function combined with a hash based on current time. For example:",
      "Add the unique token to the session. Add code that adds the generated unique tokens and stores them in session variables to the pages that link to sensitive operations. For example:",
      "Add unique tokens to HTTP requests. Add code that sends the generated unique tokens in HTTP requests to the pages that link to sensitive operations. One of the simplest ways to do this is to include the tokens in hidden fields in forms.\r\n For example:",
      "Add token validation code. Add code to the pages that carry out sensitive operations that compares the tokens sent in HTTP requests to the tokens stored in session variables. Comparing the tokens in HTTP requests to tokens in session variables\r\n makes sure that the tokens are generated by the server as a part of normal application workflow and therefore the requested action is being performed by a legitimate user. The validation code should look something like the following:",
      "",
      "if ($_POST['CSRFToken'] !== $_SESSION['CSRFToken']) {  // The tokens don't match - possible CSRF detected  die('Possible CSRF');}// Validation passed, so tokens match - perform the sensitive operation"
    ],
    "strong": [
      "Note:",
      "Identify sensitive operations.",
      "Identify code that performs sensitive operations.",
      "Choose a method for generating unique tokens.",
      "Add the unique token to the session.",
      "Add unique tokens to HTTP requests.",
      "Add token validation code."
    ],
    "h1": [
      "Why",
      "How",
      "Additional Resources"
    ],
    "ol": [
      "Identify sensitive operations. Review application design and code to identify all operations that require authorization.\r\n    \r\n    \r\n      \r\n        Identify code that performs sensitive operations. Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive\r\n operations.\r\n    \r\n    \r\n      \r\n        Choose a method for generating unique tokens. There are different ways to generate unique tokens. One approach is to use the uniqid function combined with a hash based on current time. For example:\r\n\r\n      uniqid(md5(microtime()), true);\r\n    \r\n    \r\n      \r\n        Add the unique token to the session. Add code that adds the generated unique tokens and stores them in session variables to the pages that link to sensitive operations. For example:\r\n\r\n      session_start();$_SESSION['CSRFToken'] = uniqid(md5(microtime()), true);\r\n    \r\n    \r\n      \r\n        Add unique tokens to HTTP requests. Add code that sends the generated unique tokens in HTTP requests to the pages that link to sensitive operations. One of the simplest ways to do this is to include the tokens in hidden fields in forms.\r\n For example:\r\n      <input type=\"hidden\" name=\"CSRFToken\" value=\"<?php echo $_SESSION['CSRFToken'] ?>\" />\r\n    \r\n    \r\n      \r\n        Add token validation code. Add code to the pages that carry out sensitive operations that compares the tokens sent in HTTP requests to the tokens stored in session variables. Comparing the tokens in HTTP requests to tokens in session variables\r\n makes sure that the tokens are generated by the server as a part of normal application workflow and therefore the requested action is being performed by a legitimate user. The validation code should look something like the following:\r\n      session_start();if ($_POST['CSRFToken'] !== $_SESSION['CSRFToken']) {  // The tokens don't match - possible CSRF detected  die('Possible CSRF');}// Validation passed, so tokens match - perform the sensitive operation"
    ],
    "li": [
      "Identify sensitive operations. Review application design and code to identify all operations that require authorization.",
      "Identify code that performs sensitive operations. Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive\r\n operations.",
      "Choose a method for generating unique tokens. There are different ways to generate unique tokens. One approach is to use the uniqid function combined with a hash based on current time. For example:\r\n\r\n      uniqid(md5(microtime()), true);",
      "Add the unique token to the session. Add code that adds the generated unique tokens and stores them in session variables to the pages that link to sensitive operations. For example:\r\n\r\n      session_start();$_SESSION['CSRFToken'] = uniqid(md5(microtime()), true);",
      "Add unique tokens to HTTP requests. Add code that sends the generated unique tokens in HTTP requests to the pages that link to sensitive operations. One of the simplest ways to do this is to include the tokens in hidden fields in forms.\r\n For example:\r\n      <input type=\"hidden\" name=\"CSRFToken\" value=\"<?php echo $_SESSION['CSRFToken'] ?>\" />",
      "Add token validation code. Add code to the pages that carry out sensitive operations that compares the tokens sent in HTTP requests to the tokens stored in session variables. Comparing the tokens in HTTP requests to tokens in session variables\r\n makes sure that the tokens are generated by the server as a part of normal application workflow and therefore the requested action is being performed by a legitimate user. The validation code should look something like the following:\r\n      session_start();if ($_POST['CSRFToken'] !== $_SESSION['CSRFToken']) {  // The tokens don't match - possible CSRF detected  die('Possible CSRF');}// Validation passed, so tokens match - perform the sensitive operation",
      "For more information about \"CWE-330: Use of Insufficiently Random Values\", please see\r\nhttp://cwe.mitre.org/data/definitions/330.html",
      "For more information about \"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\", please see\r\nhttp://cwe.mitre.org/data/definitions/79.html"
    ],
    "pre": [
      "uniqid(md5(microtime()), true);",
      "session_start();$_SESSION['CSRFToken'] = uniqid(md5(microtime()), true);",
      "<input type=\"hidden\" name=\"CSRFToken\" value=\"<?php echo $_SESSION['CSRFToken'] ?>\" />",
      "session_start();if ($_POST['CSRFToken'] !== $_SESSION['CSRFToken']) {  // The tokens don't match - possible CSRF detected  die('Possible CSRF');}// Validation passed, so tokens match - perform the sensitive operation"
    ],
    "br": [
      "",
      "",
      "",
      "",
      ""
    ],
    "ul": [
      "For more information about \"CWE-330: Use of Insufficiently Random Values\", please see\r\nhttp://cwe.mitre.org/data/definitions/330.html\r\n    For more information about \"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\", please see\r\nhttp://cwe.mitre.org/data/definitions/79.html"
    ],
    "a": [
      "http://cwe.mitre.org/data/definitions/330.html",
      "http://cwe.mitre.org/data/definitions/79.html"
    ]
  },
  "links": [
    {
      "href": "http://cwe.mitre.org/data/definitions/330.html",
      "text": "http://cwe.mitre.org/data/definitions/330.html"
    },
    {
      "href": "http://cwe.mitre.org/data/definitions/79.html",
      "text": "http://cwe.mitre.org/data/definitions/79.html"
    }
  ],
  "html": "<h2>What to Do</h2>\r\n  <p>Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).\r\n</p>\r\n  <p>\r\n    <strong>Note:</strong> Note that this can be bypassed using XSS (CWE-79).</p>\r\n  <h1>Why</h1>\r\n  <p>CSRF may be possible when an attacker can form a URL, which performs an action on the behalf of an authenticated user. Forming such URLs becomes much more difficult, if unique tokens are included in HTTP requests. Including difficult to predict token in\r\n HTTP requests is an effective defense against CSRF attacks.</p>\r\n  <h1>How</h1>\r\n  <p>To include unique tokens in HTTP requests:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify sensitive operations.</strong> Review application design and code to identify all operations that require authorization.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify code that performs sensitive operations. </strong>Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive\r\n operations.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Choose a method for generating unique tokens.</strong> There are different ways to generate unique tokens. One approach is to use the uniqid function combined with a hash based on current time. For example:\r\n</p>\r\n      <pre>uniqid(md5(microtime()), true);</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Add the unique token to the session.</strong> Add code that adds the generated unique tokens and stores them in session variables to the pages that link to sensitive operations. For example:\r\n</p>\r\n      <pre>session_start();<br />$_SESSION['CSRFToken'] = uniqid(md5(microtime()), true);</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Add unique tokens to HTTP requests.</strong> Add code that sends the generated unique tokens in HTTP requests to the pages that link to sensitive operations. One of the simplest ways to do this is to include the tokens in hidden fields in forms.\r\n For example:</p>\r\n      <pre>&lt;input type=\"hidden\" name=\"CSRFToken\" value=\"&lt;?php echo $_SESSION['CSRFToken'] ?&gt;\" /&gt;</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Add token validation code.</strong> Add code to the pages that carry out sensitive operations that compares the tokens sent in HTTP requests to the tokens stored in session variables. Comparing the tokens in HTTP requests to tokens in session variables\r\n makes sure that the tokens are generated by the server as a part of normal application workflow and therefore the requested action is being performed by a legitimate user. The validation code should look something like the following:</p>\r\n      <pre>session_start();<p /><p>if ($_POST['CSRFToken'] !== $_SESSION['CSRFToken']) {<br />  // The tokens don't match - possible CSRF detected<br />  die('Possible CSRF');<br />}<br />// Validation passed, so tokens match - perform the sensitive operation</p></pre>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information about \"CWE-330: Use of Insufficiently Random Values\", please see\r\n<a href=\"http://cwe.mitre.org/data/definitions/330.html\">http://cwe.mitre.org/data/definitions/330.html</a></li>\r\n    <li>For more information about \"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\", please see\r\n<a href=\"http://cwe.mitre.org/data/definitions/79.html\">http://cwe.mitre.org/data/definitions/79.html</a></li>\r\n  </ul>"
}