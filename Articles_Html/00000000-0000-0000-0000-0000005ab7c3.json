{
  "id": "00000000-0000-0000-0000-0000005ab7c3",
  "checksum": "818a911ae27213bed57ad74372fb17243de0c63e",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "java": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2",
      "ol",
      "li"
    ],
    "for": [
      "h2",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "sent": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "user": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "http": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "response": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "headers": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "url-encoded": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "title"
    ],
    "why": [
      "h2"
    ],
    "if": [
      "p"
    ],
    "application": [
      "p",
      "p",
      "p"
    ],
    "accepts": [
      "p"
    ],
    "input": [
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "includes": [
      "p",
      "ol",
      "li"
    ],
    "such": [
      "p"
    ],
    "will": [
      "p"
    ],
    "be": [
      "p"
    ],
    "vulnerable": [
      "p"
    ],
    "splitting": [
      "p"
    ],
    "vulnerability": [
      "p"
    ],
    "unless": [
      "p"
    ],
    "are": [
      "p"
    ],
    "or": [
      "p"
    ],
    "sanitized": [
      "p"
    ],
    "attackers": [
      "p",
      "p"
    ],
    "can": [
      "p"
    ],
    "execute": [
      "p"
    ],
    "a": [
      "p",
      "p"
    ],
    "cross": [
      "p"
    ],
    "site": [
      "p"
    ],
    "scripting": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "by": [
      "p",
      "p"
    ],
    "forcing": [
      "p"
    ],
    "your": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "send": [
      "p"
    ],
    "carriage": [
      "p"
    ],
    "return": [
      "p"
    ],
    "cr)": [
      "p"
    ],
    "line": [
      "p"
    ],
    "feed": [
      "p"
    ],
    "lf)": [
      "p"
    ],
    "followed": [
      "p"
    ],
    "malicious": [
      "p"
    ],
    "content": [
      "p",
      "p"
    ],
    "users": [
      "p"
    ],
    "browser": [
      "p",
      "p"
    ],
    "because": [
      "p"
    ],
    "crlf": [
      "p",
      "p",
      "p"
    ],
    "header": [
      "p"
    ],
    "separator": [
      "p"
    ],
    "separates": [
      "p"
    ],
    "from": [
      "p"
    ],
    "body": [
      "p"
    ],
    "sees": [
      "p"
    ],
    "as": [
      "p"
    ],
    "legitimate": [
      "p"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "identify": [
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "included": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "search": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "calls": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "httpservletresponseaddheader": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "httpservletresponseaddcookie": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "find": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "adds": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "validated": [
      "ol",
      "li",
      "strong"
    ],
    "examine": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "any": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "passed": [
      "ol",
      "li"
    ],
    "through": [
      "ol",
      "li"
    ],
    "positive": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "validation": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "routines": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "before": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "being": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "using": [
      "ol",
      "li"
    ],
    "javanet.urlencoder": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "class": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "url-encode": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "validate": [
      "ol",
      "li",
      "strong"
    ],
    "use": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "gets": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "urlencoderencode": [
      "ul",
      "li",
      "em"
    ],
    "method": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//docs.oracle.com/javase/1.5.0/docs/api/java/net/urlencoder.html": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Additional Resources"
    ],
    "ul": [
      "Java",
      "For more information about the URLEncoder.encode method, see http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html"
    ],
    "li": [
      "Java",
      "Identify all data included in HTTP response headers. Search your code for calls to HttpServletResponse.AddHeader and for HttpServletResponse.AddCookie to find all code that adds data to HTTP response headers.",
      "Verify that data included in HTTP response headers is validated. Examine code that adds data to response headers. Make sure that any user data is passed through positive validation routines before being included in HTTP response headers.",
      "Verify that data included in HTTP response headers is URL-encoded. Examine code that adds data to response headers. Make sure that any user data is URL-encoded using java.net.URLEncoder class before being included in HTTP response headers.",
      "Identify all data included in HTTP response headers. Search your code for calls to  HttpServletResponse.AddHeader and for HttpServletResponse.AddCookie to find all code that adds data to HTTP response headers.",
      "Validate all data included in HTTP response headers. Use positive validation routines to check all data that gets included in HTTP response headers.",
      "URL-encode all data included in HTTP response headers. Use java.net.URLEncoder class to URL-encode data that gets includes in HTTP response headers.",
      "For more information about the URLEncoder.encode method, see http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html"
    ],
    "p": [
      "Verify that data sent to the user in HTTP response headers is URL-encoded.",
      "If the application accepts user input and includes such input in HTTP response headers the application will be vulnerable to response splitting vulnerability unless headers are URL-encoded or data is sanitized. Attackers can execute a cross site scripting attack by forcing your application to send carriage return (CR) and line feed (LF) followed by malicious content to the users browser. Because CRLF is a response header separator and CRLF CRLF separates headers from the body,  the browser sees attackers content as legitimate.",
      "To verify that data in HTTP response headers is URL-encoded:",
      "To URL-encode data in HTTP Response headers:"
    ],
    "ol": [
      "Identify all data included in HTTP response headers. Search your code for calls to HttpServletResponse.AddHeader and for HttpServletResponse.AddCookie to find all code that adds data to HTTP response headers.\n Verify that data included in HTTP response headers is validated. Examine code that adds data to response headers. Make sure that any user data is passed through positive validation routines before being included in HTTP response headers.\n Verify that data included in HTTP response headers is URL-encoded. Examine code that adds data to response headers. Make sure that any user data is URL-encoded using java.net.URLEncoder class before being included in HTTP response headers.",
      "Identify all data included in HTTP response headers. Search your code for calls to  HttpServletResponse.AddHeader and for HttpServletResponse.AddCookie to find all code that adds data to HTTP response headers.\n Validate all data included in HTTP response headers. Use positive validation routines to check all data that gets included in HTTP response headers.\n URL-encode all data included in HTTP response headers. Use java.net.URLEncoder class to URL-encode data that gets includes in HTTP response headers."
    ],
    "strong": [
      "Identify all data included in HTTP response headers.",
      "Verify that data included in HTTP response headers is validated.",
      "Verify that data included in HTTP response headers is URL-encoded.",
      "Identify all data included in HTTP response headers.",
      "Validate all data included in HTTP response headers.",
      "URL-encode all data included in HTTP response headers."
    ],
    "em": [
      "HttpServletResponse.AddHeader",
      "HttpServletResponse.AddCookie",
      "java.net.URLEncoder",
      "HttpServletResponse.AddHeader",
      "HttpServletResponse.AddCookie",
      "java.net.URLEncoder",
      "URLEncoder.encode"
    ],
    "a": [
      "http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html"
    ]
  },
  "links": [
    {
      "href": "http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html",
      "text": "http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> Java</li>\n</ul><h2>What to Check For</h2><p>Verify that data sent to the user in HTTP response headers is URL-encoded.\n</p><h2>Why</h2><p>If the application accepts user input and includes such input in HTTP response headers the application will be vulnerable to response splitting vulnerability unless headers are URL-encoded or data is sanitized. Attackers can execute a cross site scripting attack by forcing your application to send carriage return (CR) and line feed (LF) followed by malicious content to the users browser. Because CRLF is a response header separator and CRLF CRLF separates headers from the body,  the browser sees attackers content as legitimate. \n</p><h2>How to Check</h2><p>To verify that data in HTTP response headers is URL-encoded:\n</p><ol>\n<li> <strong>Identify all data included in HTTP response headers.</strong> Search your code for calls to <em>HttpServletResponse.AddHeader</em> and for <em>HttpServletResponse.AddCookie</em> to find all code that adds data to HTTP response headers.</li>\n<li> <strong>Verify that data included in HTTP response headers is validated.</strong> Examine code that adds data to response headers. Make sure that any user data is passed through positive validation routines before being included in HTTP response headers.</li>\n<li> <strong>Verify that data included in HTTP response headers is URL-encoded.</strong> Examine code that adds data to response headers. Make sure that any user data is URL-encoded using <em>java.net.URLEncoder</em> class before being included in HTTP response headers.</li>\n</ol><h2>How to Fix</h2><p>To URL-encode data in HTTP Response headers:</p><ol>\n<li> <strong>Identify all data included in HTTP response headers.</strong> Search your code for calls to <em> HttpServletResponse.AddHeader</em> and for <em>HttpServletResponse.AddCookie</em> to find all code that adds data to HTTP response headers.</li>\n<li> <strong>Validate all data included in HTTP response headers.</strong> Use positive validation routines to check all data that gets included in HTTP response headers.</li>\n<li> <strong>URL-encode all data included in HTTP response headers.</strong> Use <em>java.net.URLEncoder</em> class to URL-encode data that gets includes in HTTP response headers.</li>\n</ol><h2>Additional Resources</h2><ul><li> For more information about the <em>URLEncoder.encode</em> method, see <a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html\">http://docs.oracle.com/javase/1.5.0/docs/api/java/net/URLEncoder.html</a></li></ul>"
}