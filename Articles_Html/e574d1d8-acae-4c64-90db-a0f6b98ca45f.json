{
  "id": "e574d1d8-acae-4c64-90db-a0f6b98ca45f",
  "checksum": "f37f83a141462e4c590fb3b4f3e99de22c412440",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "ensure": [
      "p",
      "p"
    ],
    "your": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "displays": [
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "generic": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "message": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p"
    ],
    "when": [
      "p",
      "p"
    ],
    "authentication": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "fails": [
      "p",
      "p"
    ],
    "why": [
      "h1",
      "p"
    ],
    "disclosing": [
      "p"
    ],
    "information about": [
      "p"
    ],
    "invalid": [
      "p",
      "p"
    ],
    "usernames": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li"
    ],
    "passwords": [
      "p"
    ],
    "can": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "help": [
      "p"
    ],
    "an": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p"
    ],
    "obtain": [
      "p"
    ],
    "list": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "valid": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "users": [
      "p"
    ],
    "how": [
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "use": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "following": [
      "p",
      "p",
      "p",
      "p"
    ],
    "steps": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "messages": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "upon": [
      "p"
    ],
    "failed": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "segments": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "handle": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "functions": [
      "ol",
      "li",
      "p"
    ],
    "login": [
      "ol",
      "li",
      "p"
    ],
    "perform": [
      "ol",
      "li",
      "p"
    ],
    "access": [
      "ol",
      "li",
      "p"
    ],
    "control": [
      "ol",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "li",
      "p"
    ],
    "resources": [
      "ol",
      "li",
      "p"
    ],
    "trace": [
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "base": [
      "ol",
      "li",
      "p"
    ],
    "locate": [
      "ol",
      "li",
      "p"
    ],
    "origin": [
      "ol",
      "li",
      "p"
    ],
    "each failed": [
      "ol",
      "li",
      "p"
    ],
    "good": [
      "ol",
      "li",
      "p"
    ],
    "places": [
      "ol",
      "li",
      "p"
    ],
    "start": [
      "ol",
      "li",
      "p"
    ],
    "are": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "if-else": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "statements": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "throw": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "exception": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "handlers": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "is": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "common": [
      "ol",
      "li",
      "p"
    ],
    "practice": [
      "ol",
      "li",
      "p"
    ],
    "developers": [
      "ol",
      "li",
      "p"
    ],
    "group": [
      "ol",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "resource": [
      "ol",
      "li",
      "p"
    ],
    "files": [
      "ol",
      "li",
      "p"
    ],
    "instead": [
      "ol",
      "li",
      "p"
    ],
    "hard-coding": [
      "ol",
      "li",
      "p"
    ],
    "them": [
      "ol",
      "li",
      "p"
    ],
    "source": [
      "ol",
      "li",
      "p"
    ],
    "review": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "error": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "h1",
      "h1"
    ],
    "returned": [
      "ol",
      "li",
      "p"
    ],
    "verify": [
      "ol",
      "li",
      "p"
    ],
    "structure": [
      "ol",
      "li",
      "ul",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "brief": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "direct": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "contents": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "strong"
    ],
    "do": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "not": [
      "ol",
      "li",
      "ul",
      "li",
      "pre",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "contain": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "p"
    ],
    "unnecessary": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "such": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "as": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "internal": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "debug": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "information": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "variety": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "pertain": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "identical": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "fix": [
      "h1"
    ],
    "provide": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "secure": [
      "p"
    ],
    "choose": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "should": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "very": [
      "ol",
      "li",
      "p"
    ],
    "signify": [
      "ol",
      "li",
      "p"
    ],
    "\"yes\"": [
      "ol",
      "li",
      "p"
    ],
    "or": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "\"no\"": [
      "ol",
      "li",
      "p"
    ],
    "attempt": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "h1",
      "h1"
    ],
    "\"authentication": [
      "ol",
      "li",
      "p"
    ],
    "failed\"": [
      "ol",
      "li",
      "p"
    ],
    "display": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "only": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "one": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "feedback": [
      "ol",
      "li",
      "p"
    ],
    "after": [
      "ol",
      "li",
      "p"
    ],
    "credentials": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "li",
      "p"
    ],
    "verified": [
      "ol",
      "li",
      "p"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "manner": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "allows": [
      "ol",
      "li",
      "p"
    ],
    "checks": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "executed": [
      "ol",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "once": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "if": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre",
      "p",
      "pre"
    ],
    "!validuser()": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "||": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "!validpass)){": [
      "ol",
      "li",
      "pre"
    ],
    "new": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "authenticationexception\"authentication": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "failed\");}": [
      "ol",
      "li",
      "pre"
    ],
    "because": [
      "ol",
      "li",
      "p"
    ],
    "sometimes": [
      "ol",
      "li",
      "p"
    ],
    "impossible": [
      "ol",
      "li",
      "p"
    ],
    "where": [
      "ol",
      "li",
      "p"
    ],
    "performed": [
      "ol",
      "li",
      "p"
    ],
    "important": [
      "ol",
      "li",
      "p"
    ],
    "exact": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "any": [
      "ol",
      "li",
      "p"
    ],
    "variation": [
      "ol",
      "li",
      "p"
    ],
    "give": [
      "ol",
      "li",
      "p"
    ],
    "away": [
      "ol",
      "li",
      "p"
    ],
    "username": [
      "ol",
      "li",
      "p"
    ],
    "problem": [
      "h1"
    ],
    "authenticates": [
      "p",
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "unfortunately": [
      "p"
    ],
    "reveals": [
      "p"
    ],
    "through": [
      "p"
    ],
    "its": [
      "p"
    ],
    "whether": [
      "p"
    ],
    "sent": [
      "p"
    ],
    "represent": [
      "p",
      "p"
    ],
    "public": [
      "pre",
      "pre"
    ],
    "void": [
      "pre",
      "pre"
    ],
    "login)": [
      "pre",
      "pre"
    ],
    "throws": [
      "pre",
      "pre"
    ],
    "authenticationexception{": [
      "pre",
      "pre"
    ],
    "!validuser())": [
      "pre"
    ],
    "{": [
      "pre",
      "pre",
      "pre"
    ],
    "authenticationexception\"user": [
      "pre"
    ],
    "found\");": [
      "pre"
    ],
    "}": [
      "pre",
      "pre",
      "pre"
    ],
    "!validpass())": [
      "pre"
    ],
    "authenticationexception\"wrong": [
      "pre"
    ],
    "password\");": [
      "pre"
    ],
    "commit);}": [
      "pre",
      "pre"
    ],
    "solution": [
      "h1"
    ],
    "since": [
      "p"
    ],
    "presents": [
      "p"
    ],
    "regardless": [
      "p"
    ],
    "can't": [
      "p"
    ],
    "determine": [
      "p"
    ],
    "tried": [
      "p"
    ],
    "!validpass))": [
      "pre"
    ],
    "failed\");": [
      "pre"
    ],
    "java": [
      "h1",
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "handling": [
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "structured": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "global": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "handler": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "unhandled": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "exceptions": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "disclose": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "valuable": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "during": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "errors": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "details": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "client": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "include": [
      "ul",
      "li",
      "a"
    ],
    "data": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "output": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h1"
    ],
    "used": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "disclosed": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "included": [
      "ul",
      "li",
      "a"
    ],
    "testing": [
      "h1"
    ],
    "test": [
      "ul",
      "li",
      "a"
    ],
    "disclosure": [
      "ul",
      "li",
      "a"
    ],
    "bugs": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Problem Example",
      "Solution Example",
      "Java Error Handling Guidelines",
      "Java Error Handling Checklists",
      "Java Error Handling Testing"
    ],
    "p": [
      "Ensure your application displays a generic message when authentication fails.",
      "Disclosing information about invalid usernames and passwords can help an attacker obtain a list of valid users.",
      "Use the following steps to ensure that your application displays generic messages upon failed authentication:",
      "Identify all segments of code that handle failed authentication. Identify all functions that handle login and perform access control on resources. Trace your application's code base to locate the origin of each failed authentication messages. Good places to start are if-else statements, throw statements and exception handlers. It is a common practice for developers to group messages into resource files instead of hard-coding them into your application's source code.",
      "Review the error messages. Review the returned error messages. Verify that:",
      "To provide secure error messages when authentication fails, use the following steps:",
      "Choose an error message. The message should be very generic. It should signify \"yes\" or \"no\" to the authentication attempt. For example: \"Authentication failed.\"",
      "Display only one message. Your application should provide feedback only after all credentials have been verified. Structure your code in a manner that allows all checks to be executed at once. For example:",
      "Because sometimes it is impossible to structure the code in a manner where all checks are performed at once, it is important that all error messages contain the exact same information. Any variation in the error messages can give away the information that a username is valid.",
      "The following code authenticates a user. Unfortunately, the code reveals through its error messages whether the credentials sent represent a valid user or an invalid user:",
      "The following code authenticates a user. Since it presents the same error message regardless of why the authentication failed, an attacker can't determine if the credentials tried represent a valid user or not."
    ],
    "ol": [
      "Identify all segments of code that handle failed authentication. Identify all functions that handle login and perform access control on resources. Trace your application's code base to locate the origin of each failed authentication messages. Good places to start are if-else statements, throw statements and exception handlers. It is a common practice for developers to group messages into resource files instead of hard-coding them into your application's source code.\r\n    \r\n    \r\n      \r\n        Review the error messages. Review the returned error messages. Verify that:\r\n      \r\n        \r\n          Structure: Error messages are brief and direct. \r\n        \r\n          Contents: Error messages do not contain unnecessary contents such as internal debug information.\r\n        \r\n          Variety: All error messages that pertain to failed authentication are identical.",
      "Choose an error message. The message should be very generic. It should signify \"yes\" or \"no\" to the authentication attempt. For example: \"Authentication failed.\" \r\n    \r\n    \r\n      \r\n        Display only one message. Your application should provide feedback only after all credentials have been verified. Structure your code in a manner that allows all checks to be executed at once. For example:\r\n      if (!validUser() || !validPass()){      throw new AuthenticationException(\"Authentication failed.\");}\r\n      Because sometimes it is impossible to structure the code in a manner where all checks are performed at once, it is important that all error messages contain the exact same information. Any variation in the error messages can give away the information that a username is valid."
    ],
    "li": [
      "Identify all segments of code that handle failed authentication. Identify all functions that handle login and perform access control on resources. Trace your application's code base to locate the origin of each failed authentication messages. Good places to start are if-else statements, throw statements and exception handlers. It is a common practice for developers to group messages into resource files instead of hard-coding them into your application's source code.",
      "Review the error messages. Review the returned error messages. Verify that:\r\n      \r\n        \r\n          Structure: Error messages are brief and direct. \r\n        \r\n          Contents: Error messages do not contain unnecessary contents such as internal debug information.\r\n        \r\n          Variety: All error messages that pertain to failed authentication are identical.",
      "Structure: Error messages are brief and direct.",
      "Contents: Error messages do not contain unnecessary contents such as internal debug information.",
      "Variety: All error messages that pertain to failed authentication are identical.",
      "Choose an error message. The message should be very generic. It should signify \"yes\" or \"no\" to the authentication attempt. For example: \"Authentication failed.\"",
      "Display only one message. Your application should provide feedback only after all credentials have been verified. Structure your code in a manner that allows all checks to be executed at once. For example:\r\n      if (!validUser() || !validPass()){      throw new AuthenticationException(\"Authentication failed.\");}\r\n      Because sometimes it is impossible to structure the code in a manner where all checks are performed at once, it is important that all error messages contain the exact same information. Any variation in the error messages can give away the information that a username is valid.",
      "Use Structured Exception Handling",
      "Use a Global Exception Handler for Unhandled Exceptions",
      "Do Not Disclose Valuable Information During Authentication Errors",
      "Do Not Disclose Exception Details to the Client",
      "Do Not Include Debug Data in Output",
      "Structured Exception Handling Is Used",
      "A Global Exception Handler Is Used for Unhandled Exceptions",
      "Valuable Information Is Not Disclosed During Authentication Errors",
      "Exception Details Are Not Disclosed to the Client",
      "Debug Data Is Not Included in Output",
      "How to Test for Exception Information Disclosure Bugs in Java"
    ],
    "strong": [
      "Identify all segments of code that handle failed authentication.",
      "Review the error messages.",
      "Structure",
      "Contents",
      "Variety",
      "Choose an error message.",
      "Display only one message."
    ],
    "em": [
      "if-else",
      "throw"
    ],
    "ul": [
      "Structure: Error messages are brief and direct. \r\n        \r\n          Contents: Error messages do not contain unnecessary contents such as internal debug information.\r\n        \r\n          Variety: All error messages that pertain to failed authentication are identical.",
      "Use Structured Exception Handling\r\n    \r\n    \r\n      Use a Global Exception Handler for Unhandled Exceptions\r\n    \r\n    \r\n      Do Not Disclose Valuable Information During Authentication Errors\r\n    \r\n    \r\n      Do Not Disclose Exception Details to the Client\r\n    \r\n    \r\n      Do Not Include Debug Data in Output",
      "Structured Exception Handling Is Used\r\n    \r\n    \r\n      A Global Exception Handler Is Used for Unhandled Exceptions\r\n    \r\n    \r\n      Valuable Information Is Not Disclosed During Authentication Errors\r\n    \r\n    \r\n      Exception Details Are Not Disclosed to the Client\r\n    \r\n    \r\n      Debug Data Is Not Included in Output",
      "How to Test for Exception Information Disclosure Bugs in Java"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "pre": [
      "if (!validUser() || !validPass()){      throw new AuthenticationException(\"Authentication failed.\");}",
      "public void login() throws AuthenticationException{      if (!validUser())      {            throw new AuthenticationException(\"User not found.\");      }      if (!validPass())      {            throw new AuthenticationException(\"Wrong password.\");      }      commit();}",
      "public void login() throws AuthenticationException{      if (!validUser() || !validPass())      {            throw new AuthenticationException(\"Authentication failed.\");      }      commit();}"
    ],
    "a": [
      "Use Structured Exception Handling",
      "Use a Global Exception Handler for Unhandled Exceptions",
      "Do Not Disclose Valuable Information During Authentication Errors",
      "Do Not Disclose Exception Details to the Client",
      "Do Not Include Debug Data in Output",
      "Structured Exception Handling Is Used",
      "A Global Exception Handler Is Used for Unhandled Exceptions",
      "Valuable Information Is Not Disclosed During Authentication Errors",
      "Exception Details Are Not Disclosed to the Client",
      "Debug Data Is Not Included in Output",
      "How to Test for Exception Information Disclosure Bugs in Java"
    ]
  },
  "links": [
    {
      "href": "/article/fceefe0c-900a-4c29-9c2e-ee662aa9e1f1",
      "text": "Use Structured Exception Handling"
    },
    {
      "href": "/article/3e815c74-4d57-4c1b-8446-750b319ea046",
      "text": "Use a Global Exception Handler for Unhandled Exceptions"
    },
    {
      "href": "/article/30abc3c9-d288-4e8a-a614-fd1a1f331270",
      "text": "Do Not Disclose Valuable Information During Authentication Errors"
    },
    {
      "href": "/article/56ad1852-7fc3-4d1f-b109-bbcce29170f7",
      "text": "Do Not Disclose Exception Details to the Client"
    },
    {
      "href": "/article/fd4b2a8a-db2d-4594-ba30-3ce5f63ad459",
      "text": "Do Not Include Debug Data in Output"
    },
    {
      "href": "/article/2739df30-b3da-417e-8856-2201a2b2a17a",
      "text": "Structured Exception Handling Is Used"
    },
    {
      "href": "/article/c88e1b49-357d-4202-aafc-86ce0de485bd",
      "text": "A Global Exception Handler Is Used for Unhandled Exceptions"
    },
    {
      "href": "/article/e574d1d8-acae-4c64-90db-a0f6b98ca45f",
      "text": "Valuable Information Is Not Disclosed During Authentication Errors"
    },
    {
      "href": "/article/d13e57d7-f6f5-4bd4-8629-26c45f9f029b",
      "text": "Exception Details Are Not Disclosed to the Client"
    },
    {
      "href": "/article/d33cc3de-517c-4c84-95bd-24f14d9d99d6",
      "text": "Debug Data Is Not Included in Output"
    },
    {
      "href": "/article/5556fc17-3f60-4fc0-8717-0a2ff1c12701",
      "text": "How to Test for Exception Information Disclosure Bugs in Java"
    }
  ],
  "html": "<h1>What to Check For</h1>\r\n  <p>Ensure your application displays a generic message when authentication fails.</p>\r\n  <h1>Why</h1>\r\n  <p>Disclosing information&nbsp;about invalid usernames and passwords can help an attacker obtain a list of valid users.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to ensure that your application displays generic messages upon failed authentication:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all segments of code that handle failed authentication. </strong>Identify all functions that handle login and perform access control on resources. Trace your application's code base to locate the origin of each&nbsp;failed authentication messages. Good places to start are <em>if-else</em> statements, <em>throw</em> statements and exception handlers. It is a common practice for developers to group messages into resource files instead of hard-coding them into your application's source code.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Review the error messages. </strong>Review the returned error messages. Verify that:</p>\r\n      <ul>\r\n        <li>\r\n          <strong>Structure</strong>: Error messages are brief and direct. </li>\r\n        <li>\r\n          <strong>Contents</strong>: Error messages do not contain unnecessary contents such as internal debug information.<br /></li>\r\n        <li>\r\n          <strong>Variety</strong>: All error messages that pertain to failed authentication are identical. </li>\r\n      </ul>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>To provide secure error messages when authentication fails, use the following steps:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Choose an error message. </strong>The message should be very generic. It should signify \"yes\" or \"no\" to the authentication attempt. For example: \"Authentication failed.\" </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Display only one message. </strong>Your application should provide feedback only after all credentials have been verified. Structure your code in a manner that allows all checks to be executed at once. For example:</p>\r\n      <pre>if (!validUser() || !validPass())<br />{<br />      throw new AuthenticationException(\"Authentication failed.\");<br />}</pre>\r\n      <p>Because sometimes it is impossible to structure the code in a manner where all checks are performed at once, it is important that all error messages contain the exact same information. Any variation in the error messages can give away the information that a username is valid. </p>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>The following code authenticates a user. Unfortunately, the code reveals through its error messages whether the credentials sent represent a valid user or an invalid user:</p>\r\n  <pre>public void login() throws AuthenticationException<br />{<br />      if (!validUser())<br />      {<br />            throw new AuthenticationException(\"User not found.\");<br />      }<br /><br />      if (!validPass())<br />      {<br />            throw new AuthenticationException(\"Wrong password.\");<br />      }<br /><br />      commit();<br />}</pre>\r\n  <h1>Solution Example</h1>\r\n  <p>The following code authenticates a user. Since it presents the same error message regardless of why the authentication failed, an attacker can't determine if the credentials tried represent a valid user or not.</p>\r\n  <pre>public void login() throws AuthenticationException<br />{<br />      if (!validUser() || !validPass())<br />      {<br />            throw new AuthenticationException(\"Authentication failed.\");<br />      }<br /><br />      commit();<br />}</pre>\r\n  <h1>Java Error Handling Guidelines</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/fceefe0c-900a-4c29-9c2e-ee662aa9e1f1\">Use Structured Exception Handling</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/3e815c74-4d57-4c1b-8446-750b319ea046\">Use a Global Exception Handler for Unhandled Exceptions</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/30abc3c9-d288-4e8a-a614-fd1a1f331270\">Do Not Disclose Valuable Information During Authentication Errors</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/56ad1852-7fc3-4d1f-b109-bbcce29170f7\">Do Not Disclose Exception Details to the Client</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/fd4b2a8a-db2d-4594-ba30-3ce5f63ad459\">Do Not Include Debug Data in Output</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Error Handling Checklists</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/2739df30-b3da-417e-8856-2201a2b2a17a\">Structured Exception Handling Is Used</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/c88e1b49-357d-4202-aafc-86ce0de485bd\">A Global Exception Handler Is Used for Unhandled Exceptions</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/e574d1d8-acae-4c64-90db-a0f6b98ca45f\">Valuable Information Is Not Disclosed During Authentication Errors</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/d13e57d7-f6f5-4bd4-8629-26c45f9f029b\">Exception Details Are Not Disclosed to the Client</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/d33cc3de-517c-4c84-95bd-24f14d9d99d6\">Debug Data Is Not Included in Output</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Error Handling Testing</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/5556fc17-3f60-4fc0-8717-0a2ff1c12701\">How to Test for Exception Information Disclosure Bugs in Java</a>\r\n    </li>\r\n  </ul>"
}