{
  "id": "eb8d54d3-1d59-4d33-ba54-b69df5d2eb74",
  "checksum": "d242d8ae698adee770855648c3ed23b2f15a2f2d",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "aspnet": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "for": [
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "ensure": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application's": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "credentials": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "backend": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "database": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "li",
      "p"
    ],
    "server": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "are": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "title"
    ],
    "protected": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "why": [
      "h1"
    ],
    "if": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "an": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "attacker": [
      "p",
      "p"
    ],
    "gains": [
      "p"
    ],
    "access": [
      "p",
      "p"
    ],
    "could": [
      "p"
    ],
    "with": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "all": [
      "p"
    ],
    "permissions": [
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "allowed": [
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "how": [
      "h1",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "h1",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "your": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "connects": [
      "p"
    ],
    "a": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "it": [
      "p",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "is": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "essential": [
      "p"
    ],
    "protect": [
      "p"
    ],
    "connection": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "strings": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "take": [
      "p"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "steps": [
      "p"
    ],
    "secured": [
      "p"
    ],
    "windows": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "authentication": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "used": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "when": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "biggest": [
      "ol",
      "li",
      "p"
    ],
    "advantage": [
      "ol",
      "li",
      "p"
    ],
    "of": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "no": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "required": [
      "ol",
      "li",
      "p"
    ],
    "string": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "verify": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "stored": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "securely": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "handled": [
      "ol",
      "li",
      "p"
    ],
    "throughout": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "base": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "focus": [
      "ol",
      "li",
      "p"
    ],
    "attention": [
      "ol",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a"
    ],
    "items": [
      "ol",
      "li",
      "p",
      "h1"
    ],
    "not": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "hard-coded": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "into": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "static": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "void": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "main)": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "connectionstring": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "getconnectionstring);": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "querystring": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "\"select": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "categoryid": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "categoryname": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "from": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre",
      "ol",
      "li",
      "p",
      "p"
    ],
    "categories\";": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "..": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "}": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "private": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre",
      "ol",
      "li",
      "p"
    ],
    "getconnectionstring)": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "return": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "\"data": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "source=mydsdatabase=mydb;uid=myuname;pwd=mypwd;\";": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "configuration": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "file": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "encrypted": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong",
      "title"
    ],
    "stores": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "easily": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "readable": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "webconfig": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em"
    ],
    "by": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "encrypting": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "either": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "dpapi": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "or": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "rsa": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "a"
    ],
    "depending": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "deployed": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "would": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "look": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "something": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "like": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "connectionstrings>": [
      "ol",
      "li",
      "ul",
      "li",
      "pre",
      "ol",
      "li",
      "p"
    ],
    "encrypteddata>": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "cipherdata>": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "ciphervalue>ghafqew234a21...</ciphervalue>": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "/cipherdata>": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "/encrypteddata></connectionstrings>": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "files": [
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "has": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "appropriate": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "filesystem": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "so": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "can": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "accessed": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "only": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "p"
    ],
    "administrators": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "placed": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "separate": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "directory": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "web-accessible": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "between": [
      "ol",
      "li",
      "p"
    ],
    "protects": [
      "ol",
      "li",
      "p"
    ],
    "initially": [
      "ol",
      "li",
      "p"
    ],
    "authenticates": [
      "ol",
      "li",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "perform": [
      "p"
    ],
    "actions": [
      "p"
    ],
    "secure": [
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "sections": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "decrypting": [
      "ol",
      "li",
      "p"
    ],
    "data": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p",
      "strong"
    ],
    "incurs": [
      "ol",
      "li",
      "p"
    ],
    "performance": [
      "ol",
      "li",
      "p"
    ],
    "overhead": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "keep": [
      "ol",
      "li",
      "p"
    ],
    "minimum": [
      "ol",
      "li",
      "p"
    ],
    "encrypt": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "store": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "p"
    ],
    "sensitive": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "case": [
      "ol",
      "li",
      "p"
    ],
    "we": [
      "ol",
      "li",
      "p"
    ],
    "interested": [
      "ol",
      "li",
      "p"
    ],
    "element": [
      "ol",
      "li",
      "p"
    ],
    "since": [
      "ol",
      "li",
      "p"
    ],
    "where": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "reside": [
      "ol",
      "li",
      "p"
    ],
    "choose": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "provider": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "under": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "most": [
      "ol",
      "li",
      "p"
    ],
    "circumstances": [
      "ol",
      "li",
      "p"
    ],
    "suffice": [
      "ol",
      "li",
      "p"
    ],
    "although": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "logical": [
      "ol",
      "li",
      "p"
    ],
    "choice": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "farms": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "multiple": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "servers": [
      "ol",
      "li",
      "p"
    ],
    "employed": [
      "ol",
      "li",
      "p"
    ],
    "net": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "framework": [
      "ol",
      "li",
      "p"
    ],
    "includes": [
      "ol",
      "li",
      "p"
    ],
    "feature": [
      "ol",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "command": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "line": [
      "ol",
      "li",
      "p"
    ],
    "tool": [
      "ol",
      "li",
      "p"
    ],
    "two": [
      "ol",
      "li",
      "p"
    ],
    "providers": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "provided": [
      "ol",
      "li",
      "p"
    ],
    "also": [
      "ol",
      "li",
      "p"
    ],
    "implement": [
      "ol",
      "li",
      "p"
    ],
    "custom": [
      "ol",
      "li",
      "p"
    ],
    "rsaprotectedconfigurationprovider": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "uses": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "public": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "key": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "encryption": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "decrypt": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "good": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "farm": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "environments": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "dpapiprotectedconfigurationprovider": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "default": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "which": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "protection": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "api": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "dpapi)": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "section": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "describes": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "please": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "related": [
      "ol",
      "li",
      "ul",
      "li",
      "h1"
    ],
    "guidelines": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "more": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "information": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "machine": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "strong",
      "li",
      "p"
    ],
    "user": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "strong"
    ],
    "dataprotectionconfigurationprovider": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "em",
      "ul",
      "li",
      "em"
    ],
    "supports": [
      "ol",
      "li",
      "p"
    ],
    "machine-level": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "user-level": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "storage": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "depends": [
      "ol",
      "li",
      "p"
    ],
    "largely": [
      "ol",
      "li",
      "p"
    ],
    "whether": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "shares": [
      "ol",
      "li",
      "p"
    ],
    "other": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "applications": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "must": [
      "ol",
      "li",
      "p"
    ],
    "kept": [
      "ol",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "configured": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "runs": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "own": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "dedicated": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "have": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "same": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "run": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "want": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "those": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "able": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "share": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "shared": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "hosting": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "environment": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "make": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "sure": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "accessible": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "situation": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "should": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "identity": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "resources": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "application—such": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "as": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "databases—should": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "restricted": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "connectionstrings": [
      "ol",
      "em",
      "li",
      "p",
      "em"
    ],
    "prompt": [
      "ol",
      "li",
      "p"
    ],
    "aspnet_regiis": [
      "ol",
      "li",
      "pre"
    ],
    "-pe": [
      "ol",
      "li",
      "pre"
    ],
    "\"connectionstrings\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "-app": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "p",
      "em"
    ],
    "\"/machinedpapi\"": [
      "ol",
      "li",
      "pre"
    ],
    "-prov": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "\"dataprotectionconfigurationprovider\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "above": [
      "ol",
      "li",
      "p"
    ],
    "switch": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "assumes": [
      "ol",
      "li",
      "p"
    ],
    "there": [
      "ol",
      "li",
      "p"
    ],
    "iis": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "virtual": [
      "ol",
      "li",
      "p"
    ],
    "called": [
      "ol",
      "li",
      "p"
    ],
    "machinedpapi": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "visual": [
      "ol",
      "li",
      "p"
    ],
    "studio": [
      "ol",
      "li",
      "p"
    ],
    "instead": [
      "ol",
      "li",
      "p"
    ],
    "-pef": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "em",
      "pre"
    ],
    "allows": [
      "ol",
      "li",
      "p"
    ],
    "specify": [
      "ol",
      "li",
      "p"
    ],
    "physical": [
      "ol",
      "li",
      "p"
    ],
    "location": [
      "ol",
      "li",
      "p"
    ],
    "aspnet_regiisexe": [
      "ol",
      "li",
      "pre"
    ],
    "c\\projects\\machinedpapi": [
      "ol",
      "li",
      "pre"
    ],
    "sql": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix",
      "Related Items",
      "",
      ""
    ],
    "ul": [
      "ASP.NET 4.0",
      "Strings are not hard-coded: Verify that no connection strings are hard-coded into your application's code base. The following is an example of a hard-coded connection string:   static void Main()  {    string connectionString = GetConnectionString();    string queryString = \"SELECT CategoryID, CategoryName FROM Categories;\";    ...  }  static private string GetConnectionString()  {    return \"Data Source=myds;Database=mydb;Uid=myuname;Pwd=mypwd;\";  }\n        \n          \n            Strings are stored in configuration file and encrypted: Ensure that your application stores its connection strings in a configuration file. Verify that the connection string is not easily readable when stored in the web.config file by encrypting it using either DPAPI or RSA, depending on how the application is to be deployed. This would look something like the following:\n          <connectionStrings>  <EncryptedData>    <CipherData>      <CipherValue>GHAFQEW234A21...</CipherValue>    </CipherData>  </EncryptedData></connectionStrings>",
      "The configuration file has appropriate filesystem permissions so that it can be accessed only by your application and its administrators. \n        The configuration file is placed in a separate directory that is not web-accessible.",
      "RSAProtectedConfigurationProvider. This provider uses RSA public key encryption to encrypt and decrypt data and is a good choice for web farm environments. \n        \n          DpapiProtectedConfigurationProvider. This is the default provider, which uses the Windows Data Protection API (DPAPI) to encrypt and decrypt data. This section describes how to use DPAPI to encrypt connection strings. Please check the related guidelines for more information on using the RSA Protected Configuration Provider and DPAPI.",
      "Machine Store. By default, the DataProtectionConfigurationProvider is configured to use DPAPI with the machine store. Use machine-level key storage if your application runs on its own dedicated server with no other applications, or if you have multiple applications on the same server that run and you want those applications to be able to share sensitive information. \n        \n          User Store. Use user-level key storage if you run your application in a shared hosting environment and you want to make sure that your application's sensitive data is not accessible to other applications on the server. In this situation, each application should run under a separate identity, and the resources for the application—such as files and databases—should be restricted to that identity.",
      "Encrypt SQL Connection Strings with DPAPI\n    \n    \n      Encrypt SQL Connection Strings with RSA on Web Farms"
    ],
    "li": [
      "ASP.NET 4.0",
      "Check that Windows authentication is used when possible. The biggest advantage of using Windows authentication in your application is that no credentials are required in the connection string.",
      "Verify that connection strings are stored securely. Ensure that connection strings are handled securely throughout your application's code base. Focus your attention on the following items:\n      \n        \n          \n          Strings are not hard-coded: Verify that no connection strings are hard-coded into your application's code base. The following is an example of a hard-coded connection string:   static void Main()  {    string connectionString = GetConnectionString();    string queryString = \"SELECT CategoryID, CategoryName FROM Categories;\";    ...  }  static private string GetConnectionString()  {    return \"Data Source=myds;Database=mydb;Uid=myuname;Pwd=mypwd;\";  }\n        \n          \n            Strings are stored in configuration file and encrypted: Ensure that your application stores its connection strings in a configuration file. Verify that the connection string is not easily readable when stored in the web.config file by encrypting it using either DPAPI or RSA, depending on how the application is to be deployed. This would look something like the following:\n          <connectionStrings>  <EncryptedData>    <CipherData>      <CipherValue>GHAFQEW234A21...</CipherValue>    </CipherData>  </EncryptedData></connectionStrings>",
      "Strings are not hard-coded: Verify that no connection strings are hard-coded into your application's code base. The following is an example of a hard-coded connection string:   static void Main()  {    string connectionString = GetConnectionString();    string queryString = \"SELECT CategoryID, CategoryName FROM Categories;\";    ...  }  static private string GetConnectionString()  {    return \"Data Source=myds;Database=mydb;Uid=myuname;Pwd=mypwd;\";  }",
      "Strings are stored in configuration file and encrypted: Ensure that your application stores its connection strings in a configuration file. Verify that the connection string is not easily readable when stored in the web.config file by encrypting it using either DPAPI or RSA, depending on how the application is to be deployed. This would look something like the following:\n          <connectionStrings>  <EncryptedData>    <CipherData>      <CipherValue>GHAFQEW234A21...</CipherValue>    </CipherData>  </EncryptedData></connectionStrings>",
      "Ensure that configuration files are protected. Verify the following:\n      \n        The configuration file has appropriate filesystem permissions so that it can be accessed only by your application and its administrators. \n        The configuration file is placed in a separate directory that is not web-accessible.",
      "The configuration file has appropriate filesystem permissions so that it can be accessed only by your application and its administrators.",
      "The configuration file is placed in a separate directory that is not web-accessible.",
      "Ensure connection to database server is encrypted. Encrypting the connection between your application and the database server protects the database credentials when your application initially authenticates to the backend database.",
      "Identify the configuration sections to be encrypted. Encrypting and decrypting data incurs performance overhead. To keep this overhead to a minimum, encrypt only the sections of your configuration file that store sensitive data. In this case, we are interested in encrypting the <connectionStrings> element of the Web.config file since that is where the database connection string will reside.",
      "Choose the protected configuration provider. Under most circumstances DPAPI will suffice, although the RSA protected configuration is the logical choice in web farms where multiple servers are employed. The .NET Framework includes a protected configuration feature that you can use to encrypt sensitive configuration file data by using a command line tool. The following two protected configuration providers are provided although you can also implement custom providers.\n      \n        \n          RSAProtectedConfigurationProvider. This provider uses RSA public key encryption to encrypt and decrypt data and is a good choice for web farm environments. \n        \n          DpapiProtectedConfigurationProvider. This is the default provider, which uses the Windows Data Protection API (DPAPI) to encrypt and decrypt data. This section describes how to use DPAPI to encrypt connection strings. Please check the related guidelines for more information on using the RSA Protected Configuration Provider and DPAPI.",
      "RSAProtectedConfigurationProvider. This provider uses RSA public key encryption to encrypt and decrypt data and is a good choice for web farm environments.",
      "DpapiProtectedConfigurationProvider. This is the default provider, which uses the Windows Data Protection API (DPAPI) to encrypt and decrypt data. This section describes how to use DPAPI to encrypt connection strings. Please check the related guidelines for more information on using the RSA Protected Configuration Provider and DPAPI.",
      "Choose the machine or user store. The DataProtectionConfigurationProvider supports machine-level and user-level stores for key storage. The choice of store depends largely on whether or not your application shares a server with other applications and whether or not sensitive data must be kept private for each application.\n      \n        \n          Machine Store. By default, the DataProtectionConfigurationProvider is configured to use DPAPI with the machine store. Use machine-level key storage if your application runs on its own dedicated server with no other applications, or if you have multiple applications on the same server that run and you want those applications to be able to share sensitive information. \n        \n          User Store. Use user-level key storage if you run your application in a shared hosting environment and you want to make sure that your application's sensitive data is not accessible to other applications on the server. In this situation, each application should run under a separate identity, and the resources for the application—such as files and databases—should be restricted to that identity.",
      "Machine Store. By default, the DataProtectionConfigurationProvider is configured to use DPAPI with the machine store. Use machine-level key storage if your application runs on its own dedicated server with no other applications, or if you have multiple applications on the same server that run and you want those applications to be able to share sensitive information.",
      "User Store. Use user-level key storage if you run your application in a shared hosting environment and you want to make sure that your application's sensitive data is not accessible to other applications on the server. In this situation, each application should run under a separate identity, and the resources for the application—such as files and databases—should be restricted to that identity.",
      "Encrypt your configuration file data. To encrypt the connectionStrings section in Web.config using DPAPI with the Machine Store, run the following command from a .NET command prompt:\n      aspnet_regiis -pe \"connectionStrings\" -app \"/MachineDPAPI\" -prov \"DataProtectionConfigurationProvider\"\n      The above command with the -app switch assumes that there is an IIS virtual directory called MachineDPAPI. If you are using the Visual Studio .NET Web server instead of IIS, use the -pef switch, which allows you to specify the physical directory location of your configuration file.\n      aspnet_regiis.exe -pef \"connectionStrings\" C:\\Projects\\MachineDPAPI -prov \"DataProtectionConfigurationProvider\"",
      "Encrypt SQL Connection Strings with DPAPI",
      "Encrypt SQL Connection Strings with RSA on Web Farms"
    ],
    "p": [
      "Ensure that the application's credentials to the backend database server are protected.",
      "If an attacker gains access to the application's credentials to the backend database, the attacker could access the database with all the permissions allowed for the application.",
      "If your application connects to a backend database server, it is essential to protect your application's connection strings. Take the following steps to ensure that your application's connection strings are secured:",
      "Check that Windows authentication is used when possible. The biggest advantage of using Windows authentication in your application is that no credentials are required in the connection string.",
      "Verify that connection strings are stored securely. Ensure that connection strings are handled securely throughout your application's code base. Focus your attention on the following items:",
      "Strings are not hard-coded: Verify that no connection strings are hard-coded into your application's code base. The following is an example of a hard-coded connection string:",
      "static void Main()  {    string connectionString = GetConnectionString();    string queryString = \"SELECT CategoryID, CategoryName FROM Categories;\";    ...  }  static private string GetConnectionString()  {    return \"Data Source=myds;Database=mydb;Uid=myuname;Pwd=mypwd;\";  }",
      "Strings are stored in configuration file and encrypted: Ensure that your application stores its connection strings in a configuration file. Verify that the connection string is not easily readable when stored in the web.config file by encrypting it using either DPAPI or RSA, depending on how the application is to be deployed. This would look something like the following:",
      "Ensure that configuration files are protected. Verify the following:",
      "Ensure connection to database server is encrypted. Encrypting the connection between your application and the database server protects the database credentials when your application initially authenticates to the backend database.",
      "Perform the following actions to secure the database connection strings in configuration files:",
      "Identify the configuration sections to be encrypted. Encrypting and decrypting data incurs performance overhead. To keep this overhead to a minimum, encrypt only the sections of your configuration file that store sensitive data. In this case, we are interested in encrypting the <connectionStrings> element of the Web.config file since that is where the database connection string will reside.",
      "Choose the protected configuration provider. Under most circumstances DPAPI will suffice, although the RSA protected configuration is the logical choice in web farms where multiple servers are employed. The .NET Framework includes a protected configuration feature that you can use to encrypt sensitive configuration file data by using a command line tool. The following two protected configuration providers are provided although you can also implement custom providers.",
      "Choose the machine or user store. The DataProtectionConfigurationProvider supports machine-level and user-level stores for key storage. The choice of store depends largely on whether or not your application shares a server with other applications and whether or not sensitive data must be kept private for each application.",
      "Encrypt your configuration file data. To encrypt the connectionStrings section in Web.config using DPAPI with the Machine Store, run the following command from a .NET command prompt:",
      "The above command with the -app switch assumes that there is an IIS virtual directory called MachineDPAPI. If you are using the Visual Studio .NET Web server instead of IIS, use the -pef switch, which allows you to specify the physical directory location of your configuration file.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Check that Windows authentication is used when possible. The biggest advantage of using Windows authentication in your application is that no credentials are required in the connection string. \n    \n    \n      \n        Verify that connection strings are stored securely. Ensure that connection strings are handled securely throughout your application's code base. Focus your attention on the following items:\n      \n        \n          \n          Strings are not hard-coded: Verify that no connection strings are hard-coded into your application's code base. The following is an example of a hard-coded connection string:   static void Main()  {    string connectionString = GetConnectionString();    string queryString = \"SELECT CategoryID, CategoryName FROM Categories;\";    ...  }  static private string GetConnectionString()  {    return \"Data Source=myds;Database=mydb;Uid=myuname;Pwd=mypwd;\";  }\n        \n          \n            Strings are stored in configuration file and encrypted: Ensure that your application stores its connection strings in a configuration file. Verify that the connection string is not easily readable when stored in the web.config file by encrypting it using either DPAPI or RSA, depending on how the application is to be deployed. This would look something like the following:\n          <connectionStrings>  <EncryptedData>    <CipherData>      <CipherValue>GHAFQEW234A21...</CipherValue>    </CipherData>  </EncryptedData></connectionStrings>\n        \n      \n    \n    \n      \n        Ensure that configuration files are protected. Verify the following:\n      \n        The configuration file has appropriate filesystem permissions so that it can be accessed only by your application and its administrators. \n        The configuration file is placed in a separate directory that is not web-accessible.\n      \n    \n    \n      \n        Ensure connection to database server is encrypted. Encrypting the connection between your application and the database server protects the database credentials when your application initially authenticates to the backend database.",
      "Identify the configuration sections to be encrypted. Encrypting and decrypting data incurs performance overhead. To keep this overhead to a minimum, encrypt only the sections of your configuration file that store sensitive data. In this case, we are interested in encrypting the <connectionStrings> element of the Web.config file since that is where the database connection string will reside.\n    \n    \n      \n        Choose the protected configuration provider. Under most circumstances DPAPI will suffice, although the RSA protected configuration is the logical choice in web farms where multiple servers are employed. The .NET Framework includes a protected configuration feature that you can use to encrypt sensitive configuration file data by using a command line tool. The following two protected configuration providers are provided although you can also implement custom providers.\n      \n        \n          RSAProtectedConfigurationProvider. This provider uses RSA public key encryption to encrypt and decrypt data and is a good choice for web farm environments. \n        \n          DpapiProtectedConfigurationProvider. This is the default provider, which uses the Windows Data Protection API (DPAPI) to encrypt and decrypt data. This section describes how to use DPAPI to encrypt connection strings. Please check the related guidelines for more information on using the RSA Protected Configuration Provider and DPAPI. \n      \n    \n    \n      \n        Choose the machine or user store. The DataProtectionConfigurationProvider supports machine-level and user-level stores for key storage. The choice of store depends largely on whether or not your application shares a server with other applications and whether or not sensitive data must be kept private for each application.\n      \n        \n          Machine Store. By default, the DataProtectionConfigurationProvider is configured to use DPAPI with the machine store. Use machine-level key storage if your application runs on its own dedicated server with no other applications, or if you have multiple applications on the same server that run and you want those applications to be able to share sensitive information. \n        \n          User Store. Use user-level key storage if you run your application in a shared hosting environment and you want to make sure that your application's sensitive data is not accessible to other applications on the server. In this situation, each application should run under a separate identity, and the resources for the application—such as files and databases—should be restricted to that identity. \n      \n    \n    \n      \n        Encrypt your configuration file data. To encrypt the connectionStrings section in Web.config using DPAPI with the Machine Store, run the following command from a .NET command prompt:\n      aspnet_regiis -pe \"connectionStrings\" -app \"/MachineDPAPI\" -prov \"DataProtectionConfigurationProvider\"\n      The above command with the -app switch assumes that there is an IIS virtual directory called MachineDPAPI. If you are using the Visual Studio .NET Web server instead of IIS, use the -pef switch, which allows you to specify the physical directory location of your configuration file.\n      aspnet_regiis.exe -pef \"connectionStrings\" C:\\Projects\\MachineDPAPI -prov \"DataProtectionConfigurationProvider\""
    ],
    "strong": [
      "Check that Windows authentication is used when possible.",
      "Verify that connection strings are stored securely.",
      "Strings are not hard-coded:",
      "Strings are stored in configuration file and encrypted:",
      "Ensure that configuration files are protected.",
      "Ensure connection to database server is encrypted.",
      "Identify the configuration sections to be encrypted.",
      "Choose the protected configuration provider.",
      "RSAProtectedConfigurationProvider.",
      "DpapiProtectedConfigurationProvider.",
      "Choose the machine or user store.",
      "Machine Store.",
      "User Store.",
      "Encrypt your configuration file data."
    ],
    "pre": [
      "static void Main()  {    string connectionString = GetConnectionString();    string queryString = \"SELECT CategoryID, CategoryName FROM Categories;\";    ...  }  static private string GetConnectionString()  {    return \"Data Source=myds;Database=mydb;Uid=myuname;Pwd=mypwd;\";  }",
      "<connectionStrings>  <EncryptedData>    <CipherData>      <CipherValue>GHAFQEW234A21...</CipherValue>    </CipherData>  </EncryptedData></connectionStrings>",
      "aspnet_regiis -pe \"connectionStrings\" -app \"/MachineDPAPI\" -prov \"DataProtectionConfigurationProvider\"",
      "aspnet_regiis.exe -pef \"connectionStrings\" C:\\Projects\\MachineDPAPI -prov \"DataProtectionConfigurationProvider\""
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "em": [
      "connectionStrings",
      "Web.config",
      "DataProtectionConfigurationProvider",
      "DataProtectionConfigurationProvider",
      "connectionStrings",
      "Web.config",
      "-app",
      "MachineDPAPI",
      "-pef"
    ],
    "a": [
      "Encrypt SQL Connection Strings with DPAPI",
      "Encrypt SQL Connection Strings with RSA on Web Farms"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "/article/612e1d5c-8b41-43ef-a203-daa6f814c57b",
      "text": "Encrypt SQL Connection Strings with DPAPI"
    },
    {
      "href": "/article/b42bbac5-7441-436a-92a5-a0d05593c62c",
      "text": "Encrypt SQL Connection Strings with RSA on Web Farms"
    }
  ],
  "html": "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Ensure that the application's credentials to the backend database server are protected.</p>\n  <h1>Why</h1>\n  <p>If an attacker gains access to the application's credentials to the backend database, the attacker could access the database with all the permissions allowed for the application.</p>\n  <h1>How To Check</h1>\n  <p>If your application connects to a backend database server, it is essential to protect your application's connection strings. Take the following steps to ensure that your application's connection strings are secured:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Check that Windows authentication is used when possible. </strong>The biggest advantage of using Windows authentication in your application is that no credentials are required in the connection string. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Verify that connection strings are stored securely. </strong>Ensure that connection strings are handled securely throughout your application's code base. Focus your attention on the following items:</p>\n      <ul>\n        <li>\n          <p />\n          <strong>Strings are not hard-coded:</strong> Verify that no connection strings are hard-coded into your application's code base. The following is an example of a hard-coded connection string: <p /><pre>  static void Main()<br />  {<br />    string connectionString = GetConnectionString();<br />    string queryString = \"SELECT CategoryID, CategoryName FROM Categories;\";<br />    ...<br />  }<br /><br />  static private string GetConnectionString()<br />  {<br />    return \"Data Source=myds;Database=mydb;Uid=myuname;Pwd=mypwd;\";<br />  }</pre></li>\n        <li>\n          <p>\n            <strong>Strings are stored in configuration file and encrypted:</strong> Ensure that your application stores its connection strings in a configuration file. Verify that the connection string is not easily readable when stored in the web.config file by encrypting it using either DPAPI or RSA, depending on how the application is to be deployed. This would look something like the following:</p>\n          <pre>&lt;connectionStrings&gt;<br />  &lt;EncryptedData&gt;<br />    &lt;CipherData&gt;<br />      &lt;CipherValue&gt;GHAFQEW234A21...&lt;/CipherValue&gt;<br />    &lt;/CipherData&gt;<br />  &lt;/EncryptedData&gt;<br />&lt;/connectionStrings&gt;</pre>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure that configuration files are protected. </strong>Verify the following:</p>\n      <ul>\n        <li>The configuration file has appropriate filesystem permissions so that it can be accessed only by your application and its administrators. </li>\n        <li>The configuration file is placed in a separate directory that is not web-accessible.</li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure connection to database server is encrypted. </strong>Encrypting the connection between your application and the database server protects the database credentials when your application initially authenticates to the backend database.</p>\n    </li>\n  </ol>\n  <h1>How To Fix</h1>\n  <p>Perform the following actions to secure the database connection strings in configuration files:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify the configuration sections to be encrypted.</strong> Encrypting and decrypting data incurs performance overhead. To keep this overhead to a minimum, encrypt only the sections of your configuration file that store sensitive data. In this case, we are interested in encrypting the &lt;<em>connectionStrings</em>&gt; element of the <em>Web.config</em> file since that is where the database connection string will reside.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Choose the protected configuration provider.</strong> Under most circumstances DPAPI will suffice, although the RSA protected configuration is the logical choice in web farms where multiple servers are employed. The .NET Framework includes a protected configuration feature that you can use to encrypt sensitive configuration file data by using a command line tool. The following two protected configuration providers are provided although you can also implement custom providers.</p>\n      <ul>\n        <li>\n          <strong>RSAProtectedConfigurationProvider.</strong> This provider uses RSA public key encryption to encrypt and decrypt data and is a good choice for web farm environments. </li>\n        <li>\n          <strong>DpapiProtectedConfigurationProvider.</strong> This is the default provider, which uses the Windows Data Protection API (DPAPI) to encrypt and decrypt data. This section describes how to use DPAPI to encrypt connection strings. Please check the related guidelines for more information on using the RSA Protected Configuration Provider and DPAPI. </li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Choose the machine or user store.</strong> The <em>DataProtectionConfigurationProvider </em>supports machine-level and user-level stores for key storage. The choice of store depends largely on whether or not your application shares a server with other applications and whether or not sensitive data must be kept private for each application.</p>\n      <ul>\n        <li>\n          <strong>Machine Store.</strong> By default, the <em>DataProtectionConfigurationProvider</em> is configured to use DPAPI with the machine store. Use machine-level key storage if your application runs on its own dedicated server with no other applications, or if you have multiple applications on the same server that run and you want those applications to be able to share sensitive information. </li>\n        <li>\n          <strong>User Store.</strong> Use user-level key storage if you run your application in a shared hosting environment and you want to make sure that your application's sensitive data is not accessible to other applications on the server. In this situation, each application should run under a separate identity, and the resources for the application—such as files and databases—should be restricted to that identity. </li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Encrypt your configuration file data.</strong> To encrypt the <em>connectionStrings</em> section in <em>Web.config</em> using DPAPI with the Machine Store, run the following command from a .NET command prompt:</p>\n      <pre>aspnet_regiis -pe \"connectionStrings\"<br /> -app \"/MachineDPAPI\"<br /> -prov \"DataProtectionConfigurationProvider\"</pre>\n      <p>The above command with the <em>-app</em> switch assumes that there is an IIS virtual directory called <em>MachineDPAPI</em>. If you are using the Visual Studio .NET Web server instead of IIS, use the <em>-pef</em> switch, which allows you to specify the physical directory location of your configuration file.</p>\n      <pre>aspnet_regiis.exe<br /> -pef \"connectionStrings\" C:\\Projects\\MachineDPAPI<br /> -prov \"DataProtectionConfigurationProvider\"</pre>\n    </li>\n  </ol>\n  <h1>Related Items</h1>\n  <ul>\n    <li>\n      <a href=\"/article/612e1d5c-8b41-43ef-a203-daa6f814c57b\">Encrypt SQL Connection Strings with DPAPI</a>\n    </li>\n    <li>\n      <a href=\"/article/b42bbac5-7441-436a-92a5-a0d05593c62c\">Encrypt SQL Connection Strings with RSA on Web Farms</a>\n    </li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>\n  <h1>\n  </h1>\n  <h1>\n  </h1>"
}