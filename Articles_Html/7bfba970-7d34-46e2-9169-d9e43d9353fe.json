{
  "id": "7bfba970-7d34-46e2-9169-d9e43d9353fe",
  "checksum": "2e038c0c0dffef3924c0d32e253d53641ecb9509",
  "words": {
    "0": [
      "pre",
      "pre",
      "pre"
    ],
    "10": [
      "pre"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "c#": [
      "ul",
      "li"
    ],
    "server-side": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "summary": [
      "h1"
    ],
    "the": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "purpose": [
      "p"
    ],
    "of": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "ul",
      "ul",
      "li",
      "ul",
      "li",
      "li",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "this": [
      "p",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "code": [
      "p",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "sample": [
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "pre",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "demonstrate": [
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "title"
    ],
    "technique": [
      "p"
    ],
    "securely": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "create": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "files": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "by": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "web": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "ul",
      "li"
    ],
    "application": [
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "while": [
      "p"
    ],
    "avoiding": [
      "p",
      "p"
    ],
    "canonicalization": [
      "p",
      "p",
      "title"
    ],
    "and": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "race": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "conditions": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "objectives": [
      "h1"
    ],
    "secure": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "strong"
    ],
    "generation": [
      "ul",
      "li"
    ],
    "temporary": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "title"
    ],
    "within": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "which": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "title"
    ],
    "does": [
      "ul",
      "li"
    ],
    "not": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "expose": [
      "ul",
      "li"
    ],
    "other": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "on": [
      "ul",
      "li",
      "pre",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "file": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "title"
    ],
    "system": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "creation": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "storage": [
      "ul",
      "li"
    ],
    "mitigate": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "risk": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "enumeration": [
      "ul",
      "li"
    ],
    "likelihood": [
      "ul",
      "li"
    ],
    "through": [
      "ul",
      "li"
    ],
    "use": [
      "ul",
      "li",
      "p"
    ],
    "strong": [
      "ul",
      "li",
      "pre",
      "ul",
      "li"
    ],
    "randomly": [
      "ul",
      "li"
    ],
    "generated": [
      "ul",
      "li",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "filenames": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "retrieval": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "ul",
      "li",
      "p"
    ],
    "resides": [
      "ul",
      "li",
      "pre"
    ],
    "outside": [
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "webroot": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "upon": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "successful": [
      "ul",
      "li"
    ],
    "authorization": [
      "ul",
      "li"
    ],
    "user": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "request": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "scenarios": [
      "h1"
    ],
    "web-based": [
      "ul",
      "li"
    ],
    "generates": [
      "ul",
      "li"
    ],
    "reports": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "or": [
      "ul",
      "li",
      "pre",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "may": [
      "ul",
      "li",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "be": [
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "ul",
      "li",
      "li",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "subsequently": [
      "ul",
      "li"
    ],
    "retrieved": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "an": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "authorized": [
      "ul",
      "li"
    ],
    "needs": [
      "ul",
      "li",
      "p"
    ],
    "periodically": [
      "ul",
      "li"
    ],
    "are": [
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "later": [
      "ul",
      "li"
    ],
    "processed": [
      "ul",
      "li"
    ],
    "batch": [
      "ul",
      "li"
    ],
    "process": [
      "ul",
      "li"
    ],
    "should": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "unique": [
      "ul",
      "li"
    ],
    "non-user": [
      "ul",
      "li"
    ],
    "influenced": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "ul",
      "li",
      "li"
    ],
    "indirectly": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "for": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "p"
    ],
    "users": [
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "brokered": [
      "ul",
      "li"
    ],
    "e.g.": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "reside": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "prevent": [
      "ul",
      "li"
    ],
    "unauthorized": [
      "ul",
      "li",
      "pre"
    ],
    "access.": [
      "ul",
      "li"
    ],
    "solution": [
      "h1",
      "p"
    ],
    "example": [
      "h1",
      "h1"
    ],
    "following": [
      "p",
      "p",
      "p"
    ],
    "broken": [
      "p"
    ],
    "up": [
      "p"
    ],
    "into": [
      "p"
    ],
    "two": [
      "p"
    ],
    "cases": [
      "p"
    ],
    "first": [
      "p"
    ],
    "in": [
      "p",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "pre",
      "p",
      "p",
      "p"
    ],
    "created": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "second": [
      "p"
    ],
    "demonstrates": [
      "p",
      "p"
    ],
    "how": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "retrieve": [
      "p",
      "pre",
      "pre",
      "p",
      "ul",
      "li",
      "pre",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "serve": [
      "p",
      "pre",
      "pre",
      "p"
    ],
    "back": [
      "p",
      "p"
    ],
    "protected": [
      "pre",
      "pre"
    ],
    "void": [
      "pre",
      "pre"
    ],
    "createfile){": [
      "pre"
    ],
    "try": [
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "//": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "generate": [
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "guid": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "pre",
      "p"
    ],
    "value": [
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "random": [
      "pre",
      "ul",
      "ul",
      "li",
      "ul",
      "li",
      "li"
    ],
    "unpredictable": [
      "pre"
    ],
    "filename": [
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "string": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "guidnewguid().tostring();": [
      "pre"
    ],
    "ensure": [
      "pre"
    ],
    "that": [
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "written": [
      "pre",
      "ul",
      "li"
    ],
    "directory": [
      "pre",
      "pre",
      "ul",
      "li",
      "pre",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "root": [
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "ul",
      "li"
    ],
    "ideally": [
      "pre"
    ],
    "filesystem": [
      "pre"
    ],
    "separate": [
      "pre"
    ],
    "from": [
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "p"
    ],
    "os": [
      "pre"
    ],
    "none": [
      "pre",
      "pre"
    ],
    "arguments": [
      "pre",
      "pre"
    ],
    "values": [
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "streamwriter": [
      "pre"
    ],
    "sw": [
      "pre",
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "streamwriter\"e:\\\\account-reports\\\\\"": [
      "pre"
    ],
    "+": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "\"pdf\");": [
      "pre"
    ],
    "fetch": [
      "pre",
      "pre"
    ],
    "some": [
      "pre",
      "pre"
    ],
    "data": [
      "pre",
      "pre",
      "p"
    ],
    "..": [
      "pre",
      "pre"
    ],
    "swwrite(strfilecontents);": [
      "pre"
    ],
    "swflush();": [
      "pre"
    ],
    "swclose();": [
      "pre"
    ],
    "insert": [
      "pre"
    ],
    "database": [
      "pre",
      "pre",
      "p"
    ],
    "associated": [
      "pre",
      "ul",
      "li"
    ],
    "with": [
      "pre",
      "pre",
      "ul",
      "li",
      "p",
      "p"
    ],
    "current": [
      "pre",
      "pre",
      "pre"
    ],
    "}": [
      "pre",
      "pre"
    ],
    "catch": [
      "pre",
      "pre"
    ],
    "exception": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "ex": [
      "pre",
      "pre"
    ],
    "supplied": [
      "pre",
      "pre",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "handling": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "log": [
      "pre",
      "pre"
    ],
    "perform": [
      "pre",
      "pre",
      "pre"
    ],
    "graceful": [
      "pre",
      "pre"
    ],
    "error": [
      "pre",
      "pre"
    ],
    "}}": [
      "pre",
      "pre"
    ],
    "retrievefile){": [
      "pre"
    ],
    "we": [
      "pre",
      "pre",
      "ul",
      "li",
      "pre"
    ],
    "call": [
      "pre"
    ],
    "custom": [
      "pre"
    ],
    "method": [
      "pre",
      "pre",
      "pre"
    ],
    "lookup": [
      "pre"
    ],
    "gets": [
      "pre"
    ],
    "replace": [
      "pre"
    ],
    "retrieveguidforuser": [
      "pre"
    ],
    "below": [
      "pre",
      "p"
    ],
    "your": [
      "pre"
    ],
    "own": [
      "pre"
    ],
    "returns": [
      "pre"
    ],
    "userguid": [
      "pre",
      "pre"
    ],
    "retrieveguidforusercontext.user.identity);": [
      "pre"
    ],
    "fullreportpath": [
      "pre",
      "pre"
    ],
    "\"e\\\\account-reports\\\\\"": [
      "pre",
      "pre"
    ],
    "\"pdf\";": [
      "pre"
    ],
    "length": [
      "pre"
    ],
    "fileinfo": [
      "pre"
    ],
    "fi": [
      "pre",
      "pre"
    ],
    "fileinfofullreportpath);": [
      "pre"
    ],
    "long": [
      "pre"
    ],
    "fsize": [
      "pre",
      "pre"
    ],
    "filength;": [
      "pre"
    ],
    "no": [
      "pre",
      "pre"
    ],
    "response": [
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "headers": [
      "pre",
      "pre"
    ],
    "read": [
      "pre",
      "pre"
    ],
    "protect": [
      "pre",
      "pre"
    ],
    "access": [
      "pre",
      "ul",
      "li"
    ],
    "responseaddheader(\"content-disposition\",": [
      "pre"
    ],
    "\"attachmentfilename=report.pdf\");": [
      "pre"
    ],
    "don't": [
      "pre"
    ],
    "allow": [
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "influence": [
      "pre"
    ],
    "content": [
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "disposition": [
      "pre",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "type": [
      "pre"
    ],
    "otherwise": [
      "pre"
    ],
    "there": [
      "pre"
    ],
    "possibility": [
      "pre"
    ],
    "header": [
      "pre",
      "ul",
      "li",
      "p",
      "p"
    ],
    "injection": [
      "pre",
      "ul",
      "li",
      "p"
    ],
    "responsecontenttype": [
      "pre"
    ],
    "\"application/pdf\"": [
      "pre"
    ],
    "responsewritefile(fullreportpath,": [
      "pre"
    ],
    "fsize;": [
      "pre",
      "pre"
    ],
    "problem": [
      "h1"
    ],
    "examples": [
      "p"
    ],
    "danger": [
      "p"
    ],
    "relying": [
      "p",
      "ul",
      "li"
    ],
    "inputs": [
      "p"
    ],
    "host": [
      "p",
      "ul",
      "li"
    ],
    "valuesstreamwriter": [
      "pre"
    ],
    "streamwriterhttpcontext.current.request.physicalapplicationpath": [
      "pre"
    ],
    "requestcookie[\"cid\"]": [
      "pre",
      "ul",
      "li"
    ],
    "+\"pdf\");//": [
      "pre"
    ],
    "file////": [
      "pre"
    ],
    "..sw.write(strfilecontents);sw.flush();sw.close();": [
      "pre"
    ],
    "insecure": [
      "ul",
      "li"
    ],
    "routine": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "creates": [
      "ul",
      "li"
    ],
    "as": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "result": [
      "ul",
      "li",
      "h1"
    ],
    "any": [
      "ul",
      "li",
      "p"
    ],
    "who": [
      "ul",
      "li"
    ],
    "has": [
      "ul",
      "li"
    ],
    "server": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "pdf": [
      "ul",
      "li"
    ],
    "another": [
      "ul",
      "li"
    ],
    "directly": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "due": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "action": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "performed": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "must": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "webserver": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "used": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "choose": [
      "ul",
      "li"
    ],
    "because": [
      "ul",
      "li"
    ],
    "attacker": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "leverage": [
      "ul",
      "li"
    ],
    "traversal": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "attacks": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "overwrite": [
      "ul",
      "li"
    ],
    "arbitrary": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "using": [
      "ul",
      "li",
      "pre"
    ],
    "can": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "instead": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "cookie": [
      "ul",
      "li"
    ],
    "fid": [
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "requestquerystring[\"fid\"].tostring();string": [
      "pre"
    ],
    "ftype": [
      "pre",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "hdnftypevalue;": [
      "pre"
    ],
    "\"\"": [
      "pre"
    ],
    "ftype//": [
      "pre"
    ],
    "lengthfileinfo": [
      "pre"
    ],
    "fileinfofullpath);long": [
      "pre"
    ],
    "filength;//": [
      "pre"
    ],
    "influenced//": [
      "pre"
    ],
    "unauthorized//": [
      "pre"
    ],
    "accessresponse.addheader(\"content-disposition\",": [
      "pre"
    ],
    "\"attachmentfilename=\"+": [
      "pre"
    ],
    "\"\"+": [
      "pre"
    ],
    "ftype;response.contenttype": [
      "pre"
    ],
    "\"application/\"+ftyperesponse.writefile(fullpath,": [
      "pre"
    ],
    "simply": [
      "ul",
      "li"
    ],
    "changing": [
      "ul",
      "li"
    ],
    "querystring": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "parameter": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "allows": [
      "ul",
      "li"
    ],
    "us": [
      "ul",
      "li"
    ],
    "if": [
      "ul",
      "li"
    ],
    "sequential": [
      "ul",
      "li"
    ],
    "it": [
      "ul",
      "li"
    ],
    "becomes": [
      "ul",
      "li"
    ],
    "trivial": [
      "ul",
      "li"
    ],
    "enumerate": [
      "ul",
      "li"
    ],
    "circumvent": [
      "ul",
      "li"
    ],
    "stored": [
      "ul",
      "li",
      "p"
    ],
    "hidden": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "form": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "field": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "performing": [
      "ul",
      "li"
    ],
    "specially": [
      "ul",
      "li"
    ],
    "formed": [
      "ul",
      "li"
    ],
    "hyperlinks": [
      "ul",
      "li"
    ],
    "introduce": [
      "ul",
      "li"
    ],
    "splitting": [
      "ul",
      "li"
    ],
    "http": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "issues": [
      "ul",
      "li"
    ],
    "cache": [
      "ul",
      "li"
    ],
    "poisoning.": [
      "ul",
      "li"
    ],
    "never": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "identify": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "manipulation": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "rather": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "session": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "details": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "do": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "tampering": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "fields": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "client": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "side": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "controls": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "easily": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "circumvented": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "need": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "necessarily": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "same": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "test": [
      "h1"
    ],
    "case": [
      "h1"
    ],
    "class": [
      "p"
    ],
    "included": [
      "p"
    ],
    "project": [
      "p"
    ],
    "making": [
      "p"
    ],
    "provided": [
      "p"
    ],
    "above": [
      "p"
    ],
    "systemio;": [
      "pre"
    ],
    "running": [
      "p"
    ],
    "similar": [
      "p"
    ],
    "shown": [
      "p"
    ],
    "will": [
      "p"
    ],
    "uniqueness": [
      "p"
    ],
    "guids": [
      "p"
    ],
    "coincides": [
      "p"
    ],
    "our": [
      "p"
    ],
    "goal": [
      "p"
    ],
    "avoid": [
      "p"
    ],
    "int": [
      "pre"
    ],
    "i": [
      "pre",
      "pre"
    ],
    "i++{": [
      "pre"
    ],
    "responseoutput.writeline(\"guid:": [
      "pre"
    ],
    "\"": [
      "pre"
    ],
    "guidnewguid());}": [
      "pre"
    ],
    "expected": [
      "h1"
    ],
    "1a40e34d-9985-4b2e-9c6a-8be88cfcc26bguid": [
      "pre"
    ],
    "1b7bd6d5-057e-4681-b213-a193170fc5d5guid": [
      "pre"
    ],
    "b063f09d-d393-4fbc-b704-e5cefd708703guid": [
      "pre"
    ],
    "088101b3-dc2e-474b-a898-53508b4a9ac5guid": [
      "pre"
    ],
    "bffc841c-e6e8-4562-8ece-8d1ace19fd4dguid": [
      "pre"
    ],
    "21ff1e43-0d10-46d7-9df6-a9053f3aabc9guid": [
      "pre"
    ],
    "36f49e30-c81d-484a-94a0-cc09197839a0guid": [
      "pre"
    ],
    "a6d32483-bc6e-4828-b3cd-423ab1e1389eguid": [
      "pre"
    ],
    "d8ed1bf8-413e-4be9-97d8-ad9337030310guid": [
      "pre"
    ],
    "eba93b92-384d-41d2-8db3-6028932fee4d": [
      "pre"
    ],
    "more": [
      "h1"
    ],
    "information": [
      "h1"
    ],
    "function": [
      "p"
    ],
    "ability": [
      "p"
    ],
    "common": [
      "p"
    ],
    "such": [
      "p"
    ],
    "controlled": [
      "p"
    ],
    "entirely": [
      "p"
    ],
    "event": [
      "p"
    ],
    "preserve": [
      "p"
    ],
    "original": [
      "p",
      "p"
    ],
    "these": [
      "p"
    ],
    "after": [
      "p"
    ],
    "validation": [
      "p"
    ],
    "known": [
      "p"
    ],
    "good": [
      "p"
    ],
    "characters": [
      "p"
    ],
    "along": [
      "p"
    ],
    "then": [
      "p"
    ],
    "set": [
      "p"
    ],
    "content-disposition": [
      "p"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "wikipedia": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "http//en.wikipedia.org/wiki/directory_traversal": [
      "ul",
      "li",
      "a"
    ],
    "http//en.wikipedia.org/wiki/race_condition": [
      "ul",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "creating": [
      "title"
    ],
    "avoids": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "Summary",
      "Objectives",
      "Scenarios",
      "Solution Example",
      "Problem Example",
      "Test Case",
      "Expected Result",
      "More Information",
      "Additional Resources"
    ],
    "ul": [
      "C# \r\n    Server-side",
      "Secure generation of temporary files within a web application which does not expose other files on the file system. \r\n    Secure creation and storage of temporary files which mitigate the risk of file enumeration \r\n    Mitigate the likelihood of race conditions through use of strong randomly generated filenames \r\n    Demonstrate secure retrieval of a temporary file which resides outside of the webroot upon successful authorization of user request",
      "A web-based application generates reports or other temporary files to a file which may be subsequently retrieved by an authorized user \r\n    A web application needs to periodically create temporary files which are later processed by a batch process, the temporary filenames should be unique and non-user influenced \r\n    Files are retrieved indirectly for users upon request, brokered by the application (e.g. files reside outside of the webroot to prevent unauthorized access).",
      "This insecure file creation routine creates temporary files in the webroot as a result any user who has access to the web server may retrieve PDF reports associated with another user Files created directly or indirectly due to an action performed by a user must be created securely in which the filenames are random, and not user influenced, and reside outside of the webserver root.\r\n    The Request.Cookie[\"cid\"] value is used to choose a filename to be written, because this value is user influenced an attacker may leverage directory traversal attacks to overwrite arbitrary files on the web server host. \r\n    Using a GUID we can generate a strong random value for the filename instead of relying on a user supplied cookie.",
      "Files created directly or indirectly due to an action performed by a user must be created securely in which the filenames are random, and not user influenced, and reside outside of the webserver root.",
      "Simply changing the value of the fid request querystring parameter allows us to retrieve files of other users. If the values are sequential it becomes trivial to enumerate files of other users. \r\n    Users can circumvent this file retrieval routine as files are stored within the web server root \r\n    The user supplied querystring parameter and ftype hidden form field allow users to retrieve arbitrary files from the file system by performing directory traversal attacks \r\n    The user supplied querystring parameter and ftype hidden form field allow an attacker to create specially formed hyperlinks which introduce response splitting and other HTTP header injection issues (e.g. HTTP Cache poisoning). User supplied values should never be used to identify files for manipulation, rather server-side session details which do not allow user tampering should be used instead Hidden form fields do not mitigate the risk of parameter tampering; client side controls are easily circumvented The content disposition filename need not necessarily be the same filename that a user created.",
      "User supplied values should never be used to identify files for manipulation, rather server-side session details which do not allow user tampering should be used instead Hidden form fields do not mitigate the risk of parameter tampering; client side controls are easily circumvented The content disposition filename need not necessarily be the same filename that a user created.",
      "Wikipedia Directory Traversal Attacks: http://en.wikipedia.org/wiki/Directory_traversal\r\n    Wikipedia Race Conditions: http://en.wikipedia.org/wiki/Race_condition"
    ],
    "li": [
      "C#",
      "Server-side",
      "Secure generation of temporary files within a web application which does not expose other files on the file system.",
      "Secure creation and storage of temporary files which mitigate the risk of file enumeration",
      "Mitigate the likelihood of race conditions through use of strong randomly generated filenames",
      "Demonstrate secure retrieval of a temporary file which resides outside of the webroot upon successful authorization of user request",
      "A web-based application generates reports or other temporary files to a file which may be subsequently retrieved by an authorized user",
      "A web application needs to periodically create temporary files which are later processed by a batch process, the temporary filenames should be unique and non-user influenced",
      "Files are retrieved indirectly for users upon request, brokered by the application (e.g. files reside outside of the webroot to prevent unauthorized access).",
      "This insecure file creation routine creates temporary files in the webroot as a result any user who has access to the web server may retrieve PDF reports associated with another user Files created directly or indirectly due to an action performed by a user must be created securely in which the filenames are random, and not user influenced, and reside outside of the webserver root.",
      "Files created directly or indirectly due to an action performed by a user must be created securely in which the filenames are random, and not user influenced, and reside outside of the webserver root.",
      "The Request.Cookie[\"cid\"] value is used to choose a filename to be written, because this value is user influenced an attacker may leverage directory traversal attacks to overwrite arbitrary files on the web server host.",
      "Using a GUID we can generate a strong random value for the filename instead of relying on a user supplied cookie.",
      "Simply changing the value of the fid request querystring parameter allows us to retrieve files of other users. If the values are sequential it becomes trivial to enumerate files of other users.",
      "Users can circumvent this file retrieval routine as files are stored within the web server root",
      "The user supplied querystring parameter and ftype hidden form field allow users to retrieve arbitrary files from the file system by performing directory traversal attacks",
      "The user supplied querystring parameter and ftype hidden form field allow an attacker to create specially formed hyperlinks which introduce response splitting and other HTTP header injection issues (e.g. HTTP Cache poisoning). User supplied values should never be used to identify files for manipulation, rather server-side session details which do not allow user tampering should be used instead Hidden form fields do not mitigate the risk of parameter tampering; client side controls are easily circumvented The content disposition filename need not necessarily be the same filename that a user created.",
      "User supplied values should never be used to identify files for manipulation, rather server-side session details which do not allow user tampering should be used instead",
      "Hidden form fields do not mitigate the risk of parameter tampering; client side controls are easily circumvented",
      "The content disposition filename need not necessarily be the same filename that a user created.",
      "Wikipedia Directory Traversal Attacks: http://en.wikipedia.org/wiki/Directory_traversal",
      "Wikipedia Race Conditions: http://en.wikipedia.org/wiki/Race_condition"
    ],
    "p": [
      "The purpose of this code sample is to demonstrate a technique to securely create files by a web application while avoiding canonicalization and race conditions",
      "The following solution is broken up into two cases, the first in which the file is created, and the second which demonstrates how to properly retrieve and serve the file back to the user.",
      "Secure File Creation",
      "Secure File Retrieval",
      "The following examples demonstrate the danger of relying on user supplied inputs to create and retrieve temporary files on the host:",
      "File Creation",
      "File Retrieval",
      "The following class must be included in any project making use of the sample code provided above:",
      "Running code similar to that shown below will demonstrate the uniqueness of System generated GUIDs which coincides with our goal to create temporary files which avoid canonicalization and race conditions.",
      "The file retrieval function demonstrates the ability to securely serve files back to users avoiding common attacks such as HTTP header injection, directory traversal and race conditions as filenames are controlled entirely by the server. In the event that the application needs to preserve original filenames, these values may be stored in the database (after data validation for known good characters) along with the system generated Guid. The original filename may then be set within the Content-Disposition header.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "strong": [
      "Secure File Creation",
      "Secure File Retrieval",
      "File Creation",
      "File Retrieval"
    ],
    "pre": [
      "protected void CreateFile(){    try    {        // Generate a guid value for a strong, random and unpredictable filename        string guid = Guid.NewGuid().ToString();        // Ensure that file which is written resides in a directory outside of the web root.        // Ideally this file should be on a filesystem separate from the OS.        // None of the generated filename arguments are user influenced values        StreamWriter sw = new StreamWriter(\"E:\\\\account-reports\\\\\" + guid + \".pdf\");        // Fetch some data and generate the file        //        // ...        sw.Write(strFileContents);        sw.Flush();        sw.Close();        // Insert GUID value in database associated with current user        //        // ...    }    catch (Exception ex)    {        // User supplied exception handling code: Log exception and perform graceful error handling    }}",
      "protected void RetrieveFile(){    try    {        // Retrieve file. We call a custom method to perform a database lookup which gets the         // GUID value for the current user.        // Replace the RetrieveGuidForUser method below with your own method which returns the         // guid for the current user.        string userguid = RetrieveGuidForUser(Context.User.Identity);        string fullreportpath = \"E:\\\\account-reports\\\\\" + userguid + \".pdf\";        // Retrieve file length        FileInfo fi = new FileInfo(fullreportpath);        long fsize = fi.Length;        // Serve file to user. No values in response headers should be user influenced.        // We read the file from a directory outside of the web root to protect unauthorized        // file access.        Response.AddHeader(\"Content-Disposition\", \"attachment;filename=report.pdf\");        // Don't allow a user to influence the content disposition or content type otherwise        // there may be possibility of header injection        Response.ContentType = \"application/pdf\";        Response.WriteFile(fullreportpath, 0, fsize);    }    catch (Exception ex)    {        // User supplied exception handling code: Log exception and perform graceful error handling    }}",
      "// None of the generated filename arguments are user influenced valuesStreamWriter sw = new StreamWriter(HttpContext.Current.Request.PhysicalApplicationPath +                                     Request.Cookie[\"cid\"] +\".pdf\");// Fetch some data and generate the file//// ...sw.Write(strFileContents);sw.Flush();sw.Close();",
      "string fid = Request.QueryString[\"fid\"].ToString();string ftype = hdnFtype.Value; string fullreportpath = \"E:\\\\account-reports\\\\\" + fid + \".\" + ftype;// Retrieve file lengthFileInfo fi = new FileInfo(fullpath);long fsize = fi.Length;// Serve file to user. No values in response headers should be user influenced.// We read the file from a directory outside of the web root to protect unauthorized// file access.Response.AddHeader(\"Content-Disposition\", \"attachment;filename=\"+ fid + \".\"+ ftype);Response.ContentType = \"application/\"+ftype;Response.WriteFile(fullpath, 0, fsize);",
      "using System.IO;",
      "for (int i = 0; i < 10; i++){    Response.Output.WriteLine(\"GUID: \" + Guid.NewGuid());}",
      "GUID: 1a40e34d-9985-4b2e-9c6a-8be88cfcc26bGUID: 1b7bd6d5-057e-4681-b213-a193170fc5d5GUID: b063f09d-d393-4fbc-b704-e5cefd708703GUID: 088101b3-dc2e-474b-a898-53508b4a9ac5GUID: bffc841c-e6e8-4562-8ece-8d1ace19fd4dGUID: 21ff1e43-0d10-46d7-9df6-a9053f3aabc9GUID: 36f49e30-c81d-484a-94a0-cc09197839a0GUID: a6d32483-bc6e-4828-b3cd-423ab1e1389eGUID: d8ed1bf8-413e-4be9-97d8-ad9337030310GUID: eba93b92-384d-41d2-8db3-6028932fee4d"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "http://en.wikipedia.org/wiki/Directory_traversal",
      "http://en.wikipedia.org/wiki/Race_condition"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://en.wikipedia.org/wiki/Directory_traversal",
      "text": "http://en.wikipedia.org/wiki/Directory_traversal"
    },
    {
      "href": "http://en.wikipedia.org/wiki/Race_condition",
      "text": "http://en.wikipedia.org/wiki/Race_condition"
    }
  ],
  "html": "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>C# </li>\r\n    <li>Server-side</li>\r\n  </ul>\r\n  <h1>Summary</h1>\r\n  <p>The purpose of this code sample is to demonstrate a technique to securely create files by a web application while avoiding canonicalization and race conditions</p>\r\n  <h1>Objectives</h1>\r\n  <ul>\r\n    <li>Secure generation of temporary files within a web application which does not expose other files on the file system. </li>\r\n    <li>Secure creation and storage of temporary files which mitigate the risk of file enumeration </li>\r\n    <li>Mitigate the likelihood of race conditions through use of strong randomly generated filenames </li>\r\n    <li>Demonstrate secure retrieval of a temporary file which resides outside of the webroot upon successful authorization of user request</li>\r\n  </ul>\r\n  <h1>Scenarios</h1>\r\n  <ul>\r\n    <li>A web-based application generates reports or other temporary files to a file which may be subsequently retrieved by an authorized user </li>\r\n    <li>A web application needs to periodically create temporary files which are later processed by a batch process, the temporary filenames should be unique and non-user influenced </li>\r\n    <li>Files are retrieved indirectly for users upon request, brokered by the application (e.g. files reside outside of the webroot to prevent unauthorized access).</li>\r\n  </ul>\r\n  <h1>Solution Example</h1>\r\n  <p>The following solution is broken up into two cases, the first in which the file is created, and the second which demonstrates how to properly retrieve and serve the file back to the user.</p>\r\n  <p>\r\n    <strong>Secure File Creation</strong>\r\n  </p>\r\n  <pre>protected void CreateFile(){<br />    try<br />    {<br />        // Generate a guid value for a strong, random and unpredictable filename<br />        string guid = Guid.NewGuid().ToString();<br />        // Ensure that file which is written resides in a directory outside of the web root.<br />        // Ideally this file should be on a filesystem separate from the OS.<br />        // None of the generated filename arguments are user influenced values<br />        StreamWriter sw = new StreamWriter(\"E:\\\\account-reports\\\\\" + guid + \".pdf\");<br />        // Fetch some data and generate the file<br />        //<br />        // ...<br />        sw.Write(strFileContents);<br />        sw.Flush();<br />        sw.Close();<br /><br />        // Insert GUID value in database associated with current user<br />        //<br />        // ...<br />    }<br />    catch (Exception ex)<br />    {<br />        // User supplied exception handling code: Log exception and perform graceful error handling<br />    }<br />} </pre>\r\n  <p>\r\n    <strong>Secure File Retrieval</strong>\r\n  </p>\r\n  <pre>protected void RetrieveFile(){<br />    try<br />    {<br />        // Retrieve file. We call a custom method to perform a database lookup which gets the<br />         // GUID value for the current user.<br />        // Replace the RetrieveGuidForUser method below with your own method which returns the<br />         // guid for the current user.<br />        string userguid = RetrieveGuidForUser(Context.User.Identity);<br />        string fullreportpath = \"E:\\\\account-reports\\\\\" + userguid + \".pdf\";<br />        // Retrieve file length<br />        FileInfo fi = new FileInfo(fullreportpath);<br />        long fsize = fi.Length;<br />        // Serve file to user. No values in response headers should be user influenced.<br />        // We read the file from a directory outside of the web root to protect unauthorized<br />        // file access.<br />        Response.AddHeader(\"Content-Disposition\", \"attachment;filename=report.pdf\");<br />        // Don't allow a user to influence the content disposition or content type otherwise<br />        // there may be possibility of header injection<br />        Response.ContentType = \"application/pdf\";<br />        Response.WriteFile(fullreportpath, 0, fsize);<br />    }<br />    catch (Exception ex)<br />    {<br />        // User supplied exception handling code: Log exception and perform graceful error handling<br />    }<br />} </pre>\r\n  <h1>Problem Example</h1>\r\n  <p>The following examples demonstrate the danger of relying on user supplied inputs to create and retrieve temporary files on the host:</p>\r\n  <p>\r\n    <strong>File Creation</strong>\r\n  </p>\r\n  <pre>// None of the generated filename arguments are user influenced values<br />StreamWriter sw = new StreamWriter(HttpContext.Current.Request.PhysicalApplicationPath + <br />                                    Request.Cookie[\"cid\"] +\".pdf\");<br />// Fetch some data and generate the file//<br />// ...sw.Write(strFileContents);<br />sw.Flush();<br />sw.Close();</pre>\r\n  <ul>\r\n    <li>This insecure file creation routine creates temporary files in the webroot as a result any user who has access to the web server may retrieve PDF reports associated with another user <ul><li>Files created directly or indirectly due to an action performed by a user must be created securely in which the filenames are random, and not user influenced, and reside outside of the webserver root.</li></ul></li>\r\n    <li>The Request.Cookie[\"cid\"] value is used to choose a filename to be written, because this value is user influenced an attacker may leverage directory traversal attacks to overwrite arbitrary files on the web server host. </li>\r\n    <li>Using a GUID we can generate a strong random value for the filename instead of relying on a user supplied cookie.</li>\r\n  </ul>\r\n  <p>\r\n    <strong>File Retrieval</strong>\r\n  </p>\r\n  <pre>string fid = Request.QueryString[\"fid\"].ToString();<br />string ftype = hdnFtype.Value;<br /> string fullreportpath = \"E:\\\\account-reports\\\\\" + fid + \".\" + ftype;<br />// Retrieve file lengthFileInfo fi = new FileInfo(fullpath);<br />long fsize = fi.Length;<br />// Serve file to user. No values in response headers should be user influenced.<br />// We read the file from a directory outside of the web root to protect unauthorized<br />// file access.Response.AddHeader(\"Content-Disposition\", \"attachment;<br />filename=\"+ fid + \".\"+ ftype);Response.ContentType = \"application/\"+ftype;<br />Response.WriteFile(fullpath, 0, fsize);</pre>\r\n  <ul>\r\n    <li>Simply changing the value of the fid request querystring parameter allows us to retrieve files of other users. If the values are sequential it becomes trivial to enumerate files of other users. </li>\r\n    <li>Users can circumvent this file retrieval routine as files are stored within the web server root </li>\r\n    <li>The user supplied querystring parameter and ftype hidden form field allow users to retrieve arbitrary files from the file system by performing directory traversal attacks </li>\r\n    <li>The user supplied querystring parameter and ftype hidden form field allow an attacker to create specially formed hyperlinks which introduce response splitting and other HTTP header injection issues (e.g. HTTP Cache poisoning). <ul><li>User supplied values should never be used to identify files for manipulation, rather server-side session details which do not allow user tampering should be used instead </li><li>Hidden form fields do not mitigate the risk of parameter tampering; client side controls are easily circumvented </li><li>The content disposition filename need not necessarily be the same filename that a user created.</li></ul></li>\r\n  </ul>\r\n  <h1>Test Case</h1>\r\n  <p>The following class must be included in any project making use of the sample code provided above:</p>\r\n  <pre>using System.IO;</pre>\r\n  <p>Running code similar to that shown below will demonstrate the uniqueness of System generated GUIDs which coincides with our goal to create temporary files which avoid canonicalization and race conditions.</p>\r\n  <pre>for (int i = 0; i &lt; 10; i++){<br />    Response.Output.WriteLine(\"GUID: \" + Guid.NewGuid());<br />}</pre>\r\n  <h1>Expected Result</h1>\r\n  <pre>GUID: 1a40e34d-9985-4b2e-9c6a-8be88cfcc26b<br />GUID: 1b7bd6d5-057e-4681-b213-a193170fc5d5<br />GUID: b063f09d-d393-4fbc-b704-e5cefd708703<br />GUID: 088101b3-dc2e-474b-a898-53508b4a9ac5<br />GUID: bffc841c-e6e8-4562-8ece-8d1ace19fd4d<br />GUID: 21ff1e43-0d10-46d7-9df6-a9053f3aabc9<br />GUID: 36f49e30-c81d-484a-94a0-cc09197839a0<br />GUID: a6d32483-bc6e-4828-b3cd-423ab1e1389e<br />GUID: d8ed1bf8-413e-4be9-97d8-ad9337030310<br />GUID: eba93b92-384d-41d2-8db3-6028932fee4d</pre>\r\n  <h1>More Information</h1>\r\n  <p>The file retrieval function demonstrates the ability to securely serve files back to users avoiding common attacks such as HTTP header injection, directory traversal and race conditions as filenames are controlled entirely by the server. In the event that the application needs to preserve original filenames, these values may be stored in the database (after data validation for known good characters) along with the system generated Guid. The original filename may then be set within the Content-Disposition header.</p>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>Wikipedia Directory Traversal Attacks: <a href=\"http://en.wikipedia.org/wiki/Directory_traversal\">http://en.wikipedia.org/wiki/Directory_traversal</a></li>\r\n    <li>Wikipedia Race Conditions: <a href=\"http://en.wikipedia.org/wiki/Race_condition\">http://en.wikipedia.org/wiki/Race_condition</a></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}