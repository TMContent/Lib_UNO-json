{
  "id": "ba8a22a6-6b90-4cec-8826-7ad6258814b8",
  "checksum": "47fd8e05237beedf03dd016305589d7d12aab861",
  "words": {
    "1": [
      "ul",
      "li",
      "a"
    ],
    "2": [
      "ul",
      "li",
      "a"
    ],
    "211": [
      "p",
      "a"
    ],
    "description": [
      "h1"
    ],
    "http": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "title"
    ],
    "response": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "title"
    ],
    "splitting": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "occurs": [
      "p"
    ],
    "when": [
      "p"
    ],
    "an": [
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a"
    ],
    "able": [
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "inject": [
      "p",
      "p"
    ],
    "arbitrary": [
      "p",
      "p"
    ],
    "data": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "into": [
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em",
      "ul",
      "li"
    ],
    "headers": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "responses": [
      "p",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "vulnerability": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "allows": [
      "p"
    ],
    "force": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "contain": [
      "p"
    ],
    "html": [
      "p"
    ],
    "attacker's": [
      "p"
    ],
    "choosing": [
      "p"
    ],
    "applies": [
      "p"
    ],
    "web": [
      "p",
      "p"
    ],
    "applications": [
      "p"
    ],
    "place": [
      "p"
    ],
    "user": [
      "p",
      "p"
    ],
    "input": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "em"
    ],
    "prevent": [
      "p",
      "p"
    ],
    "validate": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "all": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "url-encode": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "check": [
      "p",
      "h1",
      "p"
    ],
    "for": [
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "em",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "find": [
      "p"
    ],
    "code": [
      "p",
      "p",
      "h2",
      "p",
      "a"
    ],
    "outputs": [
      "p"
    ],
    "custom": [
      "p"
    ],
    "make": [
      "p",
      "p"
    ],
    "sure": [
      "p"
    ],
    "does": [
      "p"
    ],
    "not": [
      "p"
    ],
    "include": [
      "p"
    ],
    "unvalidated": [
      "p"
    ],
    "unencoded": [
      "p"
    ],
    "impact": [
      "h1"
    ],
    "gives": [
      "p"
    ],
    "full": [
      "p",
      "p"
    ],
    "control": [
      "p",
      "p",
      "p"
    ],
    "over": [
      "p",
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "conduct": [
      "p"
    ],
    "phishing": [
      "p",
      "p"
    ],
    "cross-site": [
      "p",
      "p"
    ],
    "scripting": [
      "p",
      "p"
    ],
    "attacks": [
      "p"
    ],
    "may": [
      "p",
      "p",
      "p",
      "p"
    ],
    "create": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p"
    ],
    "fake": [
      "p",
      "p"
    ],
    "login": [
      "p",
      "p",
      "p",
      "p",
      "em",
      "em"
    ],
    "page": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "it": [
      "p"
    ],
    "appear": [
      "p"
    ],
    "be": [
      "p",
      "p"
    ],
    "part": [
      "p"
    ],
    "your": [
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "h1"
    ],
    "by": [
      "p",
      "p",
      "p"
    ],
    "using": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "used": [
      "p"
    ],
    "collect": [
      "p"
    ],
    "passwords": [
      "p"
    ],
    "users": [
      "p",
      "p"
    ],
    "also": [
      "p"
    ],
    "javascript": [
      "p"
    ],
    "pages": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "em"
    ],
    "served": [
      "p"
    ],
    "these": [
      "p",
      "p"
    ],
    "scripts": [
      "p"
    ],
    "redirect": [
      "p"
    ],
    "application's": [
      "p"
    ],
    "malicious": [
      "p"
    ],
    "site": [
      "p"
    ],
    "steal": [
      "p"
    ],
    "their": [
      "p"
    ],
    "session": [
      "p"
    ],
    "cookies": [
      "p"
    ],
    "or": [
      "p",
      "p"
    ],
    "record": [
      "p"
    ],
    "users'": [
      "p"
    ],
    "keystrokes": [
      "p"
    ],
    "either": [
      "p"
    ],
    "through": [
      "p",
      "p"
    ],
    "leverage": [
      "p"
    ],
    "take": [
      "p"
    ],
    "administrator's": [
      "p"
    ],
    "account": [
      "p"
    ],
    "gain": [
      "p"
    ],
    "countermeasures": [
      "h1"
    ],
    "from": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "sources": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "length": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "range": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "format": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "type": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li"
    ],
    "validation": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "jsf": [
      "ul",
      "li",
      "a"
    ],
    "springmvc": [
      "ul",
      "li",
      "a"
    ],
    "struts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "adequate": [
      "p"
    ],
    "protection": [
      "p"
    ],
    "against": [
      "p"
    ],
    "ensure": [
      "p",
      "p"
    ],
    "validated": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "url-encoded": [
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "computer": [
      "h1",
      "p"
    ],
    "based": [
      "h1",
      "p"
    ],
    "training": [
      "h1",
      "p"
    ],
    "links": [
      "h1"
    ],
    "following": [
      "p"
    ],
    "courses)": [
      "p"
    ],
    "learn": [
      "p",
      "p"
    ],
    "more": [
      "p",
      "ul",
      "li"
    ],
    "about": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "including": [
      "p"
    ],
    "techniques": [
      "p"
    ],
    "remediation": [
      "p"
    ],
    "prevention": [
      "p"
    ],
    "creating": [
      "h2",
      "p",
      "a"
    ],
    "secure": [
      "h2",
      "p",
      "a"
    ],
    "â€“": [
      "h2",
      "p",
      "a"
    ],
    "jre": [
      "h2",
      "p",
      "a"
    ],
    "foundations": [
      "h2",
      "p",
      "a"
    ],
    "course": [
      "p",
      "p",
      "p",
      "em"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "will": [
      "p"
    ],
    "recognize": [
      "p"
    ],
    "remediate": [
      "p",
      "p"
    ],
    "common": [
      "p"
    ],
    "java": [
      "p"
    ],
    "software": [
      "p"
    ],
    "security": [
      "p"
    ],
    "vulnerabilities": [
      "p",
      "p"
    ],
    "has": [
      "p"
    ],
    "three": [
      "p"
    ],
    "modules": [
      "p"
    ],
    "which": [
      "p"
    ],
    "introduce": [
      "p"
    ],
    "help": [
      "p",
      "p",
      "em"
    ],
    "identify": [
      "p"
    ],
    "them": [
      "p"
    ],
    "cod": [
      "p",
      "a"
    ],
    "valid": [
      "p",
      "em"
    ],
    "credentials": [
      "p",
      "p",
      "em",
      "em"
    ],
    "enrollment": [
      "p",
      "em"
    ],
    "itself": [
      "p",
      "em"
    ],
    "required": [
      "p",
      "em"
    ],
    "access": [
      "p",
      "em"
    ],
    "team": [
      "p",
      "em"
    ],
    "professor": [
      "p",
      "em"
    ],
    "content": [
      "p",
      "em"
    ],
    "if": [
      "p",
      "em"
    ],
    "need": [
      "p",
      "em"
    ],
    "please": [
      "p",
      "em"
    ],
    "contact": [
      "p",
      "em"
    ],
    "support@securityinnovationcom": [
      "p",
      "em"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "information": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "http//en.wikipedia.org/wiki/http_response_splitting": [
      "ul",
      "li",
      "a"
    ],
    "cwe": [
      "ul",
      "li"
    ],
    "http//cwe.mitre.org/data/definitions/113.html": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Description",
      "Impact",
      "Countermeasures",
      "Application Check",
      "Computer Based Training Links",
      "Additional Resources"
    ],
    "p": [
      "HTTP response splitting occurs when an attacker is able to inject arbitrary data into the headers of HTTP responses. This vulnerability allows the attacker to force HTTP responses that contain HTML of the attacker's choosing. HTTP response splitting applies to web applications that place user input in HTTP response headers. To prevent this vulnerability, validate all input and URL-encode data in HTTP response headers. To check for this vulnerability, find all code that outputs custom HTTP response headers and make sure that this code does not include unvalidated, unencoded user data in the headers.",
      "HTTP response splitting gives the attacker full control over the HTTP response. The attacker can use this control to conduct phishing and cross-site scripting attacks. The attacker may create a fake login page and make it appear to be a part of your application by using HTTP response splitting. That fake login page can be used by the attacker to collect the passwords of the users. The attacker may also inject arbitrary JavaScript into pages that are served by the application using HTTP response splitting. These scripts may redirect the application's users to a malicious site, steal their session cookies, or record users' keystrokes. Either through phishing or through cross-site scripting, the attacker may leverage HTTP response splitting to take over an administrator's account and gain full control of the application.",
      "To prevent this vulnerability, validate all input and URL-encode data in HTTP response headers.",
      "Validate all input:",
      "URL-encode data in HTTP response headers:",
      "To check for adequate protection against this vulnerability, ensure that all input is validated, and ensure that all data in HTTP response headers is URL-encoded.",
      "All input is validated:",
      "Data in HTTP response headers is URL-encoded:",
      "Use the following Computer Based Training course(s) to learn more about HTTP Response Splitting including techniques for remediation and prevention.",
      "In this course, you will learn to recognize and remediate common Java Web software security vulnerabilities.  This course has three modules, which introduce you to these vulnerabilities and help you to identify and remediate them.",
      "COD 211 Creating Secure Code â€“ JRE Foundations.",
      "Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help."
    ],
    "ul": [
      "Validate Input from All Sources\n Validate Input for Length, Range, Format, And Type\n Input Validation Using JSF\n Input Validation Using SpringMVC\n Input Validation Using Struts 1\n Input Validation Using Struts 2",
      "URL-encode Data in HTTP Response Headers",
      "Input from All Sources Is Validated\n Input Is Validated for Length, Range, Format And Type",
      "Data in HTTP Response Headers Is URL-encoded",
      "For more information about HTTP response splitting, see http://en.wikipedia.org/wiki/HTTP_response_splitting\n For the CWE page about this vulnerability type, see http://cwe.mitre.org/data/definitions/113.html"
    ],
    "li": [
      "Validate Input from All Sources",
      "Validate Input for Length, Range, Format, And Type",
      "Input Validation Using JSF",
      "Input Validation Using SpringMVC",
      "Input Validation Using Struts 1",
      "Input Validation Using Struts 2",
      "URL-encode Data in HTTP Response Headers",
      "Input from All Sources Is Validated",
      "Input Is Validated for Length, Range, Format And Type",
      "Data in HTTP Response Headers Is URL-encoded",
      "For more information about HTTP response splitting, see http://en.wikipedia.org/wiki/HTTP_response_splitting",
      "For the CWE page about this vulnerability type, see http://cwe.mitre.org/data/definitions/113.html"
    ],
    "a": [
      "Validate Input from All Sources",
      "Validate Input for Length, Range, Format, And Type",
      "Input Validation Using JSF",
      "Input Validation Using SpringMVC",
      "Input Validation Using Struts 1",
      "Input Validation Using Struts 2",
      "URL-encode Data in HTTP Response Headers",
      "Input from All Sources Is Validated",
      "Input Is Validated for Length, Range, Format And Type",
      "Data in HTTP Response Headers Is URL-encoded",
      "COD 211 Creating Secure Code â€“ JRE Foundations",
      "http://en.wikipedia.org/wiki/HTTP_response_splitting",
      "http://cwe.mitre.org/data/definitions/113.html"
    ],
    "h2": [
      "Creating Secure Code â€“ JRE Foundations"
    ],
    "em": [
      "Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help."
    ]
  },
  "links": [
    {
      "href": "b531d29c-86f7-4812-90ce-5f3f0f780aba",
      "text": "Validate Input from All Sources"
    },
    {
      "href": "c98695c5-cf02-44a1-96bf-1f8046b8ad9d",
      "text": "Validate Input for Length, Range, Format, And Type"
    },
    {
      "href": "0f49430b-2abe-408f-b046-89fa739f5d53",
      "text": "Input Validation Using JSF"
    },
    {
      "href": "18ac74df-602b-4a58-8998-52f638f3a045",
      "text": "Input Validation Using SpringMVC"
    },
    {
      "href": "d124abb1-e230-43ef-8762-1caa0dbb89ca",
      "text": "Input Validation Using Struts 1"
    },
    {
      "href": "2f917654-65a8-49c9-b000-c17f9765bf42",
      "text": "Input Validation Using Struts 2"
    },
    {
      "href": "00000000-0000-0000-0000-0000001ab0c1",
      "text": "URL-encode Data in HTTP Response Headers"
    },
    {
      "href": "b531d29c-86f7-4812-90ce-5f3f0f780aba",
      "text": "Input from All Sources Is Validated"
    },
    {
      "href": "61869793-2c10-40c0-b82a-babcc0312697",
      "text": "Input Is Validated for Length, Range, Format And Type"
    },
    {
      "href": "00000000-0000-0000-0000-00000043b1b9",
      "text": "Data in HTTP Response Headers Is URL-encoded"
    },
    {
      "href": "https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127615",
      "text": "COD 211 Creating Secure Code â€“ JRE Foundations"
    },
    {
      "href": "http://en.wikipedia.org/wiki/HTTP_response_splitting",
      "text": "http://en.wikipedia.org/wiki/HTTP_response_splitting"
    },
    {
      "href": "http://cwe.mitre.org/data/definitions/113.html",
      "text": "http://cwe.mitre.org/data/definitions/113.html"
    }
  ],
  "html": "<h1>Description</h1><p>HTTP response splitting occurs when an attacker is able to inject arbitrary data into the headers of HTTP responses. This vulnerability allows the attacker to force HTTP responses that contain HTML of the attacker's choosing. HTTP response splitting applies to web applications that place user input in HTTP response headers. To prevent this vulnerability, validate all input and URL-encode data in HTTP response headers. To check for this vulnerability, find all code that outputs custom HTTP response headers and make sure that this code does not include unvalidated, unencoded user data in the headers.\n</p><h1>Impact</h1><p>HTTP response splitting gives the attacker full control over the HTTP response. The attacker can use this control to conduct phishing and cross-site scripting attacks. The attacker may create a fake login page and make it appear to be a part of your application by using HTTP response splitting. That fake login page can be used by the attacker to collect the passwords of the users. The attacker may also inject arbitrary JavaScript into pages that are served by the application using HTTP response splitting. These scripts may redirect the application's users to a malicious site, steal their session cookies, or record users' keystrokes. Either through phishing or through cross-site scripting, the attacker may leverage HTTP response splitting to take over an administrator's account and gain full control of the application.\n</p><h1>Countermeasures</h1><p>To prevent this vulnerability, validate all input and URL-encode data in HTTP response headers. \n</p><p>\nValidate all input:</p><ul>\n<li> <a href=\"b531d29c-86f7-4812-90ce-5f3f0f780aba\">Validate Input from All Sources</a></li>\n<li> <a href=\"c98695c5-cf02-44a1-96bf-1f8046b8ad9d\">Validate Input for Length, Range, Format, And Type</a></li>\n<li> <a href=\"0f49430b-2abe-408f-b046-89fa739f5d53\">Input Validation Using JSF</a></li>\n<li> <a href=\"18ac74df-602b-4a58-8998-52f638f3a045\">Input Validation Using SpringMVC</a></li>\n<li> <a href=\"d124abb1-e230-43ef-8762-1caa0dbb89ca\">Input Validation Using Struts 1</a></li>\n<li> <a href=\"2f917654-65a8-49c9-b000-c17f9765bf42\">Input Validation Using Struts 2</a></li>\n</ul><p>\nURL-encode data in HTTP response headers:\n</p><ul>\n<li> <a href=\"00000000-0000-0000-0000-0000001ab0c1\">URL-encode Data in HTTP Response Headers</a></li>\n</ul><h1>Application Check</h1><p>To check for adequate protection against this vulnerability, ensure that all input is validated, and ensure that all data in HTTP response headers is URL-encoded. \n</p><p>\nAll input is validated:</p><ul>\n<li> <a href=\"b531d29c-86f7-4812-90ce-5f3f0f780aba\">Input from All Sources Is Validated</a></li>\n<li> <a href=\"61869793-2c10-40c0-b82a-babcc0312697\">Input Is Validated for Length, Range, Format And Type</a></li>\n</ul><p>\nData in HTTP response headers is URL-encoded:</p><ul>\n<li> <a href=\"00000000-0000-0000-0000-00000043b1b9\">Data in HTTP Response Headers Is URL-encoded</a></li>\n</ul><h1>Computer Based Training Links</h1><p>Use the following Computer Based Training course(s) to learn more about HTTP Response Splitting including techniques for remediation and prevention.\n</p><h2>Creating Secure Code â€“ JRE Foundations</h2><p>In this course, you will learn to recognize and remediate common Java Web software security vulnerabilities.  This course has three modules, which introduce you to these vulnerabilities and help you to identify and remediate them. \n</p><p>\n<a href=\"https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127615\">COD 211 Creating Secure Code â€“ JRE Foundations</a>.\n</p><p>\n<em>Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.</em>\n</p><h1>Additional Resources</h1><ul><li> For more information about HTTP response splitting, see <a href=\"http://en.wikipedia.org/wiki/HTTP_response_splitting\">http://en.wikipedia.org/wiki/HTTP_response_splitting</a></li>\n<li> For the CWE page about this vulnerability type, see <a href=\"http://cwe.mitre.org/data/definitions/113.html\">http://cwe.mitre.org/data/definitions/113.html</a></li></ul>"
}