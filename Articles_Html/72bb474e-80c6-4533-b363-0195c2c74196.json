{
  "id": "72bb474e-80c6-4533-b363-0195c2c74196",
  "checksum": "020df56e6783dfbdb5c0b10e8d765e2a720a614f",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "h1",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "h1",
      "p",
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "aspnet": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "p",
      "pre",
      "ul",
      "li",
      "a",
      "title"
    ],
    "verify": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "pre"
    ],
    "stored": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "pre",
      "ul",
      "li",
      "a",
      "title"
    ],
    "procedures": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "with": [
      "p",
      "p",
      "p",
      "title"
    ],
    "type-safe": [
      "p",
      "p",
      "p",
      "title"
    ],
    "parameters": [
      "p",
      "p",
      "title"
    ],
    "are": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "title"
    ],
    "used": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "title"
    ],
    "sql": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "queries": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h1"
    ],
    "using": [
      "p",
      "p",
      "pre"
    ],
    "helps": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "injection": [
      "p"
    ],
    "attacks": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "parameters are": [
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "by": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "the": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "application": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "review": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "li",
      "p",
      "p",
      "pre"
    ],
    "find": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "functions": [
      "ol",
      "li",
      "p"
    ],
    "query": [
      "ol",
      "li",
      "p"
    ],
    "database": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "examine": [
      "ol",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "function": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p"
    ],
    "uses": [
      "ol",
      "li",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "first": [
      "p"
    ],
    "procedure": [
      "p",
      "pre",
      "p"
    ],
    "will": [
      "p",
      "pre"
    ],
    "have": [
      "p"
    ],
    "be": [
      "p",
      "p"
    ],
    "created": [
      "p"
    ],
    "on": [
      "p",
      "pre"
    ],
    "this": [
      "p",
      "pre"
    ],
    "can": [
      "p",
      "p"
    ],
    "done": [
      "p"
    ],
    "following": [
      "p",
      "p"
    ],
    "syntax": [
      "p"
    ],
    "create": [
      "pre"
    ],
    "sp_addnewuser": [
      "pre"
    ],
    "@username": [
      "pre"
    ],
    "nvarchar255),": [
      "pre",
      "pre",
      "pre"
    ],
    "@email": [
      "pre",
      "pre"
    ],
    "@firstname": [
      "pre",
      "pre"
    ],
    "@lastname": [
      "pre"
    ],
    "nvarchar255))": [
      "pre"
    ],
    "as": [
      "pre"
    ],
    "--": [
      "pre"
    ],
    "insert": [
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "userinsert": [
      "pre"
    ],
    "into": [
      "pre"
    ],
    "users_tableusername,": [
      "pre"
    ],
    "email": [
      "pre"
    ],
    "firstname": [
      "pre"
    ],
    "lastnamevalues(@username,": [
      "pre"
    ],
    "@lastname--this": [
      "pre"
    ],
    "return": [
      "pre"
    ],
    "user’s": [
      "pre"
    ],
    "idselect": [
      "pre"
    ],
    "scope_identity)": [
      "pre"
    ],
    "now": [
      "p"
    ],
    "call": [
      "p"
    ],
    "we": [
      "p"
    ],
    "use": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "net": [
      "p"
    ],
    "//create": [
      "pre"
    ],
    "a": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "connection": [
      "pre",
      "pre"
    ],
    "our": [
      "pre",
      "pre",
      "pre"
    ],
    "stringsqlconnection": [
      "pre"
    ],
    "myconnection": [
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "sqlconnectionconnection": [
      "pre"
    ],
    "string;myconnection.open();//create": [
      "pre"
    ],
    "command": [
      "pre",
      "pre",
      "pre"
    ],
    "specifies": [
      "pre"
    ],
    "store": [
      "pre"
    ],
    "proceduresqlcommand": [
      "pre"
    ],
    "mycommand": [
      "pre"
    ],
    "sqlcommand\"sp_addnewuser\",": [
      "pre"
    ],
    "myconnection;//specify": [
      "pre"
    ],
    "is": [
      "pre"
    ],
    "proceduremycommandcommandtype": [
      "pre"
    ],
    "commandtypestoredprocedure;//create": [
      "pre"
    ],
    "parameter": [
      "pre",
      "pre",
      "pre"
    ],
    "carry": [
      "pre"
    ],
    "usernamesqlparameter": [
      "pre"
    ],
    "userparameter": [
      "pre"
    ],
    "sqlparameter\"@username\",": [
      "pre"
    ],
    "sqldbtypevarchar);userparameter.direction": [
      "pre"
    ],
    "parameterdirectioninput;userparameter.value": [
      "pre"
    ],
    "\"testuser\"//add": [
      "pre"
    ],
    "commandmycommandparameters.add(userparameter);//repeat": [
      "pre"
    ],
    "add": [
      "pre"
    ],
    "commands": [
      "pre"
    ],
    "in": [
      "pre"
    ],
    "sproc//execute": [
      "pre"
    ],
    "databasemycommandexecutenonquery();": [
      "pre"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "you": [
      "em"
    ],
    "may": [
      "em"
    ],
    "these": [
      "em"
    ],
    "additional": [
      "em"
    ],
    "articles": [
      "em"
    ],
    "useful": [
      "em"
    ],
    "adapted": [
      "p"
    ],
    "from": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix",
      "Related Items",
      "",
      ""
    ],
    "ul": [
      "ASP.NET 4.0",
      "Use Stored Procedures for SQL Queries"
    ],
    "li": [
      "ASP.NET 4.0",
      "Identify all SQL queries used by the application. Review code to find all functions that query the database.",
      "Make sure that stored procedures are used. Examine each function that queries the database to make sure that it uses stored procedures.",
      "Use Stored Procedures for SQL Queries"
    ],
    "p": [
      "Verify that stored procedures with type-safe parameters are used for SQL queries.",
      "Using stored procedures with type-safe parameters helps prevent SQL injection attacks.",
      "To verify that stored procedures with type-safe parameters are used for SQL queries:",
      "Identify all SQL queries used by the application. Review code to find all functions that query the database.",
      "Make sure that stored procedures are used. Examine each function that queries the database to make sure that it uses stored procedures.",
      "First the stored procedure will have to be created on the database, this can be done using the following SQL syntax:",
      "Now to call the stored procedure we can use the following .NET code:",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Identify all SQL queries used by the application. Review code to find all functions that query the database.\n    \n    \n      \n        Make sure that stored procedures are used. Examine each function that queries the database to make sure that it uses stored procedures."
    ],
    "strong": [
      "Identify all SQL queries used by the application.",
      "Make sure that stored procedures are used."
    ],
    "pre": [
      "CREATE PROCEDURE sp_AddNewUser( @UserName nvarchar(255), @Email  nvarchar(255), @FirstName nvarchar(255), @LastName nvarchar(255)) AS",
      "-- INSERT the new userINSERT INTO Users_Table(UserName, Email, FirstName, LastName)VALUES(@UserName, @Email, @FirstName, @LastName)--This will return the new user’s IDSELECT SCOPE_IDENTITY()",
      "//create a new connection using our connection stringSqlConnection myConnection = new SqlConnection(connection string);myConnection.Open();//create a new command that specifies our store procedureSqlCommand myCommand = new SqlCommand(\"sp_AddNewUser\", myConnection);//Specify our command is a stored proceduremyCommand.CommandType = CommandType.StoredProcedure;//Create a new parameter to carry the usernameSqlParameter UserParameter = new SqlParameter(\"@UserName\", SqlDbType.VarChar);UserParameter.Direction = ParameterDirection.Input;UserParameter.Value = \"TestUser\";//Add the parameter to the commandmyCommand.Parameters.Add(UserParameter);//Repeat this code to add commands for each parameter in the SPROC//Execute the command on the DatabasemyCommand.ExecuteNonQuery();"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "em": [
      "You may find these additional articles useful"
    ],
    "a": [
      "Use Stored Procedures for SQL Queries"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "/article/0949fe39-0723-49ec-970b-a914bb722695",
      "text": "Use Stored Procedures for SQL Queries"
    }
  ],
  "html": "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Verify that stored procedures with type-safe parameters are used for SQL queries.</p>\n  <h1>Why</h1>\n  <p>Using stored procedures with type-safe parameters helps prevent SQL injection attacks.</p>\n  <h1>How To Check</h1>\n  <p>To verify that stored procedures with type-safe parameters&nbsp;are used for SQL queries:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify all SQL queries used by the application. </strong>Review code to find all functions that query the database.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Make sure that stored procedures are used.</strong> Examine each function that queries the database to make sure that it uses stored procedures.</p>\n    </li>\n  </ol>\n  <h1>How To Fix</h1>\n  <p>First the stored procedure will have to be created on the database, this can be done using the following SQL syntax:</p>\n  <pre>CREATE PROCEDURE <br />sp_AddNewUser( @UserName nvarchar(255), @Email  nvarchar(255), <br />@FirstName nvarchar(255), @LastName nvarchar(255)) AS</pre>\n  <pre>-- INSERT the new user<br />INSERT INTO Users_Table(UserName, Email, FirstName, LastName)<br />VALUES(@UserName, @Email, @FirstName, @LastName)<br />--This will return the new user’s IDSELECT SCOPE_IDENTITY()</pre>\n  <p>Now to call the stored procedure we can use the following .NET code:</p>\n  <pre>//create a new connection using our connection string<br />SqlConnection myConnection = new SqlConnection(connection string);<br />myConnection.Open();<br /><br /><br />//create a new command that specifies our store procedure<br />SqlCommand myCommand = new SqlCommand(\"sp_AddNewUser\", myConnection);<br /><br /><br />//Specify our command is a stored proceduremy<br />Command.CommandType = CommandType.StoredProcedure;<br /><br /><br />//Create a new parameter to carry the username<br />SqlParameter UserParameter = new SqlParameter(\"@UserName\", SqlDbType.VarChar);<br />UserParameter.Direction = ParameterDirection.Input;<br />UserParameter.Value = \"TestUser\";<br /><br /><br />//Add the parameter to the command<br />myCommand.Parameters.Add(UserParameter);<br /><br /><br />//Repeat this code to add commands for each parameter in the SPROC<br />//Execute the command on the Database<br />myCommand.ExecuteNonQuery();</pre>\n  <h1>Related Items</h1>\n  <em>You may find these additional articles useful</em>\n  <ul>\n    <li>\n      <a href=\"/article/0949fe39-0723-49ec-970b-a914bb722695\">Use Stored Procedures for SQL Queries</a>\n    </li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>\n  <h1>\n  </h1>\n  <h1>\n  </h1>"
}