{
  "id": "5a1abc1c-989c-44b8-b0bb-50bc6b2e41dd",
  "checksum": "ec5e9d2437c0310814e9f8ac92655f553d798941",
  "words": {
    "1": [
      "p"
    ],
    "2": [
      "p"
    ],
    "what": [
      "h2"
    ],
    "to": [
      "h2",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "do": [
      "h2"
    ],
    "when": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "set": [
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p"
    ],
    "acceptable": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "objects": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "such": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "as": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "filenames": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "or": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "urls": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "is": [
      "p",
      "p"
    ],
    "limited": [
      "p"
    ],
    "known": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "create": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "mapping": [
      "p"
    ],
    "from": [
      "p"
    ],
    "fixed": [
      "p"
    ],
    "input": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "values": [
      "p"
    ],
    "numeric": [
      "p"
    ],
    "ids": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "actual": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "reject": [
      "p"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "other": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "inputs": [
      "p"
    ],
    "for": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "example": [
      "p"
    ],
    "id": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "could": [
      "p",
      "p"
    ],
    "map": [
      "p",
      "p"
    ],
    "to\rinbox.txt": [
      "p"
    ],
    "profiletxt.": [
      "p"
    ],
    "features": [
      "p"
    ],
    "esapi\raccessreferencemap": [
      "p"
    ],
    "provide": [
      "p"
    ],
    "this": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "capability": [
      "p"
    ],
    "inboxtxt": [
      "em"
    ],
    "profiletxt": [
      "em"
    ],
    "accessreferencemap": [
      "em"
    ],
    "why": [
      "h2"
    ],
    "using": [
      "p"
    ],
    "reference": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "title"
    ],
    "maps": [
      "p",
      "p",
      "p",
      "title"
    ],
    "helps": [
      "p"
    ],
    "make": [
      "p"
    ],
    "sure": [
      "p"
    ],
    "that": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "only": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "valid": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "handled": [
      "p"
    ],
    "by": [
      "p"
    ],
    "application": [
      "p"
    ],
    "are": [
      "p"
    ],
    "one": [
      "p"
    ],
    "most": [
      "p"
    ],
    "effective": [
      "p"
    ],
    "implementations": [
      "p"
    ],
    "white-list": [
      "p"
    ],
    "validation": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "use": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "title"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "assign": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "unique": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "each": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "object": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "accept": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "add": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "functions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "defined": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "previous": [
      "ol",
      "li",
      "p"
    ],
    "step": [
      "ol",
      "li",
      "p"
    ],
    "accessing": [
      "ol",
      "li",
      "p"
    ],
    "rejects": [
      "ol",
      "li",
      "p"
    ],
    "applies": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "deals": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "may": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "also": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "prudent": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "perform": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "authorization": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "checks": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "these": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "resolve": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "replace": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "handles": [
      "ol",
      "li",
      "p"
    ],
    "references": [
      "ol",
      "li",
      "p"
    ],
    "directly": [
      "ol",
      "li",
      "p"
    ],
    "uses": [
      "ol",
      "li",
      "p"
    ],
    "validate": [
      "ol",
      "li",
      "p"
    ]
  },
  "tags": {
    "h2": [
      "What to Do",
      "Why",
      "How"
    ],
    "p": [
      "When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs. For example, ID 1 could map to\r\ninbox.txt and ID 2 could map to profile.txt. Features such as the ESAPI\r\nAccessReferenceMap provide this capability.",
      "Using reference maps helps make sure that only valid input is handled by the application. Reference maps are one of the most effective implementations of white-list input validation.",
      "To use reference maps:",
      "Identify all known acceptable objects, such as filenames or URLs.",
      "Assign a unique reference ID to each known acceptable object.",
      "Accept only valid reference IDs. Add functions that accept only valid reference IDs defined in the previous step for accessing the objects and rejects all other input. This applies only to code that deals with the objects that have reference\r\n IDs defined. It may also be prudent to perform authorization checks in these functions.",
      "Resolve reference IDs. Add functions that replace reference IDs with handles to the acceptable objects. It may also be prudent to perform authorization checks in these functions.",
      "Use reference IDs. Replace all code that references the objects directly with code that uses functions that validate and resolve reference IDs."
    ],
    "em": [
      "inbox.txt",
      "profile.txt",
      "AccessReferenceMap"
    ],
    "ol": [
      "Identify all known acceptable objects, such as filenames or URLs.\r\n      \r\n    \r\n    \r\n      \r\n        Assign a unique reference ID to each known acceptable object.\r\n      \r\n    \r\n    \r\n      \r\n        Accept only valid reference IDs. Add functions that accept only valid reference IDs defined in the previous step for accessing the objects and rejects all other input. This applies only to code that deals with the objects that have reference\r\n IDs defined. It may also be prudent to perform authorization checks in these functions.\r\n    \r\n    \r\n      \r\n        Resolve reference IDs. Add functions that replace reference IDs with handles to the acceptable objects. It may also be prudent to perform authorization checks in these functions.\r\n\r\n    \r\n    \r\n      \r\n        Use reference IDs. Replace all code that references the objects directly with code that uses functions that validate and resolve reference IDs."
    ],
    "li": [
      "Identify all known acceptable objects, such as filenames or URLs.",
      "Assign a unique reference ID to each known acceptable object.",
      "Accept only valid reference IDs. Add functions that accept only valid reference IDs defined in the previous step for accessing the objects and rejects all other input. This applies only to code that deals with the objects that have reference\r\n IDs defined. It may also be prudent to perform authorization checks in these functions.",
      "Resolve reference IDs. Add functions that replace reference IDs with handles to the acceptable objects. It may also be prudent to perform authorization checks in these functions.",
      "Use reference IDs. Replace all code that references the objects directly with code that uses functions that validate and resolve reference IDs."
    ],
    "strong": [
      "Identify all known acceptable objects, such as filenames or URLs.",
      "Assign a unique reference ID to each known acceptable object.",
      "Accept only valid reference IDs.",
      "Resolve reference IDs.",
      "Use reference IDs."
    ]
  },
  "links": [],
  "html": "<h2>What to Do</h2>\r\n  <p>When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs. For example, ID 1 could map to\r\n<em>inbox.txt</em> and ID 2 could map to <em>profile.txt</em>. Features such as the ESAPI\r\n<em>AccessReferenceMap</em> provide this capability.</p>\r\n  <h2>Why</h2>\r\n  <p>Using reference maps helps make sure that only valid input is handled by the application. Reference maps are one of the most effective implementations of white-list input validation.</p>\r\n  <h2>How</h2>\r\n  <p>To use reference maps:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all known acceptable objects, such as filenames or URLs.</strong>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Assign a unique reference ID to each known acceptable object.</strong>\r\n      </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Accept only valid reference IDs.</strong> Add functions that accept only valid reference IDs defined in the previous step for accessing the objects and rejects all other input. This applies only to code that deals with the objects that have reference\r\n IDs defined. It may also be prudent to perform authorization checks in these functions.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Resolve reference IDs.</strong> Add functions that replace reference IDs with handles to the acceptable objects. It may also be prudent to perform authorization checks in these functions.\r\n</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Use reference IDs.</strong> Replace all code that references the objects directly with code that uses functions that validate and resolve reference IDs.\r\n</p>\r\n    </li>\r\n  </ol>"
}