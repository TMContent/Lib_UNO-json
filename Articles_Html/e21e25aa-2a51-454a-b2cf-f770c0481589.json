{
  "id": "e21e25aa-2a51-454a-b2cf-f770c0481589",
  "checksum": "690a36e53e8fad2733fe7d0fcfe5031d3f7cbe16",
  "words": {
    "35": [
      "ul",
      "li"
    ],
    "2008": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "title"
    ],
    "microsoft®": [
      "ul",
      "li"
    ],
    "windows": [
      "ul",
      "li"
    ],
    "communication": [
      "ul",
      "li"
    ],
    "foundation": [
      "ul",
      "li"
    ],
    "wcf)": [
      "ul",
      "li"
    ],
    "microsoft": [
      "ul",
      "li",
      "p"
    ],
    "visual": [
      "ul",
      "li"
    ],
    "studio®": [
      "ul",
      "li"
    ],
    "description": [
      "h1"
    ],
    "avoid": [
      "p",
      "p",
      "title"
    ],
    "proxy": [
      "p",
      "ul",
      "li",
      "p",
      "title"
    ],
    "spoofing": [
      "p",
      "p",
      "title"
    ],
    "at": [
      "p",
      "p"
    ],
    "the": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "time": [
      "p"
    ],
    "of": [
      "p",
      "ul",
      "li"
    ],
    "adding": [
      "p"
    ],
    "a": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "wcf": [
      "p",
      "ul",
      "li"
    ],
    "service": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "reference": [
      "p",
      "ul",
      "li"
    ],
    "publish": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "metadata": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "securely": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "over": [
      "ul",
      "li"
    ],
    "https": [
      "ul",
      "li"
    ],
    "use": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "mexhttpsbinding": [
      "ul",
      "li"
    ],
    "and": [
      "ul",
      "li"
    ],
    "configure": [
      "ul",
      "li"
    ],
    "server": [
      "ul",
      "li"
    ],
    "certificate": [
      "ul",
      "li"
    ],
    "for": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "following": [
      "ul",
      "li"
    ],
    "configuration": [
      "ul",
      "li"
    ],
    "shows": [
      "ul",
      "li"
    ],
    "how": [
      "ul",
      "li",
      "title"
    ],
    "servicemetadata": [
      "ul",
      "li",
      "ul",
      "pre"
    ],
    "httpgetenabled=\"false\"": [
      "ul",
      "li",
      "ul",
      "pre"
    ],
    "httpsgetenabled=\"true\"/if": [
      "ul"
    ],
    "you": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "are": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "required": [
      "ul",
      "li"
    ],
    "mex": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "endpoint": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "instead": [
      "ul",
      "li"
    ],
    "exposing": [
      "ul",
      "li"
    ],
    "your": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "using": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "httpget": [
      "ul",
      "li"
    ],
    "secure": [
      "ul",
      "li"
    ],
    "binding": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "any": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "standard": [
      "ul",
      "li"
    ],
    "which": [
      "ul",
      "li"
    ],
    "has": [
      "ul",
      "li"
    ],
    "security": [
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "features": [
      "ul",
      "li"
    ],
    "want": [
      "ul",
      "li"
    ],
    "only": [
      "ul",
      "li"
    ],
    "requirement": [
      "ul",
      "li"
    ],
    "is": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "imetadataexchange": [
      "ul",
      "li"
    ],
    "contract": [
      "ul",
      "li"
    ],
    "it": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "will": [
      "ul",
      "li"
    ],
    "require": [
      "ul",
      "li"
    ],
    "custom": [
      "ul",
      "li"
    ],
    "serviceutilexe.config": [
      "ul",
      "li"
    ],
    "file": [
      "ul",
      "li"
    ],
    "generate": [
      "ul",
      "li"
    ],
    "httpsgetenabled=\"true\"/": [
      "li",
      "ul",
      "pre"
    ],
    "if": [
      "li",
      "ul",
      "li"
    ],
    "runtime": [
      "p"
    ],
    "make": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "sure": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "service’s": [
      "ul",
      "li"
    ],
    "uses": [
      "ul",
      "li"
    ],
    "mutual": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "authentication": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "enforced": [
      "ul",
      "li"
    ],
    "when": [
      "ul",
      "li"
    ],
    "either": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "message": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "or": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "transport": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "basichttpbinding": [
      "ul",
      "li"
    ],
    "by": [
      "ul",
      "li"
    ],
    "default": [
      "ul",
      "li"
    ],
    "does": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "not": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "its": [
      "ul",
      "li"
    ],
    "configured": [
      "ul",
      "li"
    ],
    "do": [
      "ul",
      "li"
    ],
    "rely": [
      "ul",
      "li"
    ],
    "on": [
      "ul",
      "li"
    ],
    "ntlm": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "protocol": [
      "ul",
      "li"
    ],
    "provide": [
      "ul",
      "li"
    ],
    "with": [
      "ul",
      "li"
    ],
    "adapted": [
      "p"
    ],
    "from": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Description"
    ],
    "ul": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5 \r\nMicrosoft Visual Studio® 2008",
      "Publish metadata securely, over https. Use the mexHttpsBinding and configure a server certificate for the service. The following configuration shows how to publish metadata securely: \r\n<serviceMetadata httpGetEnabled=\"False\" httpsGetEnabled=\"True\"/>If you are required to use mex endpoint instead of exposing your service reference using httpGet, use a secure binding. Use any standard binding (which has security features) you want for the MEX service endpoint, the only requirement is to use the IMetadataExchange contract. It will require to use a custom serviceutil.exe.config file to generate the proxy",
      "<serviceMetadata httpGetEnabled=\"False\" httpsGetEnabled=\"True\"/>",
      "Make sure your WCF service’s uses mutual authentication, mutual authentication is enforced when using either message or transport security. \r\nIf you are using basicHttpBinding by default it does not use any security, make sure its configured to use either transport or message security. \r\nDo not rely on NTLM protocol for authentication. NTLM does not provide with mutual authentication."
    ],
    "li": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5",
      "Microsoft Visual Studio® 2008",
      "Publish metadata securely, over https. Use the mexHttpsBinding and configure a server certificate for the service. The following configuration shows how to publish metadata securely: \r\n<serviceMetadata httpGetEnabled=\"False\" httpsGetEnabled=\"True\"/>",
      "If you are required to use mex endpoint instead of exposing your service reference using httpGet, use a secure binding. Use any standard binding (which has security features) you want for the MEX service endpoint, the only requirement is to use the IMetadataExchange contract. It will require to use a custom serviceutil.exe.config file to generate the proxy",
      "Make sure your WCF service’s uses mutual authentication, mutual authentication is enforced when using either message or transport security.",
      "If you are using basicHttpBinding by default it does not use any security, make sure its configured to use either transport or message security.",
      "Do not rely on NTLM protocol for authentication. NTLM does not provide with mutual authentication."
    ],
    "p": [
      "To avoid proxy spoofing at the time of adding a WCF Service Reference:",
      "To avoid proxy spoofing at runtime",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "pre": [
      "<serviceMetadata httpGetEnabled=\"False\" httpsGetEnabled=\"True\"/>"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 \r\n<li>Microsoft Visual Studio® 2008</li></li>\r\n  </ul>\r\n  <h1>Description</h1>\r\n  <p>To avoid proxy spoofing at the time of adding a WCF Service Reference:</p>\r\n  <ul>\r\n    <li>Publish metadata securely, over https. Use the mexHttpsBinding and configure a server certificate for the service. The following configuration shows how to publish metadata securely: \r\n<ul><pre>&lt;serviceMetadata httpGetEnabled=\"False\" httpsGetEnabled=\"True\"/&gt;</pre></ul><li>If you are required to use mex endpoint instead of exposing your service reference using httpGet, use a secure binding. Use any standard binding (which has security features) you want for the MEX service endpoint, the only requirement is to use the IMetadataExchange contract. It will require to use a custom serviceutil.exe.config file to generate the proxy</li></li>\r\n  </ul>\r\n  <p>To avoid proxy spoofing at runtime </p>\r\n  <ul>\r\n    <li>Make sure your WCF service’s uses mutual authentication, mutual authentication is enforced when using either message or transport security. \r\n<li>If you are using basicHttpBinding by default it does not use any security, make sure its configured to use either transport or message security. \r\n<li>Do not rely on NTLM protocol for authentication. NTLM does not provide with mutual authentication.</li></li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}