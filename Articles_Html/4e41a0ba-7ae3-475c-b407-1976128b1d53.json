{
  "id": "4e41a0ba-7ae3-475c-b407-1976128b1d53",
  "checksum": "39e9513527534de627b984dc51f5c1448067a46c",
  "words": {
    "35": [
      "ul",
      "li"
    ],
    "2008": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "div",
      "title",
      "title"
    ],
    "microsoft®": [
      "ul",
      "li"
    ],
    "windows": [
      "ul",
      "li"
    ],
    "communication": [
      "ul",
      "li"
    ],
    "foundation": [
      "ul",
      "li"
    ],
    "wcf)": [
      "ul",
      "li"
    ],
    "microsoft": [
      "ul",
      "li",
      "p"
    ],
    "visual": [
      "ul",
      "li"
    ],
    "studio®": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "do": [
      "h1"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "li",
      "div",
      "title"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "title"
    ],
    "fault": [
      "p",
      "p",
      "title"
    ],
    "contract": [
      "p",
      "p",
      "title"
    ],
    "define": [
      "p",
      "ol",
      "li"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "div",
      "div",
      "ol",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "pre"
    ],
    "exceptions": [
      "p",
      "ol",
      "li"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "div",
      "li",
      "li",
      "ol",
      "pre"
    ],
    "your": [
      "p",
      "p",
      "p"
    ],
    "service": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "return": [
      "p",
      "p",
      "p",
      "title"
    ],
    "error": [
      "p",
      "p",
      "title"
    ],
    "information": [
      "p",
      "p",
      "title"
    ],
    "clients": [
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "by": [
      "p"
    ],
    "using": [
      "p"
    ],
    "faultcontract": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "div"
    ],
    "attribute": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "div"
    ],
    "you": [
      "p",
      "p"
    ],
    "can": [
      "p",
      "p",
      "p"
    ],
    "specify": [
      "p"
    ],
    "possible": [
      "p"
    ],
    "faults": [
      "p",
      "ol",
      "li",
      "div"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "occur": [
      "p"
    ],
    "wcf": [
      "p",
      "p"
    ],
    "when": [
      "h1"
    ],
    "if": [
      "p"
    ],
    "there": [
      "p"
    ],
    "is": [
      "p"
    ],
    "an": [
      "p"
    ],
    "exception": [
      "p",
      "ol",
      "li"
    ],
    "operation": [
      "p",
      "p"
    ],
    "generate": [
      "p",
      "ol",
      "li",
      "div"
    ],
    "specific": [
      "p"
    ],
    "soap": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "div"
    ],
    "message": [
      "p"
    ],
    "will": [
      "p"
    ],
    "be": [
      "p",
      "p"
    ],
    "sent": [
      "p"
    ],
    "back": [
      "p",
      "ol",
      "li"
    ],
    "client": [
      "p",
      "ol",
      "li"
    ],
    "application": [
      "p"
    ],
    "only": [
      "p"
    ],
    "used": [
      "p"
    ],
    "operations": [
      "p"
    ],
    "response": [
      "p"
    ],
    "cannot": [
      "p"
    ],
    "this": [
      "p"
    ],
    "on": [
      "p"
    ],
    "one-way": [
      "p"
    ],
    "how": [
      "h1",
      "p"
    ],
    "following": [
      "p"
    ],
    "code": [
      "p"
    ],
    "snippet": [
      "p"
    ],
    "shows": [
      "p"
    ],
    "type": [
      "ol",
      "li"
    ],
    "pass": [
      "ol",
      "li"
    ],
    "details": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "of": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "pre",
      "li"
    ],
    "as": [
      "ol",
      "li"
    ],
    "from": [
      "ol",
      "li",
      "p"
    ],
    "datacontract]public": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "class": [
      "ol",
      "ol",
      "li",
      "ol",
      "pre",
      "li"
    ],
    "databasefault{": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "datamember]": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre"
    ],
    "public": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre"
    ],
    "string": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre"
    ],
    "dboperation": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "dbreason": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "dbmessage}use": [
      "ol"
    ],
    "listcustomers": [
      "ol",
      "li",
      "div"
    ],
    "method": [
      "ol",
      "li",
      "div"
    ],
    "faults[servicecontract]public": [
      "ol",
      "li"
    ],
    "interface": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "icustomerservice{": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "//": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "get": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "list": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "customers": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "faultcontract(typeof(databasefault))]": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "operationcontract]": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "liststring>": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "listcustomers);": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "…}create": [
      "ol"
    ],
    "populate": [
      "ol",
      "li"
    ],
    "databasefault": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "pre"
    ],
    "object": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "with": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "implementation": [
      "ol",
      "li"
    ],
    "then": [
      "ol",
      "li"
    ],
    "throw": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "pre"
    ],
    "faultexception": [
      "ol",
      "li"
    ],
    "catchexception": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "e{": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "df": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "new": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "databasefault);": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "dfdboperation": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "\"executereader\"": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "dfdbreason": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "\"exception": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "querying": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "northwind": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "database\";": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "dfdbmessage": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "emessage;": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "faultexceptiondatabasefault>(df);}": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "dbmessage}": [
      "li",
      "ol",
      "pre"
    ],
    "…}": [
      "li",
      "ol",
      "pre"
    ],
    "servicecontract]public": [
      "ol",
      "pre"
    ],
    "create": [
      "li"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Do",
      "Why",
      "When",
      "How",
      ""
    ],
    "ul": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5 \nMicrosoft Visual Studio® 2008"
    ],
    "li": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5",
      "Microsoft Visual Studio® 2008",
      "Define the type to pass the details of SOAP faults as exceptions from a service back to a client \n[DataContract]public class DatabaseFault{    [DataMember]    public string DbOperation;    [DataMember]    public string DbReason    [DataMember]    public string DbMessage;}",
      "Use the FaultContract attribute in the ListCustomers method to generate SOAP faults.[ServiceContract]public interface ICustomerService{    // Get the list of customers    [FaultContract(typeof(DatabaseFault))]    [OperationContract]    List<string> ListCustomers();    …}",
      "Create and populate the DatabaseFault object with the details of the exception in the Service implementation class and then throw a FaultException object with the DatabaseFault object details. \ncatch(Exception e){    DatabaseFault df = new DatabaseFault();    df.DbOperation = \"ExecuteReader\";    df.DbReason = \"Exception in querying the Northwind database.\";    df.DbMessage = e.Message;    throw new FaultException<DatabaseFault>(df);}"
    ],
    "p": [
      "Use a fault contract to define the exceptions in your service and return error information to clients.",
      "By using the FaultContract attribute in a service contract you can specify the possible faults that can occur in your WCF service.",
      "If there is an exception in your WCF service operation, use the FaultContract attribute to generate a specific SOAP fault message that will be sent back to the client application. The FaultContract attribute can only be used in operations that return a response. You cannot use this attribute on a one-way operation.",
      "The following code snippet shows how to use the FaultContract attribute to return error information.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Define the type to pass the details of SOAP faults as exceptions from a service back to a client \n[DataContract]public class DatabaseFault{    [DataMember]    public string DbOperation;    [DataMember]    public string DbReason    [DataMember]    public string DbMessage;}Use the FaultContract attribute in the ListCustomers method to generate SOAP faults.[ServiceContract]public interface ICustomerService{    // Get the list of customers    [FaultContract(typeof(DatabaseFault))]    [OperationContract]    List<string> ListCustomers();    …}Create and populate the DatabaseFault object with the details of the exception in the Service implementation class and then throw a FaultException object with the DatabaseFault object details. \ncatch(Exception e){    DatabaseFault df = new DatabaseFault();    df.DbOperation = \"ExecuteReader\";    df.DbReason = \"Exception in querying the Northwind database.\";    df.DbMessage = e.Message;    throw new FaultException<DatabaseFault>(df);}",
      "[DataContract]public class DatabaseFault{    [DataMember]    public string DbOperation;    [DataMember]    public string DbReason    [DataMember]    public string DbMessage;}",
      "[ServiceContract]public interface ICustomerService{    // Get the list of customers    [FaultContract(typeof(DatabaseFault))]    [OperationContract]    List<string> ListCustomers();    …}",
      "catch(Exception e){    DatabaseFault df = new DatabaseFault();    df.DbOperation = \"ExecuteReader\";    df.DbReason = \"Exception in querying the Northwind database.\";    df.DbMessage = e.Message;    throw new FaultException<DatabaseFault>(df);}"
    ],
    "pre": [
      "[DataContract]public class DatabaseFault{    [DataMember]    public string DbOperation;    [DataMember]    public string DbReason    [DataMember]    public string DbMessage;}",
      "[ServiceContract]public interface ICustomerService{    // Get the list of customers    [FaultContract(typeof(DatabaseFault))]    [OperationContract]    List<string> ListCustomers();    …}",
      "catch(Exception e){    DatabaseFault df = new DatabaseFault();    df.DbOperation = \"ExecuteReader\";    df.DbReason = \"Exception in querying the Northwind database.\";    df.DbMessage = e.Message;    throw new FaultException<DatabaseFault>(df);}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "div": [
      "Use the FaultContract attribute in the ListCustomers method to generate SOAP faults."
    ],
    "a": [
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://www.codeplex.com/WCFSecurity/Wiki/View.aspx?title=Questions%20and%20Answers&referringTitle=Home",
      "text": "\n    "
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>Microsoft® Windows Communication Foundation (WCF) 3.5 \n<li>Microsoft Visual Studio® 2008</li></li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Use a fault contract to define the exceptions in your service and return error information to clients. </p>\n  <h1>Why</h1>\n  <p>By using the FaultContract attribute in a service contract you can specify the possible faults that can occur in your WCF service.</p>\n  <h1>When</h1>\n  <p>If there is an exception in your WCF service operation, use the FaultContract attribute to generate a specific SOAP fault message that will be sent back to the client application. The FaultContract attribute can only be used in operations that return a response. You cannot use this attribute on a one-way operation.</p>\n  <h1>How</h1>\n  <p>The following code snippet shows how to use the FaultContract attribute to return error information.</p>\n  <ol>\n    <li>Define the type to pass the details of SOAP faults as exceptions from a service back to a client \n<ol><pre>[DataContract]<br />public class DatabaseFault<br />{<br />    [DataMember]<br />    public string DbOperation;<br />    [DataMember]<br />    public string DbReason<br />    [DataMember]<br />    public string DbMessage;<br />}</pre></ol><li><div>Use the FaultContract attribute in the ListCustomers method to generate SOAP faults.</div><ol><pre>[ServiceContract]<br />public interface ICustomerService<br />{<br />    // Get the list of customers<br />    [FaultContract(typeof(DatabaseFault))]<br />    [OperationContract]<br />    List&lt;string&gt; ListCustomers();<br />    …<br />}</pre></ol><li>Create and populate the DatabaseFault object with the details of the exception in the Service implementation class and then throw a FaultException object with the DatabaseFault object details. \n<ol><pre>catch(Exception e)<br />{    DatabaseFault df = new DatabaseFault();<br />    df.DbOperation = \"ExecuteReader\";<br />    df.DbReason = \"Exception in querying the Northwind database.\";<br />    df.DbMessage = e.Message;<br />    throw new FaultException&lt;DatabaseFault&gt;(df);<br />}</pre></ol></li></li></li>\n  </ol>\n  <h1>\n    <a href=\"http://www.codeplex.com/WCFSecurity/Wiki/View.aspx?title=Questions%20and%20Answers&referringTitle=Home\">\n    </a>\n  </h1>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}