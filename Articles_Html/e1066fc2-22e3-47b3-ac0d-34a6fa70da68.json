{
  "id": "e1066fc2-22e3-47b3-ac0d-34a6fa70da68",
  "checksum": "bc8c2e0714b22459d103b5c86a59120fcf5d9bca",
  "words": {
    "1": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "2": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "211": [
      "p",
      "a"
    ],
    "313": [
      "p",
      "a"
    ],
    "description": [
      "h1"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "web": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application's": [
      "p"
    ],
    "output": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "rendered": [
      "p",
      "p"
    ],
    "as": [
      "p",
      "p",
      "p",
      "p"
    ],
    "page": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "input": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "p"
    ],
    "included": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "a",
      "a",
      "li",
      "li",
      "a",
      "a",
      "li",
      "a",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "a",
      "a",
      "li",
      "li",
      "a",
      "a",
      "p",
      "p",
      "em"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "application": [
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p"
    ],
    "then": [
      "p",
      "p",
      "p"
    ],
    "it": [
      "p",
      "p"
    ],
    "also": [
      "p",
      "p"
    ],
    "part": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "without": [
      "p"
    ],
    "being": [
      "p"
    ],
    "validated": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "encoded": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "cross-site": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "scripting": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "xss)": [
      "p"
    ],
    "vulnerability": [
      "p",
      "p",
      "p"
    ],
    "results": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "case": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "modify": [
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "include": [
      "p"
    ],
    "malicious": [
      "p",
      "p",
      "p",
      "p"
    ],
    "script": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "which": [
      "p",
      "p",
      "p"
    ],
    "executed": [
      "p"
    ],
    "by": [
      "p"
    ],
    "browser": [
      "p",
      "p"
    ],
    "views": [
      "p"
    ],
    "vulnerable": [
      "p"
    ],
    "xss": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "applies": [
      "p"
    ],
    "all": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "applications": [
      "p",
      "p"
    ],
    "prevent": [
      "p",
      "p",
      "p"
    ],
    "validate": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "encode": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "check": [
      "p",
      "h1",
      "p"
    ],
    "for": [
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a",
      "p",
      "p",
      "em",
      "ul",
      "li"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "flaw": [
      "p"
    ],
    "find": [
      "p"
    ],
    "code": [
      "p",
      "h2",
      "p",
      "a",
      "h2",
      "p",
      "a"
    ],
    "includes": [
      "p"
    ],
    "verify": [
      "p"
    ],
    "sufficiently": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "there": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "em"
    ],
    "two": [
      "p"
    ],
    "primary": [
      "p"
    ],
    "types": [
      "p"
    ],
    "persistent": [
      "p",
      "p"
    ],
    "non-persistent": [
      "p",
      "p"
    ],
    "able": [
      "p"
    ],
    "inject": [
      "p",
      "p"
    ],
    "his": [
      "p"
    ],
    "into": [
      "p"
    ],
    "data": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "p"
    ],
    "store": [
      "p"
    ],
    "will": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "be": [
      "p",
      "p"
    ],
    "anyone": [
      "p"
    ],
    "who": [
      "p"
    ],
    "loads": [
      "p"
    ],
    "with": [
      "p",
      "p"
    ],
    "content": [
      "p",
      "p",
      "em"
    ],
    "run": [
      "p"
    ],
    "become": [
      "p"
    ],
    "victim": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "uses": [
      "p"
    ],
    "some": [
      "p",
      "p",
      "p"
    ],
    "reflective": [
      "p"
    ],
    "aspect": [
      "p"
    ],
    "deliver": [
      "p"
    ],
    "payload": [
      "p"
    ],
    "impact": [
      "h1"
    ],
    "vulnerabilities": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "allow": [
      "p"
    ],
    "execute": [
      "p"
    ],
    "on": [
      "p",
      "p",
      "p"
    ],
    "user's": [
      "p",
      "p",
      "p",
      "p"
    ],
    "may": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "p",
      "p",
      "p"
    ],
    "perform": [
      "p",
      "p"
    ],
    "actions": [
      "p",
      "p"
    ],
    "behalf": [
      "p"
    ],
    "within": [
      "p"
    ],
    "such": [
      "p",
      "p"
    ],
    "change": [
      "p"
    ],
    "password": [
      "p"
    ],
    "submit": [
      "p"
    ],
    "messages": [
      "p"
    ],
    "or": [
      "p",
      "p"
    ],
    "other": [
      "p",
      "p"
    ],
    "available": [
      "p"
    ],
    "authenticated": [
      "p"
    ],
    "spread": [
      "p"
    ],
    "itself": [
      "p",
      "p",
      "em"
    ],
    "becoming": [
      "p"
    ],
    "worm": [
      "p",
      "p"
    ],
    "up": [
      "p",
      "p"
    ],
    "lot": [
      "p"
    ],
    "resources": [
      "p",
      "h1"
    ],
    "very": [
      "p"
    ],
    "costly": [
      "p"
    ],
    "clean": [
      "p"
    ],
    "write": [
      "p"
    ],
    "steals": [
      "p"
    ],
    "session": [
      "p",
      "p"
    ],
    "cookies": [
      "p",
      "p"
    ],
    "identifiers": [
      "p"
    ],
    "allows": [
      "p",
      "p"
    ],
    "impersonating": [
      "p",
      "p"
    ],
    "through": [
      "p",
      "p"
    ],
    "stolen": [
      "p"
    ],
    "simpler": [
      "p"
    ],
    "more": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "powerful": [
      "p"
    ],
    "than": [
      "p"
    ],
    "because": [
      "p"
    ],
    "interact": [
      "p"
    ],
    "visually": [
      "p"
    ],
    "javascript": [
      "p"
    ],
    "captures": [
      "p"
    ],
    "keystrokes": [
      "p"
    ],
    "site": [
      "p"
    ],
    "steal": [
      "p"
    ],
    "passwords": [
      "p"
    ],
    "information": [
      "p",
      "ul",
      "li"
    ],
    "usually": [
      "p",
      "p"
    ],
    "leads": [
      "p"
    ],
    "privilege": [
      "p"
    ],
    "escalation": [
      "p"
    ],
    "leverages": [
      "p"
    ],
    "take": [
      "p",
      "p"
    ],
    "over": [
      "p"
    ],
    "account": [
      "p",
      "p"
    ],
    "target": [
      "p"
    ],
    "administrative": [
      "p"
    ],
    "full": [
      "p"
    ],
    "control": [
      "p"
    ],
    "countermeasures": [
      "h1"
    ],
    "from": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "sources": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "length": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "range": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "format": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "type": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "validation": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "using": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "jsf": [
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "springmvc": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "struts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "escape": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "untrusted": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "html": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "contexts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "jsp": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "houtputtext": [
      "ul",
      "li",
      "a"
    ],
    "echoed": [
      "ul",
      "li",
      "a"
    ],
    "encoding": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "esapi": [
      "ul",
      "li",
      "a"
    ],
    "encoder": [
      "ul",
      "li",
      "a"
    ],
    "adequate": [
      "p"
    ],
    "protection": [
      "p"
    ],
    "against": [
      "p"
    ],
    "ensure": [
      "p"
    ],
    "escaped": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "computer": [
      "h1",
      "p"
    ],
    "based": [
      "h1",
      "p"
    ],
    "training": [
      "h1",
      "p"
    ],
    "links": [
      "h1"
    ],
    "following": [
      "p"
    ],
    "courses": [
      "p"
    ],
    "learn": [
      "p",
      "p"
    ],
    "about": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "including": [
      "p"
    ],
    "techniques": [
      "p"
    ],
    "remediation": [
      "p"
    ],
    "prevention": [
      "p"
    ],
    "creating": [
      "h2",
      "p",
      "a",
      "h2",
      "p",
      "a"
    ],
    "secure": [
      "h2",
      "p",
      "a",
      "h2",
      "p",
      "a"
    ],
    "–": [
      "h2",
      "p",
      "a"
    ],
    "jre": [
      "h2",
      "p",
      "a"
    ],
    "foundations": [
      "h2",
      "p",
      "a"
    ],
    "course": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "recognize": [
      "p"
    ],
    "remediate": [
      "p",
      "p"
    ],
    "common": [
      "p",
      "p"
    ],
    "java": [
      "p"
    ],
    "software": [
      "p",
      "p"
    ],
    "security": [
      "p",
      "p",
      "p",
      "p"
    ],
    "has": [
      "p"
    ],
    "three": [
      "p"
    ],
    "modules": [
      "p"
    ],
    "introduce": [
      "p"
    ],
    "these": [
      "p"
    ],
    "help": [
      "p",
      "p",
      "em"
    ],
    "identify": [
      "p"
    ],
    "them": [
      "p",
      "p"
    ],
    "cod": [
      "p",
      "a",
      "p",
      "a"
    ],
    "j2ee": [
      "h2",
      "p",
      "a"
    ],
    "introduces": [
      "p"
    ],
    "explains": [
      "p"
    ],
    "precautionary": [
      "p"
    ],
    "measures": [
      "p"
    ],
    "avoid": [
      "p"
    ],
    "leakage": [
      "p"
    ],
    "attacks": [
      "p",
      "p"
    ],
    "client/server": [
      "p"
    ],
    "protocol": [
      "p"
    ],
    "manipulation": [
      "p"
    ],
    "injection": [
      "p"
    ],
    "exploiting": [
      "p"
    ],
    "authentication": [
      "p"
    ],
    "at": [
      "p"
    ],
    "end": [
      "p"
    ],
    "have": [
      "p"
    ],
    "learned": [
      "p"
    ],
    "time-tested": [
      "p"
    ],
    "defensive": [
      "p"
    ],
    "coding": [
      "p"
    ],
    "principles": [
      "p"
    ],
    "how": [
      "p"
    ],
    "increase": [
      "p"
    ],
    "your": [
      "p"
    ],
    "valid": [
      "p",
      "em"
    ],
    "login": [
      "p",
      "p",
      "em",
      "em"
    ],
    "credentials": [
      "p",
      "p",
      "em",
      "em"
    ],
    "enrollment": [
      "p",
      "em"
    ],
    "required": [
      "p",
      "em"
    ],
    "access": [
      "p",
      "em"
    ],
    "team": [
      "p",
      "em"
    ],
    "professor": [
      "p",
      "em"
    ],
    "need": [
      "p",
      "em"
    ],
    "please": [
      "p",
      "em"
    ],
    "contact": [
      "p",
      "em"
    ],
    "support@securityinnovationcom": [
      "p",
      "em"
    ],
    "additional": [
      "h1"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//en.wikipedia.org/wiki/cross-site_scripting": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Description",
      "Impact",
      "Countermeasures",
      "Application Check",
      "Computer Based Training Links",
      "Additional Resources"
    ],
    "p": [
      "A web application's output is rendered as a web page. If user input is included in the web application output, then it is also rendered as a part of the web page. If user input is included in output without being validated and encoded, a cross-site scripting (XSS) vulnerability results. In that case, an attacker can modify the output web page to include malicious script, which is then executed by the browser that views the vulnerable page. XSS applies to all web applications. To prevent XSS, validate all input and encode input included in output. To check for this flaw, find all code that includes user input in output, and verify that user input is sufficiently validated and properly encoded.",
      "There are two primary types of XSS: persistent and non-persistent. If the attacker is able to inject his malicious script into the web applications data store, then the script will be persistent and anyone who loads a page with that content will run the script and become a victim of the attack. Non-Persistent XSS uses some reflective aspect of the page to deliver the payload.",
      "Cross-site scripting vulnerabilities allow an attacker to execute malicious script on the user's web browser. The attacker may use this to perform actions on the user's behalf within the application, such as change the password, submit messages, or perform some other actions available to the authenticated user. The malicious script may spread itself, becoming an XSS worm. An XSS worm may use up a lot of resources and be very costly to clean up. The attacker may write a script that steals session cookies or session identifiers and allows impersonating the user. Impersonating the user through stolen cookies is simpler and more powerful than through a script because it allows the attacker to interact with the application visually. The attacker may also use XSS to inject a JavaScript that captures the user's keystrokes on that web site to steal passwords and other information. XSS usually leads to privilege escalation, which the attacker leverages to take over some user's account. Usually, the attacker will target an administrative account to take full control of the application.",
      "To prevent this vulnerability, validate all input, and encode all input that is included in output.",
      "Validate all input:",
      "Encode input included in output:",
      "To check for adequate protection against this vulnerability, ensure that all input is validated, and that all input included in output is encoded.",
      "All input is validated:",
      "Input included in output is encoded:",
      "Use the following Computer Based Training courses to learn more about Cross-Site Scripting including techniques for remediation and prevention.",
      "In this course, you will learn to recognize and remediate common Java Web software security vulnerabilities.  This course has three modules, which introduce you to these vulnerabilities and help you to identify and remediate them.",
      "COD 211 Creating Secure Code – JRE Foundations",
      "This course introduces and explains the precautionary measures you can use to avoid Web software security vulnerabilities, such as data leakage attacks, client/server protocol manipulation, injection attacks, and exploiting authentication.  At the end of this course, you will have learned about time-tested defensive coding principles and how to use them to increase the security of your application, and prevent common security vulnerabilities.",
      "COD 313 Creating Secure J2EE Code",
      "Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help."
    ],
    "ul": [
      "Validate Input from All Sources\n Validate Input for Length, Range, Format, And Type\n Input Validation Using JSF\n Input Validation Using SpringMVC\n Input Validation Using Struts 1\n Input Validation Using Struts 2",
      "Encode All Output Data\n Escape All Untrusted Data in HTML Contexts in JSF\n Escape All Untrusted Data in HTML Contexts in JSP\n Use H:outputText to Encode Echoed Input in JSF\n Output Encoding Using JSF\n Output Encoding Using SpringMVC\n Output Encoding Using Struts 1\n Output Encoding Using Struts 2\n Use ESAPI Encoder",
      "Input from All Sources Is Validated\n Input Is Validated for Length, Range, Format And Type",
      "All Output Data Is Encoded\n All Untrusted Data in HTML Contexts Is Escaped in JSF\n All Untrusted Data in HTML Contexts Is Escaped in JSP",
      "For more information about cross-site scripting, see http://en.wikipedia.org/wiki/Cross-site_scripting"
    ],
    "li": [
      "Validate Input from All Sources",
      "Validate Input for Length, Range, Format, And Type",
      "Input Validation Using JSF",
      "Input Validation Using SpringMVC",
      "Input Validation Using Struts 1",
      "Input Validation Using Struts 2",
      "Encode All Output Data",
      "Escape All Untrusted Data in HTML Contexts in JSF",
      "Escape All Untrusted Data in HTML Contexts in JSP",
      "Use H:outputText to Encode Echoed Input in JSF",
      "Output Encoding Using JSF",
      "Output Encoding Using SpringMVC",
      "Output Encoding Using Struts 1",
      "Output Encoding Using Struts 2",
      "Use ESAPI Encoder",
      "Input from All Sources Is Validated",
      "Input Is Validated for Length, Range, Format And Type",
      "All Output Data Is Encoded",
      "All Untrusted Data in HTML Contexts Is Escaped in JSF",
      "All Untrusted Data in HTML Contexts Is Escaped in JSP",
      "For more information about cross-site scripting, see http://en.wikipedia.org/wiki/Cross-site_scripting"
    ],
    "a": [
      "Validate Input from All Sources",
      "Validate Input for Length, Range, Format, And Type",
      "Input Validation Using JSF",
      "Input Validation Using SpringMVC",
      "Input Validation Using Struts 1",
      "Input Validation Using Struts 2",
      "Encode All Output Data",
      "Escape All Untrusted Data in HTML Contexts in JSF",
      "Escape All Untrusted Data in HTML Contexts in JSP",
      "Use H:outputText to Encode Echoed Input in JSF",
      "Output Encoding Using JSF",
      "Output Encoding Using SpringMVC",
      "Output Encoding Using Struts 1",
      "Output Encoding Using Struts 2",
      "Use ESAPI Encoder",
      "Input from All Sources Is Validated",
      "Input Is Validated for Length, Range, Format And Type",
      "All Output Data Is Encoded",
      "All Untrusted Data in HTML Contexts Is Escaped in JSF",
      "All Untrusted Data in HTML Contexts Is Escaped in JSP",
      "COD 211 Creating Secure Code – JRE Foundations",
      "COD 313 Creating Secure J2EE Code",
      "http://en.wikipedia.org/wiki/Cross-site_scripting"
    ],
    "h2": [
      "Creating Secure Code – JRE Foundations",
      "Creating Secure J2EE Code"
    ],
    "em": [
      "Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help."
    ]
  },
  "links": [
    {
      "href": "b531d29c-86f7-4812-90ce-5f3f0f780aba",
      "text": "Validate Input from All Sources"
    },
    {
      "href": "c98695c5-cf02-44a1-96bf-1f8046b8ad9d",
      "text": "Validate Input for Length, Range, Format, And Type"
    },
    {
      "href": "0f49430b-2abe-408f-b046-89fa739f5d53",
      "text": "Input Validation Using JSF"
    },
    {
      "href": "18ac74df-602b-4a58-8998-52f638f3a045",
      "text": "Input Validation Using SpringMVC"
    },
    {
      "href": "d124abb1-e230-43ef-8762-1caa0dbb89ca",
      "text": "Input Validation Using Struts 1"
    },
    {
      "href": "2f917654-65a8-49c9-b000-c17f9765bf42",
      "text": "Input Validation Using Struts 2"
    },
    {
      "href": "f83b953a-9b0c-406a-b274-9b2962d9c4e7",
      "text": "Encode All Output Data"
    },
    {
      "href": "c929277f-5bb0-44d5-9bf5-112c55927783",
      "text": "Escape All Untrusted Data in HTML Contexts in JSF"
    },
    {
      "href": "bc8de6c5-ba3a-4db5-a5ff-675c7336a2e8",
      "text": "Escape All Untrusted Data in HTML Contexts in JSP"
    },
    {
      "href": "8cc6c40a-5a4c-4d77-8900-4b896e2d3912",
      "text": "Use H:outputText to Encode Echoed Input in JSF"
    },
    {
      "href": "a4c5ae58-6b1b-49b7-b16e-4199598f3446",
      "text": "Output Encoding Using JSF"
    },
    {
      "href": "2dc1ab76-320b-47ec-a562-9e203d1b630f",
      "text": "Output Encoding Using SpringMVC"
    },
    {
      "href": "f8d330df-9387-45b2-a88b-40c08d0af3c4",
      "text": "Output Encoding Using Struts 1"
    },
    {
      "href": "9135b59f-8c73-4a4f-83c5-9894d6587cca",
      "text": "Output Encoding Using Struts 2"
    },
    {
      "href": "f7806f64-b1c7-4990-a9e5-f6d814bae7f1",
      "text": "Use ESAPI Encoder"
    },
    {
      "href": "7f8deb21-cd52-41be-80b4-8897612021dc",
      "text": "Input from All Sources Is Validated"
    },
    {
      "href": "61869793-2c10-40c0-b82a-babcc0312697",
      "text": "Input Is Validated for Length, Range, Format And Type"
    },
    {
      "href": "13112146-7c14-4b6d-9e94-24daa22eefc4",
      "text": "All Output Data Is Encoded"
    },
    {
      "href": "90893370-cbce-4116-b9ff-2e69dab56cfa",
      "text": "All Untrusted Data in HTML Contexts Is Escaped in JSF"
    },
    {
      "href": "02c900ca-0740-412a-b685-56b13408793d",
      "text": "All Untrusted Data in HTML Contexts Is Escaped in JSP"
    },
    {
      "href": "https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127615",
      "text": "COD 211 Creating Secure Code – JRE Foundations"
    },
    {
      "href": "https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127619",
      "text": "COD 313 Creating Secure J2EE Code"
    },
    {
      "href": "http://en.wikipedia.org/wiki/Cross-site_scripting",
      "text": "http://en.wikipedia.org/wiki/Cross-site_scripting"
    }
  ],
  "html": "<h1>Description</h1><p>A web application's output is rendered as a web page. If user input is included in the web application output, then it is also rendered as a part of the web page. If user input is included in output without being validated and encoded, a cross-site scripting (XSS) vulnerability results. In that case, an attacker can modify the output web page to include malicious script, which is then executed by the browser that views the vulnerable page. XSS applies to all web applications. To prevent XSS, validate all input and encode input included in output. To check for this flaw, find all code that includes user input in output, and verify that user input is sufficiently validated and properly encoded.\n</p><p>\nThere are two primary types of XSS: persistent and non-persistent. If the attacker is able to inject his malicious script into the web applications data store, then the script will be persistent and anyone who loads a page with that content will run the script and become a victim of the attack. Non-Persistent XSS uses some reflective aspect of the page to deliver the payload. \n</p><h1>Impact</h1><p>Cross-site scripting vulnerabilities allow an attacker to execute malicious script on the user's web browser. The attacker may use this to perform actions on the user's behalf within the application, such as change the password, submit messages, or perform some other actions available to the authenticated user. The malicious script may spread itself, becoming an XSS worm. An XSS worm may use up a lot of resources and be very costly to clean up. The attacker may write a script that steals session cookies or session identifiers and allows impersonating the user. Impersonating the user through stolen cookies is simpler and more powerful than through a script because it allows the attacker to interact with the application visually. The attacker may also use XSS to inject a JavaScript that captures the user's keystrokes on that web site to steal passwords and other information. XSS usually leads to privilege escalation, which the attacker leverages to take over some user's account. Usually, the attacker will target an administrative account to take full control of the application.\n</p><h1>Countermeasures</h1><p>To prevent this vulnerability, validate all input, and encode all input that is included in output.\n</p><p>\nValidate all input:</p><ul>\n<li> <a href=\"b531d29c-86f7-4812-90ce-5f3f0f780aba\">Validate Input from All Sources</a></li>\n<li> <a href=\"c98695c5-cf02-44a1-96bf-1f8046b8ad9d\">Validate Input for Length, Range, Format, And Type</a></li>\n<li> <a href=\"0f49430b-2abe-408f-b046-89fa739f5d53\">Input Validation Using JSF</a></li>\n<li> <a href=\"18ac74df-602b-4a58-8998-52f638f3a045\">Input Validation Using SpringMVC</a></li>\n<li> <a href=\"d124abb1-e230-43ef-8762-1caa0dbb89ca\">Input Validation Using Struts 1</a></li>\n<li> <a href=\"2f917654-65a8-49c9-b000-c17f9765bf42\">Input Validation Using Struts 2</a></li>\n</ul><p>\nEncode input included in output:</p><ul>\n<li> <a href=\"f83b953a-9b0c-406a-b274-9b2962d9c4e7\">Encode All Output Data</a></li>\n<li> <a href=\"c929277f-5bb0-44d5-9bf5-112c55927783\">Escape All Untrusted Data in HTML Contexts in JSF</a></li>\n<li> <a href=\"bc8de6c5-ba3a-4db5-a5ff-675c7336a2e8\">Escape All Untrusted Data in HTML Contexts in JSP</a></li>\n<li> <a href=\"8cc6c40a-5a4c-4d77-8900-4b896e2d3912\">Use H:outputText to Encode Echoed Input in JSF</a></li>\n<li> <a href=\"a4c5ae58-6b1b-49b7-b16e-4199598f3446\">Output Encoding Using JSF</a></li>\n<li> <a href=\"2dc1ab76-320b-47ec-a562-9e203d1b630f\">Output Encoding Using SpringMVC</a></li>\n<li> <a href=\"f8d330df-9387-45b2-a88b-40c08d0af3c4\">Output Encoding Using Struts 1</a></li>\n<li> <a href=\"9135b59f-8c73-4a4f-83c5-9894d6587cca\">Output Encoding Using Struts 2</a></li>\n<li> <a href=\"f7806f64-b1c7-4990-a9e5-f6d814bae7f1\">Use ESAPI Encoder</a></li>\n</ul><h1>Application Check</h1><p>To check for adequate protection against this vulnerability, ensure that all input is validated, and that all input included in output is encoded.\n</p><p>\nAll input is validated:</p><ul>\n<li> <a href=\"7f8deb21-cd52-41be-80b4-8897612021dc\">Input from All Sources Is Validated</a></li>\n<li> <a href=\"61869793-2c10-40c0-b82a-babcc0312697\">Input Is Validated for Length, Range, Format And Type</a></li>\n</ul><p>\nInput included in output is encoded:</p><ul>\n<li> <a href=\"13112146-7c14-4b6d-9e94-24daa22eefc4\">All Output Data Is Encoded</a></li>\n<li> <a href=\"90893370-cbce-4116-b9ff-2e69dab56cfa\">All Untrusted Data in HTML Contexts Is Escaped in JSF</a></li>\n<li> <a href=\"02c900ca-0740-412a-b685-56b13408793d\">All Untrusted Data in HTML Contexts Is Escaped in JSP</a></li>\n</ul><h1>Computer Based Training Links</h1><p>Use the following Computer Based Training courses to learn more about Cross-Site Scripting including techniques for remediation and prevention.\n</p><h2>Creating Secure Code – JRE Foundations</h2><p>In this course, you will learn to recognize and remediate common Java Web software security vulnerabilities.  This course has three modules, which introduce you to these vulnerabilities and help you to identify and remediate them. \n</p><p>\n<a href=\"https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127615\">COD 211 Creating Secure Code – JRE Foundations</a>\n</p><h2>Creating Secure J2EE Code</h2><p>This course introduces and explains the precautionary measures you can use to avoid Web software security vulnerabilities, such as data leakage attacks, client/server protocol manipulation, injection attacks, and exploiting authentication.  At the end of this course, you will have learned about time-tested defensive coding principles and how to use them to increase the security of your application, and prevent common security vulnerabilities.\n</p><p>\n<a href=\"https://teamprofessor.absorbtraining.com/ninja/#/courses/course/127619\">COD 313 Creating Secure J2EE Code</a>\n</p><p>\n<em>Valid login credentials and enrollment in the course itself are required to access Team Professor content. If you need login credentials, please contact support@securityinnovation.com for help.</em>\n</p><h1>Additional Resources</h1><ul><li> For more information about cross-site scripting, see <a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></li></ul>"
}