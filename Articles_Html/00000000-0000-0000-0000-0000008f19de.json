{
  "id": "00000000-0000-0000-0000-0000008f19de",
  "checksum": "32416b8696fcba92220d3afeb41ba7444916e18a",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "java": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2",
      "ol",
      "li"
    ],
    "provide": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "functionality": [
      "p",
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "your": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "application": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "where": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "users": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "change": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "their": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "own": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "passwords": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "title"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "title"
    ],
    "separate": [
      "p"
    ],
    "administrators": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "why": [
      "h2"
    ],
    "any": [
      "p"
    ],
    "that": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "title"
    ],
    "uses": [
      "p"
    ],
    "authentication": [
      "p"
    ],
    "should": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "be": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "changed": [
      "p",
      "p",
      "p",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "required": [
      "p"
    ],
    "prevent": [
      "p",
      "ol",
      "li"
    ],
    "account": [
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "credentials": [
      "p"
    ],
    "from": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "being": [
      "p"
    ],
    "compromised": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "are": [
      "p",
      "ol",
      "li"
    ],
    "hard-coded": [
      "p",
      "p"
    ],
    "or": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "permanently": [
      "p"
    ],
    "stored": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "database": [
      "p"
    ],
    "file": [
      "p"
    ],
    "they": [
      "p",
      "ol",
      "li"
    ],
    "cannot": [
      "p"
    ],
    "easily": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "customer/user": [
      "p"
    ],
    "these": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "need": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "disclosed": [
      "p"
    ],
    "holder": [
      "p"
    ],
    "usable": [
      "p"
    ],
    "such": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "disclosure": [
      "p"
    ],
    "will": [
      "p",
      "ol",
      "li"
    ],
    "require": [
      "p",
      "p"
    ],
    "someone": [
      "p"
    ],
    "other": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "than": [
      "p"
    ],
    "have": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "knowledge": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "userâ€™s": [
      "p"
    ],
    "password.": [
      "p"
    ],
    "an": [
      "p",
      "ol",
      "li"
    ],
    "attacker": [
      "p"
    ],
    "gains": [
      "p"
    ],
    "access": [
      "p",
      "p"
    ],
    "he/she": [
      "p"
    ],
    "perform": [
      "p"
    ],
    "actions": [
      "p"
    ],
    "with": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "privileges": [
      "p"
    ],
    "issue": [
      "p"
    ],
    "further": [
      "p"
    ],
    "compounded": [
      "p"
    ],
    "fact": [
      "p"
    ],
    "many": [
      "p"
    ],
    "administrative": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "title"
    ],
    "which": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "then": [
      "p"
    ],
    "used": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "set": [
      "p",
      "ol",
      "li"
    ],
    "up": [
      "p"
    ],
    "accounts": [
      "p"
    ],
    "very": [
      "p"
    ],
    "dangerous!": [
      "p"
    ],
    "always": [
      "p"
    ],
    "facility": [
      "p"
    ],
    "for": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong"
    ],
    "password": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "it": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "also": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "administrator": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "on": [
      "p",
      "ol",
      "li"
    ],
    "first": [
      "p"
    ],
    "login": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "create": [
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "pages": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "identify": [
      "ol",
      "li",
      "strong"
    ],
    "management": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "functions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li"
    ],
    "find": [
      "ol",
      "li"
    ],
    "responsible": [
      "ol",
      "li"
    ],
    "setting": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "validating": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "not": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "exist": [
      "ol",
      "li"
    ],
    "write": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "them": [
      "ol",
      "li"
    ],
    "there": [
      "ol",
      "li"
    ],
    "no": [
      "ol",
      "li"
    ],
    "retrieve": [
      "ol",
      "li"
    ],
    "because": [
      "ol",
      "li"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "one-way": [
      "ol",
      "li"
    ],
    "hashing": [
      "ol",
      "li"
    ],
    "salting": [
      "ol",
      "li"
    ],
    "needed": [
      "ol",
      "li"
    ],
    "providing": [
      "ol",
      "li"
    ],
    "interface": [
      "ol",
      "li",
      "title"
    ],
    "allows": [
      "ol",
      "li",
      "title"
    ],
    "functions)": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "new": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "validation": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "confirm": [
      "ol",
      "li"
    ],
    "existing": [
      "ol",
      "li"
    ],
    "just": [
      "ol",
      "li"
    ],
    "prior": [
      "ol",
      "li"
    ],
    "changing": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "title"
    ],
    "one": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "necessary": [
      "ol",
      "li"
    ],
    "csrf": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "clickjacking": [
      "ol",
      "li"
    ],
    "similar": [
      "ol",
      "li"
    ],
    "attacks": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "page": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "regular": [
      "ol",
      "li",
      "strong"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "recommended": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "combine": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "details": [
      "ol",
      "li"
    ],
    "as": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "users'": [
      "ol",
      "li"
    ],
    "names": [
      "ol",
      "li"
    ],
    "e-mail": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "addresses": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "associated": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "etc": [
      "ol",
      "li"
    ],
    "keep": [
      "ol",
      "li"
    ],
    "simple": [
      "ol",
      "li"
    ],
    "possible": [
      "ol",
      "li"
    ],
    "reduce": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "risk": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "introducing": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "vulnerabilities": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "into": [
      "ol",
      "li"
    ],
    "via": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "some": [
      "ol",
      "li"
    ],
    "field": [
      "ol",
      "li"
    ],
    "enter": [
      "ol",
      "li"
    ],
    "his": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "current": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "two": [
      "ol",
      "li"
    ],
    "fields": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "entering": [
      "ol",
      "li"
    ],
    "three": [
      "ol",
      "li"
    ],
    "masked": [
      "ol",
      "li"
    ],
    "user's": [
      "ol",
      "li"
    ],
    "validated": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "threat": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "session": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "hijacking": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "entered": [
      "ol",
      "li"
    ],
    "twice": [
      "ol",
      "li"
    ],
    "typos": [
      "ol",
      "li"
    ],
    "creating": [
      "ol",
      "li"
    ],
    "different": [
      "ol",
      "li"
    ],
    "intended": [
      "ol",
      "li"
    ],
    "upon": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "submitting": [
      "ol",
      "li"
    ],
    "request": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "call": [
      "ol",
      "li"
    ],
    "validate": [
      "ol",
      "li"
    ],
    "old": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "store": [
      "ol",
      "li"
    ],
    "submitted": [
      "ol",
      "li"
    ],
    "data": [
      "ol",
      "li"
    ],
    "positive": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "input": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "checked": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "against": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "complexity": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "requirements": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "may": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "history": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "plain-text": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "but": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "hashes.": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "only": [
      "ol",
      "li"
    ],
    "accessible": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "ideally": [
      "ol",
      "li"
    ],
    "internet": [
      "ol",
      "li"
    ],
    "way": [
      "ol",
      "li"
    ],
    "files": [
      "ol",
      "li"
    ],
    "renamed": [
      "ol",
      "li"
    ],
    "moved": [
      "ol",
      "li"
    ],
    "around": [
      "ol",
      "li"
    ],
    "web": [
      "ol",
      "li"
    ],
    "directory": [
      "ol",
      "li"
    ],
    "attempt": [
      "ol",
      "li"
    ],
    "hide": [
      "ol",
      "li"
    ],
    "attackers": [
      "ol",
      "li"
    ],
    "hiding": [
      "ol",
      "li"
    ],
    "relied": [
      "ol",
      "li"
    ],
    "security": [
      "ol",
      "li"
    ],
    "does": [
      "ol",
      "li"
    ],
    "automated": [
      "ol",
      "li"
    ],
    "admin": [
      "ol",
      "li"
    ],
    "list": [
      "ol",
      "li"
    ],
    "allow": [
      "ol",
      "li"
    ],
    "managing": [
      "ol",
      "li"
    ],
    "information": [
      "ol",
      "li"
    ],
    "usernames": [
      "ol",
      "li"
    ],
    "issuing": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "asked": [
      "ol",
      "li"
    ],
    "re-enter": [
      "ol",
      "li"
    ],
    "use": [
      "ol",
      "li"
    ],
    "check": [
      "ol",
      "li"
    ],
    "passwords).": [
      "ol",
      "li"
    ],
    "passwords)": [
      "ol",
      "li"
    ],
    "secure": [
      "title"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How"
    ],
    "ul": [
      "Java"
    ],
    "li": [
      "Java",
      "Identify password management functions. Find the functions in your application that are responsible for setting and validating user passwords. If they do not exist, write them. There should be no functions that can retrieve passwords, because passwords should be stored using one-way hashing and salting. The functions for setting and validating passwords will be needed for providing the interface that allows users to change their passwords. The setting password function(s) should be used to set the new password. The password validation function(s) should be used to confirm users existing password just prior to changing to the new one. (This is necessary to prevent CSRF, Clickjacking and similar attacks)",
      "Create a password management page for regular users. Make a page where users can change their own passwords. It is not recommended to combine this page with changing other user details, such as changing the users' names, e-mail addresses associated with the application, etc. It is recommended to keep the password management page as simple as possible to reduce the risk of introducing vulnerabilities into it via some other functions. The password changing page should have one field for the user to enter his current password and two fields for entering the new password. All three password fields should be masked. The user's current password should be validated to reduce the threat of CSRF and session hijacking attacks. The new password should be entered twice to reduce the risk of typos, and creating a password that is different from the one that the user intended. Upon submitting the password change request, the page should call the password management functions used by the application to validate the old password and store the new password. The submitted data should be validated using positive input validation. The new password should be checked against the application password complexity requirements. The new password may also need to be checked against a history of old passwords (which should not be stored in plain-text, but should be stored as hashes).",
      "Create a password management page for administrative users. Make a page that is only accessible to administrators where administrators can change user passwords. Ideally, this page should not be accessible from the Internet. It is recommended to write this and other administrative pages in such a way that their files can be renamed or moved around the application web directory in an attempt to hide these pages from attackers. Hiding administrative pages should not be relied on for security, but it does reduce the threat of automated attacks. The admin password changing page should list all the users of the application and allow the administrator to change their passwords. It is not recommended to combine the password management page with functions for managing other user account information, such as usernames or e-mail addresses associated with the application, to reduce the risk of introducing vulnerabilities via these other functions. Upon issuing a request to change user passwords, the administrator should be asked to re-enter his password to reduce the threat of CSRF and session hijacking attacks. Upon issuing the password changing request, the page should use positive input validation to check the new password(s). The new passwords should be checked against application the application password complexity requirements. The new password(s) may also need to be checked against a history of old passwords (which should not be stored in plain-text, but should be stored as hashes)."
    ],
    "p": [
      "Provide functionality in your application  where users can change their own passwords. Provide a separate functionality  where administrators can change all user and their own passwords.",
      "Any application that uses authentication should provide functionality  the passwords to be changed. This is required to prevent account credentials from being compromised. If passwords are hard-coded or permanently stored in a database or file, they cannot be changed easily by the customer/user. These passwords need to be disclosed to the account holder to be usable. Such disclosure will require someone other than the user to have knowledge of the userâ€™s password.. If an attacker gains access the passwords, he/she can access the application and perform actions with the privileges of the compromised account. This issue is further compounded by the fact many application have a hard-coded administrative user, which is then used to set up other user accounts. This is very dangerous! Your application should always provide a facility for administrators to change their password. It should also require the administrator password to be changed on first login.",
      "To create pages where passwords can be changed:"
    ],
    "ol": [
      "Identify password management functions. Find the functions in your application that are responsible for setting and validating user passwords. If they do not exist, write them. There should be no functions that can retrieve passwords, because passwords should be stored using one-way hashing and salting. The functions for setting and validating passwords will be needed for providing the interface that allows users to change their passwords. The setting password function(s) should be used to set the new password. The password validation function(s) should be used to confirm users existing password just prior to changing to the new one. (This is necessary to prevent CSRF, Clickjacking and similar attacks)\n Create a password management page for regular users. Make a page where users can change their own passwords. It is not recommended to combine this page with changing other user details, such as changing the users' names, e-mail addresses associated with the application, etc. It is recommended to keep the password management page as simple as possible to reduce the risk of introducing vulnerabilities into it via some other functions. The password changing page should have one field for the user to enter his current password and two fields for entering the new password. All three password fields should be masked. The user's current password should be validated to reduce the threat of CSRF and session hijacking attacks. The new password should be entered twice to reduce the risk of typos, and creating a password that is different from the one that the user intended. Upon submitting the password change request, the page should call the password management functions used by the application to validate the old password and store the new password. The submitted data should be validated using positive input validation. The new password should be checked against the application password complexity requirements. The new password may also need to be checked against a history of old passwords (which should not be stored in plain-text, but should be stored as hashes).\n Create a password management page for administrative users. Make a page that is only accessible to administrators where administrators can change user passwords. Ideally, this page should not be accessible from the Internet. It is recommended to write this and other administrative pages in such a way that their files can be renamed or moved around the application web directory in an attempt to hide these pages from attackers. Hiding administrative pages should not be relied on for security, but it does reduce the threat of automated attacks. The admin password changing page should list all the users of the application and allow the administrator to change their passwords. It is not recommended to combine the password management page with functions for managing other user account information, such as usernames or e-mail addresses associated with the application, to reduce the risk of introducing vulnerabilities via these other functions. Upon issuing a request to change user passwords, the administrator should be asked to re-enter his password to reduce the threat of CSRF and session hijacking attacks. Upon issuing the password changing request, the page should use positive input validation to check the new password(s). The new passwords should be checked against application the application password complexity requirements. The new password(s) may also need to be checked against a history of old passwords (which should not be stored in plain-text, but should be stored as hashes)."
    ],
    "strong": [
      "Identify password management functions.",
      "Create a password management page for regular users.",
      "Create a password management page for administrative users."
    ]
  },
  "links": [],
  "html": "<h2>Applies To</h2><ul><li> Java</li>\n</ul><h2>What to Do</h2><p>Provide functionality in your application  where users can change their own passwords. Provide a separate functionality  where administrators can change all user and their own passwords.\n</p><h2>Why</h2><p>Any application that uses authentication should provide functionality  the passwords to be changed. This is required to prevent account credentials from being compromised. If passwords are hard-coded or permanently stored in a database or file, they cannot be changed easily by the customer/user. These passwords need to be disclosed to the account holder to be usable. Such disclosure will require someone other than the user to have knowledge of the userâ€™s password.. If an attacker gains access the passwords, he/she can access the application and perform actions with the privileges of the compromised account. This issue is further compounded by the fact many application have a hard-coded administrative user, which is then used to set up other user accounts. This is very dangerous! Your application should always provide a facility for administrators to change their password. It should also require the administrator password to be changed on first login. \n</p><h2>How</h2><p>To create pages where passwords can be changed:\n</p><ol>\n<li> <strong>Identify password management functions.</strong> Find the functions in your application that are responsible for setting and validating user passwords. If they do not exist, write them. There should be no functions that can retrieve passwords, because passwords should be stored using one-way hashing and salting. The functions for setting and validating passwords will be needed for providing the interface that allows users to change their passwords. The setting password function(s) should be used to set the new password. The password validation function(s) should be used to confirm users existing password just prior to changing to the new one. (This is necessary to prevent CSRF, Clickjacking and similar attacks)</li>\n<li> <strong>Create a password management page for regular users.</strong> Make a page where users can change their own passwords. It is not recommended to combine this page with changing other user details, such as changing the users' names, e-mail addresses associated with the application, etc. It is recommended to keep the password management page as simple as possible to reduce the risk of introducing vulnerabilities into it via some other functions. The password changing page should have one field for the user to enter his current password and two fields for entering the new password. All three password fields should be masked. The user's current password should be validated to reduce the threat of CSRF and session hijacking attacks. The new password should be entered twice to reduce the risk of typos, and creating a password that is different from the one that the user intended. Upon submitting the password change request, the page should call the password management functions used by the application to validate the old password and store the new password. The submitted data should be validated using positive input validation. The new password should be checked against the application password complexity requirements. The new password may also need to be checked against a history of old passwords (which should not be stored in plain-text, but should be stored as hashes).</li>\n<li> <strong>Create a password management page for administrative users.</strong> Make a page that is only accessible to administrators where administrators can change user passwords. Ideally, this page should not be accessible from the Internet. It is recommended to write this and other administrative pages in such a way that their files can be renamed or moved around the application web directory in an attempt to hide these pages from attackers. Hiding administrative pages should not be relied on for security, but it does reduce the threat of automated attacks. The admin password changing page should list all the users of the application and allow the administrator to change their passwords. It is not recommended to combine the password management page with functions for managing other user account information, such as usernames or e-mail addresses associated with the application, to reduce the risk of introducing vulnerabilities via these other functions. Upon issuing a request to change user passwords, the administrator should be asked to re-enter his password to reduce the threat of CSRF and session hijacking attacks. Upon issuing the password changing request, the page should use positive input validation to check the new password(s). The new passwords should be checked against application the application password complexity requirements. The new password(s) may also need to be checked against a history of old passwords (which should not be stored in plain-text, but should be stored as hashes).</li></ol>"
}