{
  "id": "46cf80ac-3093-4f90-a133-2cf5e1a2881c",
  "checksum": "7640ecab1a5b1c89d5161fc095e2233d5cd8d07d",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "aspnet": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "do": [
      "h1"
    ],
    "set": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "title"
    ],
    "strict": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "domains": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "paths": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "p",
      "li",
      "li",
      "pre",
      "p",
      "title"
    ],
    "session": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "cookies": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "setting": [
      "p"
    ],
    "makes": [
      "p"
    ],
    "it": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "harder": [
      "p"
    ],
    "for": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "attackers": [
      "p"
    ],
    "hijackÂ user": [
      "p"
    ],
    "sessions": [
      "p"
    ],
    "when": [
      "h1",
      "ol",
      "li",
      "p"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "web": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "that": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "management": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "define": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "a": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "cookie": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "pre",
      "pre",
      "p",
      "p",
      "p"
    ],
    "path": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "the": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "domain": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "if": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "p"
    ],
    "uses": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "subdomain": [
      "ol",
      "li",
      "p"
    ],
    "value": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "creates": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "handles": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "review": [
      "ol",
      "li",
      "p"
    ],
    "find": [
      "ol",
      "li",
      "p"
    ],
    "functions": [
      "ol",
      "li",
      "p"
    ],
    "create": [
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "li",
      "p"
    ],
    "default": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "called": [
      "ol",
      "li",
      "p"
    ],
    "\"aspnet_sessionid\".": [
      "ol",
      "li",
      "p"
    ],
    "searching": [
      "ol",
      "li",
      "p"
    ],
    "string": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "may": [
      "ol",
      "li",
      "p"
    ],
    "reveal": [
      "ol",
      "li",
      "p"
    ],
    "are": [
      "ol",
      "li",
      "p"
    ],
    "also": [
      "ol",
      "li",
      "p"
    ],
    "created": [
      "ol",
      "li",
      "p"
    ],
    "automatically": [
      "ol",
      "li",
      "p"
    ],
    "state": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "functionality": [
      "ol",
      "li",
      "p"
    ],
    "used": [
      "ol",
      "li",
      "p"
    ],
    "search": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "\"httpcontextcurrent.session\".": [
      "ol",
      "li",
      "p"
    ],
    "add": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "similar": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "displayed": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "below": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "response.cookies.count": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "0{": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "foreach": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "responsecookies.allkeys)": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "==": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "âaspnet_sessionidâ){": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "responsecookies[cookie].path": [
      "ol",
      "li",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "\"strictpath\"": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "p",
      "em",
      "pre"
    ],
    "}": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "}}": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "above": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "defined": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "bulky": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "exists": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "because": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "otherwise": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "throw": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "an": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "exception": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "known": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sufficient": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "such": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "responsecookies[âasp.net_sessionidâ].path": [
      "ol",
      "li",
      "pre"
    ],
    "responsecookies[cookie].domain": [
      "ol",
      "li",
      "pre"
    ],
    "\"strictdomain\"": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "p",
      "em",
      "pre"
    ],
    "responsecookies[âasp.net_sessionidâ].domain": [
      "ol",
      "li",
      "pre"
    ],
    "aspnet_sessionid": [
      "em"
    ],
    "httpcontextcurrent.session": [
      "em"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "more": [
      "ul",
      "li",
      "p"
    ],
    "information": [
      "ul",
      "li",
      "p"
    ],
    "about": [
      "ul",
      "li",
      "p"
    ],
    "handling": [
      "ul",
      "li",
      "p"
    ],
    "please": [
      "ul",
      "li",
      "p"
    ],
    "see": [
      "ul",
      "li",
      "p"
    ],
    "\"aspnet": [
      "ul",
      "li",
      "p"
    ],
    "overview\"": [
      "ul",
      "li",
      "p"
    ],
    "atÂ http//msdn.microsoft.com/en-us/library/ms178194.aspx#y2311": [
      "ul",
      "li",
      "p"
    ],
    "http//msdn.microsoft.com/en-us/library/ms178194.aspx#y2311": [
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Do",
      "Why",
      "When",
      "How",
      "Additional Resources"
    ],
    "ul": [
      "ASP.NET 4.0",
      "For more information about handling cookies, please see \"ASP.NET Cookies Overview\" atÂ http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311"
    ],
    "li": [
      "ASP.NET 4.0",
      "Define a strict cookie path. Use the application path as the cookie path.",
      "Define a strict cookie domain. If the application uses a subdomain, use it as the cookie domain value.",
      "Identify all code that creates or handles session cookies. Review code to find all functions that create session cookies. By default, the session cookie is called \"ASP.NET_SessionId\". Searching for that string may reveal code that creates or handles session cookies. Session cookies are also created automatically when session state functionality is used. To search for code that uses session state, search for the string \"HttpContext.Current.Session\".",
      "Set the cookie path. Add code to each function that creates or handles session cookies similar to that displayed below:\r\n      if (Response.Cookies.Count > 0){Â Â Â  foreach (string cookie in Response.Cookies.AllKeys)Â Â Â  {Â Â Â Â Â Â Â  if (cookie == âASP.NET_SessionIdâ){Â Â Â Â Â Â Â Â Â Â Â Â  Response.Cookies[cookie].Path = \"StrictPath\";Â Â Â Â Â Â Â  }Â Â Â  }}\r\n      In the code above, \"StrictPath\" is the strict path value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:\r\n      Response.Cookies[âASP.NET_SessionIdâ].Path = \"StrictPath\";",
      "Set the cookie domain. Add code to each function that creates or handles session cookies similar to that displayed below:\r\n      if (Response.Cookies.Count > 0){Â Â Â  foreach (string cookie in Response.Cookies.AllKeys)Â Â Â  {Â Â Â Â Â Â Â  if (cookie == âASP.NET_SessionIdâ){Â Â Â Â Â Â Â Â Â Â Â Â  Response.Cookies[cookie].Domain = \"StrictDomain\";Â Â Â Â Â Â Â  }Â Â Â  }}\r\n      In the code above, \"StrictDomain\" is the strict domain value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:\r\n      Response.Cookies[âASP.NET_SessionIdâ].Domain = \"StrictDomain\";",
      "For more information about handling cookies, please see \"ASP.NET Cookies Overview\" atÂ http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311"
    ],
    "p": [
      "Set strict domains and paths in session cookies.",
      "Setting strict domains and paths in session cookies makes it harder for attackers to hijackÂ user sessions.",
      "Set strict domains and paths in session cookies in all web applications that use session management.",
      "To set strict domains and paths in session cookies:",
      "Define a strict cookie path. Use the application path as the cookie path.",
      "Define a strict cookie domain. If the application uses a subdomain, use it as the cookie domain value.",
      "Identify all code that creates or handles session cookies. Review code to find all functions that create session cookies. By default, the session cookie is called \"ASP.NET_SessionId\". Searching for that string may reveal code that creates or handles session cookies. Session cookies are also created automatically when session state functionality is used. To search for code that uses session state, search for the string \"HttpContext.Current.Session\".",
      "Set the cookie path. Add code to each function that creates or handles session cookies similar to that displayed below:",
      "In the code above, \"StrictPath\" is the strict path value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:",
      "Set the cookie domain. Add code to each function that creates or handles session cookies similar to that displayed below:",
      "In the code above, \"StrictDomain\" is the strict domain value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:",
      "For more information about handling cookies, please see \"ASP.NET Cookies Overview\" atÂ http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311"
    ],
    "ol": [
      "Define a strict cookie path. Use the application path as the cookie path.\r\n    \r\n    \r\n      \r\n        Define a strict cookie domain. If the application uses a subdomain, use it as the cookie domain value.\r\n    \r\n    \r\n      \r\n        Identify all code that creates or handles session cookies. Review code to find all functions that create session cookies. By default, the session cookie is called \"ASP.NET_SessionId\". Searching for that string may reveal code that creates or handles session cookies. Session cookies are also created automatically when session state functionality is used. To search for code that uses session state, search for the string \"HttpContext.Current.Session\".\r\n    \r\n    \r\n      \r\n        Set the cookie path. Add code to each function that creates or handles session cookies similar to that displayed below:\r\n      if (Response.Cookies.Count > 0){Â Â Â  foreach (string cookie in Response.Cookies.AllKeys)Â Â Â  {Â Â Â Â Â Â Â  if (cookie == âASP.NET_SessionIdâ){Â Â Â Â Â Â Â Â Â Â Â Â  Response.Cookies[cookie].Path = \"StrictPath\";Â Â Â Â Â Â Â  }Â Â Â  }}\r\n      In the code above, \"StrictPath\" is the strict path value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:\r\n      Response.Cookies[âASP.NET_SessionIdâ].Path = \"StrictPath\";\r\n    \r\n    \r\n      \r\n        Set the cookie domain. Add code to each function that creates or handles session cookies similar to that displayed below:\r\n      if (Response.Cookies.Count > 0){Â Â Â  foreach (string cookie in Response.Cookies.AllKeys)Â Â Â  {Â Â Â Â Â Â Â  if (cookie == âASP.NET_SessionIdâ){Â Â Â Â Â Â Â Â Â Â Â Â  Response.Cookies[cookie].Domain = \"StrictDomain\";Â Â Â Â Â Â Â  }Â Â Â  }}\r\n      In the code above, \"StrictDomain\" is the strict domain value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:\r\n      Response.Cookies[âASP.NET_SessionIdâ].Domain = \"StrictDomain\";"
    ],
    "strong": [
      "Define a strict cookie path.",
      "Define a strict cookie domain.",
      "Identify all code that creates or handles session cookies.",
      "Set the cookie path.",
      "Set the cookie domain."
    ],
    "em": [
      "ASP.NET_SessionId",
      "HttpContext.Current.Session",
      "\"StrictPath\"",
      "\"StrictDomain\""
    ],
    "pre": [
      "if (Response.Cookies.Count > 0){Â Â Â  foreach (string cookie in Response.Cookies.AllKeys)Â Â Â  {Â Â Â Â Â Â Â  if (cookie == âASP.NET_SessionIdâ){Â Â Â Â Â Â Â Â Â Â Â Â  Response.Cookies[cookie].Path = \"StrictPath\";Â Â Â Â Â Â Â  }Â Â Â  }}",
      "Response.Cookies[âASP.NET_SessionIdâ].Path = \"StrictPath\";",
      "if (Response.Cookies.Count > 0){Â Â Â  foreach (string cookie in Response.Cookies.AllKeys)Â Â Â  {Â Â Â Â Â Â Â  if (cookie == âASP.NET_SessionIdâ){Â Â Â Â Â Â Â Â Â Â Â Â  Response.Cookies[cookie].Domain = \"StrictDomain\";Â Â Â Â Â Â Â  }Â Â Â  }}",
      "Response.Cookies[âASP.NET_SessionIdâ].Domain = \"StrictDomain\";"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311"
    ]
  },
  "links": [
    {
      "href": "http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311",
      "text": "http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311"
    }
  ],
  "html": "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Set strict domains and paths in session cookies.</p>\r\n  <h1>Why</h1>\r\n  <p>Setting strict domains and paths in session cookies makes it harder for attackers to hijack&nbsp;user sessions.</p>\r\n  <h1>When</h1>\r\n  <p>Set strict domains and paths in session cookies in all web applications that use session management.</p>\r\n  <h1>How</h1>\r\n  <p>To set strict domains and paths in session cookies:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Define a strict cookie path.</strong> Use the application path as the cookie path.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Define a strict cookie domain.</strong> If the application uses a subdomain, use it as the cookie domain value.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Identify all code that creates or handles session cookies.</strong> Review code to find all functions that create session cookies. By default, the session cookie is called \"<em>ASP.NET_SessionId</em>\". Searching for that string may reveal code that creates or handles session cookies. Session cookies are also created automatically when session state functionality is used. To search for code that uses session state, search for the string \"<em>HttpContext.Current.Session</em>\".</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Set the cookie path.</strong> Add code to each function that creates or handles session cookies similar to that displayed below:</p>\r\n      <pre>if (Response.Cookies.Count &gt; 0)<br />{<br />&nbsp;&nbsp;&nbsp; foreach (string cookie in Response.Cookies.AllKeys)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (cookie == âASP.NET_SessionIdâ){<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Response.Cookies[cookie].Path = \"StrictPath\";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; }<br />}</pre>\r\n      <p>In the code above, <em>\"StrictPath\"</em> is the strict path value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:</p>\r\n      <pre>Response.Cookies[âASP.NET_SessionIdâ].Path = \"StrictPath\";</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Set the cookie domain.</strong> Add code to each function that creates or handles session cookies similar to that displayed below:</p>\r\n      <pre>if (Response.Cookies.Count &gt; 0)<br />{<br />&nbsp;&nbsp;&nbsp; foreach (string cookie in Response.Cookies.AllKeys)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (cookie == âASP.NET_SessionIdâ){<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Response.Cookies[cookie].Domain = \"StrictDomain\";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; }<br />}</pre>\r\n      <p>In the code above, <em>\"StrictDomain\"</em> is the strict domain value defined for the session cookie. The code example above is bulky to make sure that the session cookie exists, because otherwise the application will throw an exception. If it is known that the session cookie it exists, it is sufficient to use code such as this:</p>\r\n      <pre>Response.Cookies[âASP.NET_SessionIdâ].Domain = \"StrictDomain\";</pre>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>\r\n      <p>For more information about handling cookies, please see \"ASP.NET Cookies Overview\" at&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311\">http://msdn.microsoft.com/en-us/library/ms178194.aspx#Y2311</a></p>\r\n    </li>\r\n  </ul>"
}