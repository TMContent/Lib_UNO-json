{
  "id": "00000000-0000-0000-0000-0000008d3cec",
  "checksum": "7304d7d0117df3525606d5a8c0f48997e8bfb9a1",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "android": [
      "ul",
      "li"
    ],
    "applications": [
      "ul",
      "li"
    ],
    "that": [
      "ul",
      "li",
      "p",
      "ol",
      "li"
    ],
    "access": [
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li"
    ],
    "files": [
      "ul",
      "li"
    ],
    "based": [
      "ul",
      "li"
    ],
    "on": [
      "ul",
      "li"
    ],
    "input": [
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "what": [
      "h2",
      "p"
    ],
    "do": [
      "h2"
    ],
    "canonizalize": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "validate": [
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "paths": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "include": [
      "p"
    ],
    "data": [
      "p",
      "ol",
      "li",
      "strong",
      "h2",
      "ul",
      "li",
      "a",
      "h2",
      "ul",
      "li",
      "a"
    ],
    "why": [
      "h2"
    ],
    "canonicalizing": [
      "p"
    ],
    "before": [
      "p"
    ],
    "validating": [
      "p"
    ],
    "them": [
      "p"
    ],
    "helps": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "unauthorized": [
      "p"
    ],
    "if": [
      "p"
    ],
    "a": [
      "p",
      "ol",
      "li"
    ],
    "path": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "not": [
      "p"
    ],
    "canonicalized": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "may": [
      "p"
    ],
    "use": [
      "p",
      "ol",
      "li"
    ],
    "special": [
      "p"
    ],
    "characters": [
      "p"
    ],
    "resources": [
      "p",
      "h2"
    ],
    "outside": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li"
    ],
    "allowed": [
      "p"
    ],
    "by": [
      "p",
      "ol",
      "li"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "application": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "how": [
      "h2"
    ],
    "canonicalize": [
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "names": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "identify": [
      "ol",
      "li",
      "strong"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "li"
    ],
    "enumerate": [
      "ol",
      "li"
    ],
    "performed": [
      "ol",
      "li"
    ],
    "examine": [
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "li"
    ],
    "responsible": [
      "ol",
      "li"
    ],
    "accessing": [
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "li"
    ],
    "take": [
      "ol",
      "li"
    ],
    "note": [
      "ol",
      "li"
    ],
    "any": [
      "ol",
      "li"
    ],
    "form": [
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "getcanonicalpath": [
      "ol",
      "li",
      "em",
      "ul",
      "li",
      "em"
    ],
    "method": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "get": [
      "ol",
      "li"
    ],
    "canonical": [
      "ol",
      "li"
    ],
    "verify": [
      "ol",
      "li"
    ],
    "user": [
      "ol",
      "li"
    ],
    "authorized": [
      "ol",
      "li"
    ],
    "specified": [
      "ol",
      "li"
    ],
    "resource": [
      "ol",
      "li"
    ],
    "validation": [
      "h2",
      "h2"
    ],
    "guidelines": [
      "h2"
    ],
    "encode": [
      "ul",
      "li",
      "a"
    ],
    "inserted": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "into": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "xml": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "documents": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "formats": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h2"
    ],
    "are": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "validated": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "encoded": [
      "ul",
      "li",
      "a"
    ],
    "additional": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//developer.android.com/reference/java/io/file.html#getcanonicalpath()": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How",
      "Data Validation Guidelines",
      "Data Validation Checklists",
      "Additional Resources"
    ],
    "ul": [
      "Android applications that access files based on input.",
      "Canonicalize File Names and Paths\n Validate All Input\n Validate and Encode Data Inserted into XML Documents\n Validate File Formats",
      "File Names and Paths Are Canonicalized\n All Input Is Validated\n Data Inserted into XML Documents Is Validated and Encoded\n File Formats Are Validated",
      "For more information about the getCanonicalPath method, see http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    ],
    "li": [
      "Android applications that access files based on input.",
      "Identify all input used for file access. Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.",
      "Canonicalize all input data used for file access. Use the getCanonicalPath method to get the canonical path to a file.",
      "Validate file paths. Verify that the user or application is authorized to access the specified resource.",
      "Canonicalize File Names and Paths",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "File Formats Are Validated",
      "For more information about the getCanonicalPath method, see http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    ],
    "p": [
      "Canonizalize and validate all file paths that include input data.",
      "Canonicalizing file paths before validating them helps prevent unauthorized access. If a file path is not canonicalized, an attacker may use special characters to access resources outside of what is allowed by the application.",
      "To canonicalize file names and paths:"
    ],
    "ol": [
      "Identify all input used for file access. Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.\n Canonicalize all input data used for file access. Use the getCanonicalPath method to get the canonical path to a file.\n Validate file paths. Verify that the user or application is authorized to access the specified resource."
    ],
    "strong": [
      "Identify all input used for file access.",
      "Canonicalize all input data used for file access.",
      "Validate file paths."
    ],
    "em": [
      "getCanonicalPath",
      "getCanonicalPath"
    ],
    "a": [
      "Canonicalize File Names and Paths",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "File Formats Are Validated",
      "http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-0000008d3cec",
      "text": "Canonicalize File Names and Paths"
    },
    {
      "href": "00000000-0000-0000-0000-0000008149ca",
      "text": "Validate All Input"
    },
    {
      "href": "00000000-0000-0000-0000-0000006c7089",
      "text": "Validate and Encode Data Inserted into XML Documents"
    },
    {
      "href": "00000000-0000-0000-0000-0000007635ae",
      "text": "Validate File Formats"
    },
    {
      "href": "00000000-0000-0000-0000-0000009763b8",
      "text": "File Names and Paths Are Canonicalized"
    },
    {
      "href": "00000000-0000-0000-0000-0000004f2fec",
      "text": "All Input Is Validated"
    },
    {
      "href": "00000000-0000-0000-0000-00000071b4f0",
      "text": "Data Inserted into XML Documents Is Validated and Encoded"
    },
    {
      "href": "00000000-0000-0000-0000-00000080c790",
      "text": "File Formats Are Validated"
    },
    {
      "href": "http://developer.android.com/reference/java/io/File.html#getCanonicalPath()",
      "text": "http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> Android applications that access files based on input.</li>\n</ul><h2>What to Do</h2><p>Canonizalize and validate all file paths that include input data.\n</p><h2>Why</h2><p>Canonicalizing file paths before validating them helps prevent unauthorized access. If a file path is not canonicalized, an attacker may use special characters to access resources outside of what is allowed by the application.\n</p><h2>How</h2><p>To canonicalize file names and paths:\n</p><ol>\n<li> <strong>Identify all input used for file access.</strong> Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.</li>\n<li> <strong>Canonicalize all input data used for file access.</strong> Use the <em>getCanonicalPath</em> method to get the canonical path to a file.</li>\n<li> <strong>Validate file paths.</strong> Verify that the user or application is authorized to access the specified resource.</li>\n</ol><h2>Data Validation Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000008d3cec\">Canonicalize File Names and Paths</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000008149ca\">Validate All Input</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000006c7089\">Validate and Encode Data Inserted into XML Documents</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000007635ae\">Validate File Formats</a></li>\n</ul><h2>Data Validation Checklists</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000009763b8\">File Names and Paths Are Canonicalized</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000004f2fec\">All Input Is Validated</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000071b4f0\">Data Inserted into XML Documents Is Validated and Encoded</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000080c790\">File Formats Are Validated</a></li>\n</ul><h2>Additional Resources</h2><ul><li> For more information about the <em>getCanonicalPath</em> method, see <a href=\"http://developer.android.com/reference/java/io/File.html#getCanonicalPath()\">http://developer.android.com/reference/java/io/File.html#getCanonicalPath()</a></li></ul>"
}