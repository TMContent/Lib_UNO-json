{
  "id": "4d3f994b-3be7-4e3d-8183-e213612cf5c4",
  "checksum": "2de86a8b205bc15d40c45b628f193fb67863e173",
  "words": {
    "26": [
      "p"
    ],
    "217": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "218": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "220": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "global": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "exception": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "handler": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "is": [
      "p",
      "p",
      "title"
    ],
    "used": [
      "p",
      "p",
      "title"
    ],
    "catch": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "any": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "unhandled": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "exceptions": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "improves": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "pre",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application's": [
      "p",
      "p"
    ],
    "robustness": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p"
    ],
    "minimizes": [
      "p"
    ],
    "risk": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "information": [
      "p",
      "p"
    ],
    "disclosure": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "can": [
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "serious": [
      "p"
    ],
    "stumbling": [
      "p"
    ],
    "block": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "performance": [
      "p"
    ],
    "security": [
      "p"
    ],
    "must": [
      "p"
    ],
    "avoided": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "they": [
      "p"
    ],
    "result": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "ul",
      "li"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "pre",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p"
    ],
    "entering": [
      "p"
    ],
    "unknown": [
      "p"
    ],
    "state": [
      "p"
    ],
    "and/or": [
      "p"
    ],
    "revealing": [
      "p"
    ],
    "sensitive": [
      "p"
    ],
    "internal": [
      "p"
    ],
    "details": [
      "p",
      "p",
      "p",
      "strong"
    ],
    "using": [
      "p"
    ],
    "will": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "how": [
      "h1",
      "ol",
      "li",
      "p"
    ],
    "use": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "following": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "that": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p"
    ],
    "defines": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "error": [
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "globalasax": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "are": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "p",
      "strong",
      "p"
    ],
    "not": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "handled": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "p",
      "p"
    ],
    "gives": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "p",
      "h1"
    ],
    "this": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "might": [
      "ol",
      "li",
      "p"
    ],
    "done": [
      "ol",
      "li",
      "p"
    ],
    "%@": [
      "ol",
      "li",
      "pre"
    ],
    "language=\"c#\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "%<%@": [
      "ol",
      "li",
      "pre"
    ],
    "import": [
      "ol",
      "li",
      "pre"
    ],
    "namespace=\"systemdiagnostics\"": [
      "ol",
      "li",
      "pre"
    ],
    "%": [
      "ol",
      "li",
      "pre"
    ],
    "script": [
      "ol",
      "li",
      "pre"
    ],
    "runat=\"server\"": [
      "ol",
      "li",
      "pre"
    ],
    "void": [
      "ol",
      "li",
      "pre"
    ],
    "application_errorobject": [
      "ol",
      "li",
      "pre"
    ],
    "sender": [
      "ol",
      "li",
      "pre"
    ],
    "eventargs": [
      "ol",
      "li",
      "pre"
    ],
    "e": [
      "ol",
      "li",
      "pre"
    ],
    "{": [
      "ol",
      "li",
      "pre"
    ],
    "//": [
      "ol",
      "li",
      "pre"
    ],
    "add": [
      "ol",
      "li",
      "pre"
    ],
    "appropriate": [
      "ol",
      "li",
      "pre"
    ],
    "logging": [
      "ol",
      "li",
      "pre"
    ],
    "responsewrite(\"we": [
      "ol",
      "li",
      "pre"
    ],
    "sorry": [
      "ol",
      "li",
      "pre"
    ],
    "but": [
      "ol",
      "li",
      "pre"
    ],
    "we": [
      "ol",
      "li",
      "pre"
    ],
    "cannot": [
      "ol",
      "li",
      "pre"
    ],
    "complete": [
      "ol",
      "li",
      "pre"
    ],
    "your": [
      "ol",
      "li",
      "pre"
    ],
    "request": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "please": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "try": [
      "ol",
      "li",
      "pre"
    ],
    "again": [
      "ol",
      "li",
      "pre"
    ],
    "later!\";": [
      "ol",
      "li",
      "pre"
    ],
    "serverclearerror();}": [
      "ol",
      "li",
      "pre"
    ],
    "/script>": [
      "ol",
      "li",
      "pre"
    ],
    "all": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "logged": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "event": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "log": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "while": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "testing": [
      "ol",
      "li",
      "p"
    ],
    "analyze": [
      "ol",
      "li",
      "p"
    ],
    "regularly": [
      "ol",
      "li",
      "p"
    ],
    "looking": [
      "ol",
      "li",
      "p"
    ],
    "problem": [
      "h1"
    ],
    "aspnet": [
      "p"
    ],
    "has": [
      "p",
      "p"
    ],
    "connect": [
      "p"
    ],
    "sql": [
      "p",
      "p",
      "p",
      "p"
    ],
    "database": [
      "p"
    ],
    "however": [
      "p"
    ],
    "does": [
      "p",
      "p"
    ],
    "have": [
      "p"
    ],
    "generic": [
      "p"
    ],
    "specified": [
      "p",
      "p"
    ],
    "when": [
      "p",
      "p"
    ],
    "connection": [
      "p",
      "p"
    ],
    "times": [
      "p"
    ],
    "out": [
      "p"
    ],
    "revealed": [
      "p"
    ],
    "client": [
      "p"
    ],
    "description": [
      "p",
      "strong"
    ],
    "occurred": [
      "p",
      "p"
    ],
    "during": [
      "p"
    ],
    "execution": [
      "p"
    ],
    "current": [
      "p"
    ],
    "web": [
      "p"
    ],
    "review": [
      "p"
    ],
    "stack": [
      "p"
    ],
    "trace": [
      "p"
    ],
    "more": [
      "p",
      "ul",
      "li"
    ],
    "about": [
      "p",
      "ul",
      "li"
    ],
    "where": [
      "p"
    ],
    "it": [
      "p"
    ],
    "originated": [
      "p"
    ],
    "systemdata.sqlclient.sqlexception:": [
      "p"
    ],
    "establishing": [
      "p"
    ],
    "server": [
      "p",
      "p",
      "p"
    ],
    "connecting": [
      "p"
    ],
    "failure": [
      "p"
    ],
    "may": [
      "p"
    ],
    "caused": [
      "p"
    ],
    "by": [
      "p"
    ],
    "fact": [
      "p"
    ],
    "under": [
      "p"
    ],
    "default": [
      "p"
    ],
    "settings": [
      "p"
    ],
    "allow": [
      "p"
    ],
    "remote": [
      "p"
    ],
    "connections": [
      "p"
    ],
    "provider:": [
      "p"
    ],
    "network": [
      "p"
    ],
    "interfaces": [
      "p"
    ],
    "-": [
      "p"
    ],
    "locating": [
      "p"
    ],
    "server/instance": [
      "p"
    ],
    "source": [
      "p",
      "strong"
    ],
    "line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "216line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "if": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "conn.state": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "!=": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "connectionstateopen)line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "connopen();line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "219line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "cmdconnection": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "=": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "conn": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "learn": [
      "ul",
      "li"
    ],
    "creating": [
      "ul",
      "li"
    ],
    "custom": [
      "ul",
      "li"
    ],
    "errors": [
      "ul",
      "li"
    ],
    "aspnet,": [
      "ul",
      "li"
    ],
    "visit": [
      "ul",
      "li"
    ],
    "http//support.microsoft.com/kb/306355": [
      "ul",
      "li",
      "a"
    ],
    "related": [
      "h1"
    ],
    "guideline": [
      "h1",
      "ul",
      "li",
      "a"
    ],
    "asp.net)": [
      "ul",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "from": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "h1": [
      "What to Check For",
      "Why",
      "How to Check",
      "Problem Example",
      "Additional Resources",
      "Related Guideline"
    ],
    "p": [
      "A global exception handler is used to catch any unhandled exceptions. A global exception handler improves the application's robustness and minimizes the risk of information disclosure.",
      "Unhandled exceptions can be a serious stumbling block to an application's performance and security. Unhandled exceptions must be avoided as they can result in the application entering an unknown state and/or revealing sensitive internal application details. Using a global exception handler will prevent unhandled exceptions.",
      "Use the following steps to verify a global exception handler is used for unhandled exceptions:",
      "Verify that the application defines a global error handler in Global.asax to catch any exceptions that are not handled in code. The following code gives an example of how this might be done:",
      "Verify that all exceptions are logged in the application event log. While testing the application, analyze the event log regularly, looking for unhandled exceptions.",
      "An ASP.NET application has code to connect to a SQL database. However, the application does not have a generic error handler specified. As a result, when the connection times out application details are revealed to the client in the exception:",
      "Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.",
      "Exception Details: System.Data.SqlClient.SqlException: An error has occurred while establishing a connection to the server. When connecting to SQL Server, this failure may be caused by the fact that under the default settings SQL Server does not allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)",
      "Source Error:",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Verify that the application defines a global error handler in Global.asax to catch any exceptions that are not handled in code. The following code gives an example of how this might be done:\r\n      <%@ Application Language=\"C#\" %><%@ Import Namespace=\"System.Diagnostics\" %> <script language=\"C#\" runat=\"server\"> void Application_Error(object sender, EventArgs e) {     // Add the appropriate logging code        Response.Write(\"We are sorry, but we cannot complete your request. Please try again later!\");    Server.ClearError();} </script>\r\n    \r\n    \r\n      \r\n        Verify that all exceptions are logged in the application event log. While testing the application, analyze the event log regularly, looking for unhandled exceptions."
    ],
    "li": [
      "Verify that the application defines a global error handler in Global.asax to catch any exceptions that are not handled in code. The following code gives an example of how this might be done:\r\n      <%@ Application Language=\"C#\" %><%@ Import Namespace=\"System.Diagnostics\" %> <script language=\"C#\" runat=\"server\"> void Application_Error(object sender, EventArgs e) {     // Add the appropriate logging code        Response.Write(\"We are sorry, but we cannot complete your request. Please try again later!\");    Server.ClearError();} </script>",
      "Verify that all exceptions are logged in the application event log. While testing the application, analyze the event log regularly, looking for unhandled exceptions.",
      "To learn more about creating custom errors in ASP.NET, visit http://support.microsoft.com/kb/306355",
      "Guideline: Use a Global Exception Handler for Unhandled Exceptions (ASP.NET)"
    ],
    "strong": [
      "Verify that the application defines a global error handler in Global.asax",
      "Verify that all exceptions are logged in the application event log.",
      "Description:",
      "Exception Details:",
      "Source Error:"
    ],
    "pre": [
      "<%@ Application Language=\"C#\" %><%@ Import Namespace=\"System.Diagnostics\" %> <script language=\"C#\" runat=\"server\"> void Application_Error(object sender, EventArgs e) {     // Add the appropriate logging code        Response.Write(\"We are sorry, but we cannot complete your request. Please try again later!\");    Server.ClearError();} </script>",
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "table": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "tbody": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "tr": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "td": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "ul": [
      "To learn more about creating custom errors in ASP.NET, visit http://support.microsoft.com/kb/306355",
      "Guideline: Use a Global Exception Handler for Unhandled Exceptions (ASP.NET)"
    ],
    "a": [
      "http://support.microsoft.com/kb/306355",
      "Guideline: Use a Global Exception Handler for Unhandled Exceptions (ASP.NET)"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://support.microsoft.com/kb/306355",
      "text": "http://support.microsoft.com/kb/306355"
    },
    {
      "href": "/article/33a894ce-2061-4741-be92-1d063c9cf057",
      "text": "Guideline: Use a Global Exception Handler for Unhandled Exceptions (ASP.NET)"
    }
  ],
  "html": "<br />\r\n  <h1>What to Check For</h1>\r\n  <p>A global exception handler is used to catch any unhandled exceptions. A global exception handler improves the application's robustness and minimizes the risk of information disclosure.</p>\r\n  <h1>Why</h1>\r\n  <p>Unhandled exceptions can be a serious stumbling block to an application's performance and security. Unhandled exceptions must be avoided as they can result in the application entering an unknown state and/or revealing sensitive internal application details. Using a global exception handler will prevent unhandled exceptions.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to verify a global exception handler is used for unhandled exceptions:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that the application defines a global error handler in Global.asax</strong> to catch any exceptions that are not handled in code. The following code gives an example of how this might be done:</p>\r\n      <pre>&lt;%@ Application Language=\"C#\" %&gt;<br />&lt;%@ Import Namespace=\"System.Diagnostics\" %&gt;<br /> &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e) {<br />     // Add the appropriate logging code<br />        Response.Write(\"We are sorry, but we cannot complete your request. Please try again later!\");<br />    Server.ClearError();<br />}<br /> &lt;/script&gt;</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that all exceptions are logged in the application event log.</strong> While testing the application, analyze the event log regularly, looking for unhandled exceptions.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>An ASP.NET application has code to connect to a SQL database. However, the application does not have a generic error handler specified. As a result, when the connection times out application details are revealed to the client in the exception: </p>\r\n  <p>\r\n    <strong>Description:</strong> An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.</p>\r\n  <p>\r\n    <strong>Exception Details:</strong> System.Data.SqlClient.SqlException: An error has occurred while establishing a connection to the server. When connecting to SQL Server, this failure may be caused by the fact that under the default settings SQL Server does not allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)</p>\r\n  <p>\r\n    <strong>Source Error:</strong>\r\n  </p>\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <pre>Line 216:<br />Line 217:            if (conn.State != ConnectionState.Open)<br />Line 218:                conn.Open();<br />Line 219:<br />Line 220:            cmd.Connection = conn;</pre>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>To learn more about creating custom errors in ASP.NET, visit <a href=\"http://support.microsoft.com/kb/306355\">http://support.microsoft.com/kb/306355</a></li>\r\n  </ul>\r\n  <h1>Related Guideline</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/33a894ce-2061-4741-be92-1d063c9cf057\">Guideline: Use a Global Exception Handler for Unhandled Exceptions (ASP.NET)</a>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}