{
  "id": "e0f37b23-4bf9-4e95-b839-a4ba48e13d9f",
  "checksum": "ca2001eb34022fdca0d9124b97186e7af64fbae4",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p"
    ],
    "do": [
      "h1",
      "p",
      "title"
    ],
    "not": [
      "p",
      "title"
    ],
    "store": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "keys": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "title"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "title"
    ],
    "code": [
      "p",
      "p",
      "p",
      "title"
    ],
    "instead": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "dpapi": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "encrypt": [
      "p",
      "p",
      "pre"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "encryption": [
      "p"
    ],
    "key": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "it": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "protected": [
      "p",
      "p"
    ],
    "registry": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "pre"
    ],
    "create": [
      "p",
      "p",
      "pre"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p"
    ],
    "acl": [
      "p",
      "p",
      "p",
      "pre"
    ],
    "protect": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "allows": [
      "p"
    ],
    "full": [
      "p"
    ],
    "control": [
      "p"
    ],
    "for": [
      "p",
      "p"
    ],
    "administrators": [
      "p"
    ],
    "read-only": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "your": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application's": [
      "p"
    ],
    "process": [
      "p"
    ],
    "account": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "attacker": [
      "p"
    ],
    "can": [
      "p",
      "p",
      "p"
    ],
    "disassemble": [
      "p"
    ],
    "hard-coded": [
      "p"
    ],
    "compiled": [
      "p"
    ],
    "assembly": [
      "p"
    ],
    "by": [
      "p",
      "pre"
    ],
    "using": [
      "p",
      "p",
      "pre",
      "pre"
    ],
    "tools": [
      "p"
    ],
    "similar": [
      "p"
    ],
    "ildasm": [
      "p"
    ],
    "which": [
      "p"
    ],
    "will": [
      "p"
    ],
    "render": [
      "p"
    ],
    "plain": [
      "p"
    ],
    "text": [
      "p"
    ],
    "when": [
      "h1",
      "p"
    ],
    "adding": [
      "p"
    ],
    "cryptographic": [
      "p"
    ],
    "support": [
      "p"
    ],
    "application": [
      "p",
      "p",
      "p"
    ],
    "how": [
      "h1",
      "p",
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "with": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "machine": [
      "p",
      "p",
      "p"
    ],
    "encrypted": [
      "p",
      "p",
      "pre"
    ],
    "beneath": [
      "p"
    ],
    "then": [
      "p",
      "p"
    ],
    "restricts": [
      "p"
    ],
    "specific": [
      "p",
      "p"
    ],
    "identity": [
      "p"
    ],
    "restrict": [
      "p"
    ],
    "alternatively": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "pre"
    ],
    "this": [
      "p"
    ],
    "latter": [
      "p"
    ],
    "case": [
      "p"
    ],
    "need": [
      "p",
      "p"
    ],
    "load": [
      "p"
    ],
    "account's": [
      "p"
    ],
    "profile": [
      "p"
    ],
    "consider": [
      "p"
    ],
    "if": [
      "p",
      "p",
      "p"
    ],
    "is": [
      "p"
    ],
    "server": [
      "p",
      "p"
    ],
    "runs": [
      "p"
    ],
    "on": [
      "p",
      "p"
    ],
    "its": [
      "p"
    ],
    "own": [
      "p"
    ],
    "dedicated": [
      "p"
    ],
    "computer": [
      "p"
    ],
    "no": [
      "p"
    ],
    "other": [
      "p"
    ],
    "applications": [
      "p",
      "p",
      "p"
    ],
    "or": [
      "p"
    ],
    "have": [
      "p"
    ],
    "multiple": [
      "p"
    ],
    "same": [
      "p"
    ],
    "those": [
      "p"
    ],
    "be": [
      "p",
      "p",
      "pre"
    ],
    "able": [
      "p",
      "p"
    ],
    "share": [
      "p"
    ],
    "only": [
      "p"
    ],
    "want": [
      "p"
    ],
    "service": [
      "p"
    ],
    "accounts": [
      "p"
    ],
    "their": [
      "p"
    ],
    "profiles": [
      "p"
    ],
    "are": [
      "p"
    ],
    "loaded": [
      "p"
    ],
    "following": [
      "p",
      "p"
    ],
    "shows": [
      "p"
    ],
    "data": [
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "restricted": [
      "p",
      "pre"
    ],
    "systemsecurity.cryptography;using": [
      "pre"
    ],
    "systemsecurity.accesscontrol;using": [
      "pre"
    ],
    "systemtext;using": [
      "pre"
    ],
    "microsoftwin32;...": [
      "pre"
    ],
    "//": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "get": [
      "pre"
    ],
    "original": [
      "pre"
    ],
    "byte": [
      "pre"
    ],
    "arraybyte&#91&#93;": [
      "pre"
    ],
    "toencrypt": [
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "unicodeencodingascii.getbytes(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "\"the": [
      "pre"
    ],
    "encrypted\";": [
      "pre"
    ],
    "protecteddata": [
      "pre"
    ],
    "classbyte&#91;&#93;": [
      "pre"
    ],
    "encrypteddata": [
      "pre"
    ],
    "protecteddataprotect(toencrypt,": [
      "pre"
    ],
    "null&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "dataprotectionscopelocalmachine);": [
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre"
    ],
    "write": [
      "pre"
    ],
    "stream": [
      "pre"
    ],
    "of": [
      "pre"
    ],
    "bytes": [
      "pre"
    ],
    "keystring": [
      "pre"
    ],
    "environmentuserdomainname": [
      "pre"
    ],
    "&#43": [
      "pre",
      "pre"
    ],
    "\"\\\\\"": [
      "pre"
    ],
    "environmentusername;registrysecurity": [
      "pre"
    ],
    "security": [
      "pre"
    ],
    "registrysecurity);registryaccessrule": [
      "pre"
    ],
    "rule": [
      "pre"
    ],
    "registryaccessruleuser,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "registryrightsfullcontrol,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "inheritanceflagscontainerinherit,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "propagationflagsnone,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "accesscontroltypeallow);security.addaccessrule(rule);": [
      "pre"
    ],
    "registrycurrentuser.createsubkey(\"testencrypteddata\",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "registrykeypermissioncheckreadwritesubtree,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "security;registry.setvalue(&#64;\"hkey_current_user\\testencrypteddata\",": [
      "pre"
    ],
    "\"encrypted\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "encrypteddata;": [
      "pre"
    ],
    "decrypt": [
      "p",
      "pre"
    ],
    "stored": [
      "p"
    ],
    "read": [
      "pre"
    ],
    "from": [
      "pre",
      "p"
    ],
    "contents": [
      "pre"
    ],
    "byte&#91&#93;": [
      "pre"
    ],
    "datafromregistry": [
      "pre"
    ],
    "registrygetvalue(&#64;\"hkey_current_user\\testencrypteddata\",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "\"encrypted\"": [
      "pre"
    ],
    "null": [
      "pre"
    ],
    "as": [
      "pre"
    ],
    "byte&#91&#93;;byte&#91;&#93;": [
      "pre"
    ],
    "decrypteddata": [
      "pre"
    ],
    "protecteddataunprotect(datafromregistry,": [
      "pre"
    ],
    "null&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "pre"
    ],
    "dataprotectionscopelocalmachine);&nbsp;": [
      "pre"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "sink]": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How"
    ],
    "p": [
      "Do not store keys in code. Instead use DPAPI to encrypt the encryption key and store it in a protected registry key. Create an ACL to protect the registry key that allows full control for administrators and read-only access for your application's process account.",
      "an attacker can disassemble hard-coded keys in your compiled assembly by using tools similar to ILDASM, which will render your key in plain text.",
      "When adding cryptographic support to your application.",
      "You can use DPAPI with the machine key to encrypt the keys, store the encrypted keys beneath a registry key, and then use an ACL that restricts access to your specific application identity to restrict access to the registry key. Alternatively, you can use DPAPI with the user store. In this latter case, you need to load the user account's profile to access the key.",
      "Consider using the machine store if your application is a server that runs on its own dedicated computer with no other applications, or if you have multiple applications on the same server and you need those applications to be able to share the keys. If you only want specific service accounts to be able to access the DPAPI keys and their profiles are loaded, then use DPAPI with the user store.",
      "The following code shows how to create a registry key protected with an ACL and how to use DPAPI with the machine store to store encrypted data in the restricted key.",
      "Use the following code to decrypt the Keys stored in the registry.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "pre": [
      "using System.Security.Cryptography;using System.Security.AccessControl;using System.Text;using Microsoft.Win32;...",
      "// Get the original data in a byte arraybyte&#91;&#93; toEncrypt = UnicodeEncoding.ASCII.GetBytes(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"The Keys to be encrypted\");",
      "// Encrypt the data by using the ProtectedData class.byte&#91;&#93; encryptedData = ProtectedData.Protect(toEncrypt, null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataProtectionScope.LocalMachine);",
      "// Create a new key in the registry with a restricted ACL // and write stream of bytes to the registry keystring user = Environment.UserDomainName &#43; \"\\\\\" &#43; Environment.UserName;RegistrySecurity security = new RegistrySecurity();RegistryAccessRule rule = new RegistryAccessRule(user,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RegistryRights.FullControl,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InheritanceFlags.ContainerInherit,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PropagationFlags.None,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AccessControlType.Allow);security.AddAccessRule(rule);",
      "Registry.CurrentUser.CreateSubKey(\"TestEncryptedData\",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RegistryKeyPermissionCheck.ReadWriteSubTree,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; security);Registry.SetValue(&#64;\"HKEY_CURRENT_USER\\TestEncryptedData\", \"Encrypted\",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; encryptedData);",
      "// Read the encrypted data from registry and decrypt the contents byte&#91;&#93; dataFromRegistry = Registry.GetValue(&#64;\"HKEY_CURRENT_USER\\TestEncryptedData\",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Encrypted\", null) as byte&#91;&#93;;byte&#91;&#93; decryptedData = ProtectedData.Unprotect(dataFromRegistry, null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataProtectionScope.LocalMachine);&nbsp;"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Do</h1>\n  <p>Do not store keys in code. Instead use DPAPI to encrypt the encryption key and store it in a protected registry key. Create an ACL to protect the registry key that allows full control for administrators and read-only access for your application's process account.</p>\n  <h1>Why</h1>\n  <p>an attacker can disassemble hard-coded keys in your compiled assembly by using tools similar to ILDASM, which will render your key in plain text.</p>\n  <h1>When</h1>\n  <p>When adding cryptographic support to your application.</p>\n  <h1>How</h1>\n  <p>You can use DPAPI with the machine key to encrypt the keys, store the encrypted keys beneath a registry key, and then use an ACL that restricts access to your specific application identity to restrict access to the registry key. Alternatively, you can use DPAPI with the user store. In this latter case, you need to load the user account's profile to access the key.</p>\n  <p>Consider using the machine store if your application is a server that runs on its own dedicated computer with no other applications, or if you have multiple applications on the same server and you need those applications to be able to share the keys. If you only want specific service accounts to be able to access the DPAPI keys and their profiles are loaded, then use DPAPI with the user store.</p>\n  <p>The following code shows how to create a registry key protected with an ACL and how to use DPAPI with the machine store to store encrypted data in the restricted key.</p>\n  <pre>using System.Security.Cryptography;<br />using System.Security.AccessControl;<br />using System.Text;<br />using Microsoft.Win32;<br />...</pre>\n  <pre>// Get the original data in a byte array<br />byte&amp;#91;&amp;#93; toEncrypt = UnicodeEncoding.ASCII.GetBytes(<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; \"The Keys to be encrypted\");</pre>\n  <pre>// Encrypt the data by using the ProtectedData class.<br />byte&amp;#91;&amp;#93; encryptedData = ProtectedData.Protect(toEncrypt, null,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; DataProtectionScope.LocalMachine);</pre>\n  <pre>// Create a new key in the registry with a restricted ACL <br />// and write stream of bytes to the registry key<br />string user = Environment.UserDomainName &amp;#43; \"\\\\\" &amp;#43; Environment.UserName;<br />RegistrySecurity security = new RegistrySecurity();<br />RegistryAccessRule rule = new RegistryAccessRule(user,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; RegistryRights.FullControl,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; InheritanceFlags.ContainerInherit,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; PropagationFlags.None,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; AccessControlType.Allow);<br />security.AddAccessRule(rule);</pre>\n  <pre>Registry.CurrentUser.CreateSubKey(\"TestEncryptedData\",<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; RegistryKeyPermissionCheck.ReadWriteSubTree,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; security);<br />Registry.SetValue(&amp;#64;\"HKEY_CURRENT_USER\\TestEncryptedData\", \"Encrypted\",<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; encryptedData);</pre>\n  <p>Use the following code to decrypt the Keys stored in the registry.</p>\n  <pre>// Read the encrypted data from registry and decrypt the contents <br />byte&amp;#91;&amp;#93; dataFromRegistry = Registry.GetValue(<br />&amp;#64;\"HKEY_CURRENT_USER\\TestEncryptedData\",<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; \"Encrypted\", null) as byte&amp;#91;&amp;#93;;<br />byte&amp;#91;&amp;#93; decryptedData = ProtectedData.Unprotect(dataFromRegistry, null,<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; DataProtectionScope.LocalMachine);&amp;nbsp;</pre>\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>"
}