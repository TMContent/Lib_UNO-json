{
  "id": "fd97f26a-1730-46c1-84ca-10fc44206c81",
  "checksum": "fc9cc34120b4703769071265922fe97e25d55eb9",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "check": [
      "h1",
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "for": [
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "ensure": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "your": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "application": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "creates": [
      "p"
    ],
    "specific": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "roles": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "li",
      "li",
      "ol",
      "li"
    ],
    "different": [
      "p"
    ],
    "types": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "ol",
      "li",
      "p"
    ],
    "users": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "p"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "when": [
      "p",
      "p"
    ],
    "authorizing": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "resource": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "that&nbspsecurity": [
      "p"
    ],
    "checks": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "are": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "p",
      "li",
      "ol",
      "li"
    ],
    "performed": [
      "p"
    ],
    "on": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "ol",
      "li"
    ],
    "per-role": [
      "p"
    ],
    "basis": [
      "p",
      "p"
    ],
    "rather": [
      "p"
    ],
    "than": [
      "p"
    ],
    "per-user": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "allow": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "pre",
      "li",
      "pre",
      "p",
      "pre"
    ],
    "multiple": [
      "p"
    ],
    "play": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "blockquote",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "same": [
      "p"
    ],
    "role": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "li"
    ],
    "this": [
      "p"
    ],
    "mechanism": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "provides": [
      "p"
    ],
    "clear": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "way": [
      "p"
    ],
    "discover": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "manage": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p"
    ],
    "least": [
      "p"
    ],
    "privileges": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "necessary": [
      "p"
    ],
    "execution": [
      "p"
    ],
    "given": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "task": [
      "p"
    ],
    "and&nbspprovides": [
      "p"
    ],
    "more": [
      "p",
      "ul",
      "li"
    ],
    "robust&nbspmeans": [
      "p"
    ],
    "managing": [
      "p"
    ],
    "application's": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "how": [
      "h1"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "li",
      "p",
      "p"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "steps": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "determine": [
      "p"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "blockquote",
      "pre",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "uses": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "role-based": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "controls": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "p",
      "li",
      "p"
    ],
    "user": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "li"
    ],
    "that": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "has": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "established": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "grants": [
      "ol",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "ol",
      "li",
      "p"
    ],
    "their": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "within": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "should": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "defined": [
      "ol",
      "li",
      "p"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "documentation": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "they": [
      "ol",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "li",
      "p"
    ],
    "examined": [
      "ol",
      "li",
      "p"
    ],
    "context": [
      "ol",
      "li",
      "p"
    ],
    "business": [
      "ol",
      "li",
      "p"
    ],
    "purpose": [
      "ol",
      "li",
      "p"
    ],
    "them": [
      "ol",
      "li",
      "p"
    ],
    "checked": [
      "ol",
      "li",
      "p"
    ],
    "against": [
      "ol",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ol",
      "li"
    ],
    "implemented": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "h1"
    ],
    "actions": [
      "ol",
      "li",
      "pre"
    ],
    "client": [
      "ol",
      "li",
      "pre"
    ],
    "accounts--------------------------------------------------------manager": [
      "ol",
      "li",
      "pre"
    ],
    "connect": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li"
    ],
    "always": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "read": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "occasionally": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "modify": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "never": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "employee": [
      "ol",
      "li",
      "pre"
    ],
    "enforces": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "security": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "maps": [
      "ol",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "roles&nbsp;ensure": [
      "ol",
      "li",
      "p"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "li",
      "title"
    ],
    "sufficiently": [
      "ol",
      "li",
      "p"
    ],
    "fine": [
      "ol",
      "li",
      "p"
    ],
    "grained": [
      "ol",
      "li",
      "p"
    ],
    "remember": [
      "ol",
      "li",
      "p"
    ],
    "goal": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "title"
    ],
    "segment": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "not": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "simply": [
      "ol",
      "li",
      "p"
    ],
    "control": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ol",
      "li",
      "strong",
      "p"
    ],
    "entire": [
      "ol",
      "li",
      "p"
    ],
    "mapped": [
      "ol",
      "li",
      "p"
    ],
    "pages": [
      "ol",
      "li",
      "p"
    ],
    "or": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "functions": [
      "ol",
      "li",
      "p"
    ],
    "depending": [
      "ol",
      "li",
      "p"
    ],
    "design": [
      "ol",
      "li",
      "p"
    ],
    "there": [
      "ol",
      "li",
      "p"
    ],
    "several": [
      "ol",
      "li",
      "p"
    ],
    "ways": [
      "ol",
      "li",
      "p"
    ],
    "checking": [
      "ol",
      "li",
      "p"
    ],
    "whether": [
      "ol",
      "li",
      "p"
    ],
    "programmatically": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "strong"
    ],
    "embedded": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "inside": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "base": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "ol",
      "li"
    ],
    "functionality": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "requires": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "special": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "protected": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "permissions": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "associated": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "verifies": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "share": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "holders": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "before": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "generating": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "financial": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "blockquote",
      "pre"
    ],
    "report": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "public": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "void": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "generatefinancialreportdatetime": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "startdate": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "datetime": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "enddate&#123;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "httpcontext.current.user.isinrole(\"shareholders\"))&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "&#123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "//": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "generate": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "relevant": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "report&nbsp&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "&#125&#125;": [
      "ol",
      "li",
      "ul",
      "li",
      "blockquote",
      "pre"
    ],
    "declarative": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "strong"
    ],
    "examine": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "webconfig": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "file": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "resources": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "h1"
    ],
    "granted": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "according": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "requirements": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "configuration": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "rolemanager": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "a"
    ],
    "aspnet": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "li"
    ],
    "manager": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "li"
    ],
    "configured": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li"
    ],
    "element": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "a"
    ],
    "form-based": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "authentication": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "pre",
      "li",
      "p"
    ],
    "authorization": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "title"
    ],
    "settings": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "a"
    ],
    "encapsulated": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "by": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p",
      "strong"
    ],
    "allowed": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "enumerated": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "deny": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "strong",
      "pre",
      "li",
      "pre",
      "p",
      "pre"
    ],
    "denied": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "example<configuration>&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "system.web>&nbsp;&nbsp;&nbsp;": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "enabled=\"true\"&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "cacherolesincookie=\"false\"&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "defaultprovider=\"projectroleprovider\"&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "add": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "name=\"projectroleprovider\"&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "type=\"systemweb.security.sqlroleprovider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "connectionstringname=\"projectconnection\"&nbsp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "applicationname=\"myapp\"": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "roles=\"employees": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "managers\"": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "users=\"&#42\"": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre",
      "li",
      "pre",
      "p",
      "pre"
    ],
    "/check": [
      "ol"
    ],
    "managed": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "windows": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "local": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "groups": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "needs": [
      "ol",
      "li",
      "p"
    ],
    "properlyexample:<configuration>&nbsp;": [
      "ol",
      "li"
    ],
    "mode=\"windows\"": [
      "ol",
      "li",
      "pre"
    ],
    "/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "pre"
    ],
    "authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;": [
      "ol",
      "li",
      "pre"
    ],
    "roles=\"ntdomain\\employees": [
      "ol",
      "li",
      "pre"
    ],
    "ntdomain\\managers\"": [
      "ol",
      "li",
      "pre"
    ],
    "/": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "pre",
      "li",
      "pre",
      "p",
      "pre"
    ],
    "assigned": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li"
    ],
    "into": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "li"
    ],
    "list": [
      "ol",
      "li",
      "p"
    ],
    "users&nbsp;check": [
      "ol",
      "li",
      "p"
    ],
    "apply": [
      "ol",
      "li",
      "p"
    ],
    "policy": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "instead": [
      "ol",
      "li",
      "p"
    ],
    "actual": [
      "ol",
      "li",
      "p"
    ],
    "based": [
      "ol",
      "li",
      "p"
    ],
    "enforce": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "one": [
      "ol",
      "li",
      "p"
    ],
    "techniques": [
      "ol",
      "li",
      "p"
    ],
    "allows": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "through": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "class": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "methods": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "assign": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "addusertorole": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "addusertoroles": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "adduserstorole": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "adduserstoroles": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "remove": [
      "ol",
      "p"
    ],
    "from": [
      "ol",
      "p",
      "p"
    ],
    "removeuserfromrole": [
      "ol",
      "ul",
      "li",
      "strong"
    ],
    "removeuserfromroles": [
      "ol",
      "ul",
      "li",
      "strong"
    ],
    "removeusersfromrole": [
      "ol",
      "ul",
      "li",
      "strong"
    ],
    "removeusersfromroles": [
      "ol",
      "ul",
      "li",
      "strong"
    ],
    "do": [
      "ol",
      "li"
    ],
    "so": [
      "ol",
      "li"
    ],
    "database": [
      "ol",
      "li"
    ],
    "server": [
      "ol",
      "li"
    ],
    "hosts": [
      "ol",
      "li"
    ],
    "tables": [
      "ol",
      "li"
    ],
    "aspnet_users": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "aspnet_roles": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "aspnet_usersinroleswindows": [
      "ol"
    ],
    "service": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "connected": [
      "ol",
      "li",
      "p"
    ],
    "organization's": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "nt": [
      "ol",
      "li",
      "p"
    ],
    "domain": [
      "ol",
      "li",
      "p"
    ],
    "active": [
      "ol",
      "li",
      "p"
    ],
    "directory": [
      "ol",
      "li",
      "p"
    ],
    "forest": [
      "ol",
      "li",
      "p"
    ],
    "delegate": [
      "ol",
      "li",
      "p"
    ],
    "management": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "strong"
    ],
    "network": [
      "ol",
      "li",
      "p"
    ],
    "administratorsto": [
      "ol",
      "li"
    ],
    "serviceopen": [
      "ol",
      "li"
    ],
    "panel": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "-": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "strong"
    ],
    "administrative": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "tools": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "computer": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "under": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "system": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "node": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "navigation": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "tree": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "select": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "double-click": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "respective": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "group": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "only": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "added": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "members": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "click": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "cancel": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "repeat": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "4-6": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "configuration>&nbsp;": [
      "pre",
      "pre"
    ],
    "properly": [
      "p"
    ],
    "aspnet_usersinroles": [
      "li",
      "ul",
      "li"
    ],
    "administrators": [
      "p"
    ],
    "open": [
      "ol",
      "li"
    ],
    "problem": [
      "h1"
    ],
    "illustrates": [
      "p"
    ],
    "an": [
      "p"
    ],
    "because": [
      "p"
    ],
    "does": [
      "p"
    ],
    "entry": [
      "p"
    ],
    "separate": [
      "p"
    ],
    "user&nbsp;this": [
      "p"
    ],
    "will": [
      "p"
    ],
    "make&nbspmanaging": [
      "p"
    ],
    "users'": [
      "p"
    ],
    "rights": [
      "p"
    ],
    "quite": [
      "p"
    ],
    "difficult": [
      "p"
    ],
    "number": [
      "p"
    ],
    "grows": [
      "p"
    ],
    "authorization>": [
      "p",
      "pre"
    ],
    "users=\"ntdomain\\joe": [
      "p",
      "pre"
    ],
    "ntdomain\\sarah": [
      "p",
      "pre"
    ],
    "ntdomain\\bill": [
      "p",
      "pre"
    ],
    "ntdomain\\sue\"": [
      "p",
      "pre"
    ],
    "/</authorization>": [
      "p",
      "pre"
    ],
    "additional": [
      "h1"
    ],
    "learn": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "webconfig,": [
      "ul",
      "li"
    ],
    "visit": [
      "ul",
      "li"
    ],
    "asp.net": [
      "ul",
      "li",
      "a"
    ],
    "schema": [
      "ul",
      "li",
      "a"
    ],
    "msdn": [
      "ul",
      "li"
    ],
    "related": [
      "h1"
    ],
    "guideline": [
      "h1",
      "ul",
      "li",
      "a"
    ],
    "perform": [
      "ul",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "sink]": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How to Check",
      "Problem Example",
      "Additional Resources",
      "Related Guideline"
    ],
    "p": [
      "Ensure your application creates specific roles for different types of users. Verify when authorizing access to a resource that&nbsp;security checks are performed on a per-role basis rather than on a per-user basis.",
      "Application roles allow multiple users to play the same role. This mechanism provides a clear way to discover and manage the least privileges necessary for the execution of a given task and&nbsp;provides a more robust&nbsp;means of managing the application's users.",
      "Use the following steps to determine if your application uses role-based access controls:",
      "Check if your application uses user roles. Verify that your application has established user roles and grants the appropriate access privileges to each user role. The roles and their privileges within the application should be defined in the documentation, to ensure that they have been examined in the context of the business purpose of the application, and to allow them to be checked against the application as implemented. Example:",
      "Ensure that your application enforces role-based security. Verify that your application maps its access controls to the established user roles.&nbsp;Ensure that the roles used are sufficiently fine grained. Remember that the goal is to segment privileges within the application, not to simply control access to the entire application. Roles should be mapped to specific pages or functions within the application. Depending on your application's design, there are several ways of checking whether your application enforces role-based security:",
      "Check for programmatically role-based security: If your application has security checks embedded inside its code base, identify all functionality that requires special privileges. Verify that each protected functionality has a permissions check associated with it.",
      "For example, the following code verifies that users are share holders before generating the appropriate financial report:",
      "Check for declarative role-based security: If your application uses declarative security, examine its web.config file. Verify that access to protected resources is granted according to the application's security requirements. Check that each resource is associated with the appropriate user roles in the configuration file: roleManager: Check that the ASP.NET role manager is configured using the roleManager element if form-based authentication is used. authorization: Check that the authorization settings for a resource are encapsulated by the authorization element. allow: Check that the users and roles that are allowed access to the given resource are enumerated. deny: Check that the users and roles that are denied access to the given resource are enumerated. Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "Example:",
      "Check for role-based security managed by Windows: If your application uses Windows Local Users and Groups to manage its role-based security needs, verify that your application's web.config is configured properly.",
      "Example:",
      "Verify that users are assigned into their appropriate roles. List all of your application's users.&nbsp;Check if each user is assigned into their appropriate role. The application should apply the security policy according to the user roles instead of the actual user. Based on your application's mechanism to enforce role-based access controls, check that one of the following techniques is used to manage your application's users",
      "Programmatically: ASP.NET allows you to manage your application's users through the Roles class.",
      "Check that the following methods are used to assign users into roles:",
      "Check that the following methods are used to remove users from roles:",
      "Windows: If your application uses Windows authentication, use the Windows Local Users and Groups service to manage your application's users. If your application is connected to your organization's NT Domain or Active Directory forest, delegate the user and role management to your organization's network administrators.",
      "To use the Windows Local Users and Groups service:",
      "The following segment illustrates an application's access control policy. Because the application does not enforce role-based security, it has a policy entry for each separate user.&nbsp;This will make&nbsp;managing the users' access rights quite difficult when the number of users to the application grows.",
      "<authorization>  <allow users=\"NTDomain\\joe, NTDomain\\sarah, NTDomain\\bill, NTDomain\\sue\" />  <deny users=\"&#42;\" /></authorization>",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Check if your application uses user roles. Verify that your application has established user roles and grants the appropriate access privileges to each user role. The roles and their privileges within the application should be defined in the documentation, to ensure that they have been examined in the context of the business purpose of the application, and to allow them to be checked against the application as implemented. Example:\n      Roles      Actions    Access Controls    Client Accounts--------------------------------------------------------Manager    Connect        Always            Always           Read           Always            Always           Use            Always            Occasionally           Modify         Never             Occasionally Employee   Connect        Always            Always           Read           Always            Always           Use            Always            Always           Modify         Never             Never\n      \n        \n          Ensure that your application enforces role-based security. Verify that your application maps its access controls to the established user roles.&nbsp;Ensure that the roles used are sufficiently fine grained. Remember that the goal is to segment privileges within the application, not to simply control access to the entire application. Roles should be mapped to specific pages or functions within the application. Depending on your application's design, there are several ways of checking whether your application enforces role-based security: \n        \n          \n            \n              Check for programmatically role-based security: If your application has security checks embedded inside its code base, identify all functionality that requires special privileges. Verify that each protected functionality has a permissions check associated with it.\n            For example, the following code verifies that users are share holders before generating the appropriate financial report:\n            \n              public void GenerateFinancialReport(DateTime startDate, DateTime endDate)&#123;&nbsp;&nbsp;&nbsp; if (HttpContext.Current.User.IsInRole(\"ShareHolders\"))&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Generate the relevant financial report&nbsp;&nbsp;&nbsp; &#125;&#125;\n            \n            \n              \n              Check for declarative role-based security: If your application uses declarative security, examine its web.config file. Verify that access to protected resources is granted according to the application's security requirements. Check that each resource is associated with the appropriate user roles in the configuration file: roleManager: Check that the ASP.NET role manager is configured using the roleManager element if form-based authentication is used. authorization: Check that the authorization settings for a resource are encapsulated by the authorization element. allow: Check that the users and roles that are allowed access to the given resource are enumerated. deny: Check that the users and roles that are denied access to the given resource are enumerated. Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />Check for role-based security managed by Windows: If your application uses Windows Local Users and Groups to manage its role-based security needs, verify that your application's web.config is configured properly.Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <authentication mode=\"Windows\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"NTDomain\\Employees, NTDomain\\Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />\n          \n        \n        \n        \n        \n          \n            Verify that users are assigned into their appropriate roles. List all of your application's users.&nbsp;Check if each user is assigned into their appropriate role. The application should apply the security policy according to the user roles instead of the actual user. Based on your application's mechanism to enforce role-based access controls, check that one of the following techniques is used to manage your application's users\n          \n            \n              \n                Programmatically: ASP.NET allows you to manage your application's users through the Roles class.\n              Check that the following methods are used to assign users into roles: \n              \n                \n                  AddUserToRole\n                  \n                    AddUserToRoles\n                    \n                      AddUsersToRole\n                      \n                        AddUsersToRoles\n                      \n                    \n                  \n                \n              \n              Check that the following methods are used to remove users from roles:\n              \n                \n                  RemoveUserFromRole\n                  \n                    RemoveUserFromRoles\n                    \n                      RemoveUsersFromRole\n                      \n                        RemoveUsersFromRoles \n                      \n                    \n                  \n                \n              \n              \n                Declarative: Verify that the ASP.NET Role Manager is used to manage your application's users. To do so, connect to the database server that hosts your application's Role Manager. Using the following tables, verify that each user is assigned into the appropriate roles: aspnet_Users aspnet_Roles aspnet_UsersInRolesWindows: If your application uses Windows authentication, use the Windows Local Users and Groups service to manage your application's users. If your application is connected to your organization's NT Domain or Active Directory forest, delegate the user and role management to your organization's network administrators.To use the Windows Local Users and Groups service:Open Control Panel -> Administrative Tools -> Computer Management. Under the System Tools node in the navigation tree, select Local Users and Groups. Select Groups. For each role, double-click on the respective group. Verify that only the appropriate users are added as members for the given group. Click Cancel. Repeat steps 4-6 for all of your application's user roles.",
      "Open Control Panel -> Administrative Tools -> Computer Management. Under the System Tools node in the navigation tree, select Local Users and Groups. Select Groups. For each role, double-click on the respective group. Verify that only the appropriate users are added as members for the given group. Click Cancel. Repeat steps 4-6 for all of your application's user roles."
    ],
    "li": [
      "Check if your application uses user roles. Verify that your application has established user roles and grants the appropriate access privileges to each user role. The roles and their privileges within the application should be defined in the documentation, to ensure that they have been examined in the context of the business purpose of the application, and to allow them to be checked against the application as implemented. Example:\n      Roles      Actions    Access Controls    Client Accounts--------------------------------------------------------Manager    Connect        Always            Always           Read           Always            Always           Use            Always            Occasionally           Modify         Never             Occasionally Employee   Connect        Always            Always           Read           Always            Always           Use            Always            Always           Modify         Never             Never",
      "Ensure that your application enforces role-based security. Verify that your application maps its access controls to the established user roles.&nbsp;Ensure that the roles used are sufficiently fine grained. Remember that the goal is to segment privileges within the application, not to simply control access to the entire application. Roles should be mapped to specific pages or functions within the application. Depending on your application's design, there are several ways of checking whether your application enforces role-based security: \n        \n          \n            \n              Check for programmatically role-based security: If your application has security checks embedded inside its code base, identify all functionality that requires special privileges. Verify that each protected functionality has a permissions check associated with it.\n            For example, the following code verifies that users are share holders before generating the appropriate financial report:\n            \n              public void GenerateFinancialReport(DateTime startDate, DateTime endDate)&#123;&nbsp;&nbsp;&nbsp; if (HttpContext.Current.User.IsInRole(\"ShareHolders\"))&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Generate the relevant financial report&nbsp;&nbsp;&nbsp; &#125;&#125;\n            \n            \n              \n              Check for declarative role-based security: If your application uses declarative security, examine its web.config file. Verify that access to protected resources is granted according to the application's security requirements. Check that each resource is associated with the appropriate user roles in the configuration file: roleManager: Check that the ASP.NET role manager is configured using the roleManager element if form-based authentication is used. authorization: Check that the authorization settings for a resource are encapsulated by the authorization element. allow: Check that the users and roles that are allowed access to the given resource are enumerated. deny: Check that the users and roles that are denied access to the given resource are enumerated. Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "Check for programmatically role-based security: If your application has security checks embedded inside its code base, identify all functionality that requires special privileges. Verify that each protected functionality has a permissions check associated with it.\n            For example, the following code verifies that users are share holders before generating the appropriate financial report:\n            \n              public void GenerateFinancialReport(DateTime startDate, DateTime endDate)&#123;&nbsp;&nbsp;&nbsp; if (HttpContext.Current.User.IsInRole(\"ShareHolders\"))&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Generate the relevant financial report&nbsp;&nbsp;&nbsp; &#125;&#125;",
      "Check for declarative role-based security: If your application uses declarative security, examine its web.config file. Verify that access to protected resources is granted according to the application's security requirements. Check that each resource is associated with the appropriate user roles in the configuration file: roleManager: Check that the ASP.NET role manager is configured using the roleManager element if form-based authentication is used. authorization: Check that the authorization settings for a resource are encapsulated by the authorization element. allow: Check that the users and roles that are allowed access to the given resource are enumerated. deny: Check that the users and roles that are denied access to the given resource are enumerated. Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "roleManager: Check that the ASP.NET role manager is configured using the roleManager element if form-based authentication is used.",
      "authorization: Check that the authorization settings for a resource are encapsulated by the authorization element.",
      "allow: Check that the users and roles that are allowed access to the given resource are enumerated.",
      "deny: Check that the users and roles that are denied access to the given resource are enumerated. Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "Check for role-based security managed by Windows: If your application uses Windows Local Users and Groups to manage its role-based security needs, verify that your application's web.config is configured properly.Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <authentication mode=\"Windows\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"NTDomain\\Employees, NTDomain\\Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "Verify that users are assigned into their appropriate roles. List all of your application's users.&nbsp;Check if each user is assigned into their appropriate role. The application should apply the security policy according to the user roles instead of the actual user. Based on your application's mechanism to enforce role-based access controls, check that one of the following techniques is used to manage your application's users\n          \n            \n              \n                Programmatically: ASP.NET allows you to manage your application's users through the Roles class.\n              Check that the following methods are used to assign users into roles: \n              \n                \n                  AddUserToRole\n                  \n                    AddUserToRoles\n                    \n                      AddUsersToRole\n                      \n                        AddUsersToRoles",
      "Programmatically: ASP.NET allows you to manage your application's users through the Roles class.\n              Check that the following methods are used to assign users into roles: \n              \n                \n                  AddUserToRole\n                  \n                    AddUserToRoles\n                    \n                      AddUsersToRole\n                      \n                        AddUsersToRoles",
      "AddUserToRole",
      "AddUserToRoles",
      "AddUsersToRole",
      "AddUsersToRoles",
      "RemoveUserFromRole",
      "RemoveUserFromRoles",
      "RemoveUsersFromRole",
      "RemoveUsersFromRoles",
      "Declarative: Verify that the ASP.NET Role Manager is used to manage your application's users. To do so, connect to the database server that hosts your application's Role Manager. Using the following tables, verify that each user is assigned into the appropriate roles: aspnet_Users aspnet_Roles aspnet_UsersInRoles",
      "aspnet_Users",
      "aspnet_Roles",
      "aspnet_UsersInRoles",
      "Windows: If your application uses Windows authentication, use the Windows Local Users and Groups service to manage your application's users. If your application is connected to your organization's NT Domain or Active Directory forest, delegate the user and role management to your organization's network administrators.To use the Windows Local Users and Groups service:Open Control Panel -> Administrative Tools -> Computer Management. Under the System Tools node in the navigation tree, select Local Users and Groups. Select Groups. For each role, double-click on the respective group. Verify that only the appropriate users are added as members for the given group. Click Cancel. Repeat steps 4-6 for all of your application's user roles.",
      "Open Control Panel -> Administrative Tools -> Computer Management.",
      "Under the System Tools node in the navigation tree, select Local Users and Groups.",
      "Select Groups.",
      "For each role, double-click on the respective group.",
      "Verify that only the appropriate users are added as members for the given group.",
      "Click Cancel.",
      "Repeat steps 4-6 for all of your application's user roles.",
      "To learn more about the roleManager element in web.config, visit: Documentation for roleManager Element (ASP.NET Settings Schema) in MSDN.",
      "Guideline: Perform Role-Based Security Checks"
    ],
    "strong": [
      "Check if your application uses user roles.",
      "Ensure that your application enforces role-based security.",
      "Check for programmatically role-based security:",
      "Check for declarative role-based security:",
      "web.config",
      "roleManager",
      "roleManager",
      "authorization",
      "authorization",
      "allow",
      "deny",
      "Check for role-based security managed by Windows:",
      "Local Users and Groups",
      "Verify that users are assigned into their appropriate roles.",
      "Programmatically:",
      "Roles",
      "AddUserToRole",
      "AddUserToRoles",
      "AddUsersToRole",
      "AddUsersToRoles",
      "RemoveUserFromRole",
      "RemoveUserFromRoles",
      "RemoveUsersFromRole",
      "RemoveUsersFromRoles",
      "Declarative:",
      "Windows:",
      "Local Users and Groups",
      "Local Users and Groups",
      "Control Panel -> Administrative Tools -> Computer Management",
      "System Tools",
      "Local Users and Groups",
      "Groups",
      "Cancel"
    ],
    "pre": [
      "Roles      Actions    Access Controls    Client Accounts--------------------------------------------------------Manager    Connect        Always            Always           Read           Always            Always           Use            Always            Occasionally           Modify         Never             Occasionally Employee   Connect        Always            Always           Read           Always            Always           Use            Always            Always           Modify         Never             Never",
      "public void GenerateFinancialReport(DateTime startDate, DateTime endDate)&#123;&nbsp;&nbsp;&nbsp; if (HttpContext.Current.User.IsInRole(\"ShareHolders\"))&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Generate the relevant financial report&nbsp;&nbsp;&nbsp; &#125;&#125;",
      "<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <authentication mode=\"Windows\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"NTDomain\\Employees, NTDomain\\Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "<authorization>  <allow users=\"NTDomain\\joe, NTDomain\\sarah, NTDomain\\bill, NTDomain\\sue\" />  <deny users=\"&#42;\" /></authorization>"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "ul": [
      "Check for programmatically role-based security: If your application has security checks embedded inside its code base, identify all functionality that requires special privileges. Verify that each protected functionality has a permissions check associated with it.\n            For example, the following code verifies that users are share holders before generating the appropriate financial report:\n            \n              public void GenerateFinancialReport(DateTime startDate, DateTime endDate)&#123;&nbsp;&nbsp;&nbsp; if (HttpContext.Current.User.IsInRole(\"ShareHolders\"))&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Generate the relevant financial report&nbsp;&nbsp;&nbsp; &#125;&#125;\n            \n            \n              \n              Check for declarative role-based security: If your application uses declarative security, examine its web.config file. Verify that access to protected resources is granted according to the application's security requirements. Check that each resource is associated with the appropriate user roles in the configuration file: roleManager: Check that the ASP.NET role manager is configured using the roleManager element if form-based authentication is used. authorization: Check that the authorization settings for a resource are encapsulated by the authorization element. allow: Check that the users and roles that are allowed access to the given resource are enumerated. deny: Check that the users and roles that are denied access to the given resource are enumerated. Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "roleManager: Check that the ASP.NET role manager is configured using the roleManager element if form-based authentication is used. authorization: Check that the authorization settings for a resource are encapsulated by the authorization element. allow: Check that the users and roles that are allowed access to the given resource are enumerated. deny: Check that the users and roles that are denied access to the given resource are enumerated. Example:<configuration>&nbsp; <system.web>&nbsp;&nbsp;&nbsp; <roleManager enabled=\"true\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"false\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"ProjectRoleProvider\">&nbsp;&nbsp;&nbsp; <providers>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <clear />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <add name=\"ProjectRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.SqlRoleProvider\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"ProjectConnection\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"myapp\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <authorization>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <allow roles=\"Employees, Managers\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <deny users=\"&#42;\" />",
      "",
      "Programmatically: ASP.NET allows you to manage your application's users through the Roles class.\n              Check that the following methods are used to assign users into roles: \n              \n                \n                  AddUserToRole\n                  \n                    AddUserToRoles\n                    \n                      AddUsersToRole\n                      \n                        AddUsersToRoles",
      "AddUserToRole\n                  \n                    AddUserToRoles\n                    \n                      AddUsersToRole\n                      \n                        AddUsersToRoles",
      "RemoveUserFromRole\n                  \n                    RemoveUserFromRoles\n                    \n                      RemoveUsersFromRole\n                      \n                        RemoveUsersFromRoles",
      "aspnet_Users aspnet_Roles aspnet_UsersInRoles",
      "",
      "To learn more about the roleManager element in web.config, visit: Documentation for roleManager Element (ASP.NET Settings Schema) in MSDN.",
      "Guideline: Perform Role-Based Security Checks"
    ],
    "blockquote": [
      "public void GenerateFinancialReport(DateTime startDate, DateTime endDate)&#123;&nbsp;&nbsp;&nbsp; if (HttpContext.Current.User.IsInRole(\"ShareHolders\"))&nbsp;&nbsp;&nbsp; &#123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Generate the relevant financial report&nbsp;&nbsp;&nbsp; &#125;&#125;"
    ],
    "a": [
      "roleManager Element (ASP.NET Settings Schema)",
      "Guideline: Perform Role-Based Security Checks"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://msdn2.microsoft.com/en-us/library/ms164660(vs.80).aspx",
      "text": "roleManager Element (ASP.NET Settings Schema)"
    },
    {
      "href": "/article/17034ef0-8935-4fb2-bbae-d79982e710c7",
      "text": "Guideline: Perform Role-Based Security Checks "
    }
  ],
  "html": "<h1>What to Check For</h1>\n  <p>Ensure your application creates specific roles for different types of users. Verify when authorizing access to a resource that&amp;nbsp;security checks are performed on a per-role basis rather than on a per-user basis.</p>\n  <h1>Why</h1>\n  <p>Application roles allow multiple users to play the same role. This mechanism provides a clear way to discover and manage the least privileges necessary for the execution of a given task and&amp;nbsp;provides a more robust&amp;nbsp;means of managing the application's users.</p>\n  <h1>How to Check</h1>\n  <p>Use the following steps to determine if your application uses role-based access controls:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Check if your application uses user roles.</strong> Verify that your application has established user roles and grants the appropriate access privileges to each user role. The roles and their privileges within the application should be defined in the documentation, to ensure that they have been examined in the context of the business purpose of the application, and to allow them to be checked against the application as implemented. Example:</p>\n      <pre>Roles      Actions    Access Controls    Client Accounts<br />--------------------------------------------------------<br />Manager    Connect        Always            Always<br />           Read           Always            Always<br />           Use            Always            Occasionally<br />           Modify         Never             Occasionally <br />Employee   Connect        Always            Always<br />           Read           Always            Always<br />           Use            Always            Always<br />           Modify         Never             Never</pre>\n      <li>\n        <p>\n          <strong>Ensure that your application enforces role-based security. </strong>Verify that your application maps its access controls to the established user roles.&amp;nbsp;Ensure that the roles used are sufficiently fine grained. Remember that the goal is to segment privileges within the application, not to simply control access to the entire application. Roles should be mapped to specific pages or functions within the application. Depending on your application's design, there are several ways of checking whether your application enforces role-based security: </p>\n        <ul>\n          <li>\n            <p>\n              <strong>Check for programmatically role-based security:</strong> If your application has security checks embedded inside its code base, identify all functionality that requires special privileges. Verify that each protected functionality has a permissions check associated with it.</p>\n            <p>For example, the following code verifies that users are share holders before generating the appropriate financial report:</p>\n            <blockquote>\n              <pre>public void GenerateFinancialReport(DateTime startDate, DateTime endDate)<br />&amp;#123;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; if (HttpContext.Current.User.IsInRole(\"ShareHolders\"))<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;#123;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Generate the relevant financial report<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;#125;<br />&amp;#125;<br /></pre>\n            </blockquote>\n            <li>\n              <p />\n              <strong>Check for declarative role-based security:</strong> If your application uses declarative security, examine its <strong>web.config</strong> file. Verify that access to protected resources is granted according to the application's security requirements. Check that each resource is associated with the appropriate user roles in the configuration file: <ul><li><strong>roleManager</strong>: Check that the ASP.NET role manager is configured using the <strong>roleManager</strong> element if form-based authentication is used. <li><strong>authorization</strong>: Check that the authorization settings for a resource are encapsulated by the <strong>authorization</strong> element. <li><strong>allow</strong>: Check that the users and roles that are allowed access to the given resource are enumerated. <li><strong>deny</strong>: Check that the users and roles that are denied access to the given resource are enumerated. <p>Example:</p><pre>&lt;configuration&gt;<br />&amp;nbsp; &lt;system.web&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;roleManager enabled=\"true\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cacheRolesInCookie=\"false\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; defaultProvider=\"ProjectRoleProvider\"&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;providers&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;clear /&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;add name=\"ProjectRoleProvider\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; type=\"System.Web.Security.SqlRoleProvider\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; connectionStringName=\"ProjectConnection\"<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; applicationName=\"myapp\" /&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;authorization&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;allow roles=\"Employees, Managers\" /&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;deny users=\"&amp;#42;\" /&gt;</pre></li></li></li></li></ul><li><p><strong>Check for role-based security managed by Windows:</strong> If your application uses Windows <strong>Local Users and Groups</strong> to manage its role-based security needs, verify that your application's web.config is configured properly.</p><p>Example:</p><pre>&lt;configuration&gt;<br />&amp;nbsp; &lt;system.web&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;authentication mode=\"Windows\" /&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;authorization&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;allow roles=\"NTDomain\\Employees, NTDomain\\Managers\" /&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;deny users=\"&amp;#42;\" /&gt;</pre></li></li>\n          </li>\n        </ul>\n        <ul>\n        </ul>\n        <li>\n          <p>\n            <strong>Verify that users are assigned into their appropriate roles. </strong>List all of your application's users.&amp;nbsp;Check if each user is assigned into their appropriate role. The application should apply the security policy according to the user roles instead of the actual user. Based on your application's mechanism to enforce role-based access controls, check that one of the following techniques is used to manage your application's users</p>\n          <ul>\n            <li>\n              <p>\n                <strong>Programmatically:</strong> ASP.NET allows you to manage your application's users through the <strong>Roles</strong> class.</p>\n              <p>Check that the following methods are used to assign users into roles: </p>\n              <ul>\n                <li>\n                  <strong>AddUserToRole</strong>\n                  <li>\n                    <strong>AddUserToRoles</strong>\n                    <li>\n                      <strong>AddUsersToRole</strong>\n                      <li>\n                        <strong>AddUsersToRoles</strong>\n                      </li>\n                    </li>\n                  </li>\n                </li>\n              </ul>\n              <p>Check that the following methods are used to remove users from roles:</p>\n              <ul>\n                <li>\n                  <strong>RemoveUserFromRole</strong>\n                  <li>\n                    <strong>RemoveUserFromRoles</strong>\n                    <li>\n                      <strong>RemoveUsersFromRole</strong>\n                      <li>\n                        <strong>RemoveUsersFromRoles </strong>\n                      </li>\n                    </li>\n                  </li>\n                </li>\n              </ul>\n              <li>\n                <strong>Declarative:</strong> Verify that the ASP.NET Role Manager is used to manage your application's users. To do so, connect to the database server that hosts your application's Role Manager. Using the following tables, verify that each user is assigned into the appropriate roles: <ul><li>aspnet_Users <li>aspnet_Roles <li>aspnet_UsersInRoles</li></li></li></ul><li><p><strong>Windows:</strong> If your application uses Windows authentication, use the Windows <strong>Local Users and Groups</strong> service to manage your application's users. If your application is connected to your organization's NT Domain or Active Directory forest, delegate the user and role management to your organization's network administrators.</p><p>To use the Windows <strong>Local Users and Groups</strong> service:</p><ol><li>Open <strong>Control Panel -&gt; Administrative Tools -&gt; Computer Management</strong>. <li>Under the <strong>System Tools</strong> node in the navigation tree, select <strong>Local Users and Groups</strong>. <li>Select <strong>Groups</strong>. <li>For each role, double-click on the respective group. <li>Verify that only the appropriate users are added as members for the given group. <li>Click <strong>Cancel</strong>. <li>Repeat steps 4-6 for all of your application's user roles.</li></li></li></li></li></li></li></ol></li></li>\n            </li>\n          </ul>\n          <ul>\n          </ul>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>The following segment illustrates an application's access control policy. Because the application does not enforce role-based security, it has a policy entry for each separate user.&amp;nbsp;This will make&amp;nbsp;managing the users' access rights quite difficult when the number of users to the application grows.</p>\n  <p />\n  <pre>&lt;authorization&gt;<br />  &lt;allow users=\"NTDomain\\joe, NTDomain\\sarah, NTDomain\\bill, NTDomain\\sue\" /&gt;<br />  &lt;deny users=\"&amp;#42;\" /&gt;<br />&lt;/authorization&gt;</pre>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>To learn more about the roleManager element in web.config, visit: Documentation for <a href=\"http://msdn2.microsoft.com/en-us/library/ms164660(vs.80).aspx\">roleManager Element (ASP.NET Settings Schema)</a> in MSDN.</li>\n  </ul>\n  <h1>Related Guideline</h1>\n  <ul>\n    <li>\n      <a href=\"/article/17034ef0-8935-4fb2-bbae-d79982e710c7\">Guideline: Perform Role-Based Security Checks </a>\n    </li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
}