{
  "id": "9d80865a-ddc8-49bd-be15-0f17a0e34383",
  "checksum": "20dfff328ffdcd6fde2daada02376fe0b2b7baaf",
  "words": {
    "30": [
      "ol",
      "li",
      "p"
    ],
    "60": [
      "ol",
      "li",
      "p"
    ],
    "90": [
      "p"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "scala": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "p",
      "p"
    ],
    "play": [
      "p"
    ],
    "framework": [
      "p"
    ],
    "21.0+": [
      "p"
    ],
    "what": [
      "h1"
    ],
    "do": [
      "h1"
    ],
    "force": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "users": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "renew": [
      "p",
      "p"
    ],
    "their": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "passwords": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "after": [
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p"
    ],
    "given": [
      "p",
      "p"
    ],
    "period": [
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "time": [
      "p",
      "p"
    ],
    "why": [
      "h1"
    ],
    "forcing": [
      "p"
    ],
    "reduces": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p"
    ],
    "risk": [
      "p",
      "p"
    ],
    "valid": [
      "p",
      "p",
      "p"
    ],
    "credentials": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "becoming": [
      "p"
    ],
    "exposed": [
      "p"
    ],
    "this": [
      "p"
    ],
    "technique": [
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "prevent": [
      "p"
    ],
    "attackers": [
      "p"
    ],
    "from": [
      "p",
      "ol",
      "li",
      "pre"
    ],
    "obtaining": [
      "p"
    ],
    "through": [
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "brute": [
      "p"
    ],
    "attack": [
      "p",
      "p"
    ],
    "or": [
      "p",
      "p"
    ],
    "dictionary": [
      "p"
    ],
    "it": [
      "p"
    ],
    "also": [
      "p"
    ],
    "reduce": [
      "p"
    ],
    "business": [
      "p"
    ],
    "associated": [
      "p"
    ],
    "with": [
      "p"
    ],
    "any": [
      "p"
    ],
    "instances": [
      "p"
    ],
    "discovered": [
      "p"
    ],
    "leaked": [
      "p"
    ],
    "when": [
      "h1",
      "ol",
      "li",
      "p"
    ],
    "always": [
      "p"
    ],
    "change": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "how": [
      "h1"
    ],
    "following": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p"
    ],
    "define": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "password": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "title"
    ],
    "policy establish": [
      "ol",
      "li",
      "p"
    ],
    "maximum": [
      "ol",
      "li",
      "p"
    ],
    "age": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "your": [
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "require": [
      "ol",
      "li",
      "p"
    ],
    "that": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "must": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "every": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "days": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "privileged": [
      "ol",
      "li",
      "p"
    ],
    "design": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "mechanism track": [
      "ol",
      "li",
      "p"
    ],
    "prompt": [
      "ol",
      "li",
      "p"
    ],
    "user": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "expires": [
      "ol",
      "li",
      "p"
    ],
    "sql": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre"
    ],
    "transaction": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "li",
      "p"
    ],
    "help": [
      "ol",
      "li",
      "p"
    ],
    "application": [
      "ol",
      "li",
      "p"
    ],
    "determine": [
      "ol",
      "li",
      "p"
    ],
    "whether": [
      "ol",
      "li",
      "p"
    ],
    "user's": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "has": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "expired": [
      "ol",
      "li",
      "p"
    ],
    "select": [
      "ol",
      "li",
      "pre"
    ],
    "*": [
      "ol",
      "li",
      "pre"
    ],
    "passhistory": [
      "ol",
      "li",
      "pre"
    ],
    "where": [
      "ol",
      "li",
      "pre"
    ],
    "userid": [
      "ol",
      "li",
      "pre"
    ],
    "=": [
      "ol",
      "li",
      "pre"
    ],
    "{{username}}": [
      "ol",
      "li",
      "pre"
    ],
    "last_changed": [
      "ol",
      "li",
      "pre"
    ],
    "enforce": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "policy embed": [
      "ol",
      "li",
      "p"
    ],
    "mechanism": [
      "ol",
      "strong",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "li",
      "p"
    ],
    "authentication": [
      "ol",
      "li",
      "p"
    ],
    "routine": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "should": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "check": [
      "ol",
      "li",
      "p"
    ],
    "if": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "current": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "li",
      "p"
    ],
    "logged": [
      "ol",
      "li",
      "p"
    ],
    "in": [
      "ol",
      "li",
      "p"
    ],
    "not": [
      "ol",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "li",
      "p"
    ],
    "changed": [
      "ol",
      "li",
      "p"
    ],
    "since": [
      "ol",
      "li",
      "p"
    ],
    "long": [
      "ol",
      "li",
      "p"
    ],
    "interval": [
      "ol",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "forced": [
      "ol",
      "li",
      "p"
    ],
    "the password": [
      "ol",
      "li",
      "p"
    ],
    "policy": [
      "strong",
      "strong"
    ],
    "note pci": [
      "p"
    ],
    "dss": [
      "p"
    ],
    "requirements": [
      "p"
    ],
    "state": [
      "p"
    ],
    "renewed": [
      "p"
    ],
    "at": [
      "p"
    ],
    "most": [
      "p"
    ],
    "new": [
      "p"
    ],
    "cannot": [
      "p"
    ],
    "same": [
      "p"
    ],
    "as": [
      "p"
    ],
    "previous": [
      "p"
    ],
    "four": [
      "p"
    ],
    "note": [
      "strong"
    ],
    "renewal": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Do",
      "Why",
      "When",
      "How"
    ],
    "p": [
      "Scala and Play Framework 2.1.0+",
      "Force users to renew their passwords after a given period of time.",
      "Forcing users to renew their passwords reduces the risk of valid credentials becoming exposed. This technique can prevent attackers from obtaining valid credentials through the use of a Credentials Brute Force Attack or a Credentials Dictionary Attack. It can also reduce the business risk associated with any instances of discovered or leaked valid credentials.",
      "Always force users to change their passwords after a given time period.",
      "Use the following steps to force users to change their passwords:",
      "Define a password change policy. Establish a maximum password age for your application's users. For example, require that users must change passwords every 60 days and privileged users must change passwords every 30 days.",
      "Design a password change mechanism. Track the password age, and prompt the user to change their password when the password expires. For example, the following SQL transaction will help the application to determine whether a user's password has expired:",
      "Enforce the password change policy. Embed the change of password mechanism into the authentication routine. The routine should check if the current user is logged in, and if the password has not been changed since a long interval, the user should be forced to change the password.",
      "Note: PCI DSS requirements state that a user's password must be renewed at most every 90 days and that the new password cannot be the same as the previous four."
    ],
    "br": [
      "",
      "",
      "",
      ""
    ],
    "ul": [
      ""
    ],
    "ol": [
      "Define a password change policy. Establish a maximum password age for your application's users. For example, require that users must change passwords every 60 days and privileged users must change passwords every 30 days.\r\n    \r\n    \r\n      \r\n        Design a password change mechanism. Track the password age, and prompt the user to change their password when the password expires. For example, the following SQL transaction will help the application to determine whether a user's password has expired:\r\n      sql> select * from passHistory      where userid = {{username}} and            last_changed \r\n    \r\n    \r\n      \r\n        Enforce the password change policy. Embed the change of password mechanism into the authentication routine. The routine should check if the current user is logged in, and if the password has not been changed since a long interval, the user should be forced to change the password."
    ],
    "li": [
      "Define a password change policy. Establish a maximum password age for your application's users. For example, require that users must change passwords every 60 days and privileged users must change passwords every 30 days.",
      "Design a password change mechanism. Track the password age, and prompt the user to change their password when the password expires. For example, the following SQL transaction will help the application to determine whether a user's password has expired:\r\n      sql> select * from passHistory      where userid = {{username}} and            last_changed",
      "Enforce the password change policy. Embed the change of password mechanism into the authentication routine. The routine should check if the current user is logged in, and if the password has not been changed since a long interval, the user should be forced to change the password."
    ],
    "strong": [
      "Define a password change policy.",
      "Design a password change mechanism.",
      "Enforce the password change policy.",
      "Note:"
    ],
    "pre": [
      "sql> select * from passHistory      where userid = {{username}} and            last_changed"
    ]
  },
  "links": [],
  "html": "<h1>Applies to</h1>\r\n  <p>Scala and Play Framework 2.1.0+<br /></p>\r\n  <ul>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Force users to renew their passwords after a given period of time.</p>\r\n  <h1>Why</h1>\r\n  <p>Forcing users to renew their passwords reduces the risk of valid credentials becoming exposed. This technique can prevent attackers from obtaining valid credentials through the use of a Credentials Brute Force Attack or a Credentials Dictionary Attack. It can also reduce the business risk associated with any instances of discovered or leaked valid credentials.</p>\r\n  <h1>When</h1>\r\n  <p>Always force users to change their passwords after a given time period.</p>\r\n  <h1>How</h1>\r\n  <p>Use the following steps to force users to change their passwords:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Define a password change policy.&nbsp;</strong>Establish a maximum password age for your application's users. For example, require that users must change passwords every 60 days and privileged users must change passwords every 30 days.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Design a password change mechanism.&nbsp;</strong>Track the password age, and prompt the user to change their password when the password expires. For example, the following SQL transaction will help the application to determine whether a user's password has expired:</p>\r\n      <pre>sql&gt; select * from passHistory<br />      where userid = {{username}} and<br />            last_changed </pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Enforce the password change policy.&nbsp;</strong>Embed the change of password mechanism into the authentication routine. The routine should check if the current user is logged in, and if the password has not been changed since a long interval, the user should be forced to change the&nbsp;password.</p>\r\n    </li>\r\n  </ol>\r\n  <p>\r\n    <strong>Note:</strong>&nbsp;PCI DSS requirements state that a user's password must be renewed at most every 90 days and that the new password cannot be the same as the previous four.</p>\r\n  <br />"
}