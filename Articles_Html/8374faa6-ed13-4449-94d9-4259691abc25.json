{
  "id": "8374faa6-ed13-4449-94d9-4259691abc25",
  "checksum": "ce7efbfb897f6829b8b5e0e7e7a1c2fee4659905",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "web": [
      "ul",
      "li"
    ],
    "applications": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2"
    ],
    "for": [
      "h2",
      "ol",
      "li"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "authentication": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "controls": [
      "p",
      "p",
      "title"
    ],
    "fail": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "securely": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "why": [
      "h2"
    ],
    "designing": [
      "p"
    ],
    "when": [
      "p",
      "ol",
      "li"
    ],
    "abnormal": [
      "p"
    ],
    "conditions": [
      "p"
    ],
    "occur": [
      "p",
      "ol",
      "li"
    ],
    "reduces": [
      "p"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "risk": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "attackers": [
      "p"
    ],
    "bypassing": [
      "p"
    ],
    "by": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "disabling": [
      "p"
    ],
    "it": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "identify": [
      "ol",
      "li",
      "strong"
    ],
    "error": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "handling": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "li"
    ],
    "find": [
      "ol",
      "li"
    ],
    "in": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "application": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "ideally": [
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "centralized": [
      "ol",
      "li"
    ],
    "easy": [
      "ol",
      "li"
    ],
    "review": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "may": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "case": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "spread": [
      "ol",
      "li"
    ],
    "out": [
      "ol",
      "li"
    ],
    "throughout": [
      "ol",
      "li"
    ],
    "reviewed": [
      "ol",
      "li"
    ],
    "piece": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "generic": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "messages": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "are": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong"
    ],
    "make": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "sure": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "supply": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "user": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "with": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "feedback": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "denoting": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "some": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "happened": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "but": [
      "ol",
      "li"
    ],
    "do": [
      "ol",
      "li"
    ],
    "not": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "provide": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "too": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "much": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "information": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "a": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li"
    ],
    "global": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "exception": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li"
    ],
    "handler": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "strong",
      "li"
    ],
    "after": [
      "ol",
      "li"
    ],
    "any": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "specific": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "exceptions": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "\"finally\"": [
      "ol",
      "li"
    ],
    "blocks": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "errors": [
      "ol",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "handled": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "properly": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "state": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "closing": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "connections": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "databases": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "other": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "systems": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "reverting": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "lower": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "privileges": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "if": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "applicable": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "sensitive": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "files": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "logging": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "failure": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "following": [
      "p"
    ],
    "best": [
      "p",
      "ol",
      "li"
    ],
    "practices": [
      "p"
    ],
    "design": [
      "p"
    ],
    "show": [
      "ol",
      "li"
    ],
    "these": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "written": [
      "ol",
      "li"
    ],
    "broad": [
      "ol",
      "li"
    ],
    "way": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "handlers": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "catch": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "unforeseen": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "safety": [
      "ol",
      "li"
    ],
    "net": [
      "ol",
      "li"
    ],
    "mechanism": [
      "ol",
      "li"
    ],
    "ensure": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "does": [
      "ol",
      "li"
    ],
    "behave": [
      "ol",
      "li"
    ],
    "an": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "unexpected": [
      "ol",
      "li"
    ],
    "occurs": [
      "ol",
      "li"
    ],
    "first": [
      "ol",
      "li",
      "strong"
    ],
    "message": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "which": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "ensures": [
      "ol",
      "li"
    ],
    "no": [
      "ol",
      "li"
    ],
    "extra": [
      "ol",
      "li"
    ],
    "disclosed": [
      "ol",
      "li"
    ],
    "attacker": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "through": [
      "ol",
      "li"
    ],
    "provided": [
      "ol",
      "li"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "you": [
      "ol",
      "li"
    ],
    "could": [
      "ol",
      "li"
    ],
    "write": [
      "ol",
      "li"
    ],
    "more": [
      "ol",
      "li"
    ],
    "order": [
      "ol",
      "li"
    ],
    "help": [
      "ol",
      "li"
    ],
    "always": [
      "ol",
      "ol",
      "li",
      "strong",
      "li"
    ],
    "class": [
      "ol",
      "li",
      "strong"
    ],
    "last": [
      "ol",
      "li",
      "strong"
    ],
    "picks": [
      "ol",
      "li"
    ],
    "up": [
      "ol",
      "li"
    ],
    "keeps": [
      "ol",
      "li"
    ],
    "your": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "from": [
      "ol",
      "li"
    ],
    "leaking": [
      "ol",
      "li"
    ],
    "potentially": [
      "ol",
      "li"
    ],
    "harmful": [
      "ol",
      "li"
    ],
    "leaving": [
      "ol",
      "li"
    ],
    "vulnerable": [
      "ol",
      "li"
    ],
    "final": [
      "ol",
      "li",
      "strong"
    ],
    "clauses": [
      "ol",
      "li",
      "strong"
    ],
    "practice": [
      "ol",
      "li"
    ],
    "include": [
      "ol",
      "li"
    ],
    "finally": [
      "ol",
      "li"
    ],
    "try": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "statements": [
      "ol",
      "li"
    ],
    "will": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "reverts": [
      "ol",
      "li"
    ],
    "back": [
      "ol",
      "li"
    ],
    "secure": [
      "ol",
      "li"
    ],
    "block": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "ends": [
      "ol",
      "li"
    ],
    "executed": [
      "ol",
      "li"
    ],
    "regardless": [
      "ol",
      "li"
    ],
    "whether": [
      "ol",
      "li"
    ],
    "thrown": [
      "ol",
      "li"
    ],
    "handle": [
      "ol",
      "li",
      "strong"
    ],
    "implement": [
      "ol",
      "li"
    ],
    "proper": [
      "ol",
      "li"
    ],
    "applicable,": [
      "ol",
      "li"
    ],
    "on": [
      "ol",
      "li"
    ],
    "server": [
      "ol",
      "li"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix"
    ],
    "ul": [
      "Web Applications"
    ],
    "li": [
      "Web Applications",
      "Identify error handling code. Find error handling code in the application. Ideally, error handling code should be centralized for easy review. It may be the case that error handling code is spread out throughout the application. In that case, it may be reviewed piece by piece.",
      "Verify that generic error messages are used. Review error handling code to make sure that generic error messages are used. Generic error messages supply the user with feedback denoting that some error happened, but do not provide too much information.",
      "Verify that a global exception handler is used. Review error handling code to make sure that a global exception handler is used after handling any specific exceptions. Verify that \"finally\" blocks are used.",
      "Verify that errors are handled properly. Review error handling code to make sure that application state is handled properly by:\n Closing all connections to databases or other systems\n Reverting to lower privileges, if applicable\n Closing all sensitive files\n Logging the failure",
      "Closing all connections to databases or other systems",
      "Reverting to lower privileges, if applicable",
      "Closing all sensitive files",
      "Logging the failure",
      "Use generic error messages. Show generic error messages that supply the user with feedback denoting that some error happened. These messages should be written in a broad way and should not provide too much information.",
      "Use a global exception handler. Global exception handlers should catch any unforeseen exceptions that occur. These handlers are a safety net mechanism to ensure that the application does not behave in an unexpected way if an error occurs.",
      "Catch any specific exceptions first. Use a generic error message, which ensures that no extra information is disclosed to an attacker through the error messages provided. In this specific exception handler, you could write an error message that is more specific to the error in order to help the user.",
      "Always catch the global exception class last. This picks up any unforeseen errors and keeps your application from leaking potentially harmful information to an attacker or leaving your application in a vulnerable state.",
      "Use final clauses. It is always a best practice to include finally blocks with your try statements, which will ensure that the application reverts back to a secure state when the try block ends. This block will be executed regardless of whether an exception is thrown or not.",
      "Handle errors properly. Implement proper handling of the application state in error handling code by closing all connections to databases or other systems, reverting to lower privileges (if applicable), closing all sensitive files, and logging the failure on the server."
    ],
    "p": [
      "Verify that authentication controls fail securely.",
      "Designing authentication to fail securely when abnormal conditions occur reduces the risk of attackers bypassing authentication by disabling it.",
      "To verify that authentication controls fail securely:",
      "Use the following best practices to design authentication code to fail securely:"
    ],
    "ol": [
      "Identify error handling code. Find error handling code in the application. Ideally, error handling code should be centralized for easy review. It may be the case that error handling code is spread out throughout the application. In that case, it may be reviewed piece by piece.\n Verify that generic error messages are used. Review error handling code to make sure that generic error messages are used. Generic error messages supply the user with feedback denoting that some error happened, but do not provide too much information.\n Verify that a global exception handler is used. Review error handling code to make sure that a global exception handler is used after handling any specific exceptions. Verify that \"finally\" blocks are used.\n Verify that errors are handled properly. Review error handling code to make sure that application state is handled properly by:\n Closing all connections to databases or other systems\n Reverting to lower privileges, if applicable\n Closing all sensitive files\n Logging the failure",
      "Closing all connections to databases or other systems\n Reverting to lower privileges, if applicable\n Closing all sensitive files\n Logging the failure",
      "Use generic error messages. Show generic error messages that supply the user with feedback denoting that some error happened. These messages should be written in a broad way and should not provide too much information.\n Use a global exception handler. Global exception handlers should catch any unforeseen exceptions that occur. These handlers are a safety net mechanism to ensure that the application does not behave in an unexpected way if an error occurs.\n Catch any specific exceptions first. Use a generic error message, which ensures that no extra information is disclosed to an attacker through the error messages provided. In this specific exception handler, you could write an error message that is more specific to the error in order to help the user.\n Always catch the global exception class last. This picks up any unforeseen errors and keeps your application from leaking potentially harmful information to an attacker or leaving your application in a vulnerable state.\n Use final clauses. It is always a best practice to include finally blocks with your try statements, which will ensure that the application reverts back to a secure state when the try block ends. This block will be executed regardless of whether an exception is thrown or not.\n Handle errors properly. Implement proper handling of the application state in error handling code by closing all connections to databases or other systems, reverting to lower privileges (if applicable), closing all sensitive files, and logging the failure on the server."
    ],
    "strong": [
      "Identify error handling code.",
      "Verify that generic error messages are used.",
      "Verify that a global exception handler is used.",
      "Verify that errors are handled properly.",
      "Use generic error messages.",
      "Use a global exception handler.",
      "Catch any specific exceptions first.",
      "Always catch the global exception class last.",
      "Use final clauses.",
      "Handle errors properly."
    ]
  },
  "links": [],
  "html": "<h2>Applies To</h2><ul><li> Web Applications</li>\n</ul><h2>What to Check For</h2><p>Verify that authentication controls fail securely.\n</p><h2>Why</h2><p>Designing authentication to fail securely when abnormal conditions occur reduces the risk of attackers bypassing authentication by disabling it.\n</p><h2>How to Check</h2><p>To verify that authentication controls fail securely:\n</p><ol>\n<li> <strong>Identify error handling code.</strong> Find error handling code in the application. Ideally, error handling code should be centralized for easy review. It may be the case that error handling code is spread out throughout the application. In that case, it may be reviewed piece by piece.</li>\n<li> <strong>Verify that generic error messages are used.</strong> Review error handling code to make sure that generic error messages are used. Generic error messages supply the user with feedback denoting that some error happened, but do not provide too much information.</li>\n<li> <strong>Verify that a global exception handler is used.</strong> Review error handling code to make sure that a global exception handler is used after handling any specific exceptions. Verify that \"finally\" blocks are used.</li>\n<li> <strong>Verify that errors are handled properly.</strong> Review error handling code to make sure that application state is handled properly by:<ol>\n<li> Closing all connections to databases or other systems</li>\n<li> Reverting to lower privileges, if applicable</li>\n<li> Closing all sensitive files</li>\n<li> Logging the failure</li></ol></li>\n</ol><h2>How to Fix</h2><p>Use the following best practices to design authentication code to fail securely:\n</p><ol>\n<li> <strong>Use generic error messages.</strong> Show generic error messages that supply the user with feedback denoting that some error happened. These messages should be written in a broad way and should not provide too much information.</li>\n<li> <strong>Use a global exception handler.</strong> Global exception handlers should catch any unforeseen exceptions that occur. These handlers are a safety net mechanism to ensure that the application does not behave in an unexpected way if an error occurs.</li>\n<li> <strong>Catch any specific exceptions first.</strong> Use a generic error message, which ensures that no extra information is disclosed to an attacker through the error messages provided. In this specific exception handler, you could write an error message that is more specific to the error in order to help the user.</li>\n<li> <strong>Always catch the global exception class last.</strong> This picks up any unforeseen errors and keeps your application from leaking potentially harmful information to an attacker or leaving your application in a vulnerable state.</li>\n<li> <strong>Use final clauses.</strong> It is always a best practice to include finally blocks with your try statements, which will ensure that the application reverts back to a secure state when the try block ends. This block will be executed regardless of whether an exception is thrown or not.</li>\n<li> <strong>Handle errors properly.</strong> Implement proper handling of the application state in error handling code by closing all connections to databases or other systems, reverting to lower privileges (if applicable), closing all sensitive files, and logging the failure on the server.</li>\n</ol>\n"
}