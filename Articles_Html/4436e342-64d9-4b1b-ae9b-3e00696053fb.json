{
  "id": "4436e342-64d9-4b1b-ae9b-3e00696053fb",
  "checksum": "35a4193c258bec3935feda2a16f7d5165d72005e",
  "words": {
    "1": [
      "ul",
      "li",
      "a"
    ],
    "2": [
      "ul",
      "li",
      "a"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "check": [
      "h1",
      "h1",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "for": [
      "h1",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "ensure": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "your": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "p"
    ],
    "does": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "not": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "make": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "security": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "decisions": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "based": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "on": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "parameters": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "are": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "accessible": [
      "p"
    ],
    "by": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "client": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "why": [
      "h1"
    ],
    "using": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "client-accessible": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "data": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "allows": [
      "p"
    ],
    "users": [
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "access": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "modify": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "work": [
      "p"
    ],
    "around": [
      "p"
    ],
    "measures": [
      "p"
    ],
    "how": [
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "use": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "following": [
      "p",
      "p",
      "p",
      "p"
    ],
    "steps": [
      "p",
      "p"
    ],
    "delegate": [
      "p"
    ],
    "parts": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "its": [
      "p"
    ],
    "decision": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "mechanism": [
      "p"
    ],
    "client-side": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "verify": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "there": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "no": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "li",
      "p"
    ],
    "points": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "review": [
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "design": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "requirements": [
      "ol",
      "li",
      "p"
    ],
    "made": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "common": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "areas": [
      "ol",
      "li",
      "p"
    ],
    "might": [
      "ol",
      "li",
      "p"
    ],
    "affect": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "model": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "include": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "url-based": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "form-based": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "cookies": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "http": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "headers": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "user": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "input": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "trace": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "from": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "source": [
      "ol",
      "li",
      "p"
    ],
    "sink": [
      "ol",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "a": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "direct": [
      "ol",
      "li",
      "p"
    ],
    "impact": [
      "ol",
      "li",
      "p"
    ],
    "mistakes": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "look": [
      "ol",
      "li",
      "p"
    ],
    "out": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "undocumented": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "enable": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "privileged": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "functionality": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "storing": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "privileges": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "inside": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "if": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "can": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "be": [
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "tampered": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "with": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p"
    ],
    "through": [
      "ol",
      "li",
      "p"
    ],
    "parameter": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "a"
    ],
    "tampering": [
      "ol",
      "li",
      "p"
    ],
    "attacks": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "cannot": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "tamper": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "should": [
      "p"
    ],
    "any": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "has": [
      "p"
    ],
    "control": [
      "p"
    ],
    "over": [
      "p"
    ],
    "relying": [
      "p"
    ],
    "unprotected": [
      "p"
    ],
    "hidden": [
      "p"
    ],
    "fields": [
      "p"
    ],
    "or": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "query": [
      "p"
    ],
    "strings": [
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "carefully": [
      "ol",
      "li",
      "p"
    ],
    "examine": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "h1"
    ],
    "related": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "critical": [
      "ol",
      "li",
      "p"
    ],
    "placed": [
      "ol",
      "li",
      "p"
    ],
    "because": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "issue": [
      "ol",
      "li",
      "p"
    ],
    "recommended": [
      "ol",
      "li",
      "p"
    ],
    "threat": [
      "ol",
      "li",
      "p"
    ],
    "modeling": [
      "ol",
      "li",
      "p"
    ],
    "determine": [
      "ol",
      "li",
      "p"
    ],
    "evaluate": [
      "ol",
      "li",
      "p"
    ],
    "influences": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "tracing": [
      "ol",
      "li",
      "p"
    ],
    "helps determine": [
      "ol",
      "li",
      "p"
    ],
    "vulnerable": [
      "ol",
      "li",
      "p"
    ],
    "client-based": [
      "ol",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li",
      "p"
    ],
    "influence": [
      "ol",
      "li",
      "p"
    ],
    "prove": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "security-related": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "cryptography": [
      "ol",
      "li",
      "p"
    ],
    "mark": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "exceptions": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "guideline": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "note": [
      "ol",
      "li",
      "p"
    ],
    "thoroughly": [
      "ol",
      "li",
      "p"
    ],
    "associated": [
      "ol",
      "li",
      "p"
    ],
    "such": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "instances": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "provided": [
      "ol",
      "li",
      "p"
    ],
    "business": [
      "ol",
      "li",
      "p"
    ],
    "logic": [
      "ol",
      "li",
      "p"
    ],
    "intended": [
      "ol",
      "li",
      "p"
    ],
    "problem": [
      "h1"
    ],
    "example": [
      "h1",
      "h1"
    ],
    "illustrates": [
      "p",
      "p"
    ],
    "servlet": [
      "p",
      "p"
    ],
    "accepts": [
      "p",
      "p"
    ],
    "user-supplied": [
      "p",
      "p"
    ],
    "unfortunately": [
      "p"
    ],
    "obtains": [
      "p",
      "p"
    ],
    "user's": [
      "p",
      "p",
      "p"
    ],
    "id": [
      "p",
      "p"
    ],
    "which": [
      "p"
    ],
    "allows an": [
      "p"
    ],
    "attacker": [
      "p",
      "p"
    ],
    "withj data": [
      "p"
    ],
    "public": [
      "pre",
      "pre"
    ],
    "void": [
      "pre",
      "pre"
    ],
    "dogethttpservletrequest": [
      "pre",
      "pre"
    ],
    "request": [
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "httpservletresponse": [
      "pre",
      "pre"
    ],
    "response": [
      "pre",
      "pre"
    ],
    "throws": [
      "pre",
      "pre"
    ],
    "servletexception": [
      "pre",
      "pre"
    ],
    "ioexception{": [
      "pre",
      "pre"
    ],
    "string": [
      "pre",
      "pre"
    ],
    "userid": [
      "pre",
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre"
    ],
    "requestgetparameter(\"userid\");": [
      "pre"
    ],
    "..": [
      "pre"
    ],
    "}": [
      "pre"
    ],
    "solution": [
      "h1"
    ],
    "session": [
      "p",
      "pre",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "possible": [
      "p"
    ],
    "an": [
      "p"
    ],
    "sess": [
      "pre"
    ],
    "requestgetsession();": [
      "pre"
    ],
    "string)sess.getattribute(\"userid\");": [
      "pre"
    ],
    "..}": [
      "pre"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "learn": [
      "ul",
      "li"
    ],
    "more": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "manipulation": [
      "ul",
      "ul",
      "li",
      "li",
      "a"
    ],
    "ways": [
      "ul",
      "li"
    ],
    "prevent": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "java": [
      "h1",
      "h1",
      "h1",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "management": [
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "offered": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "framework": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "protect": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "ids": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "set": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "domain": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "path": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "values": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "secure": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "httponly": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "flags": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "sensitive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "change": [
      "ul",
      "li",
      "a"
    ],
    "during": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "authentication": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "invalidate": [
      "ul",
      "li",
      "a"
    ],
    "sessions": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "when": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "log": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "inactive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "time-out": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "unique": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "tokens": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "requests": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "do": [
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h1"
    ],
    "used": [
      "ul",
      "li",
      "a"
    ],
    "protected": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "strict": [
      "ul",
      "li",
      "a"
    ],
    "changed": [
      "ul",
      "li",
      "a"
    ],
    "invalidated": [
      "ul",
      "li",
      "a"
    ],
    "included": [
      "ul",
      "li",
      "a"
    ],
    "examples": [
      "h1"
    ],
    "add": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "esapi": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "server": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "faces": [
      "ul",
      "li",
      "a"
    ],
    "jsf)": [
      "ul",
      "li",
      "a"
    ],
    "plain": [
      "ul",
      "li",
      "a"
    ],
    "pages": [
      "ul",
      "li",
      "a"
    ],
    "jsp)": [
      "ul",
      "li",
      "a"
    ],
    "cross-site": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "forgery": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "csrf)": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "prevention": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "springmvc": [
      "ul",
      "li",
      "a"
    ],
    "struts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "httputilities": [
      "ul",
      "li",
      "a"
    ],
    "testing": [
      "h1"
    ],
    "test": [
      "ul",
      "li",
      "a"
    ],
    "prediction": [
      "ul",
      "li",
      "a"
    ],
    "bugs": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Problem Example",
      "Solution Example",
      "Additional Resources",
      "Java Session Management Guidelines",
      "Java Session Management Checklists",
      "Java Session Management Code Examples",
      "Java Session Management Testing"
    ],
    "p": [
      "Ensure your application does not make security decisions based on parameters that are accessible by the client.",
      "Using client-accessible data to make security decisions allows the users to access and modify the data and work around security measures.",
      "Use the following steps to ensure that your application does not delegate parts of its security decision mechanism to the client-side:",
      "Verify that there are no security decision points on the client. Review your application's design and requirements. Ensure that no security decisions are made on the client-side. Common areas that might affect your application's security model include:",
      "Verify that user input does not affect security decisions. Trace all user input from source to sink. Verify that user input does not have a direct impact on your application's security decisions. Common mistakes to look out for include:",
      "Check if security decisions can be tampered with by the client. Through the use of parameter tampering attacks, ensure that users cannot tamper with your application's security decisions.",
      "Security decisions should not be based on any data that the client has control over. Common mistakes include relying on data inside unprotected cookies, hidden fields or query strings.",
      "Use the following steps to ensure that no security decisions are based on client-accessible data:",
      "Identify security decision points. Carefully examine the points in the code that are related to your application's security model. It is critical that no decision points are placed in the client. Because this is a design issue, it is recommended to use threat modeling to determine and evaluate the security decision points.",
      "",
      "Trace data that influences security decisions. Tracing the data that influences security decisions helps determine if the data is vulnerable to any client-based attacks. Make sure that the client cannot modify or influence this data.",
      "",
      "Prove that security-related data cannot be tampered with by the client. Use cryptography or your application's design to ensure that security related data cannot be tampered with by the client.",
      "Mark all exceptions to this guideline. Note all exceptions made to this guideline. Thoroughly examine the code associated with such instances. Verify that all instances are provided in the business logic and are intended.",
      "The following code illustrates a servlet that accepts user-supplied input. Unfortunately, the application obtains the user's ID from the client which allows an attacker to tamper withj data that influences security decisions.",
      "The following code illustrates a servlet that accepts user-supplied input. Because the application obtains the user's ID from the user's session, it is not possible for an attacker to tamper with such data.",
      ""
    ],
    "ol": [
      "Verify that there are no security decision points on the client. Review your application's design and requirements. Ensure that no security decisions are made on the client-side. Common areas that might affect your application's security model include:\r\n      \r\n        URL-based parameters \r\n        Form-based parameters \r\n        Cookies \r\n        HTTP headers\r\n      \r\n    \r\n    \r\n      \r\n        Verify that user input does not affect security decisions. Trace all user input from source to sink. Verify that user input does not have a direct impact on your application's security decisions. Common mistakes to look out for include:\r\n      \r\n        Undocumented parameters that enable privileged functionality \r\n        Storing user privileges inside cookies\r\n      \r\n    \r\n    \r\n      \r\n        Check if security decisions can be tampered with by the client. Through the use of parameter tampering attacks, ensure that users cannot tamper with your application's security decisions.",
      "Identify security decision points. Carefully examine the points in the code that are related to your application's security model. It is critical that no decision points are placed in the client. Because this is a design issue, it is recommended to use threat modeling to determine and evaluate the security decision points.\r\n      \r\n    \r\n    \r\n      \r\n        Trace data that influences security decisions. Tracing the data that influences security decisions helps determine if the data is vulnerable to any client-based attacks. Make sure that the client cannot modify or influence this data. \r\n      \r\n    \r\n    \r\n      \r\n        Prove that security-related data cannot be tampered with by the client. Use cryptography or your application's design to ensure that security related data cannot be tampered with by the client. \r\n    \r\n    \r\n      \r\n        Mark all exceptions to this guideline. Note all exceptions made to this guideline. Thoroughly examine the code associated with such instances. Verify that all instances are provided in the business logic and are intended."
    ],
    "li": [
      "Verify that there are no security decision points on the client. Review your application's design and requirements. Ensure that no security decisions are made on the client-side. Common areas that might affect your application's security model include:\r\n      \r\n        URL-based parameters \r\n        Form-based parameters \r\n        Cookies \r\n        HTTP headers",
      "URL-based parameters",
      "Form-based parameters",
      "Cookies",
      "HTTP headers",
      "Verify that user input does not affect security decisions. Trace all user input from source to sink. Verify that user input does not have a direct impact on your application's security decisions. Common mistakes to look out for include:\r\n      \r\n        Undocumented parameters that enable privileged functionality \r\n        Storing user privileges inside cookies",
      "Undocumented parameters that enable privileged functionality",
      "Storing user privileges inside cookies",
      "Check if security decisions can be tampered with by the client. Through the use of parameter tampering attacks, ensure that users cannot tamper with your application's security decisions.",
      "Identify security decision points. Carefully examine the points in the code that are related to your application's security model. It is critical that no decision points are placed in the client. Because this is a design issue, it is recommended to use threat modeling to determine and evaluate the security decision points.",
      "Trace data that influences security decisions. Tracing the data that influences security decisions helps determine if the data is vulnerable to any client-based attacks. Make sure that the client cannot modify or influence this data.",
      "Prove that security-related data cannot be tampered with by the client. Use cryptography or your application's design to ensure that security related data cannot be tampered with by the client.",
      "Mark all exceptions to this guideline. Note all exceptions made to this guideline. Thoroughly examine the code associated with such instances. Verify that all instances are provided in the business logic and are intended.",
      "To learn more about parameter manipulation and ways to prevent it, see: Parameter Manipulation.",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "strong": [
      "Verify that there are no security decision points on the client.",
      "Verify that user input does not affect security decisions.",
      "Check if security decisions can be tampered with by the client.",
      "Identify security decision points.",
      "Trace data that influences security decisions.",
      "Prove that security-related data cannot be tampered with by the client.",
      "Mark all exceptions to this guideline."
    ],
    "ul": [
      "URL-based parameters \r\n        Form-based parameters \r\n        Cookies \r\n        HTTP headers",
      "Undocumented parameters that enable privileged functionality \r\n        Storing user privileges inside cookies",
      "To learn more about parameter manipulation and ways to prevent it, see: Parameter Manipulation.",
      "Use Session Management Offered by the Framework\r\n    \r\n    \r\n      Protect Session IDs\r\n    \r\n    \r\n      Protect Session Cookies\r\n    \r\n    \r\n      Set the Domain and Path Values of Session Cookies\r\n    \r\n    \r\n      Set the Secure and HTTPOnly Flags on All Sensitive Cookies\r\n    \r\n    \r\n      Change Session IDs During Authentication\r\n    \r\n    \r\n      Invalidate Sessions when Users Log Out\r\n    \r\n    \r\n      Make Inactive Sessions Time-out\r\n    \r\n    \r\n      Include Unique Tokens in HTTP Requests\r\n    \r\n    \r\n      Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used\r\n    \r\n    \r\n      Session IDs Are Protected\r\n    \r\n    \r\n      Session Cookies are Protected\r\n    \r\n    \r\n      The Domain and Path Values of Session Cookies Are Strict\r\n    \r\n    \r\n      The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies\r\n    \r\n    \r\n      Session IDs Are Changed During Authentication\r\n    \r\n    \r\n      Sessions Are Invalidated When Users Log Out\r\n    \r\n    \r\n      Inactive Sessions Time-out\r\n    \r\n    \r\n      Unique Tokens Are Included in HTTP Requests\r\n    \r\n    \r\n      Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI\r\n    \r\n    \r\n      Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)\r\n    \r\n    \r\n      Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 1\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 2\r\n    \r\n    \r\n      Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "pre": [
      "public void doGet(HttpServletRequest request,      HttpServletResponse response) throws ServletException, IOException{      String userID = request.getParameter(\"userid\");       ... }",
      "public void doGet(HttpServletRequest request,      HttpServletResponse response) throws ServletException, IOException{      Session sess = request.getSession();      String userID = (String)sess.getAttribute(\"userid\");      ...}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "Parameter Manipulation",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ]
  },
  "links": [
    {
      "href": "http://www.cgisecurity.com/owasp/html/ch11s04.html",
      "text": "Parameter Manipulation"
    },
    {
      "href": "/article/42276b64-f51d-4b89-8c33-0ffd9b098890",
      "text": "Use Session Management Offered by the Framework"
    },
    {
      "href": "/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a",
      "text": "Protect Session IDs"
    },
    {
      "href": "/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717",
      "text": "Protect Session Cookies"
    },
    {
      "href": "/article/7a517ad5-8640-4bc7-9e84-ccc313a71901",
      "text": "Set the Domain and Path Values of Session Cookies"
    },
    {
      "href": "/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b",
      "text": "Set the Secure and HTTPOnly Flags on All Sensitive Cookies"
    },
    {
      "href": "/article/6c470029-5c62-4394-99a9-8990bc48b0a8",
      "text": "Change Session IDs During Authentication"
    },
    {
      "href": "/article/a223c2d8-ab42-47fb-81a2-86ad677a5632",
      "text": "Invalidate Sessions when Users Log Out"
    },
    {
      "href": "/article/acfe1a16-3f00-4383-ada4-bebafc98a836",
      "text": "Make Inactive Sessions Time-out"
    },
    {
      "href": "/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e",
      "text": "Include Unique Tokens in HTTP Requests"
    },
    {
      "href": "/article/9df0b518-f832-4a7c-9857-0517638c47db",
      "text": "Do Not Make Security Decisions Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b",
      "text": "Session Management Offered by the Framework Is Used"
    },
    {
      "href": "/article/1de62774-3392-4da7-9bae-065fb15b4a2b",
      "text": "Session IDs Are Protected"
    },
    {
      "href": "/article/59132a30-2bae-45e9-9d85-8de26441be29",
      "text": "Session Cookies are Protected"
    },
    {
      "href": "/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b",
      "text": "The Domain and Path Values of Session Cookies Are Strict"
    },
    {
      "href": "/article/d8922a46-a943-4ae0-b8af-b88eb01d6997",
      "text": "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies"
    },
    {
      "href": "/article/58df5418-8c03-4121-83e0-bc68247c5d7b",
      "text": "Session IDs Are Changed During Authentication"
    },
    {
      "href": "/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac",
      "text": "Sessions Are Invalidated When Users Log Out"
    },
    {
      "href": "/article/c486eeb2-f64f-480b-9823-48bd7d21047d",
      "text": "Inactive Sessions Time-out"
    },
    {
      "href": "/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0",
      "text": "Unique Tokens Are Included in HTTP Requests"
    },
    {
      "href": "/article/4436e342-64d9-4b1b-ae9b-3e00696053fb",
      "text": "Security Decisions are Not Made Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/7d647e95-e47f-42e3-bb84-fd0dd727245c",
      "text": "Add Unique Tokens to HTTP Requests Using ESAPI"
    },
    {
      "href": "/article/25e3943b-a651-42c5-9e19-76077de05e90",
      "text": "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)"
    },
    {
      "href": "/article/986c7161-0a76-430a-8d0e-80d4615ab5db",
      "text": "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)"
    },
    {
      "href": "/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC"
    },
    {
      "href": "/article/63deed1a-6df4-4e04-9f61-898f190e1fe1",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1"
    },
    {
      "href": "/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2"
    },
    {
      "href": "/article/4d7ee521-8680-481e-a40b-3afb04c2616d",
      "text": "Use ESAPI HTTPUtilities"
    },
    {
      "href": "/article/40771780-be59-4d4c-b283-5ec3cc286357",
      "text": "How to Test for Session Prediction Bugs in Java"
    }
  ],
  "html": "<h1>What to Check For</h1>\r\n  <p>Ensure your application does not make security decisions based on parameters that are accessible by the client.</p>\r\n  <h1>Why</h1>\r\n  <p>Using client-accessible data to make security decisions allows the users to access and modify the data and work around security measures.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to ensure that your application does not delegate parts of its security decision mechanism to the client-side:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that there are no security decision points on the client. </strong>Review your application's design and requirements. Ensure that no security decisions are made on the client-side. Common areas that might affect your application's security model include:</p>\r\n      <ul>\r\n        <li>URL-based parameters </li>\r\n        <li>Form-based parameters </li>\r\n        <li>Cookies </li>\r\n        <li>HTTP headers</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that user input does not affect security decisions. </strong>Trace all user input from source to sink. Verify that user input does not have a direct impact on your application's security decisions. Common mistakes to look out for include:</p>\r\n      <ul>\r\n        <li>Undocumented parameters that enable privileged functionality </li>\r\n        <li>Storing user privileges inside cookies</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Check if security decisions can be tampered with by the client. </strong>Through the use of parameter tampering attacks, ensure that users cannot tamper with your application's security decisions.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>Security decisions should not be based on any data that the client has control over. Common mistakes include relying on data inside unprotected cookies, hidden fields or query strings. </p>\r\n  <p>Use the following steps to ensure that no security decisions are based on client-accessible data:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify security decision points. </strong>Carefully examine the points in the code that are related to your application's security model. It is critical that no decision points are placed in the client. Because this is a design issue, it is recommended to use threat modeling to determine and evaluate the security decision points.</p>\r\n      <p />\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Trace data that influences security decisions. </strong>Tracing the data that influences security decisions helps&nbsp;determine if the data is vulnerable to any client-based attacks. Make sure that the client cannot modify or influence this data. </p>\r\n      <p />\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Prove that security-related data cannot be tampered with by the client. </strong>Use cryptography or your application's design to ensure that security related data cannot be tampered with by the client. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Mark all exceptions to this guideline. </strong>Note all exceptions made to this guideline. Thoroughly examine the code associated with such instances. Verify that all instances are provided in the business logic and are intended.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>The following code illustrates a servlet that accepts user-supplied input. Unfortunately, the application obtains the user's ID from the client which allows&nbsp;an attacker to tamper withj&nbsp;data that influences security decisions.</p>\r\n  <pre>public void doGet(HttpServletRequest request,<br />      HttpServletResponse response) throws ServletException, IOException{<br />      String userID = request.getParameter(\"userid\");<br />       ...<br /> }</pre>\r\n  <h1>Solution Example</h1>\r\n  <p>The following code illustrates a servlet that accepts user-supplied input. Because the application obtains the user's ID from the user's session, it is not possible for an attacker to tamper with such data.</p>\r\n  <pre>public void doGet(HttpServletRequest request,<br />      HttpServletResponse response) throws ServletException, IOException{<br />      Session sess = request.getSession();<br />      String userID = (String)sess.getAttribute(\"userid\");<br /><br />      ...<br /><br />}</pre>\r\n  <p />\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>To learn more about parameter manipulation and ways to prevent it, see: <a href=\"http://www.cgisecurity.com/owasp/html/ch11s04.html\">Parameter Manipulation</a>.</li>\r\n  </ul>\r\n  <h1>Java Session Management Guidelines</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/42276b64-f51d-4b89-8c33-0ffd9b098890\">Use Session Management Offered by the Framework</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a\">Protect Session IDs</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717\">Protect Session Cookies</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/7a517ad5-8640-4bc7-9e84-ccc313a71901\">Set the Domain and Path Values of Session Cookies</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b\">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/6c470029-5c62-4394-99a9-8990bc48b0a8\">Change Session IDs During Authentication</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/a223c2d8-ab42-47fb-81a2-86ad677a5632\">Invalidate Sessions when Users Log Out</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/acfe1a16-3f00-4383-ada4-bebafc98a836\">Make Inactive Sessions Time-out</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e\">Include Unique Tokens in HTTP Requests</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/9df0b518-f832-4a7c-9857-0517638c47db\">Do Not Make Security Decisions Based on Client-Accessible Parameters</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Checklists</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b\">Session Management Offered by the Framework Is Used</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/1de62774-3392-4da7-9bae-065fb15b4a2b\">Session IDs Are Protected</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/59132a30-2bae-45e9-9d85-8de26441be29\">Session Cookies are Protected</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b\">The Domain and Path Values of Session Cookies Are Strict</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/d8922a46-a943-4ae0-b8af-b88eb01d6997\">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/58df5418-8c03-4121-83e0-bc68247c5d7b\">Session IDs Are Changed During Authentication</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac\">Sessions Are Invalidated When Users Log Out</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/c486eeb2-f64f-480b-9823-48bd7d21047d\">Inactive Sessions Time-out</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0\">Unique Tokens Are Included in HTTP Requests</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/4436e342-64d9-4b1b-ae9b-3e00696053fb\">Security Decisions are Not Made Based on Client-Accessible Parameters</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Code Examples</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/7d647e95-e47f-42e3-bb84-fd0dd727245c\">Add Unique Tokens to HTTP Requests Using ESAPI</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/25e3943b-a651-42c5-9e19-76077de05e90\">Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/986c7161-0a76-430a-8d0e-80d4615ab5db\">Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6\">Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/63deed1a-6df4-4e04-9f61-898f190e1fe1\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 2</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/4d7ee521-8680-481e-a40b-3afb04c2616d\">Use ESAPI HTTPUtilities</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Testing</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/40771780-be59-4d4c-b283-5ec3cc286357\">How to Test for Session Prediction Bugs in Java</a>\r\n    </li>\r\n  </ul>"
}