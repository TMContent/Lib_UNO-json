{
  "id": "00000000-0000-0000-0000-000000690310",
  "checksum": "fc88104234434aba0f77b22ff6e184d0cf3eed7d",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "html5": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2"
    ],
    "allow": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "only": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "specific": [
      "p",
      "p",
      "p"
    ],
    "trusted": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "domains": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "when": [
      "p",
      "p",
      "p",
      "p"
    ],
    "using": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "access-control-allow-origin": [
      "p",
      "em",
      "p",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "em",
      "em",
      "em",
      "em",
      "em",
      "em",
      "li",
      "em",
      "li",
      "li",
      "strong",
      "em",
      "em",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "header": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h2"
    ],
    "should": [
      "p"
    ],
    "be": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "allowed": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "prevent": [
      "p"
    ],
    "unauthorized": [
      "p"
    ],
    "sites": [
      "p"
    ],
    "from": [
      "p"
    ],
    "accessing": [
      "p"
    ],
    "resource": [
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "is": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "possible": [
      "p",
      "ol",
      "li"
    ],
    "use": [
      "p"
    ],
    "\"*\"": [
      "p"
    ],
    "as": [
      "p",
      "ol",
      "li"
    ],
    "wildcard": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "allows": [
      "p"
    ],
    "any": [
      "p"
    ],
    "site": [
      "p"
    ],
    "access": [
      "p",
      "ol",
      "li"
    ],
    "a": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "this": [
      "p",
      "ol",
      "li"
    ],
    "discouraged": [
      "p"
    ],
    "because": [
      "p"
    ],
    "might": [
      "p",
      "p"
    ],
    "an": [
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p"
    ],
    "hijack": [
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "user": [
      "p",
      "p"
    ],
    "visits": [
      "p"
    ],
    "malicious": [
      "p",
      "p"
    ],
    "page": [
      "p",
      "ol",
      "li"
    ],
    "or": [
      "p"
    ],
    "exposed": [
      "p"
    ],
    "xss": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "specifically": [
      "p"
    ],
    "cause": [
      "p"
    ],
    "load": [
      "p"
    ],
    "data": [
      "p"
    ],
    "presents": [
      "p"
    ],
    "incorrect": [
      "p"
    ],
    "information": [
      "p"
    ],
    "via": [
      "p"
    ],
    "xmlhttprequest": [
      "p"
    ],
    "api": [
      "p"
    ],
    "how": [
      "h2",
      "ol",
      "li"
    ],
    "identify": [
      "ol",
      "li",
      "strong"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li"
    ],
    "sends": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "headers": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "search": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "find": [
      "ol",
      "li"
    ],
    "those": [
      "ol",
      "li"
    ],
    "create": [
      "ol",
      "li"
    ],
    "spreadsheet": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "of": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "note": [
      "ol",
      "li"
    ],
    "functions": [
      "ol",
      "li"
    ],
    "doing": [
      "ol",
      "li"
    ],
    "so": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "are": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "different": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "on": [
      "ol",
      "li"
    ],
    "platforms": [
      "ol",
      "li"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "php": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "function": [
      "ol",
      "li"
    ],
    "used": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "send": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "custom": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "but": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "would": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "more": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "practical": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "applications": [
      "ol",
      "li"
    ],
    "java": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "added": [
      "ol",
      "li"
    ],
    "allowedorigins": [
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em"
    ],
    "http": [
      "ol",
      "li"
    ],
    "filter": [
      "ol",
      "li"
    ],
    "webxml": [
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em"
    ],
    "files": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "technically": [
      "ol",
      "li"
    ],
    "not": [
      "ol",
      "li"
    ],
    "principle": [
      "ol",
      "li"
    ],
    "same": [
      "ol",
      "li"
    ],
    "most": [
      "ol",
      "li"
    ],
    "also": [
      "ol",
      "li"
    ],
    "responseaddheader": [
      "ol",
      "li",
      "em"
    ],
    "searching": [
      "ol",
      "li"
    ],
    "good": [
      "ol",
      "li"
    ],
    "idea": [
      "ol",
      "li"
    ],
    "aspnet,": [
      "ol",
      "li"
    ],
    "responseheaders.add": [
      "ol",
      "li",
      "em"
    ],
    "method": [
      "ol",
      "li"
    ],
    "can": [
      "ol",
      "li"
    ],
    "add": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "and": [
      "ol",
      "li"
    ],
    "again": [
      "ol",
      "li"
    ],
    "define": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "each": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "piece": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "authorized": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "determine": [
      "ol",
      "li"
    ],
    "these": [
      "ol",
      "li"
    ],
    "at": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "run-time": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "document": [
      "ol",
      "li"
    ],
    "specify": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "change": [
      "ol",
      "li"
    ],
    "domains)": [
      "ol",
      "li"
    ],
    "documented": [
      "ol",
      "li"
    ],
    "multiple": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "needs": [
      "ol",
      "li"
    ],
    "sent": [
      "ol",
      "li"
    ],
    "times": [
      "ol",
      "li"
    ],
    "once": [
      "ol",
      "li"
    ],
    "domain": [
      "ol",
      "li"
    ],
    "have": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "determined": [
      "ol",
      "li"
    ],
    "by": [
      "ol",
      "li"
    ],
    "corresponding": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "configurable": [
      "ol",
      "li"
    ],
    "option": [
      "ol",
      "li"
    ],
    "aspnet": [
      "strong"
    ],
    "cors": [
      "h2",
      "h2"
    ],
    "guidelines": [
      "h2"
    ],
    "validate": [
      "ul",
      "li",
      "a"
    ],
    "urls": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "passed": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "xmlhttprequestopen": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklist": [
      "h2"
    ],
    "items": [
      "h2"
    ],
    "validated": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How",
      "CORS Guidelines",
      "CORS Checklist Items"
    ],
    "ul": [
      "HTML5",
      "Allow Only Trusted Domains in the Access-Control-Allow-Origin Header\n Validate URLs Passed to XMLHttpRequest.open",
      "Only Trusted Domains Are Allowed in the Access-Control-Allow-Origin Header\n URLs Passed to XMLHttpRequest.open Are Validated"
    ],
    "li": [
      "HTML5",
      "Identify code that sends Access-Control-Allow-Origin headers. Search the application code for Access-Control-Allow-Origin to find code that sends those headers. Create a spreadsheet of all code that sends Access-Control-Allow-Origin headers.   Note that the functions for doing so are different on different platforms. In PHP, the header function is used to send custom headers, but it would be more practical to search for Access-Control-Allow-Origin in PHP applications. In Java, headers are added using the allowedOrigins HTTP filter in web.xml files. Technically, this is not code, but the principle is the same. In Java, it would be most practical to search for allowedOrigins in web.xml files. It is also possible to send headers using response.addHeader in Java, so searching the code for Access-Control-Allow-Origin is a good idea. In ASP.NET, the Response.Headers.Add method can be used to add custom headers, and again it would be more practical to search for Access-Control-Allow-Origin.",
      "Define trusted domains. For each piece of code that sends the Access-Control-Allow-Origin header in the spreadsheet, define all trusted domains that are authorized to access the page that sends that header. If the application has to determine these domains at run-time, document how.",
      "Specify trusted domains in Access-Control-Allow-Origin headers. For each piece of code that sends the Access-Control-Allow-Origin header, change it to specify the trusted domain(s) as documented in the spreadsheet. If multiple domains are authorized, the header needs to be sent multiple times, once for each domain. If trusted domains have to be determined at run-time by the application, add corresponding code to the application. If trusted domains have to be a configurable option, add corresponding code for that.",
      "Allow Only Trusted Domains in the Access-Control-Allow-Origin Header",
      "Validate URLs Passed to XMLHttpRequest.open",
      "Only Trusted Domains Are Allowed in the Access-Control-Allow-Origin Header",
      "URLs Passed to XMLHttpRequest.open Are Validated"
    ],
    "p": [
      "Allow only specific trusted domains when using the Access-Control-Allow-Origin header.",
      "Only specific trusted domains should be allowed when using the Access-Control-Allow-Origin header to prevent unauthorized sites from accessing the resource.",
      "It is possible to use the \"*\" as the wildcard that allows any site to access a resource when using the Access-Control-Allow-Origin. This is discouraged, because it might allow an attacker to hijack the application if the user visits a malicious page or is exposed to a XSS attack. Specifically, an attacker might cause the application to load malicious data that presents incorrect information to the user via the XMLHttpRequest API.",
      "To allow only specific trusted domains when using the Access-Control-Allow-Origin header:"
    ],
    "em": [
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "header",
      "Access-Control-Allow-Origin",
      "allowedOrigins",
      "web.xml",
      "allowedOrigins",
      "web.xml",
      "response.addHeader",
      "Access-Control-Allow-Origin",
      "Response.Headers.Add",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin",
      "Access-Control-Allow-Origin"
    ],
    "ol": [
      "Identify code that sends Access-Control-Allow-Origin headers. Search the application code for Access-Control-Allow-Origin to find code that sends those headers. Create a spreadsheet of all code that sends Access-Control-Allow-Origin headers.   Note that the functions for doing so are different on different platforms. In PHP, the header function is used to send custom headers, but it would be more practical to search for Access-Control-Allow-Origin in PHP applications. In Java, headers are added using the allowedOrigins HTTP filter in web.xml files. Technically, this is not code, but the principle is the same. In Java, it would be most practical to search for allowedOrigins in web.xml files. It is also possible to send headers using response.addHeader in Java, so searching the code for Access-Control-Allow-Origin is a good idea. In ASP.NET, the Response.Headers.Add method can be used to add custom headers, and again it would be more practical to search for Access-Control-Allow-Origin. \n Define trusted domains. For each piece of code that sends the Access-Control-Allow-Origin header in the spreadsheet, define all trusted domains that are authorized to access the page that sends that header. If the application has to determine these domains at run-time, document how.\n Specify trusted domains in Access-Control-Allow-Origin headers. For each piece of code that sends the Access-Control-Allow-Origin header, change it to specify the trusted domain(s) as documented in the spreadsheet. If multiple domains are authorized, the header needs to be sent multiple times, once for each domain. If trusted domains have to be determined at run-time by the application, add corresponding code to the application. If trusted domains have to be a configurable option, add corresponding code for that."
    ],
    "strong": [
      "Identify code that sends Access-Control-Allow-Origin headers.",
      "In PHP",
      "In Java",
      "In ASP.NET",
      "Define trusted domains.",
      "Specify trusted domains in Access-Control-Allow-Origin headers."
    ],
    "a": [
      "Allow Only Trusted Domains in the Access-Control-Allow-Origin Header",
      "Validate URLs Passed to XMLHttpRequest.open",
      "Only Trusted Domains Are Allowed in the Access-Control-Allow-Origin Header",
      "URLs Passed to XMLHttpRequest.open Are Validated"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-000000690310",
      "text": "Allow Only Trusted Domains in the Access-Control-Allow-Origin Header"
    },
    {
      "href": "00000000-0000-0000-0000-0000000a3746",
      "text": "Validate URLs Passed to XMLHttpRequest.open"
    },
    {
      "href": "00000000-0000-0000-0000-00000095ebe9",
      "text": "Only Trusted Domains Are Allowed in the Access-Control-Allow-Origin Header"
    },
    {
      "href": "00000000-0000-0000-0000-0000000be99d",
      "text": "URLs Passed to XMLHttpRequest.open Are Validated"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> HTML5</li>\n</ul><h2>What to Do</h2><p>Allow only specific trusted domains when using the <em>Access-Control-Allow-Origin</em> header.\n</p><h2>Why</h2><p>Only specific trusted domains should be allowed when using the <em>Access-Control-Allow-Origin</em> header to prevent unauthorized sites from accessing the resource. \n</p><p>\nIt is possible to use the \"*\" as the wildcard that allows any site to access a resource when using the <em>Access-Control-Allow-Origin</em>. This is discouraged, because it might allow an attacker to hijack the application if the user visits a malicious page or is exposed to a XSS attack. Specifically, an attacker might cause the application to load malicious data that presents incorrect information to the user via the XMLHttpRequest API.\n</p><h2>How</h2><p>To allow only specific trusted domains when using the <em>Access-Control-Allow-Origin</em> header:\n</p><ol>\n<li> <strong>Identify code that sends <em>Access-Control-Allow-Origin</em> headers.</strong> Search the application code for <em>Access-Control-Allow-Origin</em> to find code that sends those headers. Create a spreadsheet of all code that sends <em>Access-Control-Allow-Origin</em> headers.   Note that the functions for doing so are different on different platforms. <strong>In PHP</strong>, the <em>header</em> function is used to send custom headers, but it would be more practical to search for <em>Access-Control-Allow-Origin</em> in PHP applications. <strong>In Java</strong>, headers are added using the <em>allowedOrigins</em> HTTP filter in <em>web.xml</em> files. Technically, this is not code, but the principle is the same. In Java, it would be most practical to search for <em>allowedOrigins</em> in <em>web.xml</em> files. It is also possible to send headers using <em>response.addHeader</em> in Java, so searching the code for <em>Access-Control-Allow-Origin</em> is a good idea. <strong>In ASP.NET</strong>, the <em>Response.Headers.Add</em> method can be used to add custom headers, and again it would be more practical to search for <em>Access-Control-Allow-Origin</em>. </li>\n<li> <strong>Define trusted domains.</strong> For each piece of code that sends the <em>Access-Control-Allow-Origin</em> header in the spreadsheet, define all trusted domains that are authorized to access the page that sends that header. If the application has to determine these domains at run-time, document how.</li>\n<li> <strong>Specify trusted domains in <em>Access-Control-Allow-Origin</em> headers.</strong> For each piece of code that sends the <em>Access-Control-Allow-Origin</em> header, change it to specify the trusted domain(s) as documented in the spreadsheet. If multiple domains are authorized, the header needs to be sent multiple times, once for each domain. If trusted domains have to be determined at run-time by the application, add corresponding code to the application. If trusted domains have to be a configurable option, add corresponding code for that.</li>\n</ol><h2>CORS Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-000000690310\">Allow Only Trusted Domains in the Access-Control-Allow-Origin Header</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000000a3746\">Validate URLs Passed to XMLHttpRequest.open</a></li>\n</ul><h2>CORS Checklist Items</h2><ul><li> <a href=\"00000000-0000-0000-0000-00000095ebe9\">Only Trusted Domains Are Allowed in the Access-Control-Allow-Origin Header</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000000be99d\">URLs Passed to XMLHttpRequest.open Are Validated</a></li>\n</ul>"
}