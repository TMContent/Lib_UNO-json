{
  "id": "0d1871fe-76d3-4ea3-87be-ef63662dd772",
  "checksum": "0f3896b38a6009b62eb4961a74d7608708412649",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "h2",
      "p",
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "html5": [
      "ul",
      "li",
      "p"
    ],
    "java": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2"
    ],
    "for": [
      "h2",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "verify": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "filter": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "class": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "used": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "inject": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "x-frame-options": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "headers": [
      "p",
      "p",
      "p"
    ],
    "into": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "responses": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "why": [
      "h2"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "response": [
      "p",
      "ol",
      "li",
      "tt"
    ],
    "header": [
      "p",
      "ol",
      "li",
      "h2",
      "ul",
      "li",
      "a",
      "h2",
      "ul",
      "li",
      "a"
    ],
    "instructs": [
      "p"
    ],
    "browser": [
      "p"
    ],
    "disallow": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "iframes": [
      "p",
      "p"
    ],
    "across": [
      "p"
    ],
    "domains": [
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p"
    ],
    "limit": [
      "p"
    ],
    "their": [
      "p"
    ],
    "same": [
      "p"
    ],
    "origin": [
      "p"
    ],
    "this": [
      "p",
      "p"
    ],
    "protects": [
      "p"
    ],
    "against": [
      "p"
    ],
    "clickjacking": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "malicious": [
      "p"
    ],
    "technique": [
      "p"
    ],
    "uses": [
      "p"
    ],
    "overlay": [
      "p"
    ],
    "hide)": [
      "p"
    ],
    "clickable": [
      "p"
    ],
    "link": [
      "p",
      "p",
      "p"
    ],
    "button": [
      "p"
    ],
    "on": [
      "p"
    ],
    "web": [
      "p",
      "p",
      "p"
    ],
    "page": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "attack": [
      "p"
    ],
    "user": [
      "p"
    ],
    "thinks": [
      "p"
    ],
    "he": [
      "p"
    ],
    "she": [
      "p"
    ],
    "clicking": [
      "p"
    ],
    "intended": [
      "p",
      "p"
    ],
    "but": [
      "p",
      "ol",
      "li"
    ],
    "actually": [
      "p"
    ],
    "clicks": [
      "p"
    ],
    "overlaid": [
      "p"
    ],
    "iframe": [
      "p",
      "p"
    ],
    "thus": [
      "p"
    ],
    "sending": [
      "p"
    ],
    "data": [
      "p"
    ],
    "an": [
      "p"
    ],
    "unintended": [
      "p"
    ],
    "website": [
      "p"
    ],
    "when": [
      "h2",
      "p"
    ],
    "guideline": [
      "p"
    ],
    "implementing": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "where": [
      "p"
    ],
    "not": [
      "p"
    ],
    "rendering": [
      "p"
    ],
    "frame": [
      "p"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "find": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "classes": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li"
    ],
    "search": [
      "ol",
      "li"
    ],
    "application": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "code": [
      "ol",
      "li"
    ],
    "references": [
      "ol",
      "li"
    ],
    "javaxservlet.filter": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "interface": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "create": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "spreadsheet": [
      "ol",
      "li"
    ],
    "list": [
      "ol",
      "li"
    ],
    "all": [
      "ol",
      "li"
    ],
    "by": [
      "ol",
      "li"
    ],
    "examine": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "determine": [
      "ol",
      "li"
    ],
    "whether": [
      "ol",
      "li"
    ],
    "it": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "adds": [
      "ol",
      "li"
    ],
    "review": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "dofilter": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "method": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "calls": [
      "ol",
      "li"
    ],
    "addheader": [
      "ol",
      "li",
      "em"
    ],
    "with": [
      "ol",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "as": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "first": [
      "ol",
      "li"
    ],
    "parameter": [
      "ol",
      "li"
    ],
    "webxml": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "em",
      "em",
      "ol",
      "li",
      "strong"
    ],
    "file": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "are": [
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "mentioned": [
      "ol",
      "li"
    ],
    "follows": [
      "ol",
      "li"
    ],
    "\\": [
      "ol",
      "li"
    ],
    "filter>": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "filter-name>xframeoptionfilter</filter-name>": [
      "ol",
      "ol",
      "li",
      "li",
      "tt",
      "tt",
      "ol",
      "ol",
      "li",
      "li",
      "tt",
      "tt"
    ],
    "filter-class>": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "comexample.servlet.filters.xframeoptionfilter": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "/filter-class>": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "/filter>": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "filter-mapping>": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "url-pattern>/*</url-pattern>": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "/filter-mapping>": [
      "ol",
      "li",
      "tt",
      "ol",
      "li",
      "tt"
    ],
    "fix": [
      "h2"
    ],
    "name": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "arbitrary": [
      "ol",
      "li"
    ],
    "must": [
      "ol",
      "li"
    ],
    "implement": [
      "ol",
      "li"
    ],
    "work": [
      "ol",
      "li"
    ],
    "public": [
      "ol",
      "li",
      "tt"
    ],
    "void": [
      "ol",
      "li",
      "tt"
    ],
    "dofilterservletrequest": [
      "ol",
      "li",
      "tt"
    ],
    "req": [
      "ol",
      "li",
      "tt"
    ],
    "servletresponse": [
      "ol",
      "li",
      "tt"
    ],
    "respfilterchain": [
      "ol",
      "li",
      "tt"
    ],
    "chain": [
      "ol",
      "li",
      "tt"
    ],
    "throws": [
      "ol",
      "li",
      "tt"
    ],
    "ioexception": [
      "ol",
      "li",
      "tt"
    ],
    "servletexception": [
      "ol",
      "li",
      "tt"
    ],
    "{": [
      "ol",
      "li",
      "tt"
    ],
    "httpservletresponse": [
      "ol",
      "li",
      "tt"
    ],
    "=": [
      "ol",
      "li",
      "tt"
    ],
    "httpservletresponse)": [
      "ol",
      "li",
      "tt"
    ],
    "resp": [
      "ol",
      "li",
      "tt"
    ],
    "responseaddheader(“x-frame-options”,”deny”);": [
      "ol",
      "li",
      "tt"
    ],
    "chaindofilter(req,": [
      "ol",
      "li",
      "tt"
    ],
    "resp;": [
      "ol",
      "li",
      "tt"
    ],
    "}": [
      "ol",
      "li",
      "tt"
    ],
    "add": [
      "ol",
      "li",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "example": [
      "ol",
      "li"
    ],
    "following": [
      "ol",
      "li"
    ],
    "snippet": [
      "ol",
      "li"
    ],
    "xframeoptionfilter": [
      "ol",
      "li"
    ],
    "http": [
      "h2",
      "h2"
    ],
    "guidelines": [
      "h2"
    ],
    "x-content-security-policy": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "mitigate": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "xss": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "x-xss-protection": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "prevent": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "reflected": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "x-frame": [
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "options": [
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "strict-transport-security": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "enforce": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "https": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "includesubdomains": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklist": [
      "h2"
    ],
    "items": [
      "h2"
    ],
    "added": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "When",
      "How to Check",
      "How to Fix",
      "HTTP Header Guidelines",
      "HTTP Header Checklist Items"
    ],
    "ul": [
      "HTML5\n Java",
      "Use X-Content-Security-Policy to Mitigate XSS\n Use X-XSS-Protection to Prevent Reflected XSS\n Use X-Frame-Options to Prevent ClickJacking\n Use a Filter to Inject X-Frame-Options\n Add X-Frame Options to Responses\n Use the Strict-Transport-Security Header to Enforce HTTPS\n Use includeSubDomains with Strict-Transport-Security",
      "X-Content-Security-Policy Is Used to Mitigate XSS\n X-XSS-Protection Is Used to Prevent Reflected XSS\n X-Frame-Options Are Used to Prevent Clickjacking\n A Filter Is Used to Inject X-Frame Options\n X-Frame Options Are Added to Responses\n The Strict-Transport-Security Header is Used to Enforce HTTPS\n IncludeSubDomains is Used with Strict-Transport-Security"
    ],
    "li": [
      "HTML5",
      "Java",
      "Find Filter classes. Search the application code for references to the javax.Servlet.Filter interface to find Filter classes. Create a spreadsheet to list all Filter classes used by the application.",
      "Examine Filter classes. Examine each Filter class to determine whether it adds the X-Frame-Options header into responses. Review the doFilter method of each Filter class to make sure it calls the addHeader method with x-frame-options as the first parameter.",
      "Examine the web.xml file. Review the web.xml file to make sure the Filter classes are mentioned in it, as follows: \\  <filter>    <filter-name>XframeOptionFilter</filter-name>    <filter-class>            com.example.servlet.filters.XframeOptionFilter    </filter-class>    </filter>    <filter-mapping>    <filter-name>XframeOptionFilter</filter-name>    <url-pattern>/*</url-pattern>    </filter-mapping>",
      "Create the Filter class. The name of the Filter class is arbitrary, but it must implement the javax.Servlet.Filter interface. The work in the Filter class is in the doFilter method.      public void doFilter(ServletRequest req, ServletResponse resp,FilterChain chain) throws IOException, ServletException {    HttpServletResponse response = (HttpServletResponse) resp;    response.addHeader(“x-frame-options”,”DENY”);    chain.doFilter(req, resp);    }",
      "Add the filter to the application web.xml file. For example, the following snippet is for a filter with the class name XframeOptionFilter:   <filter>    <filter-name>XframeOptionFilter</filter-name>    <filter-class>            com.example.servlet.filters.XframeOptionFilter    </filter-class>    </filter>    <filter-mapping>    <filter-name>XframeOptionFilter</filter-name>    <url-pattern>/*</url-pattern>    </filter-mapping>",
      "Use X-Content-Security-Policy to Mitigate XSS",
      "Use X-XSS-Protection to Prevent Reflected XSS",
      "Use X-Frame-Options to Prevent ClickJacking",
      "Use a Filter to Inject X-Frame-Options",
      "Add X-Frame Options to Responses",
      "Use the Strict-Transport-Security Header to Enforce HTTPS",
      "Use includeSubDomains with Strict-Transport-Security",
      "X-Content-Security-Policy Is Used to Mitigate XSS",
      "X-XSS-Protection Is Used to Prevent Reflected XSS",
      "X-Frame-Options Are Used to Prevent Clickjacking",
      "A Filter Is Used to Inject X-Frame Options",
      "X-Frame Options Are Added to Responses",
      "The Strict-Transport-Security Header is Used to Enforce HTTPS",
      "IncludeSubDomains is Used with Strict-Transport-Security"
    ],
    "p": [
      "Verify that a filter class is used to inject X-Frame-Options headers into responses.",
      "The X-Frame-Options response header instructs the browser to disallow the use of iframes across domains or limit their use to the same origin. This protects against clickjacking, a malicious technique that uses iframes to overlay (hide) a clickable link or button on a web page. In a clickjacking attack, a user thinks he or she is clicking the intended link but actually clicks the overlaid iframe link, thus sending data to an unintended website.",
      "Use this guideline when implementing HTML5 web applications where the web page is not intended for rendering in a frame or iframe.",
      "To verify that a filter class is used to inject X-Frame-Options headers into responses:",
      "To use a filter class to inject X-Frame-Options headers into responses:"
    ],
    "ol": [
      "Find Filter classes. Search the application code for references to the javax.Servlet.Filter interface to find Filter classes. Create a spreadsheet to list all Filter classes used by the application.\n Examine Filter classes. Examine each Filter class to determine whether it adds the X-Frame-Options header into responses. Review the doFilter method of each Filter class to make sure it calls the addHeader method with x-frame-options as the first parameter.\n Examine the web.xml file. Review the web.xml file to make sure the Filter classes are mentioned in it, as follows: \\  <filter>    <filter-name>XframeOptionFilter</filter-name>    <filter-class>            com.example.servlet.filters.XframeOptionFilter    </filter-class>    </filter>    <filter-mapping>    <filter-name>XframeOptionFilter</filter-name>    <url-pattern>/*</url-pattern>    </filter-mapping>",
      "Create the Filter class. The name of the Filter class is arbitrary, but it must implement the javax.Servlet.Filter interface. The work in the Filter class is in the doFilter method.      public void doFilter(ServletRequest req, ServletResponse resp,FilterChain chain) throws IOException, ServletException {    HttpServletResponse response = (HttpServletResponse) resp;    response.addHeader(“x-frame-options”,”DENY”);    chain.doFilter(req, resp);    } \n Add the filter to the application web.xml file. For example, the following snippet is for a filter with the class name XframeOptionFilter:   <filter>    <filter-name>XframeOptionFilter</filter-name>    <filter-class>            com.example.servlet.filters.XframeOptionFilter    </filter-class>    </filter>    <filter-mapping>    <filter-name>XframeOptionFilter</filter-name>    <url-pattern>/*</url-pattern>    </filter-mapping>"
    ],
    "strong": [
      "Find Filter classes.",
      "Examine Filter classes.",
      "Examine the web.xml file.",
      "Create the Filter class.",
      "Add the filter to the application web.xml file."
    ],
    "em": [
      "javax.Servlet.Filter",
      "doFilter",
      "addHeader",
      "x-frame-options",
      "web.xml",
      "web.xml",
      "javax.Servlet.Filter",
      "doFilter"
    ],
    "tt": [
      "<filter>",
      "<filter-name>XframeOptionFilter</filter-name>",
      "<filter-class>",
      "com.example.servlet.filters.XframeOptionFilter",
      "</filter-class>",
      "</filter>",
      "<filter-mapping>",
      "<filter-name>XframeOptionFilter</filter-name>",
      "<url-pattern>/*</url-pattern>",
      "</filter-mapping>",
      "public void doFilter(ServletRequest req, ServletResponse resp,FilterChain chain) throws IOException, ServletException {",
      "HttpServletResponse response = (HttpServletResponse) resp;",
      "response.addHeader(“x-frame-options”,”DENY”);",
      "chain.doFilter(req, resp);",
      "}",
      "<filter>",
      "<filter-name>XframeOptionFilter</filter-name>",
      "<filter-class>",
      "com.example.servlet.filters.XframeOptionFilter",
      "</filter-class>",
      "</filter>",
      "<filter-mapping>",
      "<filter-name>XframeOptionFilter</filter-name>",
      "<url-pattern>/*</url-pattern>",
      "</filter-mapping>"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "Use X-Content-Security-Policy to Mitigate XSS",
      "Use X-XSS-Protection to Prevent Reflected XSS",
      "Use X-Frame-Options to Prevent ClickJacking",
      "Use a Filter to Inject X-Frame-Options",
      "Add X-Frame Options to Responses",
      "Use the Strict-Transport-Security Header to Enforce HTTPS",
      "Use includeSubDomains with Strict-Transport-Security",
      "X-Content-Security-Policy Is Used to Mitigate XSS",
      "X-XSS-Protection Is Used to Prevent Reflected XSS",
      "X-Frame-Options Are Used to Prevent Clickjacking",
      "A Filter Is Used to Inject X-Frame Options",
      "X-Frame Options Are Added to Responses",
      "The Strict-Transport-Security Header is Used to Enforce HTTPS",
      "IncludeSubDomains is Used with Strict-Transport-Security"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-00000028bb7d",
      "text": "Use X-Content-Security-Policy to Mitigate XSS"
    },
    {
      "href": "00000000-0000-0000-0000-0000009026c0",
      "text": "Use X-XSS-Protection to Prevent Reflected XSS"
    },
    {
      "href": "00000000-0000-0000-0000-000000204a22",
      "text": "Use X-Frame-Options to Prevent ClickJacking"
    },
    {
      "href": "9e0f93ba-0b80-4aab-b93c-c17b9af2a19c",
      "text": "Use a Filter to Inject X-Frame-Options"
    },
    {
      "href": "ae2dc4f8-af3d-4002-9417-f3f1d5c9128b",
      "text": "Add X-Frame Options to Responses"
    },
    {
      "href": "00000000-0000-0000-0000-00000063561d",
      "text": "Use the Strict-Transport-Security Header to Enforce HTTPS"
    },
    {
      "href": "00000000-0000-0000-0000-000000225f24",
      "text": "Use includeSubDomains with Strict-Transport-Security"
    },
    {
      "href": "00000000-0000-0000-0000-0000006b6766",
      "text": "X-Content-Security-Policy Is Used to Mitigate XSS"
    },
    {
      "href": "00000000-0000-0000-0000-0000007122c6",
      "text": "X-XSS-Protection Is Used to Prevent Reflected XSS"
    },
    {
      "href": "00000000-0000-0000-0000-000000498810",
      "text": "X-Frame-Options Are Used to Prevent Clickjacking"
    },
    {
      "href": "0d1871fe-76d3-4ea3-87be-ef63662dd772",
      "text": "A Filter Is Used to Inject X-Frame Options"
    },
    {
      "href": "26caffea-d597-40fd-9ed0-36fb025d188b",
      "text": "X-Frame Options Are Added to Responses"
    },
    {
      "href": "00000000-0000-0000-0000-0000001b501f",
      "text": "The Strict-Transport-Security Header is Used to Enforce HTTPS"
    },
    {
      "href": "0078cd3f-9e84-4eb4-9a2f-7f51e3100801",
      "text": "IncludeSubDomains is Used with Strict-Transport-Security"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> HTML5</li>\n<li> Java</li>\n</ul><h2>What to Check For</h2><p>Verify that a filter class is used to inject X-Frame-Options headers into responses.\n</p><h2>Why</h2><p>The X-Frame-Options response header instructs the browser to disallow the use of iframes across domains or limit their use to the same origin. This protects against clickjacking, a malicious technique that uses iframes to overlay (hide) a clickable link or button on a web page. In a clickjacking attack, a user thinks he or she is clicking the intended link but actually clicks the overlaid iframe link, thus sending data to an unintended website. \n</p><h2>When</h2><p>Use this guideline when implementing HTML5 web applications where the web page is not intended for rendering in a frame or iframe.\n</p><h2>How to Check</h2><p>To verify that a filter class is used to inject X-Frame-Options headers into responses:\n</p><ol>\n<li> <strong>Find Filter classes.</strong> Search the application code for references to the <em>javax.Servlet.Filter</em> interface to find Filter classes. Create a spreadsheet to list all Filter classes used by the application.</li>\n<li> <strong>Examine Filter classes.</strong> Examine each Filter class to determine whether it adds the X-Frame-Options header into responses. Review the <em>doFilter</em> method of each Filter class to make sure it calls the <em>addHeader</em> method with <em>x-frame-options</em> as the first parameter.</li>\n<li> <strong>Examine the <em>web.xml</em> file.</strong> Review the <em>web.xml</em> file to make sure the Filter classes are mentioned in it, as follows: \\ <tt> &lt;filter&gt; </tt> <br> <tt> &lt;filter-name&gt;XframeOptionFilter&lt;/filter-name&gt; </tt> <br> <tt> &lt;filter-class&gt; </tt> <br> <tt>         com.example.servlet.filters.XframeOptionFilter </tt> <br> <tt> &lt;/filter-class&gt; </tt> <br> <tt> &lt;/filter&gt; </tt> <br> <tt> &lt;filter-mapping&gt; </tt> <br> <tt> &lt;filter-name&gt;XframeOptionFilter&lt;/filter-name&gt; </tt> <br> <tt> &lt;url-pattern&gt;/*&lt;/url-pattern&gt; </tt> <br> <tt> &lt;/filter-mapping&gt; </tt></li>\n</ol><h2>How to Fix</h2><p>To use a filter class to inject X-Frame-Options headers into responses:\n</p><ol>\n<li> <strong>Create the Filter class.</strong> The name of the Filter class is arbitrary, but it must implement the <em>javax.Servlet.Filter</em> interface. The work in the Filter class is in the <em>doFilter</em> method. <br> <tt>    public void doFilter(ServletRequest req, ServletResponse resp,FilterChain chain) throws IOException, ServletException { </tt> <br> <tt> HttpServletResponse response = (HttpServletResponse) resp; </tt> <br> <tt> response.addHeader(“x-frame-options”,”DENY”); </tt> <br> <tt> chain.doFilter(req, resp); </tt> <br> <tt> } </tt></li>\n<li> <strong>Add the filter to the application web.xml file.</strong> For example, the following snippet is for a filter with the class name XframeOptionFilter: <br> <tt> &lt;filter&gt; </tt> <br> <tt> &lt;filter-name&gt;XframeOptionFilter&lt;/filter-name&gt; </tt> <br> <tt> &lt;filter-class&gt; </tt> <br> <tt>         com.example.servlet.filters.XframeOptionFilter </tt> <br> <tt> &lt;/filter-class&gt; </tt> <br> <tt> &lt;/filter&gt; </tt> <br> <tt> &lt;filter-mapping&gt; </tt> <br> <tt> &lt;filter-name&gt;XframeOptionFilter&lt;/filter-name&gt; </tt> <br> <tt> &lt;url-pattern&gt;/*&lt;/url-pattern&gt; </tt> <br> <tt> &lt;/filter-mapping&gt; </tt></li>\n</ol>\n<h2>HTTP Header Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-00000028bb7d\">Use X-Content-Security-Policy to Mitigate XSS</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000009026c0\">Use X-XSS-Protection to Prevent Reflected XSS</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000204a22\">Use X-Frame-Options to Prevent ClickJacking</a></li>\n<li> <a href=\"9e0f93ba-0b80-4aab-b93c-c17b9af2a19c\">Use a Filter to Inject X-Frame-Options</a></li>\n<li> <a href=\"ae2dc4f8-af3d-4002-9417-f3f1d5c9128b\">Add X-Frame Options to Responses</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000063561d\">Use the Strict-Transport-Security Header to Enforce HTTPS</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000225f24\">Use includeSubDomains with Strict-Transport-Security</a></li>\n</ul><h2>HTTP Header Checklist Items</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000006b6766\">X-Content-Security-Policy Is Used to Mitigate XSS</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000007122c6\">X-XSS-Protection Is Used to Prevent Reflected XSS</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000498810\">X-Frame-Options Are Used to Prevent Clickjacking</a></li>\n<li> <a href=\"0d1871fe-76d3-4ea3-87be-ef63662dd772\">A Filter Is Used to Inject X-Frame Options</a></li>\n<li> <a href=\"26caffea-d597-40fd-9ed0-36fb025d188b\">X-Frame Options Are Added to Responses</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000001b501f\">The Strict-Transport-Security Header is Used to Enforce HTTPS</a></li>\n<li> <a href=\"0078cd3f-9e84-4eb4-9a2f-7f51e3100801\">IncludeSubDomains is Used with Strict-Transport-Security</a></li>\n</ul>"
}