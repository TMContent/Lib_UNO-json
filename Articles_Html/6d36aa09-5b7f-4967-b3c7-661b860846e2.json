{
  "id": "6d36aa09-5b7f-4967-b3c7-661b860846e2",
  "checksum": "7a197056802d6ed7c1ab6721b1792a5fdd48543f",
  "words": {
    "1": [
      "ul",
      "li",
      "h1"
    ],
    "2": [
      "ul",
      "li",
      "h1"
    ],
    "3": [
      "ul",
      "li",
      "h1"
    ],
    "applies": [
      "h1",
      "p"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "j2ee": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "applications": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "summary": [
      "h1"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "authenticate": [
      "p"
    ],
    "their": [
      "p",
      "p",
      "p"
    ],
    "clients": [
      "p",
      "p",
      "p"
    ],
    "using": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "username": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "and": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "password": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "combination": [
      "p"
    ],
    "must": [
      "p",
      "p",
      "p",
      "p"
    ],
    "store": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "these": [
      "p",
      "p",
      "p",
      "p"
    ],
    "credentials": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p"
    ],
    "somewhere": [
      "p"
    ],
    "within": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application’s": [
      "p",
      "ol",
      "li"
    ],
    "realm": [
      "p"
    ],
    "some": [
      "p"
    ],
    "directly": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "b",
      "i",
      "p",
      "ol",
      "li",
      "h2",
      "em",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "i",
      "p",
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "database": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "server": [
      "p",
      "p",
      "p"
    ],
    "while": [
      "p"
    ],
    "others": [
      "p"
    ],
    "allow": [
      "p",
      "p"
    ],
    "browsers": [
      "p"
    ],
    "client": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "cache": [
      "p",
      "p",
      "ol",
      "li",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p"
    ],
    "browser’s": [
      "p",
      "p",
      "ol",
      "li",
      "h2",
      "em",
      "p",
      "h2",
      "em",
      "p",
      "p"
    ],
    "history": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "for": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "i",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "future": [
      "p",
      "p",
      "p"
    ],
    "logins": [
      "p"
    ],
    "during": [
      "p",
      "p"
    ],
    "local": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "machine": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "title"
    ],
    "credential": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "i",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "attack": [
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "first": [
      "p",
      "p"
    ],
    "gets": [
      "p"
    ],
    "access": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "computer": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "where": [
      "p",
      "ol",
      "li"
    ],
    "are": [
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "stored": [
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "then": [
      "p",
      "p"
    ],
    "reads": [
      "p"
    ],
    "execute": [
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "p"
    ],
    "further": [
      "p"
    ],
    "attacks": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "on": [
      "p",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "follow": [
      "p",
      "p",
      "p"
    ],
    "steps": [
      "p",
      "p",
      "p"
    ],
    "test": [
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "b",
      "i",
      "p",
      "h2",
      "em",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "theft": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "bugs": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "step": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h1",
      "h1",
      "h1"
    ],
    "understand": [
      "ul",
      "li",
      "h1",
      "p",
      "p"
    ],
    "scenarios": [
      "ul",
      "li",
      "h1",
      "p"
    ],
    "analyze": [
      "ul",
      "li",
      "h1"
    ],
    "causes": [
      "ul",
      "li",
      "h1",
      "p",
      "p"
    ],
    "countermeasures": [
      "ul",
      "li",
      "h1",
      "p"
    ],
    "cases": [
      "ul",
      "li",
      "h1",
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "necessary": [
      "p",
      "p",
      "p"
    ],
    "anatomy": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "scenario": [
      "p"
    ],
    "deal": [
      "p"
    ],
    "with": [
      "p",
      "p",
      "p"
    ],
    "authentication": [
      "p",
      "p",
      "p"
    ],
    "keep": [
      "p"
    ],
    "record": [
      "p"
    ],
    "valid": [
      "p",
      "p"
    ],
    "such": [
      "p",
      "ol",
      "li"
    ],
    "as": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "logs": [
      "p",
      "ol",
      "li"
    ],
    "used": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "target": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "client’s": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "uses": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "different": [
      "p",
      "p"
    ],
    "methods": [
      "p"
    ],
    "steal": [
      "p",
      "p",
      "p",
      "p"
    ],
    "from": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "depending": [
      "p",
      "p"
    ],
    "how": [
      "p",
      "p",
      "title"
    ],
    "implement": [
      "p"
    ],
    "may": [
      "p",
      "ol",
      "li"
    ],
    "be": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "additional": [
      "p",
      "p"
    ],
    "might": [
      "p"
    ],
    "found": [
      "p"
    ],
    "detail": [
      "p"
    ],
    "storing": [
      "ol",
      "li"
    ],
    "credentials.": [
      "ol",
      "li"
    ],
    "grabs": [
      "ol",
      "li"
    ],
    "next": [
      "p",
      "p"
    ],
    "review": [
      "p"
    ],
    "permissions": [
      "h2",
      "em",
      "p",
      "p",
      "p"
    ],
    "stores": [
      "h2",
      "em",
      "p",
      "p",
      "b",
      "i"
    ],
    "location": [
      "p"
    ],
    "accessible": [
      "p"
    ],
    "any": [
      "p",
      "p",
      "p",
      "p"
    ],
    "low-privileged": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "users": [
      "p"
    ],
    "host": [
      "p"
    ],
    "vulnerable": [
      "p",
      "p",
      "p",
      "p"
    ],
    "instance": [
      "p"
    ],
    "c\\user_files": [
      "p",
      "i"
    ],
    "folder": [
      "p",
      "p"
    ],
    "make": [
      "p",
      "p"
    ],
    "sure": [
      "p",
      "p",
      "p"
    ],
    "set": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "appropriate": [
      "p",
      "p",
      "p"
    ],
    "control": [
      "p"
    ],
    "lists": [
      "p"
    ],
    "acls)": [
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "c\\user_files\\credentials.txt": [
      "p",
      "i"
    ],
    "doesn’t": [
      "p",
      "p"
    ],
    "restrict": [
      "p"
    ],
    "its": [
      "p",
      "p"
    ],
    "administrators": [
      "p"
    ],
    "account": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "only": [
      "p",
      "p"
    ],
    "by": [
      "p",
      "p"
    ],
    "not": [
      "p",
      "p"
    ],
    "logged-in": [
      "p",
      "p"
    ],
    "user,": [
      "p"
    ],
    "allows": [
      "p",
      "p",
      "p",
      "p"
    ],
    "read": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "same": [
      "p"
    ],
    "table": [
      "p",
      "p"
    ],
    "passwords": [
      "p"
    ],
    "guest": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p"
    ],
    "clear": [
      "h2",
      "em",
      "p"
    ],
    "text": [
      "h2",
      "em",
      "p"
    ],
    "need": [
      "p"
    ],
    "take": [
      "p"
    ],
    "precautions": [
      "p"
    ],
    "so": [
      "p"
    ],
    "attackers": [
      "p"
    ],
    "they": [
      "p"
    ],
    "can’t": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "them": [
      "p"
    ],
    "log": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "thus": [
      "p"
    ],
    "recommended": [
      "p"
    ],
    "verifiers": [
      "p"
    ],
    "encryption": [
      "p"
    ],
    "version": [
      "p"
    ],
    "one-way": [
      "p"
    ],
    "hashes": [
      "p"
    ],
    "added": [
      "p"
    ],
    "cryptographic": [
      "p"
    ],
    "salt": [
      "p"
    ],
    "result": [
      "p"
    ],
    "executes": [
      "p"
    ],
    "successful": [
      "p",
      "p"
    ],
    "he": [
      "p"
    ],
    "she": [
      "p"
    ],
    "will": [
      "p",
      "p"
    ],
    "able": [
      "p"
    ],
    "get": [
      "p",
      "p"
    ],
    "password’s": [
      "p"
    ],
    "hash": [
      "p"
    ],
    "but": [
      "p"
    ],
    "fail": [
      "p"
    ],
    "actual": [
      "p"
    ],
    "required": [
      "p"
    ],
    "keeping": [
      "h2",
      "em"
    ],
    "can": [
      "p"
    ],
    "choose": [
      "p"
    ],
    "remember": [
      "p"
    ],
    "option": [
      "p",
      "p"
    ],
    "commonly": [
      "p"
    ],
    "appears": [
      "p"
    ],
    "“remember": [
      "p"
    ],
    "me": [
      "p"
    ],
    "time”": [
      "p"
    ],
    "check": [
      "p",
      "p"
    ],
    "box": [
      "p"
    ],
    "login": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "form": [
      "p"
    ],
    "avoid": [
      "p",
      "p"
    ],
    "developers": [
      "p"
    ],
    "encouraged": [
      "p"
    ],
    "disallow": [
      "p"
    ],
    "default": [
      "p"
    ],
    "always": [
      "p"
    ],
    "require": [
      "p"
    ],
    "enter": [
      "p"
    ],
    "being": [
      "p"
    ],
    "now": [
      "p"
    ],
    "you’ve": [
      "p"
    ],
    "reviewed": [
      "p"
    ],
    "theoretical": [
      "p"
    ],
    "aspects": [
      "p"
    ],
    "following": [
      "p"
    ],
    "your": [
      "p",
      "p",
      "p"
    ],
    "insecure": [
      "p",
      "b",
      "i",
      "p"
    ],
    "system": [
      "p",
      "b",
      "i",
      "p",
      "p"
    ],
    "browse": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "folder/registry": [
      "ol",
      "li"
    ],
    "key": [
      "ol",
      "li"
    ],
    "expected": [
      "p",
      "p"
    ],
    "results": [
      "p",
      "p"
    ],
    "registry": [
      "p"
    ],
    "low": [
      "ol",
      "li"
    ],
    "privileged": [
      "ol",
      "li"
    ],
    "download": [
      "ol",
      "li"
    ],
    "http": [
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "proxy": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "tool": [
      "ol",
      "li"
    ],
    "burp": [
      "ol",
      "li"
    ],
    "open": [
      "ol",
      "li"
    ],
    "web": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "browser": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "connection": [
      "ol",
      "li"
    ],
    "options": [
      "ol",
      "li"
    ],
    "turn": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "intercept": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "off": [
      "ol",
      "li"
    ],
    "page": [
      "ol",
      "li"
    ],
    "type": [
      "ol",
      "li"
    ],
    "appear": [
      "ol",
      "li"
    ],
    "hidden": [
      "ol",
      "li"
    ],
    "characters": [
      "ol",
      "li"
    ],
    "submit": [
      "ol",
      "li"
    ],
    "request": [
      "ol",
      "li",
      "p"
    ],
    "shows": [
      "p"
    ],
    "intercepted": [
      "p"
    ],
    "conclusions": [
      "h1"
    ],
    "consist": [
      "p"
    ],
    "logging": [
      "p"
    ],
    "trying": [
      "p"
    ],
    "recover": [
      "p",
      "p"
    ],
    "legitimate": [
      "p"
    ],
    "protection": [
      "p"
    ],
    "poor": [
      "p"
    ],
    "well": [
      "p",
      "p"
    ],
    "details": [
      "p"
    ],
    "bug’s": [
      "p"
    ],
    "what": [
      "p",
      "p"
    ],
    "protect": [
      "p"
    ],
    "against": [
      "p"
    ],
    "case": [
      "p"
    ],
    "attempt": [
      "p"
    ],
    "java": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Step 1: Understand Attack Scenarios",
      "Step 2: Analyze Causes and Countermeasures",
      "Step 3: Execute Test Cases",
      "Conclusions"
    ],
    "ul": [
      "J2EE applications",
      "Step 1: Understand attack scenarios \r\n    Step 2: Analyze causes and countermeasures \r\n    Step 3: Execute test cases"
    ],
    "li": [
      "J2EE applications",
      "Step 1: Understand attack scenarios",
      "Step 2: Analyze causes and countermeasures",
      "Step 3: Execute test cases",
      "The attacker logs in to target computer (computer storing client credentials).",
      "The attacker grabs the target client’s credentials from the credentials store, the cache history, or the browser’s store.",
      "The attacker uses the target client’s credentials to access the J2EE application.",
      "Log in to machine where credentials are stored using a low-privileged account.",
      "Browse to folder/registry key used to store credentials.",
      "Read credentials.",
      "Log in to target machine using a low privileged account.",
      "Download an HTTP proxy tool such as Burp proxy.",
      "Open web browser, and set web browser connection options to use HTTP proxy.",
      "In proxy, turn intercept off.",
      "Browse to application’s login page.",
      "In proxy, turn intercept on.",
      "Type the username of the target client.  A password may appear in hidden characters.",
      "Submit login request."
    ],
    "p": [
      "J2EE applications that authenticate their clients using a username and password combination must store these credentials somewhere within the application’s realm.  Some J2EE applications directly store credentials in a file or a database server while others allow browsers to store client credentials in the cache or browser’s history for future logins.  During a local machine credential attack, the attacker first gets access to the computer where credentials are stored and then reads the credentials to execute further attacks on the application.",
      "Follow these steps to test for local machine credential theft bugs in J2EE:",
      "First it is necessary to understand the anatomy of an attack scenario for local credential theft bugs in J2EE applications.",
      "J2EE applications that deal with authentication keep a record of valid credentials in a credential store such as a file or a database in a local computer.  During local machine credential theft attacks, an attacker logs in to the computer used to store the target client’s J2EE application credentials and uses different methods to steal the credentials from the target computer.  Depending on how J2EE applications implement authentication, credentials may be stored in a file or a database server.  Additional credentials might be found in cache history and browser’s store.",
      "In detail:",
      "Next it is necessary to review the different causes and countermeasures for local credential theft bugs.",
      "J2EE applications that store credentials in a location accessible to any low-privileged users of the host computer are vulnerable to local machine credential attacks.   For instance, an application that stores credentials in the c:\\user_files folder must make sure to set the appropriate permissions or Access Control Lists (ACLs) on this folder.   If the application uses the credential file c:\\user_files\\credentials.txt and doesn’t restrict its access to administrators or a low-privileged account that used only by the J2EE application (and not any logged-in user), the application allows any logged-in attacker to read the file and steal the credentials.  The same applies to a database table; a J2EE application that doesn’t set the permissions on the table used to store username and passwords allows any database server guest user to read and steal credentials from the database.",
      "Applications that need to store credentials must take the appropriate precautions so that if attackers steal client credentials, they can’t use them to log in to the target application.   Thus, it is recommended to store password verifiers in their encryption version as one-way hashes with an added cryptographic salt.  As a result, if the attacker executes a successful local credential theft attack, he or she will only be able to get the password’s hash but fail to get the actual password required to log in to the target application.",
      "J2EE applications can choose to allow their clients to remember the password for future uses.  This option commonly appears as the “remember me next time” check box in the login form.   To avoid credential theft attacks, developers are encouraged to disallow this option by default and always require its clients to enter valid credentials.  This will avoid credentials being stored in the browser’s cache for future use.",
      "Now that you’ve reviewed the theoretical aspects of local credential theft bugs, it is necessary to execute the following test cases to check if your application is vulnerable.",
      "Test for insecure credential stores in file system",
      "Follow these steps to test for insecure credentials in the file system:",
      "Expected results:  The application is vulnerable if it allows a low-privileged user to read client credentials from the file system or registry.",
      "Follow these steps to test for local credential theft in browser’s cache.",
      "Expected results:  The application is vulnerable if the HTTP proxy shows the target client username and password in the intercepted login request.",
      "Local machine credential theft attacks consist of logging in to the target computer (used to store credentials) and trying to recover the credentials of a legitimate user.  For protection,  J2EE applications that use authentication must  not to store credentials with poor permissions or in clear text, as this allows for local machine credential theft attacks to be successful.   To test for credential theft attacks in your J2EE application, be sure to understand well the details of this bug’s attack scenarios as well as what causes it and how to protect against it.   Then execute the appropriate test cases depending on what credential store your J2EE application uses.  Make sure to execute an additional test case to attempt to recover credentials in the browser’s history using a low-privileged account."
    ],
    "ol": [
      "The attacker logs in to target computer (computer storing client credentials). \r\n    The attacker grabs the target client’s credentials from the credentials store, the cache history, or the browser’s store. \r\n    The attacker uses the target client’s credentials to access the J2EE application.",
      "Log in to machine where credentials are stored using a low-privileged account. \r\n    Browse to folder/registry key used to store credentials. \r\n    Read credentials.",
      "Log in to target machine using a low privileged account. \r\n    Download an HTTP proxy tool such as Burp proxy. \r\n    Open web browser, and set web browser connection options to use HTTP proxy. \r\n    In proxy, turn intercept off. \r\n    Browse to application’s login page. \r\n    In proxy, turn intercept on. \r\n    Type the username of the target client.  A password may appear in hidden characters. \r\n    Submit login request."
    ],
    "h2": [
      "Permissions on Credential Stores",
      "Credentials in Clear Text",
      "Keeping Credentials in the browser’s cache",
      "Test for credentials in browser’s cache"
    ],
    "em": [
      "Permissions on Credential Stores",
      "Credentials in Clear Text",
      "Keeping Credentials in the browser’s cache",
      "Test for credentials in browser’s cache"
    ],
    "i": [
      "c:\\user_files",
      "c:\\user_files\\credentials.txt",
      "Test for insecure credential stores in file system"
    ],
    "br": [
      "",
      ""
    ],
    "b": [
      "Test for insecure credential stores in file system"
    ]
  },
  "links": [],
  "html": "<h1>\r\n     Applies to \r\n  </h1>\r\n  <ul>\r\n    <li>J2EE applications</li>\r\n  </ul>\r\n  <h1>\r\n     Summary \r\n  </h1>\r\n  <p>J2EE applications that authenticate their clients using a username and password combination must store these credentials somewhere within the application’s realm.  Some J2EE applications directly store credentials in a file or a database server while others allow browsers to store client credentials in the cache or browser’s history for future logins.  During a local machine credential attack, the attacker first gets access to the computer where credentials are stored and then reads the credentials to execute further attacks on the application.</p>\r\n  <p>Follow these steps to test for local machine credential theft bugs in J2EE:</p>\r\n  <ul>\r\n    <li>Step 1: Understand attack scenarios </li>\r\n    <li>Step 2: Analyze causes and countermeasures </li>\r\n    <li>Step 3: Execute test cases</li>\r\n  </ul>\r\n  <h1>\r\n     Step 1: Understand Attack Scenarios \r\n  </h1>\r\n  <p>First it is necessary to understand the anatomy of an attack scenario for local credential theft bugs in J2EE applications.</p>\r\n  <p>J2EE applications that deal with authentication keep a record of valid credentials in a credential store such as a file or a database in a local computer.  During local machine credential theft attacks, an attacker logs in to the computer used to store the target client’s J2EE application credentials and uses different methods to steal the credentials from the target computer.  Depending on how J2EE applications implement authentication, credentials may be stored in a file or a database server.  Additional credentials might be found in cache history and browser’s store.</p>\r\n  <p>In detail:</p>\r\n  <ol>\r\n    <li>The attacker logs in to target computer (computer storing client credentials). </li>\r\n    <li>The attacker grabs the target client’s credentials from the credentials store, the cache history, or the browser’s store. </li>\r\n    <li>The attacker uses the target client’s credentials to access the J2EE application.</li>\r\n  </ol>\r\n  <h1>\r\n     Step 2: Analyze Causes and Countermeasures \r\n  </h1>\r\n  <p>Next it is necessary to review the different causes and countermeasures for local credential theft bugs.</p>\r\n  <h2>\r\n    <em>Permissions on Credential Stores</em>\r\n  </h2>\r\n  <p>J2EE applications that store credentials in a location accessible to any low-privileged users of the host computer are vulnerable to local machine credential attacks.   For instance, an application that stores credentials in the <i>c:\\user_files</i> folder must make sure to set the appropriate permissions or Access Control Lists (ACLs) on this folder.   If the application uses the credential file <i>c:\\user_files\\credentials.txt</i> and doesn’t restrict its access to administrators or a low-privileged account that used only by the J2EE application (and not any logged-in user), the application allows any logged-in attacker to read the file and steal the credentials.  The same applies to a database table; a J2EE application that doesn’t set the permissions on the table used to store username and passwords allows any database server guest user to read and steal credentials from the database.</p>\r\n  <h2>\r\n    <em>Credentials in Clear Text</em>\r\n  </h2>\r\n  <p>Applications that need to store credentials must take the appropriate precautions so that if attackers steal client credentials, they can’t use them to log in to the target application.   Thus, it is recommended to store password verifiers in their encryption version as one-way hashes with an added cryptographic salt.  As a result, if the attacker executes a successful local credential theft attack, he or she will only be able to get the password’s hash but fail to get the actual password required to log in to the target application. <br /></p>\r\n  <h2>\r\n    <em>Keeping Credentials in the browser’s cache</em>\r\n  </h2>\r\n  <p>J2EE applications can choose to allow their clients to remember the password for future uses.  This option commonly appears as the “remember me next time” check box in the login form.   To avoid credential theft attacks, developers are encouraged to disallow this option by default and always require its clients to enter valid credentials.  This will avoid credentials being stored in the browser’s cache for future use.</p>\r\n  <h1>\r\n     Step 3: Execute Test Cases \r\n  </h1>\r\n  <p>Now that you’ve reviewed the theoretical aspects of local credential theft bugs, it is necessary to execute the following test cases to check if your application is vulnerable.</p>\r\n  <p>\r\n    <b>\r\n      <i>\r\n         Test for insecure credential stores in file system \r\n      </i>\r\n    </b>\r\n  </p>\r\n  <p>Follow these steps to test for insecure credentials in the file system:</p>\r\n  <ol>\r\n    <li>Log in to machine where credentials are stored using a low-privileged account. </li>\r\n    <li>Browse to folder/registry key used to store credentials. </li>\r\n    <li>Read credentials.</li>\r\n  </ol>\r\n  <p>Expected results:  The application is vulnerable if it allows a low-privileged user to read client credentials from the file system or registry.</p>\r\n  <h2>\r\n    <em>Test for credentials in browser’s cache</em>\r\n  </h2>\r\n  <p>Follow these steps to test for local credential theft in browser’s cache.</p>\r\n  <ol>\r\n    <li>Log in to target machine using a low privileged account. </li>\r\n    <li>Download an HTTP proxy tool such as Burp proxy. </li>\r\n    <li>Open web browser, and set web browser connection options to use HTTP proxy. </li>\r\n    <li>In proxy, turn intercept off. </li>\r\n    <li>Browse to application’s login page. </li>\r\n    <li>In proxy, turn intercept on. </li>\r\n    <li>Type the username of the target client.  A password may appear in hidden characters. </li>\r\n    <li>Submit login request.</li>\r\n  </ol>\r\n  <p>Expected results:  The application is vulnerable if the HTTP proxy shows the target client username and password in the intercepted login request.</p>\r\n  <h1>\r\n     Conclusions \r\n  </h1>\r\n  <p>Local machine credential theft attacks consist of logging in to the target computer (used to store credentials) and trying to recover the credentials of a legitimate user.  For protection,  J2EE applications that use authentication must  not to store credentials with poor permissions or in clear text, as this allows for local machine credential theft attacks to be successful.   To test for credential theft attacks in your J2EE application, be sure to understand well the details of this bug’s attack scenarios as well as what causes it and how to protect against it.   Then execute the appropriate test cases depending on what credential store your J2EE application uses.  Make sure to execute an additional test case to attempt to recover credentials in the browser’s history using a low-privileged account.</p>\r\n  <br />"
}