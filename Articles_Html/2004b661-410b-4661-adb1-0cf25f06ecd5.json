{
  "id": "2004b661-410b-4661-adb1-0cf25f06ecd5",
  "checksum": "a942dac6e60e3ad6c1a86c14a35d547ccb9b159b",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "pre"
    ],
    "check": [
      "h1"
    ],
    "for": [
      "h1"
    ],
    "ensure": [
      "p",
      "p"
    ],
    "that authentication": [
      "p"
    ],
    "cookies": [
      "p",
      "title"
    ],
    "are": [
      "p",
      "p",
      "title"
    ],
    "not": [
      "p",
      "p",
      "title"
    ],
    "stored": [
      "p",
      "p"
    ],
    "in": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "user's": [
      "p",
      "p",
      "p"
    ],
    "profile": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "authentication": [
      "p",
      "title"
    ],
    "cookies can": [
      "p"
    ],
    "be": [
      "p"
    ],
    "stolen": [
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "pre"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "gets": [
      "p"
    ],
    "physical": [
      "p"
    ],
    "access": [
      "p"
    ],
    "computer": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "fix": [
      "h1"
    ],
    "a": [
      "p",
      "p"
    ],
    "non-persistent": [
      "p",
      "p",
      "p",
      "pre"
    ],
    "cookie": [
      "p",
      "p",
      "p",
      "pre"
    ],
    "set": [
      "p",
      "p",
      "pre"
    ],
    "displayrememberme": [
      "p",
      "b"
    ],
    "property": [
      "p"
    ],
    "of": [
      "p",
      "p"
    ],
    "login": [
      "p",
      "b",
      "p"
    ],
    "control": [
      "p"
    ],
    "false": [
      "p",
      "b",
      "p",
      "pre"
    ],
    "you": [
      "p",
      "p",
      "p"
    ],
    "using": [
      "p"
    ],
    "controls": [
      "p"
    ],
    "can": [
      "p"
    ],
    "specify": [
      "p"
    ],
    "when": [
      "p"
    ],
    "call": [
      "p"
    ],
    "either": [
      "p"
    ],
    "redirectfromloginpage": [
      "p",
      "b"
    ],
    "or": [
      "p"
    ],
    "setauthcookie": [
      "p",
      "b"
    ],
    "methods": [
      "p"
    ],
    "formsauthentication": [
      "p",
      "b"
    ],
    "class": [
      "p"
    ],
    "having": [
      "p"
    ],
    "validated": [
      "p"
    ],
    "credentials": [
      "p",
      "p",
      "pre"
    ],
    "as": [
      "p"
    ],
    "shown": [
      "p"
    ],
    "here": [
      "p"
    ],
    "public": [
      "p",
      "pre"
    ],
    "void": [
      "p",
      "pre"
    ],
    "login_clickobject": [
      "p",
      "pre"
    ],
    "sender": [
      "p",
      "pre"
    ],
    "eventargs": [
      "p",
      "pre"
    ],
    "e": [
      "p",
      "pre"
    ],
    "{": [
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "//": [
      "p",
      "p",
      "pre",
      "pre"
    ],
    "is": [
      "p",
      "pre"
    ],
    "user": [
      "p",
      "pre"
    ],
    "valid?": [
      "p",
      "pre"
    ],
    "membership.validateuser(username.text,": [
      "p",
      "pre"
    ],
    "passwordtext))": [
      "p",
      "pre"
    ],
    "parameter": [
      "p",
      "pre"
    ],
    "two": [
      "p",
      "pre"
    ],
    "indicates": [
      "p",
      "pre"
    ],
    "formsauthenticationredirectfromloginpage(username.text,": [
      "p",
      "pre"
    ],
    "false;": [
      "p",
      "pre"
    ],
    "}": [
      "p",
      "pre"
    ],
    "else": [
      "p",
      "pre"
    ],
    "statustext": [
      "p",
      "pre"
    ],
    "=": [
      "p",
      "pre"
    ],
    "\"invalid": [
      "p",
      "pre"
    ],
    "please": [
      "p",
      "pre"
    ],
    "try": [
      "p",
      "pre"
    ],
    "again\";": [
      "p",
      "pre"
    ],
    "}}": [
      "p",
      "pre"
    ],
    "adapted": [
      "p"
    ],
    "from": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "persisted": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How to Fix"
    ],
    "p": [
      "Ensure that authentication cookies are not stored in the user's profile.",
      "Stored authentication cookies can be stolen if an attacker gets physical access to the user's computer.",
      "To ensure a non-persistent cookie, set the DisplayRememberMe property of the Login control to false.",
      "If you are not using the login controls, you can specify a non-persistent cookie when you call either the RedirectFromLoginPage or SetAuthCookie methods of the FormsAuthentication class having validated the user's credentials, as shown here:",
      "public void Login_Click(object sender, EventArgs e)\r\n    {   // Is the user valid?   if (Membership.ValidateUser(userName.Text, password.Text))   {        // Parameter two set to false indicates non-persistent cookie        FormsAuthentication.RedirectFromLoginPage(username.Text, false);    }    else    {        Status.Text = \"Invalid credentials. Please try again.\";    }}",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "b": [
      "DisplayRememberMe",
      "Login",
      "false",
      "RedirectFromLoginPage",
      "SetAuthCookie",
      "FormsAuthentication"
    ],
    "pre": [
      "public void Login_Click(object sender, EventArgs e)",
      "{   // Is the user valid?   if (Membership.ValidateUser(userName.Text, password.Text))   {        // Parameter two set to false indicates non-persistent cookie        FormsAuthentication.RedirectFromLoginPage(username.Text, false);    }    else    {        Status.Text = \"Invalid credentials. Please try again.\";    }}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Check For</h1>\r\n  <p>Ensure that&nbsp;authentication cookies are not stored in the user's profile.</p>\r\n  <h1>Why</h1>\r\n  <p>Stored authentication cookies&nbsp;can be stolen if an attacker gets physical access to the user's computer. </p>\r\n  <h1>How to Fix</h1>\r\n  <p>To ensure a non-persistent cookie, set the <b>DisplayRememberMe</b> property of the <b>Login</b> control to <b>false</b>.</p>\r\n  <p>If you are not using the login controls, you can specify a non-persistent cookie when you call either the <b>RedirectFromLoginPage</b> or <b>SetAuthCookie</b> methods of the <b>FormsAuthentication</b> class having validated the user's credentials, as shown here:</p>\r\n  <p>\r\n    <pre>public void Login_Click(object sender, EventArgs e)</pre>\r\n    <pre>&#123;<br />   // Is the user valid?<br />   if (Membership.ValidateUser(userName.Text, password.Text))<br />   &#123;<br />        // Parameter two set to false indicates non-persistent cookie<br />        FormsAuthentication.RedirectFromLoginPage(username.Text, false);<br />    &#125;<br />    else<br />    &#123;<br />        Status.Text = \"Invalid credentials. Please try again.\";<br />    &#125;<br />&#125;</pre>\r\n  </p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}