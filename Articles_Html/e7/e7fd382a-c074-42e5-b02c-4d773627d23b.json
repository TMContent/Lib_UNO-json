{
  "id": "e7fd382a-c074-42e5-b02c-4d773627d23b",
  "checksum": "abbe80233a8a47235b3ab6bc6f5af1d9",
  "words": {
    "0": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "1": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "2": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "p"
    ],
    "c": [
      "ul",
      "li"
    ],
    "and": [
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "c++": [
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2",
      "title"
    ],
    "don't": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "title"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "title"
    ],
    "input": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "title"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "format": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "strings": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "title"
    ],
    "stream": [
      "p"
    ],
    "functions": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "avoid": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "using": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "formatted": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "output": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "if": [
      "p",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "possible": [
      "p"
    ],
    "re": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "write": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "code": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "guarantee": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "never": [
      "p"
    ],
    "used": [
      "p",
      "p"
    ],
    "why": [
      "h2"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "control": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "contents": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "a": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "string": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "may": [
      "p"
    ],
    "be": [
      "p"
    ],
    "able": [
      "p"
    ],
    "execute": [
      "p"
    ],
    "arbitrary": [
      "p"
    ],
    "when": [
      "h2",
      "p"
    ],
    "how": [
      "h2"
    ],
    "perform": [
      "p"
    ],
    "following": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "actions": [
      "p"
    ],
    "assure": [
      "p"
    ],
    "not": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "title"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "uses": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "list": [
      "ol",
      "li",
      "p"
    ],
    "sprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "_snprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "printf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "fprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "scanf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "fscanf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "sscanf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "swprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "wsprintfa": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "wsprintfw": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "vsprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "vswprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "_snwprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "_vsnprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "_vsnwprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "vprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "vwprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "vfprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "vwfprintf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "fwscanf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "wscanf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "swscanf": [
      "ol",
      "li",
      "pre",
      "code"
    ],
    "consider": [
      "ol",
      "li",
      "p"
    ],
    "replacing": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "iostream": [
      "ol",
      "li",
      "p"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "are": [
      "ol",
      "li",
      "p"
    ],
    "prone": [
      "ol",
      "li",
      "p"
    ],
    "vulnerabilities": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "exclude": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "from": [
      "ol",
      "li",
      "p",
      "strong",
      "p"
    ],
    "static": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "i/o": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "or": [
      "ol",
      "li",
      "p"
    ],
    "altogether": [
      "ol",
      "li",
      "p"
    ],
    "problem": [
      "h2"
    ],
    "example": [
      "h2",
      "p",
      "h2"
    ],
    "classic": [
      "p"
    ],
    "vulnerability": [
      "p"
    ],
    "#include": [
      "pre",
      "pre",
      "code",
      "code",
      "pre",
      "pre",
      "code",
      "code"
    ],
    "stdioh": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "stringh": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "int": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "mainint": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "argc": [
      "pre",
      "pre",
      "code",
      "code",
      "pre",
      "pre",
      "code",
      "code"
    ],
    "char*": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "argv": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "{": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "!=": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "return": [
      "pre",
      "pre",
      "code",
      "code",
      "pre",
      "pre",
      "code",
      "code"
    ],
    "printfargv1": [
      "pre",
      "code"
    ],
    "}": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "compilers": [
      "p"
    ],
    "often": [
      "p"
    ],
    "detect": [
      "p"
    ],
    "such": [
      "p"
    ],
    "produce": [
      "p"
    ],
    "warnings": [
      "p"
    ],
    "like": [
      "p"
    ],
    "this": [
      "p"
    ],
    "format_string_vulnc71": [
      "p"
    ],
    "warning": [
      "p"
    ],
    "literal": [
      "p"
    ],
    "no": [
      "p"
    ],
    "arguments": [
      "p"
    ],
    "": [
      "p"
    ],
    "wformat": [
      "p"
    ],
    "security": [
      "p"
    ],
    "solution": [
      "h2"
    ],
    "make": [
      "p"
    ],
    "sure": [
      "p"
    ],
    "processed": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "by": [
      "p"
    ],
    "specifying": [
      "p"
    ],
    "then": [
      "p"
    ],
    "passing": [
      "p"
    ],
    "data": [
      "p"
    ],
    "it": [
      "p"
    ],
    "printf%s": [
      "pre",
      "code"
    ],
    "argv1": [
      "pre",
      "code"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "for": [
      "p"
    ],
    "more": [
      "p"
    ],
    "information": [
      "p"
    ],
    "about": [
      "p"
    ],
    "excluding": [
      "p"
    ],
    "see": [
      "p"
    ],
    "https//wwwsecurecodingcertorg/confluence/display/c/fio30": [
      "p",
      "a"
    ],
    "c+exclude+user+input+from+format+strings": [
      "p",
      "a"
    ]
  },
  "tags": {},
  "links": [
    {
      "href": "https://www.securecoding.cert.org/confluence/display/c/FIO30-C.+Exclude+user+input+from+format+strings",
      "text": "https://www.securecoding.cert.org/confluence/display/c/FIO30-C.+Exclude+user+input+from+format+strings"
    }
  ]
}