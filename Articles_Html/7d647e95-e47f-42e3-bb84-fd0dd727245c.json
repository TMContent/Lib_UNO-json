{
  "id": "7d647e95-e47f-42e3-bb84-fd0dd727245c",
  "checksum": "da203dd716ed2a6b17eca2e9b208045b2c60f10d",
  "words": {
    "1": [
      "li",
      "a"
    ],
    "2": [
      "li",
      "a"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "pre",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "java": [
      "ul",
      "li",
      "h1",
      "h1",
      "h1",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "web-based": [
      "ul",
      "li"
    ],
    "applications": [
      "ul",
      "li"
    ],
    "summary": [
      "h1"
    ],
    "implementing": [
      "p"
    ],
    "protections": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "prevent": [
      "p",
      "p",
      "p"
    ],
    "cross-site": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "request": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "forgery": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "csrf)": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "within": [
      "p",
      "p",
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "uses": [
      "p",
      "p"
    ],
    "esapi": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "objectives": [
      "h1"
    ],
    "csrf": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "pre",
      "p",
      "li",
      "pre",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "pre",
      "p",
      "ul",
      "li",
      "a"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "p"
    ],
    "powerful": [
      "p"
    ],
    "attack": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "p"
    ],
    "allows": [
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p"
    ],
    "force": [
      "p"
    ],
    "victim": [
      "p",
      "p"
    ],
    "execute": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "functionality": [
      "p"
    ],
    "on": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "behalf": [
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "example": [
      "p",
      "p",
      "h1"
    ],
    "below": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "gives": [
      "p"
    ],
    "how": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "scenarios": [
      "h1"
    ],
    "type": [
      "p"
    ],
    "occurs": [
      "p"
    ],
    "when": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "malicious": [
      "p"
    ],
    "web": [
      "p",
      "p",
      "ol",
      "li",
      "pre",
      "p"
    ],
    "site": [
      "p",
      "p"
    ],
    "causes": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "user's": [
      "p",
      "ol",
      "li",
      "pre",
      "p"
    ],
    "browser": [
      "p"
    ],
    "perform": [
      "p",
      "p"
    ],
    "unwanted": [
      "p"
    ],
    "action": [
      "p"
    ],
    "trusted": [
      "p"
    ],
    "for": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "a"
    ],
    "which": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "user": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "currently": [
      "p",
      "p"
    ],
    "authenticated": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "causing": [
      "p"
    ],
    "activities": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "order": [
      "p"
    ],
    "most": [
      "p"
    ],
    "common": [
      "p"
    ],
    "effective": [
      "p"
    ],
    "solution": [
      "p",
      "h1"
    ],
    "used": [
      "p",
      "li",
      "a"
    ],
    "synchronizer": [
      "p"
    ],
    "token": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "pre",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p"
    ],
    "pattern": [
      "p"
    ],
    "flow": [
      "p"
    ],
    "shows": [
      "p"
    ],
    "basic": [
      "p"
    ],
    "steps": [
      "p"
    ],
    "prevention": [
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "store": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "randomly": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "generated": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "upon": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "successful": [
      "ol",
      "li",
      "p"
    ],
    "authentication": [
      "ol",
      "li",
      "p",
      "li",
      "a",
      "li",
      "a"
    ],
    "using": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "secure": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "pseudo-random": [
      "ol",
      "li",
      "p"
    ],
    "number": [
      "ol",
      "li",
      "p"
    ],
    "generator": [
      "ol",
      "li",
      "p"
    ],
    "such": [
      "ol",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "javasecurity.securerandom)": [
      "ol",
      "li",
      "p"
    ],
    "string": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "token)": [
      "ol",
      "li",
      "p"
    ],
    "httpsession": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "userthe": [
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "h1"
    ],
    "defaultuser": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "class": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "if": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "you": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "override": [
      "ol",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "p",
      "li",
      "pre",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "need": [
      "ol",
      "li",
      "p"
    ],
    "similar": [
      "ol",
      "li",
      "p"
    ],
    "function/**": [
      "ol",
      "li"
    ],
    "*/private": [
      "ol",
      "li",
      "pre"
    ],
    "csrftoken": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "p"
    ],
    "=": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "resetcsrftoken);...public": [
      "ol",
      "li",
      "pre"
    ],
    "resetcsrftoken)": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "{": [
      "ol",
      "li",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "esapirandomizer().getrandomstring(64,": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "defaultencoderchar_alphanumerics);": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "return": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "csrftoken}add": [
      "ol"
    ],
    "security": [
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "tokens": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "transaction": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "pages": [
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "any": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "ol",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "representing": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "ie.": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "server": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "side": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "state": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "change,": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "associated": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "client": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "form": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "p"
    ],
    "should": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "hidden": [
      "ol",
      "li",
      "p"
    ],
    "field": [
      "ol",
      "li",
      "p"
    ],
    "containing": [
      "ol",
      "li",
      "p"
    ],
    "retrieved": [
      "ol",
      "li",
      "p"
    ],
    "from": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "session<form": [
      "ol",
      "li"
    ],
    "action=\"..\">": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "..": [
      "ol",
      "ol",
      "ol",
      "p",
      "li",
      "pre",
      "p",
      "p",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "p"
    ],
    "input": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "id=\"%=": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "esapihttputilities().csrf_token_name": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "%\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "type=\"hidden\"": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "value=\"%=": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "esapihttputilities().getcsrftoken()": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "/...<form>verify": [
      "ol"
    ],
    "server-side": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "pre",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "client-side": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "match": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "processing": [
      "ol",
      "li",
      "p"
    ],
    "retrieve": [
      "ol",
      "li",
      "p"
    ],
    "session": [
      "ol",
      "ol",
      "ol",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "it": [
      "ol",
      "li",
      "p"
    ],
    "then": [
      "ol",
      "li",
      "p"
    ],
    "compare": [
      "ol",
      "li",
      "p"
    ],
    "submitted": [
      "ol",
      "li",
      "p"
    ],
    "given": [
      "ol",
      "li",
      "p"
    ],
    "may": [
      "ol",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "p"
    ],
    "processed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "do": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "p",
      "li",
      "a"
    ],
    "not": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "treated": [
      "ol",
      "li",
      "p"
    ],
    "dealt": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "li",
      "p"
    ],
    "accordingly//in": [
      "ol",
      "li"
    ],
    "your": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "servlet": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "li",
      "pre",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "other": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "handling": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "codepublic": [
      "ol",
      "li",
      "pre"
    ],
    "void": [
      "ol",
      "ol",
      "li",
      "pre",
      "p",
      "li",
      "p"
    ],
    "doposthttpservletrequest": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "httpservletresponse": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "response": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "throws": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "servletexception": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "ioexception": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "{\t..\tstring": [
      "ol",
      "li",
      "pre"
    ],
    "storedtoken": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "esapihttputilities().getcsrftoken();\tstring": [
      "ol",
      "li",
      "pre"
    ],
    "requestgetparameter(esapi.httputilities().csrf_token_name);\t//do": [
      "ol",
      "li",
      "pre"
    ],
    "check\tif": [
      "ol",
      "li",
      "pre"
    ],
    "storedtoken.equals(token))": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "{\t\t//go": [
      "ol",
      "li",
      "pre"
    ],
    "ahead": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "process": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "business": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "logic": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "here\t}": [
      "ol",
      "li",
      "pre"
    ],
    "else": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "{\t\t//do": [
      "ol",
      "li",
      "pre"
    ],
    "considered": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "-": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "handle": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "appropriately\t}}invalidate": [
      "ol"
    ],
    "sessions": [
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "logout": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "pre"
    ],
    "expiration": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "timeout": [
      "ol",
      "li",
      "p"
    ],
    "invalidate": [
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "a"
    ],
    "turn": [
      "ol",
      "li",
      "p"
    ],
    "random": [
      "ol",
      "li",
      "p"
    ],
    "token//in": [
      "ol",
      "li"
    ],
    "functionsessioninvalidate();": [
      "ol",
      "li",
      "pre"
    ],
    "csrftoken}": [
      "li",
      "pre"
    ],
    "javasecurity.securerandom": [
      "em"
    ],
    "/**": [
      "pre",
      "p"
    ],
    "*/": [
      "p"
    ],
    "private": [
      "p"
    ],
    "resetcsrftoken);": [
      "p"
    ],
    "public": [
      "p",
      "p"
    ],
    "}": [
      "p",
      "p",
      "p",
      "p"
    ],
    "add": [
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "/...<form>": [
      "li",
      "pre"
    ],
    "/": [
      "p"
    ],
    "form>": [
      "p"
    ],
    "verify": [
      "li",
      "p",
      "strong"
    ],
    "appropriately\t}}": [
      "li",
      "pre"
    ],
    "accordingly": [
      "p"
    ],
    "//in": [
      "pre",
      "p",
      "pre"
    ],
    "esapihttputilities().getcsrftoken();": [
      "p"
    ],
    "requestgetparameter(esapi.httputilities().csrf_token_name);": [
      "p"
    ],
    "//do": [
      "p",
      "p"
    ],
    "check": [
      "p"
    ],
    "//go": [
      "p"
    ],
    "here": [
      "p"
    ],
    "appropriately": [
      "p"
    ],
    "sessioninvalidate();": [
      "p"
    ],
    "see": [
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "also": [
      "h1"
    ],
    "more": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "information": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "about": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "please": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "https//www.owasp.org/index.php/cross-site_request_forgery_%28csrf%29for": [
      "ul"
    ],
    "see https//www.owasp.org/index.php/cross-site_request_forgery_%28csrf%29_prevention_cheat_sheetfor": [
      "ul"
    ],
    "securerandom": [
      "ul",
      "li"
    ],
    "http//download.oracle.com/javase/6/docs/api/java/security/securerandom.htmlfor": [
      "ul"
    ],
    "owasp": [
      "ul",
      "li"
    ],
    "csrfguard": [
      "ul",
      "li"
    ],
    "project": [
      "ul",
      "li"
    ],
    "http//www.owasp.org/index.php/category:owasp_csrfguard_projectfor": [
      "ul"
    ],
    "http//www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/": [
      "ul",
      "li",
      "a"
    ],
    "https//www.owasp.org/index.php/cross-site_request_forgery_%28csrf%29": [
      "li",
      "a"
    ],
    "see https//www.owasp.org/index.php/cross-site_request_forgery_%28csrf%29_prevention_cheat_sheet": [
      "li"
    ],
    "https//www.owasp.org/index.php/cross-site_request_forgery_%28csrf%29_prevention_cheat_sheet": [
      "a"
    ],
    "http//download.oracle.com/javase/6/docs/api/java/security/securerandom.html": [
      "li",
      "a"
    ],
    "http//www.owasp.org/index.php/category:owasp_csrfguard_project": [
      "li",
      "a"
    ],
    "management": [
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "use": [
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "offered": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "by": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "frameworkprotect": [
      "ul"
    ],
    "idsprotect": [
      "ul"
    ],
    "cookiesset": [
      "ul",
      "ul"
    ],
    "domain": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "path": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "values": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "httponly": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "flags": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "all": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "sensitive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "cookieschange": [
      "ul"
    ],
    "ids": [
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "during": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "authenticationinvalidate": [
      "ul"
    ],
    "users": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "log": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "outmake": [
      "ul"
    ],
    "inactive": [
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "time-outinclude": [
      "ul"
    ],
    "unique": [
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "http": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "requestsdo": [
      "ul"
    ],
    "make": [
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "decisions": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "based": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "client-accessible": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "parameters": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "framework": [
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "protect": [
      "li",
      "a",
      "li",
      "a"
    ],
    "cookies": [
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "set": [
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "change": [
      "li",
      "a"
    ],
    "out": [
      "li",
      "a",
      "li",
      "a"
    ],
    "time-out": [
      "li",
      "a",
      "li",
      "a"
    ],
    "include": [
      "li",
      "a"
    ],
    "requests": [
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "checklists": [
      "h1"
    ],
    "usedsession": [
      "ul"
    ],
    "are": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "protectedsession": [
      "ul"
    ],
    "protectedthe": [
      "ul"
    ],
    "strictthe": [
      "ul"
    ],
    "cookiessession": [
      "ul"
    ],
    "changed": [
      "ul",
      "li",
      "a"
    ],
    "authenticationsessions": [
      "ul"
    ],
    "invalidated": [
      "ul",
      "li",
      "a"
    ],
    "outinactive": [
      "ul"
    ],
    "time-outunique": [
      "ul"
    ],
    "included": [
      "ul",
      "li",
      "a"
    ],
    "requestssecurity": [
      "ul"
    ],
    "made": [
      "ul",
      "li",
      "a"
    ],
    "protected": [
      "li",
      "a",
      "li",
      "a"
    ],
    "strict": [
      "li",
      "a"
    ],
    "examples": [
      "h1"
    ],
    "esapiadd": [
      "ul"
    ],
    "faces": [
      "ul",
      "li",
      "a"
    ],
    "jsf)add": [
      "ul"
    ],
    "plain": [
      "ul",
      "li",
      "a"
    ],
    "jsp)cross-site": [
      "ul"
    ],
    "springmvccross-site": [
      "ul"
    ],
    "struts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "1cross-site": [
      "ul"
    ],
    "2use": [
      "ul"
    ],
    "httputilities": [
      "ul",
      "li",
      "a"
    ],
    "jsf)": [
      "li",
      "a"
    ],
    "jsp)": [
      "li",
      "a"
    ],
    "springmvc": [
      "li",
      "a"
    ],
    "testing": [
      "h1"
    ],
    "test": [
      "ul",
      "li",
      "a"
    ],
    "prediction": [
      "ul",
      "li",
      "a"
    ],
    "bugs": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Objectives",
      "Scenarios",
      "Solution Example",
      "See Also",
      "Java Session Management Guidelines",
      "Java Session Management Checklists",
      "Java Session Management Code Examples",
      "Java Session Management Testing"
    ],
    "ul": [
      "Java web-based applications",
      "For more information about Cross-Site Request Forgery, please see https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29For more information about Cross-Site Request Forgery prevention, please see https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_SheetFor more information about SecureRandom, please see http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.htmlFor more information about the OWASP CSRFGuard project, please see http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_ProjectFor more information about Cross-Site Request Forgery, please see http://www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/",
      "Use Session Management Offered by the FrameworkProtect Session IDsProtect Session CookiesSet the Domain and Path Values of Session CookiesSet the Secure and HTTPOnly Flags on All Sensitive CookiesChange Session IDs During AuthenticationInvalidate Sessions when Users Log OutMake Inactive Sessions Time-outInclude Unique Tokens in HTTP RequestsDo Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is UsedSession IDs Are ProtectedSession Cookies are ProtectedThe Domain and Path Values of Session Cookies Are StrictThe Secure and HTTPOnly Flags Are Set on All Sensitive CookiesSession IDs Are Changed During AuthenticationSessions Are Invalidated When Users Log OutInactive Sessions Time-outUnique Tokens Are Included in HTTP RequestsSecurity Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPIAdd Unique Tokens to HTTP Requests Using Java Server Faces (JSF)Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)Cross-Site Request Forgery (CSRF) Prevention Using SpringMVCCross-Site Request Forgery (CSRF) Prevention Using Struts 1Cross-Site Request Forgery (CSRF) Prevention Using Struts 2Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "li": [
      "Java web-based applications",
      "Store a randomly generated token for each authenticated user. Upon successful authentication of a user, store a randomly generated (using a secure pseudo-random number generator such as java.security.SecureRandom) string (token) in the HttpSession for the user.The code below is in the DefaultUser class in ESAPI. If you override this class, you will need to execute a similar function/** This user's CSRF token. */private String csrfToken = resetCSRFToken();...public String resetCSRFToken() { csrfToken =  ESAPI.randomizer().getRandomString(64, DefaultEncoder.CHAR_ALPHANUMERICS); return csrfToken;}",
      "Add security tokens to transaction pages. For any function in the application representing a transaction (ie. causes a server side state change), the associated client form should have a hidden form field containing the token retrieved from the session.<form action=\"...\"> ... <input id=\"<%= ESAPI.httpUtilities().CSRF_TOKEN_NAME %>\" type=\"hidden\" value=\"<%= ESAPI.httpUtilities().getCSRFToken() %>\" />...<form>",
      "Verify that server-side and client-side tokens match. For any function in the application representing a transaction (ie. causes a server side state change), the associated server-side request processing code should retrieve the token from the session. It should then compare that token to the submitted token from the client for the given request. If the tokens match, the transaction may be processed. If the tokens do not match, the transaction should not be processed, and the associated request should be treated as an attack and dealt with accordingly.//in your servlet or other web request handling codepublic void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\t...\tString storedToken = ESAPI.httpUtilities().getCSRFToken();\tString token = request.getParameter(ESAPI.httpUtilities().CSRF_TOKEN_NAME);\t//do check\tif (storedToken.equals(token)) {\t\t//go ahead and process ... do business logic here\t} else {\t\t//DO NOT PROCESS ... this is to be considered a CSRF attack - handle appropriately\t}}",
      "Invalidate sessions upon logout or expiration. Upon logout or session timeout, invalidate the session, which will in turn void the generated random token//in logout functionsession.invalidate();",
      "For more information about Cross-Site Request Forgery, please see https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29",
      "For more information about Cross-Site Request Forgery prevention, please see https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet",
      "For more information about SecureRandom, please see http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.html",
      "For more information about the OWASP CSRFGuard project, please see http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project",
      "For more information about Cross-Site Request Forgery, please see http://www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "p": [
      "Implementing protections that prevent Cross-Site Request Forgery (CSRF) within an application that uses ESAPI.",
      "CSRF is a powerful attack that allows an attacker to force a victim to execute functionality within an application on behalf of the attacker. The example below gives an example of how to prevent CSRF within an application that uses ESAPI.",
      "CSRF is a type of attack that occurs when a malicious web site causes a user's web browser to perform an unwanted action on a trusted site for which the user is currently authenticated, causing the victim to perform activities on behalf of the attacker. In order to prevent CSRF, the most common effective solution currently used is the synchronizer token pattern. The flow below shows the basic steps in prevention.",
      "Store a randomly generated token for each authenticated user. Upon successful authentication of a user, store a randomly generated (using a secure pseudo-random number generator such as java.security.SecureRandom) string (token) in the HttpSession for the user.",
      "The code below is in the DefaultUser class in ESAPI. If you override this class, you will need to execute a similar function",
      "/** This user's CSRF token. */",
      "private String csrfToken = resetCSRFToken();",
      "...",
      "public String resetCSRFToken() {",
      "csrfToken =  ESAPI.randomizer().getRandomString(64, DefaultEncoder.CHAR_ALPHANUMERICS);",
      "return csrfToken;",
      "}",
      "Add security tokens to transaction pages. For any function in the application representing a transaction (ie. causes a server side state change), the associated client form should have a hidden form field containing the token retrieved from the session.",
      "<form action=\"...\">",
      "...",
      "<input id=\"<%= ESAPI.httpUtilities().CSRF_TOKEN_NAME %>\" type=\"hidden\" value=\"<%= ESAPI.httpUtilities().getCSRFToken() %>\" />",
      "...",
      "<form>",
      "Verify that server-side and client-side tokens match. For any function in the application representing a transaction (ie. causes a server side state change), the associated server-side request processing code should retrieve the token from the session. It should then compare that token to the submitted token from the client for the given request. If the tokens match, the transaction may be processed. If the tokens do not match, the transaction should not be processed, and the associated request should be treated as an attack and dealt with accordingly.",
      "//in your servlet or other web request handling code",
      "public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
      "...",
      "String storedToken = ESAPI.httpUtilities().getCSRFToken();",
      "String token = request.getParameter(ESAPI.httpUtilities().CSRF_TOKEN_NAME);",
      "",
      "//do check",
      "if (storedToken.equals(token)) {",
      "//go ahead and process ... do business logic here",
      "} else {",
      "//DO NOT PROCESS ... this is to be considered a CSRF attack - handle appropriately",
      "}",
      "}",
      "Invalidate sessions upon logout or expiration. Upon logout or session timeout, invalidate the session, which will in turn void the generated random token",
      "session.invalidate();"
    ],
    "ol": [
      "Store a randomly generated token for each authenticated user. Upon successful authentication of a user, store a randomly generated (using a secure pseudo-random number generator such as java.security.SecureRandom) string (token) in the HttpSession for the user.The code below is in the DefaultUser class in ESAPI. If you override this class, you will need to execute a similar function/** This user's CSRF token. */private String csrfToken = resetCSRFToken();...public String resetCSRFToken() { csrfToken =  ESAPI.randomizer().getRandomString(64, DefaultEncoder.CHAR_ALPHANUMERICS); return csrfToken;}Add security tokens to transaction pages. For any function in the application representing a transaction (ie. causes a server side state change), the associated client form should have a hidden form field containing the token retrieved from the session.<form action=\"...\"> ... <input id=\"<%= ESAPI.httpUtilities().CSRF_TOKEN_NAME %>\" type=\"hidden\" value=\"<%= ESAPI.httpUtilities().getCSRFToken() %>\" />...<form>Verify that server-side and client-side tokens match. For any function in the application representing a transaction (ie. causes a server side state change), the associated server-side request processing code should retrieve the token from the session. It should then compare that token to the submitted token from the client for the given request. If the tokens match, the transaction may be processed. If the tokens do not match, the transaction should not be processed, and the associated request should be treated as an attack and dealt with accordingly.//in your servlet or other web request handling codepublic void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\t...\tString storedToken = ESAPI.httpUtilities().getCSRFToken();\tString token = request.getParameter(ESAPI.httpUtilities().CSRF_TOKEN_NAME);\t//do check\tif (storedToken.equals(token)) {\t\t//go ahead and process ... do business logic here\t} else {\t\t//DO NOT PROCESS ... this is to be considered a CSRF attack - handle appropriately\t}}Invalidate sessions upon logout or expiration. Upon logout or session timeout, invalidate the session, which will in turn void the generated random token//in logout functionsession.invalidate();"
    ],
    "strong": [
      "Store a randomly generated token for each authenticated user.",
      "Add security tokens to transaction pages.",
      "Verify that server-side and client-side tokens match.",
      "Invalidate sessions upon logout or expiration."
    ],
    "em": [
      "java.security.SecureRandom",
      "HttpSession",
      "DefaultUser"
    ],
    "pre": [
      "/** This user's CSRF token. */private String csrfToken = resetCSRFToken();...public String resetCSRFToken() { csrfToken =  ESAPI.randomizer().getRandomString(64, DefaultEncoder.CHAR_ALPHANUMERICS); return csrfToken;}",
      "<form action=\"...\"> ... <input id=\"<%= ESAPI.httpUtilities().CSRF_TOKEN_NAME %>\" type=\"hidden\" value=\"<%= ESAPI.httpUtilities().getCSRFToken() %>\" />...<form>",
      "//in your servlet or other web request handling codepublic void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\t...\tString storedToken = ESAPI.httpUtilities().getCSRFToken();\tString token = request.getParameter(ESAPI.httpUtilities().CSRF_TOKEN_NAME);\t//do check\tif (storedToken.equals(token)) {\t\t//go ahead and process ... do business logic here\t} else {\t\t//DO NOT PROCESS ... this is to be considered a CSRF attack - handle appropriately\t}}",
      "//in logout functionsession.invalidate();"
    ],
    "br": [
      ""
    ],
    "a": [
      "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29",
      "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet",
      "http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.html",
      "http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project",
      "http://www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ]
  },
  "links": [
    {
      "href": "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29",
      "text": "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29"
    },
    {
      "href": "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet",
      "text": "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet"
    },
    {
      "href": "http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.html",
      "text": "http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.html"
    },
    {
      "href": "http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project",
      "text": "http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project"
    },
    {
      "href": "http://www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/",
      "text": "http://www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/"
    },
    {
      "href": "/article/42276b64-f51d-4b89-8c33-0ffd9b098890",
      "text": "Use Session Management Offered by the Framework"
    },
    {
      "href": "/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a",
      "text": "Protect Session IDs"
    },
    {
      "href": "/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717",
      "text": "Protect Session Cookies"
    },
    {
      "href": "/article/7a517ad5-8640-4bc7-9e84-ccc313a71901",
      "text": "Set the Domain and Path Values of Session Cookies"
    },
    {
      "href": "/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b",
      "text": "Set the Secure and HTTPOnly Flags on All Sensitive Cookies"
    },
    {
      "href": "/article/6c470029-5c62-4394-99a9-8990bc48b0a8",
      "text": "Change Session IDs During Authentication"
    },
    {
      "href": "/article/a223c2d8-ab42-47fb-81a2-86ad677a5632",
      "text": "Invalidate Sessions when Users Log Out"
    },
    {
      "href": "/article/acfe1a16-3f00-4383-ada4-bebafc98a836",
      "text": "Make Inactive Sessions Time-out"
    },
    {
      "href": "/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e",
      "text": "Include Unique Tokens in HTTP Requests"
    },
    {
      "href": "/article/9df0b518-f832-4a7c-9857-0517638c47db",
      "text": "Do Not Make Security Decisions Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b",
      "text": "Session Management Offered by the Framework Is Used"
    },
    {
      "href": "/article/1de62774-3392-4da7-9bae-065fb15b4a2b",
      "text": "Session IDs Are Protected"
    },
    {
      "href": "/article/59132a30-2bae-45e9-9d85-8de26441be29",
      "text": "Session Cookies are Protected"
    },
    {
      "href": "/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b",
      "text": "The Domain and Path Values of Session Cookies Are Strict"
    },
    {
      "href": "/article/d8922a46-a943-4ae0-b8af-b88eb01d6997",
      "text": "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies"
    },
    {
      "href": "/article/58df5418-8c03-4121-83e0-bc68247c5d7b",
      "text": "Session IDs Are Changed During Authentication"
    },
    {
      "href": "/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac",
      "text": "Sessions Are Invalidated When Users Log Out"
    },
    {
      "href": "/article/c486eeb2-f64f-480b-9823-48bd7d21047d",
      "text": "Inactive Sessions Time-out"
    },
    {
      "href": "/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0",
      "text": "Unique Tokens Are Included in HTTP Requests"
    },
    {
      "href": "/article/4436e342-64d9-4b1b-ae9b-3e00696053fb",
      "text": "Security Decisions are Not Made Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/7d647e95-e47f-42e3-bb84-fd0dd727245c",
      "text": "Add Unique Tokens to HTTP Requests Using ESAPI"
    },
    {
      "href": "/article/25e3943b-a651-42c5-9e19-76077de05e90",
      "text": "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)"
    },
    {
      "href": "/article/986c7161-0a76-430a-8d0e-80d4615ab5db",
      "text": "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)"
    },
    {
      "href": "/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC"
    },
    {
      "href": "/article/63deed1a-6df4-4e04-9f61-898f190e1fe1",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1"
    },
    {
      "href": "/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2"
    },
    {
      "href": "/article/4d7ee521-8680-481e-a40b-3afb04c2616d",
      "text": "Use ESAPI HTTPUtilities"
    },
    {
      "href": "/article/40771780-be59-4d4c-b283-5ec3cc286357",
      "text": "How to Test for Session Prediction Bugs in Java"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Java web-based applications</li>\r\n  </ul>\r\n  <h1>Summary</h1>\r\n  <p>Implementing protections that prevent Cross-Site Request Forgery (CSRF) within an application that uses ESAPI.</p>\r\n  <h1>Objectives</h1>\r\n  <p>CSRF is a powerful attack that allows an attacker to force a victim to execute functionality within an application on behalf of the attacker. The example below gives an example of how to prevent CSRF within an application that uses ESAPI.</p>\r\n  <h1>Scenarios</h1>\r\n  <p>CSRF is a type of attack that occurs when a malicious web site causes a user's web browser to perform an unwanted action on a trusted site for which the user is currently authenticated, causing the victim to perform activities on behalf of the attacker. In order to prevent CSRF, the most common effective solution currently used is the synchronizer token pattern. The flow below shows the basic steps in prevention. </p>\r\n  <h1>Solution Example</h1>To add unique tokens to HTTP requests using ESAPI: <ol><li><p><strong>Store a randomly generated token for each authenticated user.</strong> Upon successful authentication of a user, store a randomly generated (using a secure pseudo-random number generator such as <em>java.security.SecureRandom</em>) string (token) in the <em>HttpSession</em> for the user.</p><p>The code below is in the <em>DefaultUser</em> class in ESAPI. If you override this class, you will need to execute a similar function</p><pre><p>/&#42;&#42; This user's CSRF token. &#42;/</p><p>private String csrfToken = resetCSRFToken();</p><p>...</p><p>public String resetCSRFToken() &#123;</p><p> csrfToken =<br />  ESAPI.randomizer().getRandomString(64, DefaultEncoder.CHAR_ALPHANUMERICS);</p><p> return csrfToken;</p><p>&#125;</p></pre><li><p><strong>Add security tokens to transaction pages.</strong> For any function in the application representing a transaction (ie. causes a server side state change), the associated client form should have a hidden form field containing the token retrieved from the session.</p><pre><p>&lt;form action=\"...\"&gt;</p><p> ...</p><p> &lt;input id=\"&lt;&#37;= ESAPI.httpUtilities().CSRF_TOKEN_NAME &#37;&gt;\" type=\"hidden\" value=\"&lt;&#37;= ESAPI.httpUtilities().getCSRFToken() &#37;&gt;\" /&gt;</p><p>...</p><p>&lt;form&gt;</p></pre><li><p><strong>Verify that server-side and client-side tokens match.</strong> For any function in the application representing a transaction (ie. causes a server side state change), the associated server-side request processing code should retrieve the token from the session. It should then compare that token to the submitted token from the client for the given request. If the tokens match, the transaction may be processed. If the tokens do not match, the transaction should not be processed, and the associated request should be treated as an attack and dealt with accordingly.</p><pre><p>//in your servlet or other web request handling code</p><p>public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</p><p>&#9;...</p><p>&#9;String storedToken = ESAPI.httpUtilities().getCSRFToken();</p><p>&#9;String token = request.getParameter(ESAPI.httpUtilities().CSRF_TOKEN_NAME);</p><p /><p>&#9;//do check</p><p>&#9;if (storedToken.equals(token)) &#123;</p><p>&#9;&#9;//go ahead and process ... do business logic here</p><p>&#9;&#125; else &#123;</p><p>&#9;&#9;//DO NOT PROCESS ... this is to be considered a CSRF attack - handle appropriately</p><p>&#9;&#125;</p><p>&#125;</p></pre><li><p><strong>Invalidate sessions upon logout or expiration.</strong> Upon logout or session timeout, invalidate the session, which will in turn void the generated random token</p><pre>//in logout function<p>session.invalidate();</p></pre></li></li></li></li></ol><h1>See Also</h1><ul><li>For more information about Cross-Site Request Forgery, please see <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_&#37;28CSRF&#37;29\">https://www.owasp.org/index.php/Cross-Site_Request_Forgery_&#37;28CSRF&#37;29</a><li>For more information about Cross-Site Request Forgery prevention, please see&nbsp;<a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_&#37;28CSRF&#37;29_Prevention_Cheat_Sheet\">https://www.owasp.org/index.php/Cross-Site_Request_Forgery_&#37;28CSRF&#37;29_Prevention_Cheat_Sheet</a><li>For more information about SecureRandom, please see <a href=\"http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.html\">http://download.oracle.com/javase/6/docs/api/java/security/SecureRandom.html</a><li>For more information about the OWASP CSRFGuard project, please see <a href=\"http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project\">http://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project</a><li>For more information about Cross-Site Request Forgery, please see <a href=\"http://www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/\">http://www.jtmelton.com/2010/05/16/the-owasp-top-ten-and-esapi-part-6-cross-site-request-forgery-csrf/</a></li></li></li></li></li></ul><h1>Java Session Management Guidelines</h1><ul><li><a href=\"/article/42276b64-f51d-4b89-8c33-0ffd9b098890\">Use Session Management Offered by the Framework</a><li><a href=\"/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a\">Protect Session IDs</a><li><a href=\"/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717\">Protect Session Cookies</a><li><a href=\"/article/7a517ad5-8640-4bc7-9e84-ccc313a71901\">Set the Domain and Path Values of Session Cookies</a><li><a href=\"/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b\">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a><li><a href=\"/article/6c470029-5c62-4394-99a9-8990bc48b0a8\">Change Session IDs During Authentication</a><li><a href=\"/article/a223c2d8-ab42-47fb-81a2-86ad677a5632\">Invalidate Sessions when Users Log Out</a><li><a href=\"/article/acfe1a16-3f00-4383-ada4-bebafc98a836\">Make Inactive Sessions Time-out</a><li><a href=\"/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e\">Include Unique Tokens in HTTP Requests</a><li><a href=\"/article/9df0b518-f832-4a7c-9857-0517638c47db\">Do Not Make Security Decisions Based on Client-Accessible Parameters</a></li></li></li></li></li></li></li></li></li></li></ul><h1>Java Session Management Checklists</h1><ul><li><a href=\"/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b\">Session Management Offered by the Framework Is Used</a><li><a href=\"/article/1de62774-3392-4da7-9bae-065fb15b4a2b\">Session IDs Are Protected</a><li><a href=\"/article/59132a30-2bae-45e9-9d85-8de26441be29\">Session Cookies are Protected</a><li><a href=\"/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b\">The Domain and Path Values of Session Cookies Are Strict</a><li><a href=\"/article/d8922a46-a943-4ae0-b8af-b88eb01d6997\">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a><li><a href=\"/article/58df5418-8c03-4121-83e0-bc68247c5d7b\">Session IDs Are Changed During Authentication</a><li><a href=\"/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac\">Sessions Are Invalidated When Users Log Out</a><li><a href=\"/article/c486eeb2-f64f-480b-9823-48bd7d21047d\">Inactive Sessions Time-out</a><li><a href=\"/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0\">Unique Tokens Are Included in HTTP Requests</a><li><a href=\"/article/4436e342-64d9-4b1b-ae9b-3e00696053fb\">Security Decisions are Not Made Based on Client-Accessible Parameters</a></li></li></li></li></li></li></li></li></li></li></ul><h1>Java Session Management Code Examples</h1><ul><li><a href=\"/article/7d647e95-e47f-42e3-bb84-fd0dd727245c\">Add Unique Tokens to HTTP Requests Using ESAPI</a></li><li><a href=\"/article/25e3943b-a651-42c5-9e19-76077de05e90\">Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)</a></li><li><a href=\"/article/986c7161-0a76-430a-8d0e-80d4615ab5db\">Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)</a></li><li><a href=\"/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6\">Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC</a></li><li><a href=\"/article/63deed1a-6df4-4e04-9f61-898f190e1fe1\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</a></li><li><a href=\"/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 2</a></li><li><a href=\"/article/4d7ee521-8680-481e-a40b-3afb04c2616d\">Use ESAPI HTTPUtilities</a></li></ul><h1>Java Session Management Testing</h1><ul><li><a href=\"/article/40771780-be59-4d4c-b283-5ec3cc286357\">How to Test for Session Prediction Bugs in Java</a></li></ul>"
}