{
  "id": "36ce61ac-adcc-45a9-9910-95d477142c8b",
  "checksum": "31c76f4de668a89f8e48750f80235280c499ecc4",
  "words": {
    "3": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "4": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "all": [
      "p",
      "ul",
      "li"
    ],
    "web": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "applications": [
      "p",
      "p"
    ],
    "description": [
      "h1"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "cross": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "site": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "scripting": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "title"
    ],
    "xss)": [
      "p"
    ],
    "attack": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "a",
      "a",
      "li",
      "li",
      "a",
      "a",
      "li",
      "li",
      "a",
      "a",
      "title"
    ],
    "can": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "cause": [
      "p"
    ],
    "arbitrary": [
      "p",
      "ul",
      "li"
    ],
    "code": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "run": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "in": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "user's": [
      "p",
      "p",
      "p"
    ],
    "browser": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "while": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "connected": [
      "p"
    ],
    "trusted": [
      "p",
      "p",
      "p"
    ],
    "targets": [
      "p"
    ],
    "an": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "application's": [
      "p",
      "p"
    ],
    "users": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "not": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "application": [
      "p",
      "p"
    ],
    "itself": [
      "p"
    ],
    "but": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "it": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "uses": [
      "p",
      "p"
    ],
    "as": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "vehicle": [
      "p"
    ],
    "for": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "because": [
      "p"
    ],
    "script": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "downloaded": [
      "p"
    ],
    "by": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "from": [
      "p",
      "ul",
      "li"
    ],
    "has": [
      "p",
      "p"
    ],
    "no": [
      "p",
      "p"
    ],
    "way": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "knowing": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "legitimate": [
      "p"
    ],
    "attacker's": [
      "p"
    ],
    "access": [
      "p",
      "li"
    ],
    "cookies": [
      "p",
      "p",
      "li"
    ],
    "associated": [
      "p"
    ],
    "with": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "stored": [
      "p",
      "ul",
      "li"
    ],
    "on": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "local": [
      "p"
    ],
    "computer": [
      "p",
      "li"
    ],
    "authentication": [
      "p",
      "ul",
      "li"
    ],
    "typically": [
      "p"
    ],
    "target": [
      "p"
    ],
    "internet": [
      "p"
    ],
    "explorer": [
      "p"
    ],
    "security": [
      "p"
    ],
    "zones": [
      "p"
    ],
    "provide": [
      "p"
    ],
    "defense": [
      "p"
    ],
    "there": [
      "p",
      "ul",
      "li"
    ],
    "two": [
      "p"
    ],
    "primary": [
      "p"
    ],
    "types": [
      "p"
    ],
    "xss": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "persistent": [
      "p",
      "p"
    ],
    "non-persistent": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "attacker": [
      "p",
      "ul",
      "li"
    ],
    "able": [
      "p"
    ],
    "inject": [
      "p"
    ],
    "his": [
      "p"
    ],
    "malicious": [
      "p",
      "p",
      "p"
    ],
    "data": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "store": [
      "p"
    ],
    "then": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "will": [
      "p",
      "p"
    ],
    "be": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "anyone": [
      "p",
      "p"
    ],
    "who": [
      "p"
    ],
    "loads": [
      "p"
    ],
    "page": [
      "p",
      "p",
      "p",
      "p",
      "li"
    ],
    "content": [
      "p",
      "p",
      "p"
    ],
    "become": [
      "p"
    ],
    "victim": [
      "p"
    ],
    "forums": [
      "p"
    ],
    "other": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "services": [
      "p"
    ],
    "have": [
      "p"
    ],
    "user-supplied": [
      "p"
    ],
    "html": [
      "p",
      "li",
      "ul",
      "li"
    ],
    "commonly": [
      "p"
    ],
    "subject": [
      "p"
    ],
    "this": [
      "p",
      "p",
      "p"
    ],
    "validated": [
      "p"
    ],
    "encoded": [
      "p"
    ],
    "leave": [
      "p"
    ],
    "some": [
      "p",
      "ul",
      "li"
    ],
    "reflective": [
      "p"
    ],
    "aspect": [
      "p"
    ],
    "deliver": [
      "p"
    ],
    "payload": [
      "p"
    ],
    "often": [
      "p"
    ],
    "echo": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "input": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "back": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "them": [
      "p"
    ],
    "without": [
      "p",
      "ul",
      "li"
    ],
    "altering": [
      "p"
    ],
    "search": [
      "p"
    ],
    "engines": [
      "p"
    ],
    "good": [
      "p"
    ],
    "example": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "type": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "behavior": [
      "p"
    ],
    "attackers": [
      "p"
    ],
    "create": [
      "p"
    ],
    "distribute": [
      "p"
    ],
    "urls": [
      "p"
    ],
    "contain": [
      "p"
    ],
    "gets": [
      "p"
    ],
    "reflected": [
      "p"
    ],
    "most": [
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "common": [
      "p",
      "ul",
      "li"
    ],
    "\"page": [
      "p"
    ],
    "found\"": [
      "p"
    ],
    "error": [
      "p"
    ],
    "which": [
      "p",
      "ul",
      "li"
    ],
    "echoes": [
      "p"
    ],
    "requested": [
      "p"
    ],
    "confidentiality": [
      "ul",
      "li"
    ],
    "performed": [
      "ul",
      "li"
    ],
    "cross-site": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "title"
    ],
    "involves": [
      "ul",
      "li"
    ],
    "disclosure": [
      "ul",
      "li",
      "li",
      "li"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "cookies\naccess": [
      "ul"
    ],
    "control": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "circumstances": [
      "ul",
      "li"
    ],
    "when": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "combined": [
      "ul",
      "li"
    ],
    "flaws": [
      "ul",
      "li"
    ],
    "may": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "possible": [
      "ul",
      "li"
    ],
    "victim's": [
      "ul",
      "li"
    ],
    "computer\nelevation": [
      "ul"
    ],
    "privilege": [
      "ul",
      "li",
      "li"
    ],
    "even": [
      "ul",
      "li"
    ],
    "cannot": [
      "ul",
      "li"
    ],
    "get": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "li"
    ],
    "they": [
      "ul",
      "li"
    ],
    "act": [
      "ul",
      "li"
    ],
    "elevation": [
      "li",
      "li"
    ],
    "impact": [
      "h1"
    ],
    "credential": [
      "ul",
      "li",
      "li"
    ],
    "compromise\ncredential": [
      "ul"
    ],
    "disclosure\ninformation": [
      "ul"
    ],
    "disclosure\nexecute": [
      "ul"
    ],
    "client": [
      "ul",
      "li"
    ],
    "machine\nelevation": [
      "ul"
    ],
    "privilege\nrepudiation.": [
      "ul"
    ],
    "compromise": [
      "li"
    ],
    "execute": [
      "li"
    ],
    "machine": [
      "li"
    ],
    "repudiation": [
      "li"
    ],
    "vulnerabilities": [
      "h1"
    ],
    "failure": [
      "ul",
      "li",
      "li"
    ],
    "validate": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "tags": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "echoed": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "into": [
      "ul",
      "li"
    ],
    "page\ntrusting": [
      "ul"
    ],
    "retrieved": [
      "ul",
      "li"
    ],
    "shared": [
      "ul",
      "li"
    ],
    "database\nfailure": [
      "ul"
    ],
    "encode": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "remotely": [
      "ul",
      "li"
    ],
    "provided": [
      "ul",
      "li"
    ],
    "including": [
      "ul",
      "li"
    ],
    "reverse": [
      "ul",
      "li"
    ],
    "dns": [
      "ul",
      "li"
    ],
    "lookup": [
      "ul",
      "li"
    ],
    "cookie": [
      "ul",
      "li"
    ],
    "contents": [
      "ul",
      "li"
    ],
    "uploaded": [
      "ul",
      "li"
    ],
    "files": [
      "ul",
      "li"
    ],
    "etc\nimproperly": [
      "ul"
    ],
    "converting": [
      "ul",
      "li"
    ],
    "\"safe\"": [
      "ul",
      "li"
    ],
    "html\ndisplaying": [
      "ul"
    ],
    "directly": [
      "ul",
      "li"
    ],
    "encoding": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "a"
    ],
    "appropriately": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "context": [
      "ul",
      "li"
    ],
    "used\nchecking": [
      "ul"
    ],
    "user-submitted": [
      "ul",
      "li"
    ],
    "against": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "blacklist": [
      "ul",
      "li"
    ],
    "instead": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "whitelist": [
      "ul",
      "li"
    ],
    "trusting": [
      "li"
    ],
    "database": [
      "li"
    ],
    "etc": [
      "li"
    ],
    "improperly": [
      "li"
    ],
    "displaying": [
      "li"
    ],
    "used": [
      "li",
      "ul",
      "li"
    ],
    "checking": [
      "li"
    ],
    "countermeasures": [
      "h1"
    ],
    "perform": [
      "ul",
      "li"
    ],
    "context-sensitive": [
      "ul",
      "li"
    ],
    "untrusted": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "before": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "use": [
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "library": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "e.g.,": [
      "ul",
      "li"
    ],
    "microsoft": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "anti-cross": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "or": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "owasp": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "reform.": [
      "ul",
      "li"
    ],
    "following": [
      "ul",
      "li"
    ],
    "language-specific": [
      "ul",
      "li"
    ],
    "functionality": [
      "ul",
      "li"
    ],
    "helpful": [
      "ul",
      "li"
    ],
    "sufficient": [
      "ul",
      "li"
    ],
    "properly": [
      "ul",
      "li"
    ],
    "protect": [
      "ul",
      "li"
    ],
    "these": [
      "ul",
      "li"
    ],
    "libraries": [
      "ul",
      "li"
    ],
    "only": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "convert": [
      "ul",
      "li"
    ],
    "symbols": [
      "ul",
      "li"
    ],
    "\"": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "&": [
      "ul",
      "li"
    ],
    ",": [
      "ul",
      "li"
    ],
    "safe": [
      "ul",
      "li"
    ],
    "equivalents": [
      "ul",
      "li"
    ],
    "whitelisting": [
      "ul",
      "li"
    ],
    "should": [
      "ul",
      "li"
    ],
    "python": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "cgiescape": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "escapes": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "characters": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "default": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "escaping": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "optional\nasp:": [
      "ul",
      "li",
      "ul"
    ],
    "httputilityhtmlencode": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "httputilityurlencode": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "encodes": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "characters\nperl:": [
      "ul",
      "li",
      "ul"
    ],
    "html:entities::encode": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "makes": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "easy": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "specify": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "unsafe": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "characters\nphp:": [
      "ul",
      "li",
      "ul"
    ],
    "htmlentities": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "urlencode": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "optionally": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "'": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "single": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "quote)": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "optional": [
      "li"
    ],
    "asp": [
      "li"
    ],
    "perl": [
      "li"
    ],
    "php": [
      "li"
    ],
    "inclusion": [
      "ul",
      "li"
    ],
    "list": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "regular": [
      "ul",
      "li"
    ],
    "expressions": [
      "ul",
      "li"
    ],
    "define": [
      "ul",
      "li"
    ],
    "acceptable": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "character": [
      "ul",
      "li"
    ],
    "sequences": [
      "ul",
      "li"
    ],
    "filter": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "meant": [
      "ul",
      "li"
    ],
    "primitive": [
      "ul",
      "li"
    ],
    "cast": [
      "ul",
      "li"
    ],
    "assure": [
      "ul",
      "li"
    ],
    "expected": [
      "ul",
      "li"
    ],
    "constraint": [
      "ul",
      "li"
    ],
    "checked": [
      "ul",
      "li"
    ],
    "ensure": [
      "ul",
      "li"
    ],
    "it's": [
      "ul",
      "li"
    ],
    "appropriate": [
      "ul",
      "li"
    ],
    "range": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "constraint.": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "case": [
      "ul",
      "li"
    ],
    "where": [
      "ul",
      "li"
    ],
    "limited": [
      "ul",
      "li"
    ],
    "number": [
      "ul",
      "li"
    ],
    "inputs": [
      "ul",
      "li"
    ],
    "constrained": [
      "ul",
      "li"
    ],
    "set": [
      "ul",
      "li"
    ],
    "simple": [
      "ul",
      "li"
    ],
    "switch": [
      "ul",
      "li"
    ],
    "structures": [
      "ul",
      "li"
    ],
    "matching": [
      "ul",
      "li"
    ],
    "fixed": [
      "ul",
      "li"
    ],
    "strings": [
      "ul",
      "li"
    ],
    "domain": [
      "ul",
      "li"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "more": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "http//www.microsoft.com/en-us/download/details.aspx?id=28589\nfor": [
      "ul"
    ],
    "project": [
      "ul",
      "li"
    ],
    "https//www.owasp.org/index.php/category:owasp_encoding_project\nfor": [
      "ul"
    ],
    "https//www.owasp.org/index.php/cross_site_scripting\nfor": [
      "ul",
      "ul"
    ],
    "evasion": [
      "ul",
      "li"
    ],
    "cheat": [
      "ul",
      "li"
    ],
    "sheet": [
      "ul",
      "li"
    ],
    "how": [
      "ul",
      "li"
    ],
    "prevent": [
      "ul",
      "li"
    ],
    "aspnet,": [
      "ul",
      "li"
    ],
    "http//msdn.microsoft.com/en-us/library/ms998274.aspx": [
      "ul",
      "li",
      "a"
    ],
    "http//www.microsoft.com/en-us/download/details.aspx?id=28589": [
      "li",
      "a"
    ],
    "https//www.owasp.org/index.php/category:owasp_encoding_project": [
      "li",
      "a"
    ],
    "https//www.owasp.org/index.php/cross_site_scripting": [
      "li",
      "a",
      "li",
      "a"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "ajax": [
      "ul",
      "li",
      "a"
    ],
    "injection": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "attackattack:": [
      "ul",
      "ul"
    ],
    "double": [
      "ul",
      "li",
      "a"
    ],
    "command": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "Description",
      "Impact",
      "Vulnerabilities",
      "Countermeasures",
      "Additional Resources",
      "Related Items"
    ],
    "p": [
      "All web applications.",
      "A cross site scripting (XSS) attack can cause arbitrary code to run in a user's browser while the browser is connected to a trusted Web site. The attack targets an application's users and not the application itself, but it uses the application as the vehicle for the attack. Because the script code is downloaded by the browser from a trusted site, the browser has no way of knowing that the code is not legitimate.  As the attacker's code has access to the cookies associated with the trusted site and are stored on the user's local computer, a user's authentication cookies are typically the target of attack. Internet Explorer security zones provide no defense.",
      "There are two primary types of XSS: persistent and non-persistent. If the attacker is able to inject his malicious script to the web application's data store, then the script will be persistent and anyone who loads a page with that content will run the script and become a victim of the attack. Forums and other web services that have user-supplied HTML content are commonly subject to this attack. If the content is not validated and encoded, then anyone can leave a malicious script on the site. Non-persistent XSS uses some reflective aspect of the page to deliver the payload. Web applications often echo user input back to them without altering it. Search engines are a good example of this type of behavior. Attackers can create and distribute URLs that contain a malicious script that gets reflected back to the user. The most common example of this is the \"page not found\" error page which echoes the requested page back to the user."
    ],
    "ul": [
      "Confidentiality: The most common attack performed with cross-site scripting involves the disclosure of information stored in user cookies.\nAccess control: In some circumstances when cross-site scripting is combined with other flaws, it may be possible to run arbitrary code on a victim's computer.\nElevation of privilege: Even if an attacker cannot get at the authentication information of a user, they can act as that user.",
      "Credential compromise.\nCredential disclosure.\nInformation disclosure.\nExecute code on client machine.\nElevation of privilege.\nRepudiation.",
      "Failure to validate user input for script tags when that input can be echoed back into a web page.\nTrusting data retrieved from a shared database.\nFailure to encode all remotely provided data, including reverse DNS lookup, cookie contents, uploaded files, etc.\nImproperly converting \"safe\" tags to HTML.\nDisplaying user input directly, without encoding it appropriately for the context in which it is used.\nChecking user-submitted data against a blacklist instead of a whitelist.",
      "Perform context-sensitive encoding of untrusted input before it is echoed back to a browser: Use an encoding library (e.g., the Microsoft Anti-Cross Site Scripting Library or OWASP Reform). The following language-specific functionality may be helpful, but is not sufficient to properly protect against cross-site scripting. Most of these libraries only convert the symbols \", &, <, and > to safe HTML equivalents. A whitelisting library should be used instead. \nPython: cgi.escape (only escapes 3 characters by default, escaping \" is optional)\nASP: HttpUtility.HtmlEncode and HttpUtility.UrlEncode (only encodes 4 characters)\nPerl: HTML::Entities::encode (only escapes 4 characters by default, but it makes it easy to specify other unsafe characters)\nPHP: htmlentities and urlencode (only escapes 4 characters by default, and can optionally encode ' (single quote))",
      "Python: cgi.escape (only escapes 3 characters by default, escaping \" is optional)\nASP: HttpUtility.HtmlEncode and HttpUtility.UrlEncode (only encodes 4 characters)\nPerl: HTML::Entities::encode (only escapes 4 characters by default, but it makes it easy to specify other unsafe characters)\nPHP: htmlentities and urlencode (only escapes 4 characters by default, and can optionally encode ' (single quote))",
      "Validate untrusted input against an inclusion list before use: For example, use regular expressions to define acceptable character sequences, and use it as a filter. If the input is meant to be a primitive type, it can be cast appropriately to assure that it is the expected type (a type constraint) and then checked to ensure it's in the appropriate range (a range constraint). In the case where there are only a limited number of acceptable inputs, then the input can be constrained to that set with simple if or switch control structures, or by matching against a fixed list of strings (a domain constraint).",
      "For more information on the Microsoft Anti-Cross Site Scripting Library, see: http://www.microsoft.com/en-us/download/details.aspx?id=28589\nFor more information on the OWASP Encoding Project, see: https://www.owasp.org/index.php/Category:OWASP_Encoding_Project\nFor more information on Cross Site Scripting, see: https://www.owasp.org/index.php/Cross_site_scripting\nFor more information on the Cross Site Scripting Filter Evasion Cheat Sheet, see: https://www.owasp.org/index.php/Cross_site_scripting\nFor more information on How To Prevent XSS in ASP.NET, see: http://msdn.microsoft.com/en-us/library/ms998274.aspx",
      "Attack: AJAX Injection Attack\nAttack: Double Encoding Attack\nAttack: Command Injection Attack"
    ],
    "li": [
      "Confidentiality: The most common attack performed with cross-site scripting involves the disclosure of information stored in user cookies.",
      "Access control: In some circumstances when cross-site scripting is combined with other flaws, it may be possible to run arbitrary code on a victim's computer.",
      "Elevation of privilege: Even if an attacker cannot get at the authentication information of a user, they can act as that user.",
      "Credential compromise.",
      "Credential disclosure.",
      "Information disclosure.",
      "Execute code on client machine.",
      "Elevation of privilege.",
      "Repudiation.",
      "Failure to validate user input for script tags when that input can be echoed back into a web page.",
      "Trusting data retrieved from a shared database.",
      "Failure to encode all remotely provided data, including reverse DNS lookup, cookie contents, uploaded files, etc.",
      "Improperly converting \"safe\" tags to HTML.",
      "Displaying user input directly, without encoding it appropriately for the context in which it is used.",
      "Checking user-submitted data against a blacklist instead of a whitelist.",
      "Perform context-sensitive encoding of untrusted input before it is echoed back to a browser: Use an encoding library (e.g., the Microsoft Anti-Cross Site Scripting Library or OWASP Reform). The following language-specific functionality may be helpful, but is not sufficient to properly protect against cross-site scripting. Most of these libraries only convert the symbols \", &, <, and > to safe HTML equivalents. A whitelisting library should be used instead. \nPython: cgi.escape (only escapes 3 characters by default, escaping \" is optional)\nASP: HttpUtility.HtmlEncode and HttpUtility.UrlEncode (only encodes 4 characters)\nPerl: HTML::Entities::encode (only escapes 4 characters by default, but it makes it easy to specify other unsafe characters)\nPHP: htmlentities and urlencode (only escapes 4 characters by default, and can optionally encode ' (single quote))",
      "Python: cgi.escape (only escapes 3 characters by default, escaping \" is optional)",
      "ASP: HttpUtility.HtmlEncode and HttpUtility.UrlEncode (only encodes 4 characters)",
      "Perl: HTML::Entities::encode (only escapes 4 characters by default, but it makes it easy to specify other unsafe characters)",
      "PHP: htmlentities and urlencode (only escapes 4 characters by default, and can optionally encode ' (single quote))",
      "Validate untrusted input against an inclusion list before use: For example, use regular expressions to define acceptable character sequences, and use it as a filter. If the input is meant to be a primitive type, it can be cast appropriately to assure that it is the expected type (a type constraint) and then checked to ensure it's in the appropriate range (a range constraint). In the case where there are only a limited number of acceptable inputs, then the input can be constrained to that set with simple if or switch control structures, or by matching against a fixed list of strings (a domain constraint).",
      "For more information on the Microsoft Anti-Cross Site Scripting Library, see: http://www.microsoft.com/en-us/download/details.aspx?id=28589",
      "For more information on the OWASP Encoding Project, see: https://www.owasp.org/index.php/Category:OWASP_Encoding_Project",
      "For more information on Cross Site Scripting, see: https://www.owasp.org/index.php/Cross_site_scripting",
      "For more information on the Cross Site Scripting Filter Evasion Cheat Sheet, see: https://www.owasp.org/index.php/Cross_site_scripting",
      "For more information on How To Prevent XSS in ASP.NET, see: http://msdn.microsoft.com/en-us/library/ms998274.aspx",
      "Attack: AJAX Injection Attack",
      "Attack: Double Encoding Attack",
      "Attack: Command Injection Attack"
    ],
    "a": [
      "http://www.microsoft.com/en-us/download/details.aspx?id=28589",
      "https://www.owasp.org/index.php/Category:OWASP_Encoding_Project",
      "https://www.owasp.org/index.php/Cross_site_scripting",
      "https://www.owasp.org/index.php/Cross_site_scripting",
      "http://msdn.microsoft.com/en-us/library/ms998274.aspx",
      "Attack: AJAX Injection Attack",
      "Attack: Double Encoding Attack",
      "Attack: Command Injection Attack"
    ]
  },
  "links": [
    {
      "href": "http://www.microsoft.com/en-us/download/details.aspx?id=28589",
      "text": "http://www.microsoft.com/en-us/download/details.aspx?id=28589"
    },
    {
      "href": "https://www.owasp.org/index.php/Category:OWASP_Encoding_Project",
      "text": "https://www.owasp.org/index.php/Category:OWASP_Encoding_Project"
    },
    {
      "href": "https://www.owasp.org/index.php/Cross_site_scripting",
      "text": "https://www.owasp.org/index.php/Cross_site_scripting"
    },
    {
      "href": "https://www.owasp.org/index.php/Cross_site_scripting",
      "text": "https://www.owasp.org/index.php/Cross_site_scripting"
    },
    {
      "href": "http://msdn.microsoft.com/en-us/library/ms998274.aspx",
      "text": "http://msdn.microsoft.com/en-us/library/ms998274.aspx"
    },
    {
      "href": "e4a899ec-9301-4751-ae07-69a265336d8b",
      "text": "Attack: AJAX Injection Attack"
    },
    {
      "href": "189a3684-3289-4097-8906-5361f7ef3aab",
      "text": "Attack: Double Encoding Attack"
    },
    {
      "href": "8698cde2-0fdf-4676-a043-ae90e62f55b8",
      "text": "Attack: Command Injection Attack"
    }
  ],
  "html": "<h1>Applies To</h1><p>All web applications.\n</p><h1>Description</h1><p>A cross site scripting (XSS) attack can cause arbitrary code to run in a user's browser while the browser is connected to a trusted Web site. The attack targets an application's users and not the application itself, but it uses the application as the vehicle for the attack. Because the script code is downloaded by the browser from a trusted site, the browser has no way of knowing that the code is not legitimate.  As the attacker's code has access to the cookies associated with the trusted site and are stored on the user's local computer, a user's authentication cookies are typically the target of attack. Internet Explorer security zones provide no defense.\n</p><p>\nThere are two primary types of XSS: persistent and non-persistent. If the attacker is able to inject his malicious script to the web application's data store, then the script will be persistent and anyone who loads a page with that content will run the script and become a victim of the attack. Forums and other web services that have user-supplied HTML content are commonly subject to this attack. If the content is not validated and encoded, then anyone can leave a malicious script on the site. Non-persistent XSS uses some reflective aspect of the page to deliver the payload. Web applications often echo user input back to them without altering it. Search engines are a good example of this type of behavior. Attackers can create and distribute URLs that contain a malicious script that gets reflected back to the user. The most common example of this is the \"page not found\" error page which echoes the requested page back to the user.\n</p><ul>\n<li>Confidentiality: The most common attack performed with cross-site scripting involves the disclosure of information stored in user cookies.</li>\n<li>Access control: In some circumstances when cross-site scripting is combined with other flaws, it may be possible to run arbitrary code on a victim's computer.</li>\n<li>Elevation of privilege: Even if an attacker cannot get at the authentication information of a user, they can act as that user.</li>\n</ul><h1>Impact</h1><ul><li>Credential compromise.</li>\n<li>Credential disclosure.</li>\n<li>Information disclosure.</li>\n<li>Execute code on client machine.</li>\n<li>Elevation of privilege.</li>\n<li>Repudiation.</li>\n</ul><h1>Vulnerabilities</h1><ul><li>Failure to validate user input for script tags when that input can be echoed back into a web page.</li>\n<li>Trusting data retrieved from a shared database.</li>\n<li>Failure to encode all remotely provided data, including reverse DNS lookup, cookie contents, uploaded files, etc.</li>\n<li>Improperly converting \"safe\" tags to HTML.</li>\n<li>Displaying user input directly, without encoding it appropriately for the context in which it is used.</li>\n<li>Checking user-submitted data against a blacklist instead of a whitelist.</li>\n</ul><h1>Countermeasures</h1><ul><li>Perform context-sensitive encoding of untrusted input before it is echoed back to a browser: Use an encoding library (e.g., the Microsoft Anti-Cross Site Scripting Library or OWASP Reform). The following language-specific functionality may be helpful, but is not sufficient to properly protect against cross-site scripting. Most of these libraries only convert the symbols \", &amp;, &lt;, and &gt; to safe HTML equivalents. A whitelisting library should be used instead. <ul>\n<li>Python: cgi.escape (only escapes 3 characters by default, escaping \" is optional)</li>\n<li>ASP: HttpUtility.HtmlEncode and HttpUtility.UrlEncode (only encodes 4 characters)</li>\n<li>Perl: HTML::Entities::encode (only escapes 4 characters by default, but it makes it easy to specify other unsafe characters)</li>\n<li>PHP: htmlentities and urlencode (only escapes 4 characters by default, and can optionally encode ' (single quote))</li></ul></li>\n</ul>    <ul>\n<li>Validate untrusted input against an inclusion list before use: For example, use regular expressions to define acceptable character sequences, and use it as a filter. If the input is meant to be a primitive type, it can be cast appropriately to assure that it is the expected type (a type constraint) and then checked to ensure it's in the appropriate range (a range constraint). In the case where there are only a limited number of acceptable inputs, then the input can be constrained to that set with simple if or switch control structures, or by matching against a fixed list of strings (a domain constraint).</li>\n</ul><h1>Additional Resources</h1><ul><li>For more information on the Microsoft Anti-Cross Site Scripting Library, see: <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=28589\">http://www.microsoft.com/en-us/download/details.aspx?id=28589</a></li>\n<li>For more information on the OWASP Encoding Project, see: <a href=\"https://www.owasp.org/index.php/Category:OWASP_Encoding_Project\">https://www.owasp.org/index.php/Category:OWASP_Encoding_Project</a></li>\n<li>For more information on Cross Site Scripting, see: <a href=\"https://www.owasp.org/index.php/Cross_site_scripting\">https://www.owasp.org/index.php/Cross_site_scripting</a></li>\n<li>For more information on the Cross Site Scripting Filter Evasion Cheat Sheet, see: <a href=\"https://www.owasp.org/index.php/Cross_site_scripting\">https://www.owasp.org/index.php/Cross_site_scripting</a></li>\n<li>For more information on How To Prevent XSS in ASP.NET, see: <a href=\"http://msdn.microsoft.com/en-us/library/ms998274.aspx\">http://msdn.microsoft.com/en-us/library/ms998274.aspx</a></li>\n</ul><h1>Related Items</h1><ul><li><a href=\"e4a899ec-9301-4751-ae07-69a265336d8b\">Attack: AJAX Injection Attack</a></li>\n<li><a href=\"189a3684-3289-4097-8906-5361f7ef3aab\">Attack: Double Encoding Attack</a></li>\n<li><a href=\"8698cde2-0fdf-4676-a043-ae90e62f55b8\">Attack: Command Injection Attack</a></li>\n</ul>\n"
}