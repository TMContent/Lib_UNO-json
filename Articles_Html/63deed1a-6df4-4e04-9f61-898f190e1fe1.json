{
  "id": "63deed1a-6df4-4e04-9f61-898f190e1fe1",
  "checksum": "2e0f6644b142d70fef2ef9390936aaf93a46a042",
  "words": {
    "1": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "2": [
      "ul",
      "li",
      "a"
    ],
    "3": [
      "p",
      "p"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "java": [
      "ul",
      "li",
      "h1",
      "h1",
      "h1",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "struts": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "summary": [
      "h1"
    ],
    "perform": [
      "p",
      "p"
    ],
    "csrf": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "prevention": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "using": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "within": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "objectives": [
      "h1"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "key": [
      "p"
    ],
    "security": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "control": [
      "p",
      "p"
    ],
    "for": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "a"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "protects": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "and": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "its": [
      "p"
    ],
    "users": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "from": [
      "p"
    ],
    "attacks": [
      "p",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p"
    ],
    "article": [
      "p"
    ],
    "will": [
      "p"
    ],
    "describe": [
      "p"
    ],
    "how": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "use": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "built-in": [
      "p"
    ],
    "mechanisms": [
      "p"
    ],
    "provided": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "solution": [
      "h1"
    ],
    "example": [
      "h1"
    ],
    "there": [
      "p",
      "p"
    ],
    "standard": [
      "p"
    ],
    "model": [
      "p"
    ],
    "involves": [
      "p"
    ],
    "basic": [
      "p"
    ],
    "steps": [
      "p",
      "p",
      "p"
    ],
    "call": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "savetoken).": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "in": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "action": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "class/method": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "handles": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "setup": [
      "ol",
      "li",
      "p"
    ],
    "your": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "strong",
      "li",
      "p"
    ],
    "form": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "pre"
    ],
    "display": [
      "ol",
      "li",
      "p"
    ],
    "ex.": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "editbookaction,": [
      "ol",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "need": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "public": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "actionforward": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "executeactionmapping": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "mappingactionform": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "httpservletrequest": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "request": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "httpservletresponse": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "responsethrows": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "exception": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "savetokenrequest);": [
      "ol",
      "li",
      "pre"
    ],
    "...}": [
      "ol",
      "li",
      "pre"
    ],
    "htmlform": [
      "ol",
      "li",
      "p",
      "strong",
      "em"
    ],
    "create": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "on": [
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "jsp": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "editbookjsp).": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "html:form": [
      "ol",
      "li",
      "pre"
    ],
    "action=\"..\">...</html:form>": [
      "ol",
      "li",
      "pre"
    ],
    "check": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "istokenvalid)": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "resettoken).": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "saving": [
      "ol",
      "li",
      "p"
    ],
    "of": [
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "savebookaction,": [
      "ol",
      "li",
      "p"
    ],
    "istokenvalid).": [
      "ol",
      "li",
      "p"
    ],
    "if": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "p"
    ],
    "token": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "valid": [
      "ol",
      "li",
      "p"
    ],
    "then": [
      "ol",
      "li",
      "p"
    ],
    "{..": [
      "ol",
      "li",
      "pre"
    ],
    "!istokenvalidrequest)": [
      "ol",
      "li",
      "pre"
    ],
    "return": [
      "ol",
      "li",
      "pre"
    ],
    "mappingfindforward(constants.invalid_token);": [
      "ol",
      "li",
      "pre"
    ],
    "}": [
      "ol",
      "li",
      "pre"
    ],
    "else": [
      "ol",
      "li",
      "pre"
    ],
    "..  //normal": [
      "ol",
      "li",
      "pre"
    ],
    "business": [
      "ol",
      "li",
      "pre"
    ],
    "logic .. resettoken(request);": [
      "ol",
      "li",
      "pre"
    ],
    "}..": [
      "ol",
      "li",
      "pre"
    ],
    "savetoken": [
      "em",
      "em"
    ],
    "editbookaction": [
      "em"
    ],
    "editbookjsp": [
      "em"
    ],
    "istokenvalid": [
      "em",
      "em"
    ],
    "resettoken": [
      "em",
      "em"
    ],
    "savebookaction": [
      "em"
    ],
    "these": [
      "p"
    ],
    "simple": [
      "p",
      "p"
    ],
    "can": [
      "p",
      "p"
    ],
    "effectively": [
      "p"
    ],
    "have": [
      "p",
      "p"
    ],
    "session": [
      "p",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "specific": [
      "p"
    ],
    "per": [
      "p"
    ],
    "user": [
      "p",
      "p"
    ],
    "used": [
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "validate": [
      "p"
    ],
    "was": [
      "p"
    ],
    "submitted": [
      "p"
    ],
    "intentionally": [
      "p"
    ],
    "note": [
      "p",
      "strong"
    ],
    "been": [
      "p"
    ],
    "effective": [
      "p"
    ],
    "against": [
      "p"
    ],
    "various": [
      "p"
    ],
    "techniques": [
      "p"
    ],
    "including": [
      "p"
    ],
    "token-based": [
      "p"
    ],
    "approach": [
      "p"
    ],
    "when": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "has": [
      "p"
    ],
    "xss": [
      "p",
      "p"
    ],
    "vulnerabilities": [
      "p"
    ],
    "removing": [
      "p"
    ],
    "therefore": [
      "p"
    ],
    "viewed": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "prerequisite": [
      "p"
    ],
    "activity": [
      "p"
    ],
    "complete": [
      "p"
    ],
    "mechanism": [
      "p"
    ],
    "conclusion": [
      "p"
    ],
    "function": [
      "p"
    ],
    "strong": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "applied": [
      "p"
    ],
    "thoroughly": [
      "p"
    ],
    "throughout": [
      "p"
    ],
    "framework": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "provides": [
      "p"
    ],
    "series": [
      "p"
    ],
    "accomplishing": [
      "p"
    ],
    "task": [
      "p"
    ],
    "more": [
      "h1"
    ],
    "information": [
      "h1"
    ],
    "documentation": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//struts.apache.org/1.x/": [
      "ul",
      "li",
      "a"
    ],
    "management": [
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "offered": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "protect": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "ids": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "cookies": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "set": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "domain": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "path": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "values": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "secure": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "httponly": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "flags": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "all": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "sensitive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "change": [
      "ul",
      "li",
      "a"
    ],
    "during": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "authentication": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "invalidate": [
      "ul",
      "li",
      "a"
    ],
    "sessions": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "log": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "out": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "make": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "inactive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "time-out": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "include": [
      "ul",
      "li",
      "a"
    ],
    "unique": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "tokens": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "http": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "requests": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "do": [
      "ul",
      "li",
      "a"
    ],
    "not": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "decisions": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "based": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "client-accessible": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "parameters": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h1"
    ],
    "are": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "protected": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "strict": [
      "ul",
      "li",
      "a"
    ],
    "changed": [
      "ul",
      "li",
      "a"
    ],
    "invalidated": [
      "ul",
      "li",
      "a"
    ],
    "included": [
      "ul",
      "li",
      "a"
    ],
    "made": [
      "ul",
      "li",
      "a"
    ],
    "code": [
      "h1"
    ],
    "examples": [
      "h1"
    ],
    "add": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "esapi": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "server": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "faces": [
      "ul",
      "li",
      "a"
    ],
    "jsf)": [
      "ul",
      "li",
      "a"
    ],
    "plain": [
      "ul",
      "li",
      "a"
    ],
    "pages": [
      "ul",
      "li",
      "a"
    ],
    "jsp)": [
      "ul",
      "li",
      "a"
    ],
    "cross-site": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "forgery": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "csrf)": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "springmvc": [
      "ul",
      "li",
      "a"
    ],
    "httputilities": [
      "ul",
      "li",
      "a"
    ],
    "testing": [
      "h1"
    ],
    "test": [
      "ul",
      "li",
      "a"
    ],
    "prediction": [
      "ul",
      "li",
      "a"
    ],
    "bugs": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Objectives",
      "Solution Example",
      "More Information",
      "Java Session Management Guidelines",
      "Java Session Management Checklists",
      "Java Session Management Code Examples",
      "Java Session Management Testing"
    ],
    "ul": [
      "JAVA Struts 1",
      "For Struts 1 documentation, please see http://struts.apache.org/1.x/",
      "Use Session Management Offered by the Framework\r\n      \r\n        Protect Session IDs\r\n        \r\n          Protect Session Cookies\r\n          \r\n            Set the Domain and Path Values of Session Cookies\r\n            \r\n              Set the Secure and HTTPOnly Flags on All Sensitive Cookies\r\n              \r\n                Change Session IDs During Authentication\r\n                \r\n                  Invalidate Sessions when Users Log Out\r\n                  \r\n                    Make Inactive Sessions Time-out\r\n                    \r\n                      Include Unique Tokens in HTTP Requests\r\n                      \r\n                        Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used\r\n      \r\n        Session IDs Are Protected\r\n        \r\n          Session Cookies are Protected\r\n          \r\n            The Domain and Path Values of Session Cookies Are Strict\r\n            \r\n              The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies\r\n              \r\n                Session IDs Are Changed During Authentication\r\n                \r\n                  Sessions Are Invalidated When Users Log Out\r\n                  \r\n                    Inactive Sessions Time-out\r\n                    \r\n                      Unique Tokens Are Included in HTTP Requests\r\n                      \r\n                        Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI\r\n    \r\n    \r\n      Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)\r\n    \r\n    \r\n      Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 1\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 2\r\n    \r\n    \r\n      Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "li": [
      "JAVA",
      "Struts 1",
      "Call saveToken(). In the action class/method that handles the setup for your form display (ex. EditBookAction), you need to call saveToken().\r\n      public ActionForward execute(ActionMapping mapping,ActionForm form, HttpServletRequest request, HttpServletResponse response)throws Exception {    saveToken(request);    ....}",
      "Use html:form to create your form on your JSP (ex. editBook.jsp).\r\n        \r\n        <html:form action=\"...\">...</html:form>",
      "Check isTokenValid() and call resetToken(). In the action class/method that handles the saving of your form (ex. SaveBookAction), you need to call isTokenValid(). If the token is valid, then you need to call resetToken().\r\n          public ActionForward execute(ActionMapping mapping,ActionForm form, HttpServletRequest request, HttpServletResponse response)throws Exception {...    if ( !isTokenValid(request) ) {        return mapping.findForward(Constants.INVALID_TOKEN);    } else {        ...  //normal business logic ... resetToken(request);    }...",
      "For Struts 1 documentation, please see http://struts.apache.org/1.x/",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "p": [
      "Perform CSRF prevention using Struts 1 within an application.",
      "CSRF prevention is a key security control for an application that protects the application and its users from CSRF attacks. This article will describe how to use the built-in mechanisms provided by Struts 1 to perform CSRF prevention.",
      "There is a standard model for CSRF prevention using Struts 1 that involves 3 basic steps",
      "Call saveToken(). In the action class/method that handles the setup for your form display (ex. EditBookAction), you need to call saveToken().",
      "Use html:form to create your form on your JSP (ex. editBook.jsp).",
      "Check isTokenValid() and call resetToken(). In the action class/method that handles the saving of your form (ex. SaveBookAction), you need to call isTokenValid(). If the token is valid, then you need to call resetToken().",
      "Using these 3 simple steps you can effectively have a session specific per user token used to validate that a request was submitted by a user intentionally.",
      "Note: There have been effective attacks against various CSRF prevention techniques including this token-based approach when an application has XSS vulnerabilities. Removing XSS is therefore viewed as a prerequisite activity for a complete CSRF prevention mechanism.",
      "In conclusion, CSRF prevention can function as a strong security control if used properly and applied thoroughly throughout the application. The Struts framework provides a simple series of steps for accomplishing this task."
    ],
    "ol": [
      "Call saveToken(). In the action class/method that handles the setup for your form display (ex. EditBookAction), you need to call saveToken().\r\n      public ActionForward execute(ActionMapping mapping,ActionForm form, HttpServletRequest request, HttpServletResponse response)throws Exception {    saveToken(request);    ....}\r\n      \r\n        \r\n          Use html:form to create your form on your JSP (ex. editBook.jsp).\r\n        \r\n        <html:form action=\"...\">...</html:form>\r\n        \r\n          \r\n            Check isTokenValid() and call resetToken(). In the action class/method that handles the saving of your form (ex. SaveBookAction), you need to call isTokenValid(). If the token is valid, then you need to call resetToken().\r\n          public ActionForward execute(ActionMapping mapping,ActionForm form, HttpServletRequest request, HttpServletResponse response)throws Exception {...    if ( !isTokenValid(request) ) {        return mapping.findForward(Constants.INVALID_TOKEN);    } else {        ...  //normal business logic ... resetToken(request);    }..."
    ],
    "strong": [
      "Call saveToken().",
      "Use html:form to create your form on your JSP (ex. editBook.jsp).",
      "Check isTokenValid() and call resetToken().",
      "Note"
    ],
    "em": [
      "saveToken",
      "EditBookAction",
      "saveToken",
      "html:form",
      "editBook.jsp",
      "isTokenValid",
      "resetToken",
      "SaveBookAction",
      "isTokenValid",
      "resetToken"
    ],
    "pre": [
      "public ActionForward execute(ActionMapping mapping,ActionForm form, HttpServletRequest request, HttpServletResponse response)throws Exception {    saveToken(request);    ....}",
      "<html:form action=\"...\">...</html:form>",
      "public ActionForward execute(ActionMapping mapping,ActionForm form, HttpServletRequest request, HttpServletResponse response)throws Exception {...    if ( !isTokenValid(request) ) {        return mapping.findForward(Constants.INVALID_TOKEN);    } else {        ...  //normal business logic ... resetToken(request);    }..."
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "http://struts.apache.org/1.x/",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ]
  },
  "links": [
    {
      "href": "http://struts.apache.org/1.x/",
      "text": "http://struts.apache.org/1.x/"
    },
    {
      "href": "/article/42276b64-f51d-4b89-8c33-0ffd9b098890",
      "text": "Use Session Management Offered by the Framework"
    },
    {
      "href": "/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a",
      "text": "Protect Session IDs"
    },
    {
      "href": "/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717",
      "text": "Protect Session Cookies"
    },
    {
      "href": "/article/7a517ad5-8640-4bc7-9e84-ccc313a71901",
      "text": "Set the Domain and Path Values of Session Cookies"
    },
    {
      "href": "/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b",
      "text": "Set the Secure and HTTPOnly Flags on All Sensitive Cookies"
    },
    {
      "href": "/article/6c470029-5c62-4394-99a9-8990bc48b0a8",
      "text": "Change Session IDs During Authentication"
    },
    {
      "href": "/article/a223c2d8-ab42-47fb-81a2-86ad677a5632",
      "text": "Invalidate Sessions when Users Log Out"
    },
    {
      "href": "/article/acfe1a16-3f00-4383-ada4-bebafc98a836",
      "text": "Make Inactive Sessions Time-out"
    },
    {
      "href": "/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e",
      "text": "Include Unique Tokens in HTTP Requests"
    },
    {
      "href": "/article/9df0b518-f832-4a7c-9857-0517638c47db",
      "text": "Do Not Make Security Decisions Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b",
      "text": "Session Management Offered by the Framework Is Used"
    },
    {
      "href": "/article/1de62774-3392-4da7-9bae-065fb15b4a2b",
      "text": "Session IDs Are Protected"
    },
    {
      "href": "/article/59132a30-2bae-45e9-9d85-8de26441be29",
      "text": "Session Cookies are Protected"
    },
    {
      "href": "/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b",
      "text": "The Domain and Path Values of Session Cookies Are Strict"
    },
    {
      "href": "/article/d8922a46-a943-4ae0-b8af-b88eb01d6997",
      "text": "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies"
    },
    {
      "href": "/article/58df5418-8c03-4121-83e0-bc68247c5d7b",
      "text": "Session IDs Are Changed During Authentication"
    },
    {
      "href": "/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac",
      "text": "Sessions Are Invalidated When Users Log Out"
    },
    {
      "href": "/article/c486eeb2-f64f-480b-9823-48bd7d21047d",
      "text": "Inactive Sessions Time-out"
    },
    {
      "href": "/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0",
      "text": "Unique Tokens Are Included in HTTP Requests"
    },
    {
      "href": "/article/4436e342-64d9-4b1b-ae9b-3e00696053fb",
      "text": "Security Decisions are Not Made Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/7d647e95-e47f-42e3-bb84-fd0dd727245c",
      "text": "Add Unique Tokens to HTTP Requests Using ESAPI"
    },
    {
      "href": "/article/25e3943b-a651-42c5-9e19-76077de05e90",
      "text": "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)"
    },
    {
      "href": "/article/986c7161-0a76-430a-8d0e-80d4615ab5db",
      "text": "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)"
    },
    {
      "href": "/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC"
    },
    {
      "href": "/article/63deed1a-6df4-4e04-9f61-898f190e1fe1",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1"
    },
    {
      "href": "/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2"
    },
    {
      "href": "/article/4d7ee521-8680-481e-a40b-3afb04c2616d",
      "text": "Use ESAPI HTTPUtilities"
    },
    {
      "href": "/article/40771780-be59-4d4c-b283-5ec3cc286357",
      "text": "How to Test for Session Prediction Bugs in Java"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>JAVA <li>Struts 1</li></li>\r\n  </ul>\r\n  <h1>Summary</h1>\r\n  <p>Perform CSRF prevention using Struts 1 within an application.</p>\r\n  <h1>Objectives</h1>\r\n  <p>CSRF prevention is a key security control for an application that protects the application and its users from CSRF attacks. This article will describe how to use the built-in mechanisms provided by Struts 1 to perform CSRF prevention.</p>\r\n  <h1>Solution Example</h1>\r\n  <p>There is a standard model for CSRF prevention using Struts 1 that involves 3 basic steps</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Call <em>saveToken</em>().</strong> In the action class/method that handles the setup for your form display (ex. <em>EditBookAction</em>), you need to call <em>saveToken</em>().</p>\r\n      <pre>public ActionForward execute(ActionMapping mapping,<br />ActionForm form, HttpServletRequest request, HttpServletResponse response)<br />throws Exception &#123;<br />&nbsp;&nbsp;&nbsp; saveToken(request);<br />&nbsp;&nbsp;&nbsp; ....<br />&#125;</pre>\r\n      <li>\r\n        <p>\r\n          <strong>Use <em>html:form</em> to create your form on your JSP (ex. <em>editBook.jsp</em>).</strong>\r\n        </p>\r\n        <pre>&lt;html:form action=\"...\"&gt;<br />...<br />&lt;/html:form&gt;</pre>\r\n        <li>\r\n          <p>\r\n            <strong>Check <em>isTokenValid</em>() and call <em>resetToken</em>().</strong> In the action class/method that handles the saving of your form (ex. <em>SaveBookAction</em>), you need to call <em>isTokenValid</em>(). If the token is valid, then you need to call <em>resetToken</em>().</p>\r\n          <pre>public ActionForward execute(ActionMapping mapping,<br />ActionForm form, HttpServletRequest request, HttpServletResponse response)<br />throws Exception &#123;<br />...<br />&nbsp;&nbsp;&nbsp; if ( &#33;isTokenValid(request) ) &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mapping.findForward(Constants.INVALID_TOKEN);<br />&nbsp;&nbsp;&nbsp; &#125; else &#123;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br />&nbsp;&nbsp;//normal business logic<br />&nbsp;...<br />&nbsp;resetToken(request);<br />&nbsp;&nbsp;&nbsp; &#125;<br />...</pre>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <p>Using these 3 simple steps you can effectively have a session specific per user token used to validate that a request was submitted by a user intentionally.</p>\r\n  <p>\r\n    <strong>Note</strong>: There have been effective attacks against various CSRF prevention techniques including this token-based approach when an application has XSS vulnerabilities. Removing XSS is therefore viewed as a prerequisite activity for a complete CSRF prevention mechanism.</p>\r\n  <p>In conclusion, CSRF prevention can function as a strong security control if used properly and applied thoroughly throughout the application. The Struts framework provides a simple series of steps for accomplishing this task.</p>\r\n  <h1>More Information</h1>\r\n  <ul>\r\n    <li>For Struts 1 documentation, please see <a href=\"http://struts.apache.org/1.x/\">http://struts.apache.org/1.x/</a></li>\r\n  </ul>\r\n  <h1>Java Session Management Guidelines</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/42276b64-f51d-4b89-8c33-0ffd9b098890\">Use Session Management Offered by the Framework</a>\r\n      <li>\r\n        <a href=\"/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a\">Protect Session IDs</a>\r\n        <li>\r\n          <a href=\"/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717\">Protect Session Cookies</a>\r\n          <li>\r\n            <a href=\"/article/7a517ad5-8640-4bc7-9e84-ccc313a71901\">Set the Domain and Path Values of Session Cookies</a>\r\n            <li>\r\n              <a href=\"/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b\">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a>\r\n              <li>\r\n                <a href=\"/article/6c470029-5c62-4394-99a9-8990bc48b0a8\">Change Session IDs During Authentication</a>\r\n                <li>\r\n                  <a href=\"/article/a223c2d8-ab42-47fb-81a2-86ad677a5632\">Invalidate Sessions when Users Log Out</a>\r\n                  <li>\r\n                    <a href=\"/article/acfe1a16-3f00-4383-ada4-bebafc98a836\">Make Inactive Sessions Time-out</a>\r\n                    <li>\r\n                      <a href=\"/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e\">Include Unique Tokens in HTTP Requests</a>\r\n                      <li>\r\n                        <a href=\"/article/9df0b518-f832-4a7c-9857-0517638c47db\">Do Not Make Security Decisions Based on Client-Accessible Parameters</a>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Checklists</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b\">Session Management Offered by the Framework Is Used</a>\r\n      <li>\r\n        <a href=\"/article/1de62774-3392-4da7-9bae-065fb15b4a2b\">Session IDs Are Protected</a>\r\n        <li>\r\n          <a href=\"/article/59132a30-2bae-45e9-9d85-8de26441be29\">Session Cookies are Protected</a>\r\n          <li>\r\n            <a href=\"/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b\">The Domain and Path Values of Session Cookies Are Strict</a>\r\n            <li>\r\n              <a href=\"/article/d8922a46-a943-4ae0-b8af-b88eb01d6997\">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a>\r\n              <li>\r\n                <a href=\"/article/58df5418-8c03-4121-83e0-bc68247c5d7b\">Session IDs Are Changed During Authentication</a>\r\n                <li>\r\n                  <a href=\"/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac\">Sessions Are Invalidated When Users Log Out</a>\r\n                  <li>\r\n                    <a href=\"/article/c486eeb2-f64f-480b-9823-48bd7d21047d\">Inactive Sessions Time-out</a>\r\n                    <li>\r\n                      <a href=\"/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0\">Unique Tokens Are Included in HTTP Requests</a>\r\n                      <li>\r\n                        <a href=\"/article/4436e342-64d9-4b1b-ae9b-3e00696053fb\">Security Decisions are Not Made Based on Client-Accessible Parameters</a>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Code Examples</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/7d647e95-e47f-42e3-bb84-fd0dd727245c\">Add Unique Tokens to HTTP Requests Using ESAPI</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/25e3943b-a651-42c5-9e19-76077de05e90\">Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/986c7161-0a76-430a-8d0e-80d4615ab5db\">Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6\">Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/63deed1a-6df4-4e04-9f61-898f190e1fe1\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 2</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/4d7ee521-8680-481e-a40b-3afb04c2616d\">Use ESAPI HTTPUtilities</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Testing</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/40771780-be59-4d4c-b283-5ec3cc286357\">How to Test for Session Prediction Bugs in Java</a>\r\n    </li>\r\n  </ul>"
}