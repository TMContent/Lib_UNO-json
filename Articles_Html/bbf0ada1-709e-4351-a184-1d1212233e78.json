{
  "id": "bbf0ada1-709e-4351-a184-1d1212233e78",
  "checksum": "d31ab80fac5ac8c5f4119150d9cf92a2b284346b",
  "words": {
    "6": [
      "ul",
      "li"
    ],
    "20": [
      "ul",
      "li",
      "blockquote"
    ],
    "55": [
      "ul",
      "li"
    ],
    "60": [
      "ul",
      "li"
    ],
    "2000": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "2003": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "blockquote",
      "blockquote"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "blockquote",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "p",
      "h3",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h3",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h3",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "h2",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "aspnet": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "blockquote",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "title"
    ],
    "internet": [
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "b"
    ],
    "information": [
      "ul",
      "li",
      "ol",
      "li"
    ],
    "services": [
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "iis)": [
      "ul",
      "li"
    ],
    "summary": [
      "h1"
    ],
    "this": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "blockquote",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "how": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "title"
    ],
    "shows": [
      "p",
      "p",
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "configure": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "blockquote",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "li",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h3",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h3",
      "p",
      "h2",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "title"
    ],
    "windows": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "div",
      "li",
      "div",
      "li",
      "div",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "li",
      "b",
      "li",
      "li",
      "li",
      "b",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "blockquote",
      "li",
      "h1",
      "p",
      "h2",
      "ol",
      "li",
      "b",
      "p",
      "h1",
      "p",
      "h2",
      "p",
      "h2",
      "blockquote",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "h1",
      "p",
      "blockquote",
      "h2",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "b",
      "title"
    ],
    "authentication": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "div",
      "li",
      "div",
      "li",
      "div",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "b",
      "li",
      "b",
      "li",
      "b",
      "ul",
      "li",
      "h1",
      "p",
      "b",
      "h2",
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "b",
      "p",
      "div",
      "pre",
      "h1",
      "p",
      "h2",
      "p",
      "div",
      "pre",
      "h2",
      "div",
      "pre",
      "ol",
      "li",
      "div",
      "pre",
      "p",
      "blockquote",
      "blockquote",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "b",
      "p",
      "title"
    ],
    "in": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "blockquote",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "h2",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "title"
    ],
    "an": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "web": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "application": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "blockquote",
      "blockquote",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "b",
      "p",
      "ul",
      "li",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "blockquote",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "h2",
      "p",
      "p",
      "h3",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "div",
      "pre",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "blockquote",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "b",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "preferred": [
      "p"
    ],
    "approach": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "blockquote",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "whenever": [
      "p"
    ],
    "users": [
      "p",
      "ul",
      "li",
      "div",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h1",
      "p",
      "p"
    ],
    "are": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "blockquote",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "blockquote",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "blockquote",
      "blockquote",
      "blockquote",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "part": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "your": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "domain": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "enables": [
      "p"
    ],
    "existing": [
      "p"
    ],
    "identity": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "b",
      "div",
      "pre",
      "p",
      "div",
      "pre",
      "h2",
      "p",
      "p",
      "b",
      "div",
      "pre",
      "b",
      "blockquote",
      "blockquote",
      "b",
      "p",
      "p",
      "ol",
      "li",
      "b",
      "div",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "store": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "such": [
      "p",
      "ul",
      "ul",
      "li",
      "blockquote",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "as": [
      "p",
      "ul",
      "ul",
      "li",
      "blockquote",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "corporate": [
      "p"
    ],
    "active": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "directory": [
      "p",
      "ul",
      "li",
      "blockquote",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "b",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "does": [
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "not": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "blockquote",
      "li",
      "li",
      "blockquote",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "transmit": [
      "p"
    ],
    "passwords": [
      "p"
    ],
    "over": [
      "p",
      "p"
    ],
    "network": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "also": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "various": [
      "p",
      "p",
      "p"
    ],
    "impersonation": [
      "p",
      "ul",
      "li",
      "div",
      "ul",
      "li",
      "h2",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "b",
      "li",
      "b",
      "li",
      "li",
      "b",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "options": [
      "p",
      "h2",
      "h2",
      "p",
      "blockquote",
      "ul",
      "li",
      "b"
    ],
    "available": [
      "p",
      "p",
      "blockquote"
    ],
    "with": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "div",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "b",
      "ul",
      "ul",
      "li",
      "li",
      "h1",
      "p",
      "h2",
      "p",
      "p",
      "h2",
      "blockquote",
      "blockquote",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "them": [
      "p",
      "p"
    ],
    "applications": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "explains": [
      "p"
    ],
    "authorization": [
      "p",
      "p",
      "p",
      "p",
      "h2",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "b",
      "b",
      "li",
      "li",
      "b",
      "blockquote",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "blockquote",
      "blockquote",
      "h2",
      "h2",
      "p",
      "b",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "mechanisms": [
      "p",
      "p",
      "p",
      "blockquote"
    ],
    "including": [
      "p",
      "p"
    ],
    "file": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "b",
      "blockquote",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "url": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "b",
      "ul",
      "li",
      "h2",
      "p"
    ],
    "role-based": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "contents": [
      "h1"
    ],
    "objectives": [
      "ul",
      "li",
      "div",
      "h1"
    ],
    "overview": [
      "ul",
      "li",
      "div",
      "h1"
    ],
    "configuring": [
      "ul",
      "li",
      "div",
      "h1",
      "h2",
      "h2",
      "p"
    ],
    "using": [
      "ul",
      "li",
      "div",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "authorizing": [
      "ul",
      "li",
      "div",
      "h1"
    ],
    "kerberos": [
      "ul",
      "li",
      "div",
      "p",
      "h1",
      "p",
      "p",
      "h2",
      "ul",
      "li",
      "p",
      "p"
    ],
    "additional": [
      "ul",
      "li",
      "div",
      "p"
    ],
    "resources": [
      "ul",
      "li",
      "div",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "ol",
      "li",
      "div",
      "pre",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "b"
    ],
    "learn": [
      "ul",
      "li"
    ],
    "for": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "blockquote",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "h2",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "li",
      "li",
      "li",
      "b",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "authorize": [
      "ul",
      "li",
      "p"
    ],
    "authenticated": [
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "h3",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "supports": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "modes": [
      "p"
    ],
    "forms": [
      "p"
    ],
    "passport": [
      "p"
    ],
    "custom": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "blockquote",
      "blockquote",
      "ul",
      "li"
    ],
    "should": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "blockquote"
    ],
    "choose": [
      "p"
    ],
    "if": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "blockquote",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "h3",
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b"
    ],
    "accounts": [
      "p"
    ],
    "maintained": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "microsoft®": [
      "p"
    ],
    "windows&nbspnt®": [
      "p"
    ],
    "controller": [
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "within": [
      "p",
      "ul",
      "li"
    ],
    "microsoft": [
      "p",
      "p"
    ],
    "windows®": [
      "p"
    ],
    "directory™": [
      "p"
    ],
    "there": [
      "p"
    ],
    "no": [
      "p"
    ],
    "firewall": [
      "p"
    ],
    "issues": [
      "p"
    ],
    "main": [
      "p"
    ],
    "benefit": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "ul",
      "li",
      "p",
      "p"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "be": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "blockquote",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "coupled": [
      "p",
      "p"
    ],
    "iis": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "so": [
      "p"
    ],
    "don't": [
      "p"
    ],
    "have": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "write": [
      "p",
      "ul",
      "li"
    ],
    "any": [
      "p"
    ],
    "code": [
      "p",
      "p",
      "h2",
      "p",
      "ul",
      "li"
    ],
    "compared": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "other": [
      "p",
      "blockquote",
      "blockquote",
      "p"
    ],
    "pass": [
      "p"
    ],
    "credentials": [
      "p",
      "p",
      "p",
      "p",
      "blockquote"
    ],
    "wire": [
      "p"
    ],
    "provides": [
      "p"
    ],
    "seamless": [
      "p"
    ],
    "experience": [
      "p"
    ],
    "therefore": [
      "p"
    ],
    "used": [
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "wherever": [
      "p"
    ],
    "possible": [
      "p",
      "blockquote"
    ],
    "when": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "where": [
      "p",
      "blockquote"
    ],
    "authenticates": [
      "p",
      "p"
    ],
    "application's": [
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "basic": [
      "p"
    ],
    "integrated": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "b",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b"
    ],
    "digest": [
      "p"
    ],
    "client": [
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "certificate": [
      "p",
      "p"
    ],
    "both": [
      "p"
    ],
    "provide": [
      "p"
    ],
    "strong": [
      "p"
    ],
    "but": [
      "p"
    ],
    "recommended": [
      "p"
    ],
    "unless": [
      "p"
    ],
    "pki": [
      "p"
    ],
    "infrastructure": [
      "p"
    ],
    "clients": [
      "p"
    ],
    "certificates": [
      "p"
    ],
    "passes": [
      "p"
    ],
    "token": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "along": [
      "p"
    ],
    "each": [
      "p",
      "p"
    ],
    "request": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "number": [
      "p"
    ],
    "ways": [
      "p"
    ],
    "without": [
      "ul",
      "li",
      "b"
    ],
    "default": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "setting": [
      "ul",
      "li"
    ],
    "performs": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "operations": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "accesses": [
      "ul",
      "li",
      "ul",
      "li",
      "b"
    ],
    "process": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "which": [
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "service": [
      "ul",
      "ul",
      "li",
      "li",
      "blockquote",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "account": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "blockquote",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "on": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "blockquote",
      "p",
      "p",
      "p",
      "blockquote",
      "blockquote",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "server": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "blockquote",
      "p",
      "blockquote",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "impersonate": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "h3",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "div",
      "pre"
    ],
    "perform": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "access": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "b",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "p",
      "ol",
      "li",
      "div",
      "pre",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "fixed-identity": [
      "ul",
      "li",
      "b"
    ],
    "fixed": [
      "ul",
      "li",
      "p",
      "h2",
      "p"
    ],
    "specific": [
      "ul",
      "li",
      "blockquote",
      "p",
      "p"
    ],
    "avoid": [
      "ul",
      "li"
    ],
    "instead": [
      "ul",
      "li",
      "blockquote",
      "p"
    ],
    "pool": [
      "ul",
      "li",
      "blockquote"
    ],
    "regardless": [
      "p",
      "p"
    ],
    "control": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "li",
      "b"
    ],
    "business": [
      "p"
    ],
    "following": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "requested": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b",
      "p"
    ],
    "files": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "blockquote",
      "blockquote",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "folders": [
      "ul",
      "li",
      "p"
    ],
    "based": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "authorization>": [
      "ul",
      "li",
      "p"
    ],
    "element": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "blockquote",
      "ol",
      "li",
      "p"
    ],
    "webconfig": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "groups": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "iprincipal": [
      "ul",
      "li",
      "b",
      "ul",
      "li",
      "b"
    ],
    "object": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "stored": [
      "ul",
      "li",
      "p"
    ],
    "httpcontextuser.": [
      "ul",
      "li"
    ],
    "type": [
      "ul",
      "li"
    ],
    "windowsprincipal": [
      "ul",
      "li",
      "b"
    ],
    "contains": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "windowsidentity": [
      "ul",
      "li",
      "b"
    ],
    "holds": [
      "ul",
      "li"
    ],
    "note&nbsp&nbsp;&nbsp;asp.net": [
      "ul",
      "li",
      "blockquote"
    ],
    "version": [
      "ul",
      "li",
      "blockquote",
      "ul",
      "li"
    ],
    "protects": [
      "ul",
      "li",
      "blockquote"
    ],
    "all": [
      "ul",
      "li",
      "blockquote",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "particular": [
      "ul",
      "li",
      "blockquote"
    ],
    "even": [
      "ul",
      "li",
      "blockquote"
    ],
    "those": [
      "ul",
      "li",
      "blockquote"
    ],
    "mapped": [
      "ul",
      "ul",
      "ul",
      "li",
      "blockquote",
      "li",
      "li",
      "p",
      "p"
    ],
    "html,": [
      "ul",
      "li",
      "blockquote"
    ],
    "gif,": [
      "ul",
      "li",
      "blockquote"
    ],
    "jpg": [
      "ul",
      "li",
      "blockquote"
    ],
    "types": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "isapi": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "extension": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "aspnet_isapi.dll),": [
      "ul",
      "li"
    ],
    "automatic": [
      "ul",
      "li"
    ],
    "checks": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "b",
      "p",
      "p",
      "p",
      "h3",
      "ul",
      "li",
      "div",
      "pre"
    ],
    "performed": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "user's": [
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "against": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "list": [
      "ul",
      "li"
    ],
    "acl)": [
      "ul",
      "li"
    ],
    "attached": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "fileauthorizationmodule": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b",
      "b",
      "b",
      "ul",
      "li",
      "b",
      "p",
      "b"
    ],
    "class": [
      "ul",
      "li"
    ],
    "only": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "example": [
      "ul",
      "li",
      "p"
    ],
    "defaultaspx": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "embedded": [
      "ul",
      "li"
    ],
    "usercontrol.ascx),": [
      "ul",
      "li"
    ],
    "turn": [
      "ul",
      "li"
    ],
    "includes": [
      "ul",
      "li"
    ],
    "image": [
      "ul",
      "li"
    ],
    "tag": [
      "ul",
      "li"
    ],
    "pointing": [
      "ul",
      "li"
    ],
    "imagegif),": [
      "ul",
      "li"
    ],
    "check": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "usercontrolascx,": [
      "ul",
      "li"
    ],
    "because": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "these": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "imagegif,": [
      "ul",
      "li"
    ],
    "static": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "handled": [
      "ul",
      "li"
    ],
    "internally": [
      "ul",
      "li"
    ],
    "however": [
      "ul",
      "li"
    ],
    "must": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "still": [
      "ul",
      "li"
    ],
    "granted": [
      "ul",
      "li"
    ],
    "read": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "permission": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "appropriately": [
      "ul",
      "li"
    ],
    "configured": [
      "ul",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "acl": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "note&nbsp&nbsp;&nbsp;impersonation": [
      "ul",
      "li",
      "blockquote"
    ],
    "required": [
      "ul",
      "li",
      "blockquote"
    ],
    "role": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b",
      "h2",
      "p",
      "p",
      "h3",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "membership": [
      "ul",
      "li",
      "h2",
      "p",
      "p"
    ],
    "methods": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "userisinrole": [
      "ul",
      "li",
      "b",
      "b"
    ],
    "rolesisuserinrole.": [
      "ul",
      "li"
    ],
    "allows": [
      "ul",
      "li"
    ],
    "fine-grained": [
      "ul",
      "li"
    ],
    "logic": [
      "ul",
      "li"
    ],
    "roles": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "api": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "need": [
      "ul",
      "li",
      "p",
      "p",
      "blockquote",
      "p",
      "ul",
      "li",
      "p"
    ],
    "enable": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "b"
    ],
    "manager": [
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "principal": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "demands": [
      "ul",
      "li",
      "p",
      "h3"
    ],
    "class-level": [
      "ul",
      "li"
    ],
    "method-level": [
      "ul",
      "li"
    ],
    "declarative": [
      "ul",
      "li"
    ],
    "security": [
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "b",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b"
    ],
    "allowed": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "call": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "classes": [
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "httpcontextuser": [
      "b"
    ],
    "note": [
      "b",
      "b",
      "p",
      "b",
      "b",
      "p"
    ],
    "rolesisuserinrole": [
      "b",
      "b",
      "ul",
      "li",
      "b"
    ],
    "virtual": [
      "p",
      "ol",
      "li"
    ],
    "settings": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "authentication>": [
      "p"
    ],
    "start": [
      "ol",
      "li",
      "p"
    ],
    "iis).": [
      "ol",
      "li"
    ],
    "right-click": [
      "ol",
      "li"
    ],
    "then": [
      "ol",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "click": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "properties": [
      "ol",
      "li",
      "b"
    ],
    "tab": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "under": [
      "ol",
      "li"
    ],
    "anonymous": [
      "ol",
      "ol",
      "li",
      "b",
      "li",
      "b"
    ],
    "edit": [
      "ol",
      "li",
      "b"
    ],
    "make": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "sure": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "box": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li"
    ],
    "selected": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "machine-level": [
      "p"
    ],
    "ensure": [
      "p"
    ],
    "mode": [
      "p"
    ],
    "set": [
      "p",
      "ol",
      "li"
    ],
    "shown": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "here": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "..&nbsp;<system.web>&nbsp;": [
      "div",
      "pre",
      "div",
      "pre",
      "ol",
      "li",
      "div",
      "pre"
    ],
    "..&nbsp;": [
      "div",
      "pre",
      "div",
      "pre",
      "ol",
      "li",
      "div",
      "pre"
    ],
    "mode=\"windows\"/&nbsp;": [
      "div",
      "pre",
      "ol",
      "li",
      "div",
      "pre"
    ],
    "..&nbsp;</system.web>&nbsp;...": [
      "div",
      "pre",
      "div",
      "pre",
      "div",
      "pre",
      "ol",
      "li",
      "div",
      "pre"
    ],
    "execute": [
      "p"
    ],
    "standard": [
      "p"
    ],
    "impersonate-level": [
      "p"
    ],
    "tokens": [
      "p"
    ],
    "usually": [
      "p"
    ],
    "created": [
      "p"
    ],
    "allow": [
      "p",
      "ul",
      "li",
      "b",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "local": [
      "p",
      "p",
      "p"
    ],
    "able": [
      "p"
    ],
    "remote": [
      "p",
      "p",
      "p"
    ],
    "require": [
      "p",
      "p"
    ],
    "delegate-level": [
      "p",
      "p"
    ],
    "generate": [
      "p"
    ],
    "needs": [
      "p"
    ],
    "marked": [
      "p"
    ],
    "trusted": [
      "p"
    ],
    "delegation": [
      "p",
      "p",
      "p"
    ],
    "confirm": [
      "p"
    ],
    "reviewing": [
      "p"
    ],
    "machineconfig.comments": [
      "p"
    ],
    "located": [
      "p"
    ],
    "folder": [
      "p"
    ],
    "%windir%\\microsoftnet\\framework\\{version}\\config.": [
      "p"
    ],
    "identity>": [
      "p",
      "p",
      "p",
      "blockquote",
      "ol",
      "li"
    ],
    "follows": [
      "p"
    ],
    "disabled": [
      "p"
    ],
    "impersonate=\"false\"": [
      "div",
      "pre"
    ],
    "username=\"\"": [
      "div",
      "pre"
    ],
    "password=\"\"": [
      "div",
      "pre"
    ],
    "/": [
      "div",
      "pre"
    ],
    "impersonating": [
      "h2",
      "h2",
      "h2",
      "ol",
      "li"
    ],
    "original": [
      "h2",
      "h2",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "pre"
    ],
    "caller": [
      "h2",
      "h2",
      "p"
    ],
    "thread": [
      "p",
      "ol",
      "li"
    ],
    "result": [
      "p"
    ],
    "resource": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "caller's": [
      "p",
      "p"
    ],
    "configuration": [
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "..&nbsp;<system.web>&nbsp;&nbsp;&nbsp;": [
      "div",
      "pre"
    ],
    "..&nbsp;&nbsp;&nbsp;": [
      "div",
      "pre"
    ],
    "mode=\"windows\"/&nbsp;&nbsp;&nbsp;": [
      "div",
      "pre",
      "div",
      "pre"
    ],
    "impersonate=\"true\"/&nbsp;&nbsp;&nbsp;": [
      "div",
      "pre"
    ],
    "resulting": [
      "p"
    ],
    "associated": [
      "p"
    ],
    "logon": [
      "p"
    ],
    "session": [
      "p",
      "p"
    ],
    "site": [
      "p",
      "p"
    ],
    "from": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "browser": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "while": [
      "p",
      "ol",
      "li",
      "div",
      "pre"
    ],
    "logged": [
      "p"
    ],
    "onto": [
      "p"
    ],
    "different": [
      "p",
      "p"
    ],
    "machine": [
      "p"
    ],
    "same": [
      "p",
      "p",
      "p"
    ],
    "attempts": [
      "p"
    ],
    "end": [
      "p"
    ],
    "up": [
      "p"
    ],
    "null": [
      "p"
    ],
    "will": [
      "p"
    ],
    "fail": [
      "p"
    ],
    "specify": [
      "p",
      "p",
      "p"
    ],
    "impersonated": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "impersonate=\"true\"": [
      "div",
      "pre"
    ],
    "username=\"domain>\\<username>\"": [
      "div",
      "pre"
    ],
    "password=\"password>\"/>&nbsp;&nbsp;&nbsp;": [
      "div",
      "pre"
    ],
    "they": [
      "p",
      "p"
    ],
    "encrypted": [
      "p"
    ],
    "format": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "aspnet_regiisexe": [
      "p"
    ],
    "tool": [
      "p"
    ],
    "note&nbsp&nbsp;&nbsp;specifying": [
      "blockquote"
    ],
    "avoided": [
      "blockquote"
    ],
    "runs": [
      "blockquote"
    ],
    "avoids": [
      "blockquote"
    ],
    "programmatically": [
      "h2"
    ],
    "rest": [
      "p"
    ],
    "time": [
      "p"
    ],
    "programmatic": [
      "p"
    ],
    "temporarily": [
      "p",
      "h3",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "pre"
    ],
    "procedure": [
      "p"
    ],
    "passed": [
      "p"
    ],
    "through": [
      "p"
    ],
    "httpcontext": [
      "p",
      "b"
    ],
    "ensuring": [
      "ol",
      "li"
    ],
    "false": [
      "ol",
      "li",
      "b"
    ],
    "impersonate=\"false\"/&nbsp;": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "obtain": [
      "ol",
      "li"
    ],
    "iidentity": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "winid=": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "httpcontextcurrent.user.identity;windowsidentity": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "wi": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre",
      "ul",
      "li",
      "div",
      "pre"
    ],
    "windowsidentity)winid;": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "remove": [
      "ol",
      "li"
    ],
    "current": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "finished": [
      "ol",
      "li"
    ],
    "//": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "div",
      "div",
      "div",
      "div",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "userwindowsimpersonationcontext": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "wic": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "wiimpersonate();try{&nbsp;": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "impersonating}catch{&nbsp;": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "prevent": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "exceptions": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "propagating}finally{&nbsp;": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "revert": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "impersonation&nbsp;": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "wicundo();}": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "authenticate": [
      "p"
    ],
    "provided": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "urlauthorizationmodule": [
      "ul",
      "li",
      "b",
      "p",
      "b"
    ],
    "note&nbsp&nbsp;&nbsp;file": [
      "blockquote"
    ],
    "requires": [
      "blockquote"
    ],
    "acls": [
      "h2",
      "p"
    ],
    "requests": [
      "p",
      "ul",
      "li"
    ],
    "checked": [
      "p"
    ],
    "again": [
      "p"
    ],
    "appropriate": [
      "p",
      "ul",
      "li"
    ],
    "directly": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "b"
    ],
    "accessed": [
      "p",
      "ul",
      "li"
    ],
    "described": [
      "p"
    ],
    "pages": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    ".aspx": [
      "ul",
      "li"
    ],
    ".asmx": [
      "ul",
      "li"
    ],
    "enabled": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "databases": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "registry": [
      "ul",
      "li"
    ],
    "keys": [
      "ul",
      "li"
    ],
    "objects": [
      "ul",
      "li"
    ],
    "otherwise": [
      "ul",
      "li"
    ],
    "attempt": [
      "ul",
      "li"
    ],
    "succeed": [
      "ul",
      "li"
    ],
    "suitably": [
      "ul",
      "li"
    ],
    "true": [
      "p"
    ],
    "whether": [
      "p"
    ],
    "add": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "name": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "group": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "deny>": [
      "p"
    ],
    "allow>": [
      "p"
    ],
    "elements": [
      "p"
    ],
    "deny": [
      "b",
      "div",
      "pre"
    ],
    "authorization>&nbsp;<deny": [
      "div",
      "pre"
    ],
    "users=\"domainname\\username\"": [
      "div",
      "pre"
    ],
    "/&nbsp;<allow": [
      "div",
      "pre"
    ],
    "roles=\"domainname\\windowsgroup\"": [
      "div",
      "pre"
    ],
    "/</authorization>": [
      "div",
      "pre",
      "div",
      "pre"
    ],
    "names": [
      "p",
      "p"
    ],
    "take": [
      "p",
      "p"
    ],
    "form": [
      "p",
      "p"
    ],
    "domainname\\username": [
      "p",
      "i",
      "ul",
      "li",
      "i"
    ],
    "domainname\\windowsgroupname": [
      "p",
      "i"
    ],
    "well": [
      "p"
    ],
    "known": [
      "p"
    ],
    "administrators": [
      "p"
    ],
    "referenced": [
      "p"
    ],
    "\"builtin\"": [
      "p"
    ],
    "prefix": [
      "p"
    ],
    "authorization>&nbsp;": [
      "div",
      "pre"
    ],
    "users=\"domainname\\bob": [
      "div",
      "pre"
    ],
    "domainname\\mary\"": [
      "div",
      "pre"
    ],
    "/&nbsp;": [
      "div",
      "div",
      "pre",
      "pre"
    ],
    "roles=\"builtin\\administrators": [
      "div",
      "pre"
    ],
    "domainname\\manager\"": [
      "div",
      "pre"
    ],
    "users=\"*\"": [
      "div",
      "pre"
    ],
    "checking": [
      "h2"
    ],
    "determine": [
      "p"
    ],
    "window": [
      "p"
    ],
    "become": [
      "p"
    ],
    "either": [
      "p",
      "p",
      "p"
    ],
    "performing": [
      "p"
    ],
    "explicit": [
      "p",
      "h3"
    ],
    "user.isinrole": [
      "p"
    ],
    "rolesisuserinrole),": [
      "p"
    ],
    "principalpermission": [
      "p",
      "b",
      "h3",
      "ul",
      "ul",
      "li",
      "b",
      "li",
      "div",
      "pre"
    ],
    "do": [
      "p"
    ],
    "latter": [
      "p"
    ],
    "imperatively": [
      "p"
    ],
    "body": [
      "p"
    ],
    "method": [
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "declaratively": [
      "p"
    ],
    "adding": [
      "p"
    ],
    "attributes": [
      "p"
    ],
    "interface": [
      "ul",
      "li"
    ],
    "http": [
      "ul",
      "li",
      "p"
    ],
    "works": [
      "ul",
      "li"
    ],
    "versions": [
      "ul",
      "li"
    ],
    "10,": [
      "ul",
      "li"
    ],
    "11.": [
      "ul",
      "li"
    ],
    "20.": [
      "ul",
      "li"
    ],
    "domainname\\groupname": [
      "ul",
      "li",
      "i"
    ],
    "nameif(user.isinrole(@\"domainname\\manager\"))&nbsp;": [
      "ul",
      "li"
    ],
    "restricted": [
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "operationelse&nbsp": [
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "return": [
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "unauthorized": [
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "error": [
      "ul",
      "ul",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "alternatively": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "apis": [
      "ul",
      "li"
    ],
    "introduced": [
      "ul",
      "li"
    ],
    "20,": [
      "ul",
      "li"
    ],
    "similar": [
      "ul",
      "li"
    ],
    "ifroles.isuserinrole(@\"domainname\\manager\"))&nbsp;": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "built-in": [
      "ul",
      "li",
      "p"
    ],
    "aspnetwindowstokenroleprovider": [
      "ul",
      "li",
      "p",
      "b"
    ],
    "uses": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "select": [
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "provider": [
      "ul",
      "li",
      "p"
    ],
    "rolemanager": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "enabled=\"true\"": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "defaultprovider=\"aspnetwindowstokenroleprovider\"/": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "alternate": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "providers": [
      "ul",
      "li",
      "p"
    ],
    "authorizationstoreroleprovider": [
      "ul",
      "li",
      "p",
      "b"
    ],
    "sqlroleprovider": [
      "ul",
      "li",
      "p",
      "b"
    ],
    "stores": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "policy": [
      "ul",
      "li",
      "p"
    ],
    "sql": [
      "ul",
      "li",
      "p"
    ],
    "ifuser.isinrole(@\"domainname\\manager\"))&nbsp;": [
      "div",
      "pre"
    ],
    "construct": [
      "ul",
      "li"
    ],
    "its": [
      "ul",
      "li"
    ],
    "demand": [
      "ul",
      "li",
      "b"
    ],
    "fine": [
      "ul",
      "li"
    ],
    "grained": [
      "ul",
      "li"
    ],
    "principalpermissiondemand": [
      "ul",
      "li",
      "b"
    ],
    "systemsecurity.permissions;...//": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "imperative": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "permcheckuser": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "new": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "principalpermission@\"domain\\bob\",": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "null;permcheckuser.demand();": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "decorate": [
      "ul",
      "li"
    ],
    "principalpermissionattribute": [
      "ul",
      "li",
      "b"
    ],
    "systemsecurity.permissions;...": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "principalpermission(securityaction.demand,role=@\"builtin\\administrators\")]": [
      "ul",
      "li",
      "div",
      "pre"
    ],
    "advantage": [
      "ul",
      "li",
      "p"
    ],
    "requirements": [
      "ul",
      "li",
      "p"
    ],
    "visible": [
      "ul",
      "li",
      "p"
    ],
    "tools": [
      "ul",
      "li",
      "p"
    ],
    "permviewexe.": [
      "ul",
      "li",
      "p"
    ],
    "ntlm": [
      "p"
    ],
    "depending": [
      "p"
    ],
    "servers": [
      "p",
      "ul",
      "li"
    ],
    "offers": [
      "p"
    ],
    "performance": [
      "p"
    ],
    "features": [
      "p"
    ],
    "ability": [
      "p"
    ],
    "mutual": [
      "p"
    ],
    "running": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "later": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "computers": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "explorer": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "respond": [
      "ul",
      "li"
    ],
    "negotiate": [
      "ul",
      "li"
    ],
    "challenge": [
      "ul",
      "li"
    ],
    "section": [
      "ul",
      "li"
    ],
    "advanced": [
      "ul",
      "li",
      "b"
    ],
    "menu": [
      "ul",
      "li"
    ],
    "restart": [
      "ul",
      "li"
    ],
    "run": [
      "ul",
      "li"
    ],
    "spn)": [
      "ul",
      "li"
    ],
    "registered": [
      "ul",
      "li"
    ],
    "register": [
      "p"
    ],
    "spn": [
      "p"
    ],
    "setspnexe": [
      "p"
    ],
    "utility": [
      "p"
    ],
    "commands": [
      "p"
    ],
    "command": [
      "p"
    ],
    "prompt": [
      "p"
    ],
    "setspn": [
      "p",
      "b",
      "p",
      "b"
    ],
    "-a": [
      "p",
      "b",
      "p",
      "b"
    ],
    "http/webservername": [
      "p",
      "b"
    ],
    "domain\\customaccountname": [
      "p",
      "b",
      "p",
      "b"
    ],
    "http/webservernamefullyqualifieddomainname": [
      "p",
      "b"
    ],
    "cannot": [
      "p"
    ],
    "multiple": [
      "p",
      "p",
      "p"
    ],
    "host": [
      "p",
      "p"
    ],
    "want": [
      "p"
    ],
    "identities": [
      "p"
    ],
    "limitation": [
      "p",
      "p"
    ],
    "workaround": [
      "p"
    ],
    "system": [
      "p"
    ],
    "dns)": [
      "p"
    ],
    "urls": [
      "p"
    ],
    "dns": [
      "p"
    ],
    "would": [
      "p"
    ],
    "http//app1": [
      "p"
    ],
    "http//app2": [
      "p"
    ],
    "http//site/app1": [
      "p"
    ],
    "http//site/app2.": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "sink]": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "Summary",
      "Contents",
      "Objectives",
      "Overview",
      "Configuring Windows Authentication",
      "Using Impersonation with Windows Authentication",
      "Authorizing Windows Users",
      "Kerberos Authentication"
    ],
    "ul": [
      "ASP.NET \n    Internet Information Services (IIS) 6.0",
      "Objectives\n    \n    \n      Overview\n    \n    \n      Configuring Windows Authentication\n    \n    \n      Using Impersonation with Windows Authentication \n    \n    \n      Authorizing Windows Users\n    \n    \n      Kerberos Authentication\n    \n    \n      Additional Resources",
      "Learn how to configure your Web application for using Windows authentication. \n    Use impersonation with Windows authentication in ASP.NET applications. \n    Authorize users authenticated with Windows authentication.",
      "Windows authentication without impersonation. This is the default setting. ASP.NET performs operations and accesses resources by using your application's process identity, which by default is the Network Service account on Windows Server 2003. \n    \n      Windows authentication with impersonation. With this approach, you impersonate the authenticated user and use that identity to perform operations and access resources. \n    \n      Windows authentication with fixed-identity impersonation. With this approach, you impersonate a fixed Windows account to access resources using a specific identity. On Windows Server 2003, you should avoid this impersonation approach; instead, use a custom application pool with a custom service identity.",
      "URL authorization. You use URL authorization to control access to requested files and folders based on the request URL. You configure URL authorization by using an <authorization> element in the Web.config file to control which users and groups of users should have access to requested resources. Authorization is based on the IPrincipal object stored in HttpContext.User. With Windows authentication, this object is of type WindowsPrincipal and it contains a WindowsIdentity object that holds the Windows token for the authenticated user. Note&nbsp;&nbsp;&nbsp;ASP.NET version 2.0 on Windows Server 2003 protects all files in a particular directory, even those not mapped to ASP.NET such as .html, .gif, and .jpg files.\n    \n      File authorization. For file types mapped by IIS to the ASP.NET ISAPI extension (Aspnet_isapi.dll), automatic access checks are performed using the authenticated user's Windows access token against the access control list (ACL) attached to the requested ASP.NET file. The FileAuthorizationModule class only performs access checks against the requested file. For example, if you request Default.aspx and it contains an embedded user control (Usercontrol.ascx), which in turn includes an image tag (pointing to Image.gif), the FileAuthorizationModule performs an access check for Default.aspx and Usercontrol.ascx, because these file types are mapped by IIS to the ASP.NET ISAPI extension. The FileAuthorizationModule does not perform a check for Image.gif, because this is a static file handled internally by IIS. However, because access checks for static files are performed by IIS, the authenticated user must still be granted read permission to the file with an appropriately configured ACL. Note&nbsp;&nbsp;&nbsp;Impersonation is not required for file authorization.\n    \n      Role checks. You can check the authenticated user's role membership by using methods such as User.IsInRole and Roles.IsUserInRole. This allows you to perform fine-grained authorization logic. To use the Roles API, you need to enable role manager for your application. You can also use principal permission demands and use class-level and method-level declarative security to control which users should be allowed to call classes and methods.",
      "File authorization provided by the FileAuthorizationModule. \n    URL authorization provided by the UrlAuthorizationModule. \n    Role-based authorization.",
      "For\n      resources directly requested by the user. For resources such as Web pages (.aspx files) and Web services (.asmx files) directly requested by the user, the authenticated user's Windows access token is compared against the Windows ACL attached to the file. Make sure that the authenticated user is allowed to access the appropriate Web pages and Web services. \n    \n      For resources that the application accesses. If impersonation is enabled, resources such as files, databases, registry keys, and Active Directory objects are accessed by using the impersonated identity. Otherwise, your application's process identity, such as the Network Service account, is used for resource access. For the resource access attempt to succeed, the ACL attached to these resources must be suitably configured to allow the process account or impersonated identity the access it requests, such as read access, or write access.",
      "Use the IPrincipal interface of the User object attached to the current HTTP request. This approach works with ASP.NET versions 1.0, 1.1. and 2.0. When using Windows authentication, make sure to use the domainName\\userName format for the user name and the format domainName\\groupName for the group name.if(User.IsInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.  \n    Alternatively, use role manager APIs introduced in ASP.NET version 2.0, which supports a similar Roles.IsUserInRole method, as shown here. if(Roles.IsUserInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.  To use the role manager API, you must enable role manager. With Windows authentication, you can use the built-in AspNetWindowsTokenRoleProvider, which uses Windows groups as roles. To enable role manager and select this provider, add the following configuration to your Web.config file. <roleManager enabled=\"true\"             defaultProvider=\"AspNetWindowsTokenRoleProvider\"/>  When you use Windows authentication, you can use alternate role providers, such as the AuthorizationStoreRoleProvider and SqlRoleProvider, if you need to store roles in alternate role stores such as Authorization Manager policy stores or SQL Server databases.",
      "Construct a PrincipalPermission object, and then call its Demand method to perform authorization. \n    For fine grained authorization, call PrincipalPermission.Demand within code, as shown here. using System.Security.Permissions;...// Imperative checks PrincipalPermission permCheckUser = new PrincipalPermission(@\"Domain\\Bob\", null);permCheckUser.Demand();  \n    Alternatively, you can decorate your classes or methods with the PrincipalPermissionAttribute, as shown here. using System.Security.Permissions;... [PrincipalPermission(SecurityAction.Demand,Role=@\"Builtin\\Administrators\")]  The advantage of this approach is that the security requirements of your methods are visible to tools such as Permview.exe.",
      "All servers must be running Windows 2000 Server or later. \n    Client computers must be running Internet Explorer 5.5 or later. \n    All computers must be in a Windows 2000 Server or later domain. \n    Internet Explorer security settings must be configured to enable Integrated Windows authentication. By default, Integrated Windows authentication is not enabled in Internet Explorer 6. To enable the browser to respond to a negotiate challenge and perform Kerberos authentication, select the Enable Integrated Windows Authentication check box in the Security section of the Advanced tab of the Internet Options menu, and then restart the browser. \n    If you use a custom service account to run your ASP.NET application, you a Service Principal Name (SPN) must be registered for the account in Active Directory."
    ],
    "li": [
      "ASP.NET",
      "Internet Information Services (IIS) 6.0",
      "Objectives",
      "Overview",
      "Configuring Windows Authentication",
      "Using Impersonation with Windows Authentication",
      "Authorizing Windows Users",
      "Kerberos Authentication",
      "Additional Resources",
      "Learn how to configure your Web application for using Windows authentication.",
      "Use impersonation with Windows authentication in ASP.NET applications.",
      "Authorize users authenticated with Windows authentication.",
      "Windows authentication without impersonation. This is the default setting. ASP.NET performs operations and accesses resources by using your application's process identity, which by default is the Network Service account on Windows Server 2003.",
      "Windows authentication with impersonation. With this approach, you impersonate the authenticated user and use that identity to perform operations and access resources.",
      "Windows authentication with fixed-identity impersonation. With this approach, you impersonate a fixed Windows account to access resources using a specific identity. On Windows Server 2003, you should avoid this impersonation approach; instead, use a custom application pool with a custom service identity.",
      "URL authorization. You use URL authorization to control access to requested files and folders based on the request URL. You configure URL authorization by using an <authorization> element in the Web.config file to control which users and groups of users should have access to requested resources. Authorization is based on the IPrincipal object stored in HttpContext.User. With Windows authentication, this object is of type WindowsPrincipal and it contains a WindowsIdentity object that holds the Windows token for the authenticated user. Note&nbsp;&nbsp;&nbsp;ASP.NET version 2.0 on Windows Server 2003 protects all files in a particular directory, even those not mapped to ASP.NET such as .html, .gif, and .jpg files.",
      "File authorization. For file types mapped by IIS to the ASP.NET ISAPI extension (Aspnet_isapi.dll), automatic access checks are performed using the authenticated user's Windows access token against the access control list (ACL) attached to the requested ASP.NET file. The FileAuthorizationModule class only performs access checks against the requested file. For example, if you request Default.aspx and it contains an embedded user control (Usercontrol.ascx), which in turn includes an image tag (pointing to Image.gif), the FileAuthorizationModule performs an access check for Default.aspx and Usercontrol.ascx, because these file types are mapped by IIS to the ASP.NET ISAPI extension. The FileAuthorizationModule does not perform a check for Image.gif, because this is a static file handled internally by IIS. However, because access checks for static files are performed by IIS, the authenticated user must still be granted read permission to the file with an appropriately configured ACL. Note&nbsp;&nbsp;&nbsp;Impersonation is not required for file authorization.",
      "Role checks. You can check the authenticated user's role membership by using methods such as User.IsInRole and Roles.IsUserInRole. This allows you to perform fine-grained authorization logic. To use the Roles API, you need to enable role manager for your application. You can also use principal permission demands and use class-level and method-level declarative security to control which users should be allowed to call classes and methods.",
      "Start Internet Information Services (IIS).",
      "Right-click your application's virtual directory, and then click Properties.",
      "Click the Directory Security tab.",
      "Under Anonymous access and authentication control, click Edit.",
      "Make sure the Anonymous access check box is not selected and that Integrated Windows authentication is the only selected check box.",
      "Check that your ASP.NET application is not configured for impersonation by ensuring that impersonate is set to false on the <identity> element in the Web.config file. ...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp; <identity impersonate=\"false\"/>&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "Obtain the authenticated user's Windows token. IIdentity WinId= HttpContext.Current.User.Identity;WindowsIdentity wi = (WindowsIdentity)WinId;",
      "Use the authenticated user's Windows token to temporarily impersonate the original user and remove the impersonation token from the current thread when you are finished impersonating. // Temporarily impersonate the original user.WindowsImpersonationContext wic = wi.Impersonate();try{&nbsp; // Access resources while impersonating.}catch{&nbsp; // Prevent exceptions propagating.}finally{&nbsp; // Revert impersonation.&nbsp; wic.Undo();}",
      "File authorization provided by the FileAuthorizationModule.",
      "URL authorization provided by the UrlAuthorizationModule.",
      "Role-based authorization.",
      "For\n      resources directly requested by the user. For resources such as Web pages (.aspx files) and Web services (.asmx files) directly requested by the user, the authenticated user's Windows access token is compared against the Windows ACL attached to the file. Make sure that the authenticated user is allowed to access the appropriate Web pages and Web services.",
      "For resources that the application accesses. If impersonation is enabled, resources such as files, databases, registry keys, and Active Directory objects are accessed by using the impersonated identity. Otherwise, your application's process identity, such as the Network Service account, is used for resource access. For the resource access attempt to succeed, the ACL attached to these resources must be suitably configured to allow the process account or impersonated identity the access it requests, such as read access, or write access.",
      "Use the IPrincipal interface of the User object attached to the current HTTP request. This approach works with ASP.NET versions 1.0, 1.1. and 2.0. When using Windows authentication, make sure to use the domainName\\userName format for the user name and the format domainName\\groupName for the group name.if(User.IsInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.",
      "Alternatively, use role manager APIs introduced in ASP.NET version 2.0, which supports a similar Roles.IsUserInRole method, as shown here. if(Roles.IsUserInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.  To use the role manager API, you must enable role manager. With Windows authentication, you can use the built-in AspNetWindowsTokenRoleProvider, which uses Windows groups as roles. To enable role manager and select this provider, add the following configuration to your Web.config file. <roleManager enabled=\"true\"             defaultProvider=\"AspNetWindowsTokenRoleProvider\"/>  When you use Windows authentication, you can use alternate role providers, such as the AuthorizationStoreRoleProvider and SqlRoleProvider, if you need to store roles in alternate role stores such as Authorization Manager policy stores or SQL Server databases.",
      "Construct a PrincipalPermission object, and then call its Demand method to perform authorization.",
      "For fine grained authorization, call PrincipalPermission.Demand within code, as shown here. using System.Security.Permissions;...// Imperative checks PrincipalPermission permCheckUser = new PrincipalPermission(@\"Domain\\Bob\", null);permCheckUser.Demand();",
      "Alternatively, you can decorate your classes or methods with the PrincipalPermissionAttribute, as shown here. using System.Security.Permissions;... [PrincipalPermission(SecurityAction.Demand,Role=@\"Builtin\\Administrators\")]  The advantage of this approach is that the security requirements of your methods are visible to tools such as Permview.exe.",
      "All servers must be running Windows 2000 Server or later.",
      "Client computers must be running Internet Explorer 5.5 or later.",
      "All computers must be in a Windows 2000 Server or later domain.",
      "Internet Explorer security settings must be configured to enable Integrated Windows authentication. By default, Integrated Windows authentication is not enabled in Internet Explorer 6. To enable the browser to respond to a negotiate challenge and perform Kerberos authentication, select the Enable Integrated Windows Authentication check box in the Security section of the Advanced tab of the Internet Options menu, and then restart the browser.",
      "If you use a custom service account to run your ASP.NET application, you a Service Principal Name (SPN) must be registered for the account in Active Directory."
    ],
    "p": [
      "This How to shows you how to configure and use Windows authentication in an ASP.NET Web application. Windows authentication is the preferred approach whenever users are a part of your Windows domain. This approach enables you to use an existing identity store such as your corporate Active Directory, and does not transmit passwords over the network. This How to also shows various impersonation options available with Windows authentication and how to configure and use them with ASP.NET applications. It also explains how to use the various authorization mechanisms including file authorization, URL authorization, and role-based authorization, with Windows authentication.",
      "ASP.NET supports various authentication modes, including Windows authentication, forms authentication, Passport authentication, and custom authentication. You should choose Windows authentication if your user accounts are maintained by a Microsoft® Windows&nbsp;NT® domain controller or within Microsoft Windows® Active Directory™ and there are no firewall issues.",
      "The main benefit of using Windows authentication is that it can be coupled with IIS authentication so that you don't have to write any custom code. Compared to other authentication mechanisms, Windows authentication does not pass the user credentials over the wire. Windows authentication also provides a seamless user experience. Therefore Windows authentication should be used wherever possible.",
      "When you configure ASP.NET for Windows authentication, it can be coupled with IIS authentication where IIS authenticates your application's users by using Basic authentication, Integrated Windows authentication, Digest authentication, or Client Certificate authentication. Both Integrated Windows authentication and Client Certificate authentication provide strong authentication, but Integrated Windows authentication is recommended unless you have a PKI infrastructure and your clients have certificates.",
      "IIS authenticates the user and passes a Windows token for the authenticated user to ASP.NET along with each Web request.",
      "You can use Windows authentication with ASP.NET in a number of ways:",
      "Regardless of impersonation, you can authorize users and control access to resources and business operations by using the following mechanisms:",
      "To configure your application to use Integrated Windows authentication, you must use IIS Manager to configure your application's virtual directory security settings and you must configure the <authentication> element in the Web.config file.",
      "In your application's Web.config file or in the machine-level Web.config file, ensure that the authentication mode is set to Windows as shown here.",
      "By using impersonation, ASP.NET applications can execute code or access resources with the identity of the authenticated user or a fixed Windows identity. Standard impersonate-level impersonation tokens that are usually created when you enable impersonation allow you to access local resources only. To be able to access remote network resources, you require a delegate-level token. To generate a delegate-level token when you impersonate, you need to use Kerberos authentication and your process account needs to be marked as trusted for delegation in Active Directory.",
      "By default, ASP.NET applications are not configured for impersonation. You can confirm this by reviewing the identity settings in the Machine.config.comments file located in the following folder: %windir%\\Microsoft.Net\\Framework\\{Version}\\CONFIG.",
      "The <identity> element is configured as follows. Note that impersonation is disabled.",
      "When you configure your application for impersonation, an impersonation token for the authenticated user is attached to the Web request thread. As a result, all local resource access is performed using the caller's identity.",
      "To configure ASP.NET to use Windows authentication with impersonation, use the following configuration.",
      "The resulting impersonation token and associated logon session does not have network credentials. If you access this Web site from a browser while logged onto a different machine in the same domain and the Web site attempts to access network resources, you end up with a null session on the remote server and the resource access will fail. To access remote resources, you need delegation.",
      "You can configure ASP.NET to impersonate a fixed identity. You specify the credentials of the impersonated identity on the <identity> element in the Web.config file as shown here.",
      "If you specify credentials on the <identity> element, make sure they are stored in encrypted format by using the Aspnet_regiis.exe tool.",
      "If you only require an impersonated identity to access specific resources or perform specific operations and can use your process identity the rest of the time, you can use programmatic impersonation to temporarily enable impersonation.",
      "This procedure shows you how to temporarily impersonate the original caller by using the Windows token that is passed by IIS to your Web application and is available through the HttpContext object.",
      "When you use Windows authentication to authenticate users, you can use the following authorization options:",
      "Requests for file types mapped to the ASP.NET ISAPI extension are checked by the FileAuthorizationModule. When you use Windows authentication, the authenticated user's Windows token is compared against the ACL attached to the requested file. For static files types that are not mapped to the ASP.NET ISAPI extension, IIS performs access checks again by using the authenticated user's access token and the ACL attached to the file. You need to configure appropriate ACLs on the file types directly requested by the user and on the files and other Windows resources accessed by your application, as described here:",
      "When you use Windows authentication, the UrlAuthorizationModule checks the access to requested files and folders based on the authenticated caller's identity. This is true regardless of whether your application is configured for impersonation.",
      "To configure URL authorization, add an <authorization> element to the Web.config file, and specify the domain name and user or group name when configuring <deny> and <allow> elements, as shown here.",
      "When you use Windows authentication, user names take the form domainName\\userName. Windows groups are used as roles and they take the form domainName\\windowsGroupName. Well known local groups such as Administrators and Users are referenced by using the \"BUILTIN\" prefix as shown here.",
      "With Windows authentication, the user's Windows group membership can be used to determine the role membership and Window groups become the roles. You can perform role-based authorization in code either by performing explicit role checks (User.IsInRole or Roles.IsUserInRole), or by using PrincipalPermission demands. You can do the latter either imperatively in the body of a method or declaratively by adding attributes to your classes and methods.",
      "To use the role manager API, you must enable role manager. With Windows authentication, you can use the built-in AspNetWindowsTokenRoleProvider, which uses Windows groups as roles. To enable role manager and select this provider, add the following configuration to your Web.config file.",
      "When you use Windows authentication, you can use alternate role providers, such as the AuthorizationStoreRoleProvider and SqlRoleProvider, if you need to store roles in alternate role stores such as Authorization Manager policy stores or SQL Server databases.",
      "The advantage of this approach is that the security requirements of your methods are visible to tools such as Permview.exe.",
      "When you configure IIS for Integrated Windows authentication, it uses either NTLM or Kerberos authentication, depending on the configuration of client and servers. Kerberos authentication offers a performance benefit and also supports additional features such as the ability to use delegation and mutual authentication.",
      "To register an SPN, use the Setspn.exe utility by running the following commands from a command prompt:",
      "setspn -A HTTP/webservername domain\\customAccountName",
      "setspn -A HTTP/webservername.fullyqualifieddomainname domain\\customAccountName",
      "Note that you cannot have multiple Web applications with the same host name if you want them to have multiple identities and to use Kerberos authentication. This is an HTTP limitation, not a Kerberos limitation. The workaround is to have multiple Domain Name System (DNS) names for the same host, and then start the URLs for each Web application with a different DNS name. For example, you would use http://app1 and http://app2 instead of http://site/app1 and http://site/app2.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "div": [
      "Objectives",
      "Overview",
      "Configuring Windows Authentication",
      "Using Impersonation with Windows Authentication",
      "Authorizing Windows Users",
      "Kerberos Authentication",
      "Additional Resources",
      "...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "<identity impersonate=\"false\" userName=\"\" password=\"\" />",
      "...&nbsp;<system.web>&nbsp;&nbsp;&nbsp; ...&nbsp;&nbsp;&nbsp; <authentication mode=\"Windows\"/>&nbsp;&nbsp;&nbsp; <identity impersonate=\"true\"/>&nbsp;&nbsp;&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp;&nbsp;&nbsp; <identity impersonate=\"true\" userName=\"<domain>\\<UserName>\" password=\"<password>\"/>&nbsp;&nbsp;&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp; <identity impersonate=\"false\"/>&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "IIdentity WinId= HttpContext.Current.User.Identity;WindowsIdentity wi = (WindowsIdentity)WinId;",
      "// Temporarily impersonate the original user.WindowsImpersonationContext wic = wi.Impersonate();try{&nbsp; // Access resources while impersonating.}catch{&nbsp; // Prevent exceptions propagating.}finally{&nbsp; // Revert impersonation.&nbsp; wic.Undo();}",
      "<authorization>&nbsp;<deny users=\"DomainName\\UserName\" />&nbsp;<allow roles=\"DomainName\\WindowsGroup\" /></authorization>",
      "<authorization>&nbsp; <allow users=\"DomainName\\Bob, DomainName\\Mary\" />&nbsp; <allow roles=\"BUILTIN\\Administrators, DomainName\\Manager\" />&nbsp; <deny users=\"*\" /></authorization>",
      "if(User.IsInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.",
      "if(Roles.IsUserInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.",
      "<roleManager enabled=\"true\"             defaultProvider=\"AspNetWindowsTokenRoleProvider\"/>",
      "using System.Security.Permissions;...// Imperative checks PrincipalPermission permCheckUser = new PrincipalPermission(@\"Domain\\Bob\", null);permCheckUser.Demand();",
      "using System.Security.Permissions;... [PrincipalPermission(SecurityAction.Demand,Role=@\"Builtin\\Administrators\")]"
    ],
    "h2": [
      "Impersonation Options",
      "Authorization Options",
      "To configure Windows authentication",
      "Impersonating the Original Caller with Windows Authentication",
      "Impersonating a Fixed Identity with Windows Authentication",
      "Impersonating the Original Caller Programmatically",
      "Configuring Windows ACLs for File Authorization",
      "Configuring URL Authorization",
      "Checking Role Membership in Code",
      "To use Kerberos authentication"
    ],
    "b": [
      "Windows authentication without impersonation.",
      "Windows authentication with impersonation.",
      "Windows authentication with fixed-identity impersonation.",
      "URL authorization.",
      "authorization",
      "IPrincipal",
      "HttpContext.User",
      "WindowsPrincipal",
      "WindowsIdentity",
      "Note",
      "File authorization.",
      "FileAuthorizationModule",
      "FileAuthorizationModule",
      "FileAuthorizationModule",
      "Note",
      "",
      "Role checks.",
      "User.IsInRole",
      "Roles.IsUserInRole",
      "authentication",
      "Properties",
      "Directory Security",
      "Anonymous access and authentication control",
      "Edit",
      "Anonymous access",
      "Integrated Windows authentication",
      "identity",
      "identity",
      "identity",
      "Note",
      "identity",
      "",
      "HttpContext",
      "false",
      "identity",
      "FileAuthorizationModule",
      "UrlAuthorizationModule",
      "Note",
      "",
      "FileAuthorizationModule",
      "For",
      "resources directly requested by the user.",
      "For resources that the application accesses.",
      "UrlAuthorizationModule",
      "authorization",
      "deny",
      "allow",
      "User.IsInRole",
      "Roles.IsUserInRole",
      "PrincipalPermission",
      "IPrincipal",
      "User",
      "",
      "Roles.IsUserInRole",
      "AspNetWindowsTokenRoleProvider",
      "AuthorizationStoreRoleProvider",
      "SqlRoleProvider",
      "PrincipalPermission",
      "Demand",
      "PrincipalPermission.Demand",
      "PrincipalPermissionAttribute",
      "Enable Integrated Windows Authentication",
      "Security",
      "Advanced",
      "Internet Options",
      "setspn -A HTTP/webservername domain\\customAccountName",
      "setspn -A HTTP/webservername.fullyqualifieddomainname domain\\customAccountName"
    ],
    "blockquote": [
      "Note&nbsp;&nbsp;&nbsp;ASP.NET version 2.0 on Windows Server 2003 protects all files in a particular directory, even those not mapped to ASP.NET such as .html, .gif, and .jpg files.",
      "Note&nbsp;&nbsp;&nbsp;Impersonation is not required for file authorization.",
      "Note&nbsp;&nbsp;&nbsp;Specifying credentials on the <identity> element should be avoided where possible. If you need a specific identity to access resources, and your application runs on Windows Server 2003, use a custom application pool with a custom service account identity instead. This approach avoids impersonation.",
      "Note&nbsp;&nbsp;&nbsp;File authorization requires Windows authentication. The other authorization options are available with other authentication mechanisms."
    ],
    "ol": [
      "Start Internet Information Services (IIS). \n    Right-click your application's virtual directory, and then click Properties. \n    Click the Directory Security tab. \n    Under Anonymous access and authentication control, click Edit. \n    Make sure the Anonymous access check box is not selected and that Integrated Windows authentication is the only selected check box.",
      "Check that your ASP.NET application is not configured for impersonation by ensuring that impersonate is set to false on the <identity> element in the Web.config file. ...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp; <identity impersonate=\"false\"/>&nbsp; ...&nbsp;</system.web>&nbsp;...  \n    Obtain the authenticated user's Windows token. IIdentity WinId= HttpContext.Current.User.Identity;WindowsIdentity wi = (WindowsIdentity)WinId;  \n    Use the authenticated user's Windows token to temporarily impersonate the original user and remove the impersonation token from the current thread when you are finished impersonating. // Temporarily impersonate the original user.WindowsImpersonationContext wic = wi.Impersonate();try{&nbsp; // Access resources while impersonating.}catch{&nbsp; // Prevent exceptions propagating.}finally{&nbsp; // Revert impersonation.&nbsp; wic.Undo();}"
    ],
    "pre": [
      "...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "<identity impersonate=\"false\" userName=\"\" password=\"\" />",
      "...&nbsp;<system.web>&nbsp;&nbsp;&nbsp; ...&nbsp;&nbsp;&nbsp; <authentication mode=\"Windows\"/>&nbsp;&nbsp;&nbsp; <identity impersonate=\"true\"/>&nbsp;&nbsp;&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp;&nbsp;&nbsp; <identity impersonate=\"true\" userName=\"<domain>\\<UserName>\" password=\"<password>\"/>&nbsp;&nbsp;&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "...&nbsp;<system.web>&nbsp; ...&nbsp; <authentication mode=\"Windows\"/>&nbsp; <identity impersonate=\"false\"/>&nbsp; ...&nbsp;</system.web>&nbsp;...",
      "IIdentity WinId= HttpContext.Current.User.Identity;WindowsIdentity wi = (WindowsIdentity)WinId;",
      "// Temporarily impersonate the original user.WindowsImpersonationContext wic = wi.Impersonate();try{&nbsp; // Access resources while impersonating.}catch{&nbsp; // Prevent exceptions propagating.}finally{&nbsp; // Revert impersonation.&nbsp; wic.Undo();}",
      "<authorization>&nbsp;<deny users=\"DomainName\\UserName\" />&nbsp;<allow roles=\"DomainName\\WindowsGroup\" /></authorization>",
      "<authorization>&nbsp; <allow users=\"DomainName\\Bob, DomainName\\Mary\" />&nbsp; <allow roles=\"BUILTIN\\Administrators, DomainName\\Manager\" />&nbsp; <deny users=\"*\" /></authorization>",
      "if(User.IsInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.",
      "if(Roles.IsUserInRole(@\"DomainName\\Manager\"))&nbsp; // Perform restricted operationelse&nbsp; // Return unauthorized access error.",
      "<roleManager enabled=\"true\"             defaultProvider=\"AspNetWindowsTokenRoleProvider\"/>",
      "using System.Security.Permissions;...// Imperative checks PrincipalPermission permCheckUser = new PrincipalPermission(@\"Domain\\Bob\", null);permCheckUser.Demand();",
      "using System.Security.Permissions;... [PrincipalPermission(SecurityAction.Demand,Role=@\"Builtin\\Administrators\")]"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "h3": [
      "To temporarily impersonate the authenticated user",
      "To use explicit role checks:",
      "To use PrincipalPermission demands"
    ],
    "i": [
      "domainName\\userName",
      "domainName\\windowsGroupName",
      "domainName\\userName",
      "domainName\\groupName"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET </li>\n    <li>Internet Information Services (IIS) 6.0 </li>\n  </ul>\n  <h1>Summary</h1>\n  <p>This How to shows you how to configure and use Windows authentication in an ASP.NET Web application. Windows authentication is the preferred approach whenever users are a part of your Windows domain. This approach enables you to use an existing identity store such as your corporate Active Directory, and does not transmit passwords over the network. This How to also shows various impersonation options available with Windows authentication and how to configure and use them with ASP.NET applications. It also explains how to use the various authorization mechanisms including file authorization, URL authorization, and role-based authorization, with Windows authentication.</p>\n  <h1>Contents</h1>\n  <ul>\n    <li>\n      <div>Objectives</div>\n    </li>\n    <li>\n      <div>Overview</div>\n    </li>\n    <li>\n      <div>Configuring Windows Authentication</div>\n    </li>\n    <li>\n      <div>Using Impersonation with Windows Authentication </div>\n    </li>\n    <li>\n      <div>Authorizing Windows Users</div>\n    </li>\n    <li>\n      <div>Kerberos Authentication</div>\n    </li>\n    <li>\n      <div>Additional Resources</div>\n    </li>\n  </ul>\n  <h1>Objectives</h1>\n  <ul>\n    <li>Learn how to configure your Web application for using Windows authentication. </li>\n    <li>Use impersonation with Windows authentication in ASP.NET applications. </li>\n    <li>Authorize users authenticated with Windows authentication. </li>\n  </ul>\n  <h1>Overview</h1>\n  <p>ASP.NET supports various authentication modes, including Windows authentication, forms authentication, Passport authentication, and custom authentication. You should choose Windows authentication if your user accounts are maintained by a Microsoft® Windows&amp;nbsp;NT® domain controller or within Microsoft Windows® Active Directory™ and there are no firewall issues. </p>\n  <p>The main benefit of using Windows authentication is that it can be coupled with IIS authentication so that you don't have to write any custom code. Compared to other authentication mechanisms, Windows authentication does not pass the user credentials over the wire. Windows authentication also provides a seamless user experience. Therefore Windows authentication should be used wherever possible. </p>\n  <p>When you configure ASP.NET for Windows authentication, it can be coupled with IIS authentication where IIS authenticates your application's users by using Basic authentication, Integrated Windows authentication, Digest authentication, or Client Certificate authentication. Both Integrated Windows authentication and Client Certificate authentication provide strong authentication, but Integrated Windows authentication is recommended unless you have a PKI infrastructure and your clients have certificates. </p>\n  <p>IIS authenticates the user and passes a Windows token for the authenticated user to ASP.NET along with each Web request. </p>\n  <h2>Impersonation Options</h2>\n  <p>You can use Windows authentication with ASP.NET in a number of ways: </p>\n  <ul>\n    <li>\n      <b>Windows authentication without impersonation.</b> This is the default setting. ASP.NET performs operations and accesses resources by using your application's process identity, which by default is the Network Service account on Windows Server 2003. </li>\n    <li>\n      <b>Windows authentication with impersonation. </b>With this approach, you impersonate the authenticated user and use that identity to perform operations and access resources. </li>\n    <li>\n      <b>Windows authentication with fixed-identity impersonation.</b> With this approach, you impersonate a fixed Windows account to access resources using a specific identity. On Windows Server 2003, you should avoid this impersonation approach; instead, use a custom application pool with a custom service identity. </li>\n  </ul>\n  <h2>Authorization Options</h2>\n  <p>Regardless of impersonation, you can authorize users and control access to resources and business operations by using the following mechanisms: </p>\n  <ul>\n    <li>\n      <b>URL authorization. </b>You use URL authorization to control access to requested files and folders based on the request URL. You configure URL authorization by using an &lt;<b>authorization</b>&gt; element in the Web.config file to control which users and groups of users should have access to requested resources. Authorization is based on the <b>IPrincipal</b> object stored in <b>HttpContext.User</b>. With Windows authentication, this object is of type <b>WindowsPrincipal</b> and it contains a <b>WindowsIdentity</b> object that holds the Windows token for the authenticated user. <blockquote><b>Note</b>&amp;nbsp;&amp;nbsp;&amp;nbsp;ASP.NET version 2.0 on Windows Server 2003 protects all files in a particular directory, even those not mapped to ASP.NET such as .html, .gif, and .jpg files.</blockquote></li>\n    <li>\n      <b>File authorization.</b> For file types mapped by IIS to the ASP.NET ISAPI extension (Aspnet_isapi.dll), automatic access checks are performed using the authenticated user's Windows access token against the access control list (ACL) attached to the requested ASP.NET file. The <b>FileAuthorizationModule</b> class only performs access checks against the requested file. For example, if you request Default.aspx and it contains an embedded user control (Usercontrol.ascx), which in turn includes an image tag (pointing to Image.gif), the <b>FileAuthorizationModule</b> performs an access check for Default.aspx and Usercontrol.ascx, because these file types are mapped by IIS to the ASP.NET ISAPI extension. The <b>FileAuthorizationModule</b> does not perform a check for Image.gif, because this is a static file handled internally by IIS. However, because access checks for static files are performed by IIS, the authenticated user must still be granted read permission to the file with an appropriately configured ACL. <blockquote><b>Note</b>&amp;nbsp;&amp;nbsp;&amp;nbsp;Impersonation is not required for file authorization.<b></b></blockquote></li>\n    <li>\n      <b>Role checks. </b>You can check the authenticated user's role membership by using methods such as <b>User.IsInRole</b> and <b>Roles.IsUserInRole</b>. This allows you to perform fine-grained authorization logic. To use the Roles API, you need to enable role manager for your application. You can also use principal permission demands and use class-level and method-level declarative security to control which users should be allowed to call classes and methods. </li>\n  </ul>\n  <h1>Configuring Windows Authentication</h1>\n  <p>To configure your application to use Integrated Windows authentication, you must use IIS Manager to configure your application's virtual directory security settings and you must configure the &lt;<b>authentication</b>&gt; element in the Web.config file.</p>\n  <h2>To configure Windows authentication </h2>\n  <ol>\n    <li>Start Internet Information Services (IIS). </li>\n    <li>Right-click your application's virtual directory, and then click <b>Properties</b>. </li>\n    <li>Click the <b>Directory Security</b> tab. </li>\n    <li>Under <b>Anonymous access and authentication control</b>, click <b>Edit</b>. </li>\n    <li>Make sure the <b>Anonymous access</b> check box is not selected and that <b>Integrated Windows authentication</b> is the only selected check box. </li>\n  </ol>\n  <p>In your application's Web.config file or in the machine-level Web.config file, ensure that the authentication mode is set to Windows as shown here.</p>\n  <div>\n    <pre>...<br />&amp;nbsp;&lt;system.web&gt;<br />&amp;nbsp; ...<br />&amp;nbsp; &lt;authentication mode=\"Windows\"/&gt;<br />&amp;nbsp; ...<br />&amp;nbsp;&lt;/system.web&gt;<br />&amp;nbsp;...  </pre>\n  </div>\n  <h1>Using Impersonation with Windows Authentication </h1>\n  <p>By using impersonation, ASP.NET applications can execute code or access resources with the identity of the authenticated user or a fixed Windows identity. Standard impersonate-level impersonation tokens that are usually created when you enable impersonation allow you to access local resources only. To be able to access remote network resources, you require a delegate-level token. To generate a delegate-level token when you impersonate, you need to use Kerberos authentication and your process account needs to be marked as trusted for delegation in Active Directory. </p>\n  <p>By default, ASP.NET applications are not configured for impersonation. You can confirm this by reviewing the identity settings in the Machine.config.comments file located in the following folder: %windir%\\Microsoft.Net\\Framework\\{Version}\\CONFIG.</p>\n  <p>The &lt;<b>identity</b>&gt; element is configured as follows. Note that impersonation is disabled.</p>\n  <div>\n    <pre>&lt;identity impersonate=\"false\" userName=\"\" password=\"\" /&gt;  </pre>\n  </div>\n  <h2>Impersonating the Original Caller with Windows Authentication</h2>\n  <p>When you configure your application for impersonation, an impersonation token for the authenticated user is attached to the Web request thread. As a result, all local resource access is performed using the caller's identity. </p>\n  <p>To configure ASP.NET to use Windows authentication with impersonation, use the following configuration.</p>\n  <div>\n    <pre>...<br />&amp;nbsp;&lt;system.web&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; ...<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;authentication mode=\"Windows\"/&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;identity impersonate=\"true\"/&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; ...<br />&amp;nbsp;&lt;/system.web&gt;<br />&amp;nbsp;...  </pre>\n  </div>\n  <p>The resulting impersonation token and associated logon session does not have network credentials. If you access this Web site from a browser while logged onto a different machine in the same domain and the Web site attempts to access network resources, you end up with a null session on the remote server and the resource access will fail. To access remote resources, you need delegation. </p>\n  <h2>Impersonating a Fixed Identity with Windows Authentication </h2>\n  <p>You can configure ASP.NET to impersonate a fixed identity. You specify the credentials of the impersonated identity on the &lt;<b>identity</b>&gt; element in the Web.config file as shown here.</p>\n  <div>\n    <pre>...<br />&amp;nbsp;&lt;system.web&gt;<br />&amp;nbsp; ...<br />&amp;nbsp; &lt;authentication mode=\"Windows\"/&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;identity impersonate=\"true\" userName=\"&lt;domain&gt;\\&lt;UserName&gt;\" password=\"&lt;password&gt;\"/&gt;<br />&amp;nbsp;&amp;nbsp;&amp;nbsp; ...<br />&amp;nbsp;&lt;/system.web&gt;<br />&amp;nbsp;...<br /></pre>\n  </div>\n  <p>If you specify credentials on the &lt;<b>identity</b>&gt; element, make sure they are stored in encrypted format by using the Aspnet_regiis.exe tool. </p>\n  <blockquote>\n    <b>Note</b>&amp;nbsp;&amp;nbsp;&amp;nbsp;Specifying credentials on the &lt;<b>identity</b>&gt; element should be avoided where possible. If you need a specific identity to access resources, and your application runs on Windows Server 2003, use a custom application pool with a custom service account identity instead. This approach avoids impersonation.<b></b></blockquote>\n  <h2>Impersonating the Original Caller Programmatically</h2>\n  <p>If you only require an impersonated identity to access specific resources or perform specific operations and can use your process identity the rest of the time, you can use programmatic impersonation to temporarily enable impersonation.</p>\n  <h3>To temporarily impersonate the authenticated user</h3>\n  <p>This procedure shows you how to temporarily impersonate the original caller by using the Windows token that is passed by IIS to your Web application and is available through the <b>HttpContext</b> object. </p>\n  <ol>\n    <li>Check that your ASP.NET application is not configured for impersonation by ensuring that impersonate is set to <b>false</b> on the &lt;<b>identity</b>&gt; element in the Web.config file. <div><pre>...<br />&amp;nbsp;&lt;system.web&gt;<br />&amp;nbsp; ...<br />&amp;nbsp; &lt;authentication mode=\"Windows\"/&gt;<br />&amp;nbsp; &lt;identity impersonate=\"false\"/&gt;<br />&amp;nbsp; ...<br />&amp;nbsp;&lt;/system.web&gt;<br />&amp;nbsp;...  </pre></div></li>\n    <li>Obtain the authenticated user's Windows token. <div><pre>IIdentity WinId= HttpContext.Current.User.Identity;WindowsIdentity wi = (WindowsIdentity)WinId;  </pre></div></li>\n    <li>Use the authenticated user's Windows token to temporarily impersonate the original user and remove the impersonation token from the current thread when you are finished impersonating. <div><pre>// Temporarily impersonate the original user.<br />WindowsImpersonationContext wic = wi.Impersonate();<br />try<br />{<br />&amp;nbsp; // Access resources while impersonating.<br />}<br />catch<br />{<br />&amp;nbsp; // Prevent exceptions propagating.<br />}<br />finally<br />{<br />&amp;nbsp; // Revert impersonation.<br />&amp;nbsp; wic.Undo();<br />}  </pre></div></li>\n  </ol>\n  <h1>Authorizing Windows Users</h1>\n  <p>When you use Windows authentication to authenticate users, you can use the following authorization options: </p>\n  <ul>\n    <li>File authorization provided by the <b>FileAuthorizationModule</b>. </li>\n    <li>URL authorization provided by the <b>UrlAuthorizationModule</b>. </li>\n    <li>Role-based authorization. </li>\n  </ul>\n  <blockquote>\n    <b>Note</b>&amp;nbsp;&amp;nbsp;&amp;nbsp;File authorization requires Windows authentication. The other authorization options are available with other authentication mechanisms.<b></b></blockquote>\n  <h2>Configuring Windows ACLs for File Authorization</h2>\n  <p>Requests for file types mapped to the ASP.NET ISAPI extension are checked by the <b>FileAuthorizationModule</b>. When you use Windows authentication, the authenticated user's Windows token is compared against the ACL attached to the requested file. For static files types that are not mapped to the ASP.NET ISAPI extension, IIS performs access checks again by using the authenticated user's access token and the ACL attached to the file. You need to configure appropriate ACLs on the file types directly requested by the user and on the files and other Windows resources accessed by your application, as described here: </p>\n  <ul>\n    <li>\n      <b>For</b>\n      <b>resources directly requested by the user.</b> For resources such as Web pages (.aspx files) and Web services (.asmx files) directly requested by the user, the authenticated user's Windows access token is compared against the Windows ACL attached to the file. Make sure that the authenticated user is allowed to access the appropriate Web pages and Web services. </li>\n    <li>\n      <b>For resources that the application accesses.</b> If impersonation is enabled, resources such as files, databases, registry keys, and Active Directory objects are accessed by using the impersonated identity. Otherwise, your application's process identity, such as the Network Service account, is used for resource access. For the resource access attempt to succeed, the ACL attached to these resources must be suitably configured to allow the process account or impersonated identity the access it requests, such as read access, or write access. </li>\n  </ul>\n  <h2>Configuring URL Authorization</h2>\n  <p>When you use Windows authentication, the <b>UrlAuthorizationModule</b> checks the access to requested files and folders based on the authenticated caller's identity. This is true regardless of whether your application is configured for impersonation.</p>\n  <p>To configure URL authorization, add an &lt;<b>authorization</b>&gt; element to the Web.config file, and specify the domain name and user or group name when configuring &lt;<b>deny</b>&gt; and &lt;<b>allow</b>&gt; elements, as shown here.</p>\n  <div>\n    <pre>&lt;authorization&gt;<br />&amp;nbsp;&lt;deny users=\"DomainName\\UserName\" /&gt;<br />&amp;nbsp;&lt;allow roles=\"DomainName\\WindowsGroup\" /&gt;<br />&lt;/authorization&gt;  </pre>\n  </div>\n  <p>When you use Windows authentication, user names take the form <i>domainName\\userName</i>. Windows groups are used as roles and they take the form <i>domainName\\windowsGroupName</i>. Well known local groups such as Administrators and Users are referenced by using the \"BUILTIN\" prefix as shown here. </p>\n  <div>\n    <pre>&lt;authorization&gt;<br />&amp;nbsp; &lt;allow users=\"DomainName\\Bob, DomainName\\Mary\" /&gt;<br />&amp;nbsp; &lt;allow roles=\"BUILTIN\\Administrators, DomainName\\Manager\" /&gt;<br />&amp;nbsp; &lt;deny users=\"*\" /&gt;<br />&lt;/authorization&gt;  </pre>\n  </div>\n  <h2>Checking Role Membership in Code</h2>\n  <p>With Windows authentication, the user's Windows group membership can be used to determine the role membership and Window groups become the roles. You can perform role-based authorization in code either by performing explicit role checks (<b>User.IsInRole</b> or <b>Roles.IsUserInRole</b>), or by using <b>PrincipalPermission</b> demands. You can do the latter either imperatively in the body of a method or declaratively by adding attributes to your classes and methods.</p>\n  <h3>To use explicit role checks: </h3>\n  <ul>\n    <li>Use the <b>IPrincipal</b> interface of the <b>User</b> object attached to the current HTTP request. This approach works with ASP.NET versions 1.0, 1.1. and 2.0. When using Windows authentication, make sure to use the <i>domainName\\userName</i> format for the user name and the format <i>domainName\\groupName</i> for the group name.<b></b><div><pre>if(User.IsInRole(@\"DomainName\\Manager\"))<br />&amp;nbsp; // Perform restricted operation<br />else<br />&amp;nbsp; // Return unauthorized access error.  </pre></div></li>\n    <li>Alternatively, use role manager APIs introduced in ASP.NET version 2.0, which supports a similar <b>Roles.IsUserInRole</b> method, as shown here. <div><pre>if(Roles.IsUserInRole(@\"DomainName\\Manager\"))<br />&amp;nbsp; // Perform restricted operation<br />else<br />&amp;nbsp; // Return unauthorized access error.  </pre></div><p>To use the role manager API, you must enable role manager. With Windows authentication, you can use the built-in <b>AspNetWindowsTokenRoleProvider</b>, which uses Windows groups as roles. To enable role manager and select this provider, add the following configuration to your Web.config file. </p><div><pre>&lt;roleManager enabled=\"true\"<br />             defaultProvider=\"AspNetWindowsTokenRoleProvider\"/&gt;  </pre></div><p>When you use Windows authentication, you can use alternate role providers, such as the <b>AuthorizationStoreRoleProvider</b> and <b>SqlRoleProvider</b>, if you need to store roles in alternate role stores such as Authorization Manager policy stores or SQL Server databases. </p></li>\n  </ul>\n  <h3>To use PrincipalPermission demands </h3>\n  <ul>\n    <li>Construct a <b>PrincipalPermission</b> object, and then call its <b>Demand</b> method to perform authorization. </li>\n    <li>For fine grained authorization, call <b>PrincipalPermission.Demand</b> within code, as shown here. <div><pre>using System.Security.Permissions;<br />...<br />// Imperative checks <br />PrincipalPermission permCheckUser = new PrincipalPermission(@\"Domain\\Bob\", null);<br />permCheckUser.Demand();  </pre></div></li>\n    <li>Alternatively, you can decorate your classes or methods with the <b>PrincipalPermissionAttribute</b>, as shown here. <div><pre>using System.Security.Permissions;<br />...<br /> [PrincipalPermission(SecurityAction.Demand,Role=@\"Builtin\\Administrators\")]  </pre></div><p>The advantage of this approach is that the security requirements of your methods are visible to tools such as Permview.exe. </p></li>\n  </ul>\n  <h1>Kerberos Authentication</h1>\n  <p>When you configure IIS for Integrated Windows authentication, it uses either NTLM or Kerberos authentication, depending on the configuration of client and servers. Kerberos authentication offers a performance benefit and also supports additional features such as the ability to use delegation and mutual authentication.</p>\n  <h2>To use Kerberos authentication </h2>\n  <ul>\n    <li>All servers must be running Windows 2000 Server or later. </li>\n    <li>Client computers must be running Internet Explorer 5.5 or later. </li>\n    <li>All computers must be in a Windows 2000 Server or later domain. </li>\n    <li>Internet Explorer security settings must be configured to enable Integrated Windows authentication. By default, Integrated Windows authentication is not enabled in Internet Explorer 6. To enable the browser to respond to a negotiate challenge and perform Kerberos authentication, select the <b>Enable Integrated Windows Authentication</b> check box in the <b>Security</b> section of the <b>Advanced</b> tab of the <b>Internet Options</b> menu, and then restart the browser. </li>\n    <li>If you use a custom service account to run your ASP.NET application, you a Service Principal Name (SPN) must be registered for the account in Active Directory. </li>\n  </ul>\n  <p>To register an SPN, use the Setspn.exe utility by running the following commands from a command prompt:</p>\n  <p>\n    <b>setspn -A HTTP/webservername domain\\customAccountName</b>\n  </p>\n  <p>\n    <b>setspn -A HTTP/webservername.fullyqualifieddomainname domain\\customAccountName</b>\n  </p>\n  <p>Note that you cannot have multiple Web applications with the same host name if you want them to have multiple identities and to use Kerberos authentication. This is an HTTP limitation, not a Kerberos limitation. The workaround is to have multiple Domain Name System (DNS) names for the same host, and then start the URLs for each Web application with a different DNS name. For example, you would use http://app1 and http://app2 instead of http://site/app1 and http://site/app2.</p>\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance.</p>"
}