{
  "id": "5e94df22-cb93-4088-ad58-ceb4ef7b62f8",
  "checksum": "72c01ac2dcf984c74599eb382394e922a3897e6c",
  "words": {
    "2011": [
      "p"
    ],
    "description": [
      "h2"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "software": [
      "p",
      "p"
    ],
    "does": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "not": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "perform": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "authorization": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "em",
      "ul",
      "li",
      "title"
    ],
    "check": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "when": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "actor": [
      "p"
    ],
    "attempts": [
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "access": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "em",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "resource": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "action": [
      "p"
    ],
    "assuming": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "with": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "given": [
      "p",
      "p"
    ],
    "identity": [
      "p"
    ],
    "is": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "process": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "determining": [
      "p"
    ],
    "whether": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "can": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "based": [
      "p"
    ],
    "on": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "user's": [
      "p"
    ],
    "privileges": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "any": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "permissions": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "other": [
      "p"
    ],
    "access-control": [
      "p"
    ],
    "specifications": [
      "p"
    ],
    "apply": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "control": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "em",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "checks": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "applied": [
      "p"
    ],
    "users": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "able": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "data": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "actions": [
      "p"
    ],
    "they": [
      "p"
    ],
    "should": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "be": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "allowed": [
      "p",
      "p"
    ],
    "this": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "lead": [
      "p",
      "p"
    ],
    "wide": [
      "p"
    ],
    "range": [
      "p"
    ],
    "problems": [
      "p",
      "p"
    ],
    "including": [
      "p"
    ],
    "information": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "h2",
      "ul",
      "li"
    ],
    "exposure": [
      "p"
    ],
    "denial": [
      "p"
    ],
    "service": [
      "p"
    ],
    "arbitrary": [
      "p"
    ],
    "code": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "execution": [
      "p"
    ],
    "discussion": [
      "h2"
    ],
    "suppose": [
      "p"
    ],
    "you're": [
      "p",
      "p"
    ],
    "hosting": [
      "p"
    ],
    "house": [
      "p"
    ],
    "party": [
      "p"
    ],
    "for": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "few": [
      "p"
    ],
    "close": [
      "p"
    ],
    "friends": [
      "p",
      "p"
    ],
    "their": [
      "p"
    ],
    "guests": [
      "p",
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "invite": [
      "p"
    ],
    "everyone": [
      "p"
    ],
    "into": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "your": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "living": [
      "p"
    ],
    "room": [
      "p"
    ],
    "but": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "while": [
      "p"
    ],
    "catching": [
      "p"
    ],
    "up": [
      "p"
    ],
    "one": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "raids": [
      "p"
    ],
    "fridge": [
      "p"
    ],
    "peeks": [
      "p"
    ],
    "medicine": [
      "p"
    ],
    "cabinet": [
      "p"
    ],
    "ponders": [
      "p"
    ],
    "what": [
      "p",
      "p"
    ],
    "you've": [
      "p"
    ],
    "hidden": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "nightstand": [
      "p"
    ],
    "next": [
      "p"
    ],
    "bed": [
      "p"
    ],
    "faces": [
      "p"
    ],
    "similar": [
      "p",
      "p"
    ],
    "could": [
      "p"
    ],
    "more": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "dire": [
      "p"
    ],
    "consequences": [
      "p"
    ],
    "if": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "don't": [
      "p"
    ],
    "ensure": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "software's": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "only": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "doing": [
      "p"
    ],
    "they're": [
      "p"
    ],
    "then": [
      "p"
    ],
    "attackers": [
      "p"
    ],
    "will": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "try": [
      "p"
    ],
    "exploit": [
      "p"
    ],
    "improper": [
      "p"
    ],
    "exercise": [
      "p"
    ],
    "unauthorized": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "functionality": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "intended": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "restricted": [
      "p"
    ],
    "may": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "citigroup": [
      "p"
    ],
    "revealed": [
      "p"
    ],
    "it": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "had": [
      "p",
      "p"
    ],
    "been": [
      "p"
    ],
    "compromised": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "hackers": [
      "p"
    ],
    "who": [
      "p"
    ],
    "were": [
      "p"
    ],
    "steal": [
      "p",
      "p"
    ],
    "details": [
      "p"
    ],
    "hundreds": [
      "p"
    ],
    "thousands": [
      "p"
    ],
    "bank": [
      "p"
    ],
    "accounts": [
      "p"
    ],
    "changing": [
      "p"
    ],
    "account": [
      "p",
      "p"
    ],
    "was": [
      "p",
      "p"
    ],
    "present": [
      "p"
    ],
    "fields": [
      "p"
    ],
    "url": [
      "p"
    ],
    "application": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "implemented": [
      "p"
    ],
    "proper&nbspauthorization": [
      "p"
    ],
    "would": [
      "p"
    ],
    "rights": [
      "p"
    ],
    "being": [
      "p"
    ],
    "specified": [
      "p"
    ],
    "earlier": [
      "p"
    ],
    "missing-authorization": [
      "p"
    ],
    "attack": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "used": [
      "p"
    ],
    "private": [
      "p"
    ],
    "ipad": [
      "p"
    ],
    "owners": [
      "p"
    ],
    "from": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "at&t": [
      "p"
    ],
    "site": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "detection": [
      "h2"
    ],
    "ways": [
      "p"
    ],
    "missing": [
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "automated": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "static": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "analysis": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "useful": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "detecting": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "commonly-used": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "idioms": [
      "ol",
      "li",
      "p"
    ],
    "tool": [
      "ol",
      "li",
      "p"
    ],
    "analyze": [
      "ol",
      "li",
      "p"
    ],
    "related": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "configuration": [
      "ol",
      "li",
      "p"
    ],
    "files": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "such": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "as.htaccess": [
      "ol",
      "li",
      "p"
    ],
    "apache": [
      "ol",
      "li",
      "p"
    ],
    "web": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "servers": [
      "ol",
      "li",
      "p"
    ],
    "detect": [
      "ol",
      "li",
      "p"
    ],
    "usage": [
      "ol",
      "li",
      "p"
    ],
    "libraries": [
      "ol",
      "li",
      "p"
    ],
    "generally": [
      "ol",
      "li",
      "p"
    ],
    "tools": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "difficulty": [
      "ol",
      "li",
      "p"
    ],
    "custom": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "schemes": [
      "ol",
      "li",
      "p"
    ],
    "addition": [
      "ol",
      "li",
      "p"
    ],
    "design": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "include": [
      "ol",
      "li",
      "p"
    ],
    "some": [
      "ol",
      "li",
      "p"
    ],
    "accessible": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "require": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "technique": [
      "ol",
      "li",
      "p"
    ],
    "detects": [
      "ol",
      "li",
      "p"
    ],
    "absence": [
      "ol",
      "li",
      "p"
    ],
    "report": [
      "ol",
      "li",
      "p"
    ],
    "false": [
      "ol",
      "li",
      "p"
    ],
    "positives": [
      "ol",
      "li",
      "p"
    ],
    "dynamic": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "find": [
      "ol",
      "li",
      "p"
    ],
    "many": [
      "ol",
      "li",
      "p"
    ],
    "all": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "li",
      "p"
    ],
    "interfaces": [
      "ol",
      "li",
      "p"
    ],
    "do": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "manual": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "required": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "determine": [
      "ol",
      "li",
      "p"
    ],
    "lack": [
      "ol",
      "li",
      "p"
    ],
    "violates": [
      "ol",
      "li",
      "p"
    ],
    "business": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "logic": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "weakness": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "detected": [
      "ol",
      "li",
      "p"
    ],
    "using": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "techniques": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "human)": [
      "ol",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "penetration": [
      "ol",
      "li",
      "p"
    ],
    "testing": [
      "ol",
      "li",
      "p"
    ],
    "threat": [
      "ol",
      "li",
      "p"
    ],
    "modeling": [
      "ol",
      "li",
      "p"
    ],
    "interactive": [
      "ol",
      "li",
      "p"
    ],
    "allow": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "tester": [
      "ol",
      "li",
      "p"
    ],
    "record": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "modify": [
      "ol",
      "li",
      "p"
    ],
    "active": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "session": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "specifically": [
      "ol",
      "li",
      "p"
    ],
    "evaluating": [
      "ol",
      "li",
      "p"
    ],
    "correctness": [
      "ol",
      "li",
      "p"
    ],
    "mechanisms": [
      "ol",
      "li",
      "p"
    ],
    "these": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "effective": [
      "ol",
      "li",
      "p"
    ],
    "than": [
      "ol",
      "li",
      "p"
    ],
    "strictly": [
      "ol",
      "li",
      "p"
    ],
    "especially": [
      "ol",
      "li",
      "p"
    ],
    "case": [
      "ol",
      "li",
      "p"
    ],
    "weaknesses": [
      "ol",
      "li",
      "p"
    ],
    "rules": [
      "ol",
      "li",
      "p"
    ],
    "however": [
      "ol",
      "li",
      "p"
    ],
    "efforts": [
      "ol",
      "li",
      "p"
    ],
    "might": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "achieve": [
      "ol",
      "li",
      "p"
    ],
    "desired": [
      "ol",
      "li",
      "p"
    ],
    "coverage": [
      "ol",
      "li",
      "p"
    ],
    "within": [
      "ol",
      "li",
      "p"
    ],
    "limited": [
      "ol",
      "li",
      "p"
    ],
    "time": [
      "ol",
      "li",
      "p"
    ],
    "constraints": [
      "ol",
      "li",
      "p"
    ],
    "htaccess": [
      "em"
    ],
    "mitigation": [
      "h2",
      "p"
    ],
    "methods": [
      "p"
    ],
    "vulnerabilities": [
      "p",
      "ul",
      "li"
    ],
    "separate": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "secure": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "public": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "areas": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "divide": [
      "ol",
      "li",
      "p"
    ],
    "anonymous": [
      "ol",
      "li",
      "p"
    ],
    "normal": [
      "ol",
      "li",
      "p"
    ],
    "privileged": [
      "ol",
      "li",
      "p"
    ],
    "administrative": [
      "ol",
      "li",
      "p"
    ],
    "reduce": [
      "ol",
      "li",
      "p"
    ],
    "surface": [
      "ol",
      "li",
      "p"
    ],
    "carefully": [
      "ol",
      "li",
      "p"
    ],
    "mapping": [
      "ol",
      "li",
      "p"
    ],
    "roles": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "role-based": [
      "ol",
      "li",
      "p"
    ],
    "rbac)": [
      "ol",
      "li",
      "p"
    ],
    "enforce": [
      "ol",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "li",
      "p"
    ],
    "boundaries\nnote": [
      "ol",
      "li",
      "p"
    ],
    "approach": [
      "ol",
      "li",
      "p"
    ],
    "protect": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "against": [
      "ol",
      "li",
      "p"
    ],
    "horizontal": [
      "ol",
      "li",
      "p"
    ],
    "ie.,": [
      "ol",
      "li",
      "p"
    ],
    "attacking": [
      "ol",
      "li",
      "p"
    ],
    "others": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p"
    ],
    "role": [
      "ol",
      "li",
      "p"
    ],
    "implement": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "different": [
      "ol",
      "li",
      "p"
    ],
    "generic": [
      "ol",
      "li",
      "p"
    ],
    "resources": [
      "ol",
      "li",
      "p"
    ],
    "connections": [
      "ol",
      "li",
      "p"
    ],
    "processes": [
      "ol",
      "li",
      "p"
    ],
    "memory": [
      "ol",
      "li",
      "p"
    ],
    "database": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "records": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "restrict": [
      "ol",
      "li",
      "p"
    ],
    "medical": [
      "ol",
      "li",
      "p"
    ],
    "specific": [
      "ol",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "li",
      "p"
    ],
    "patient": [
      "ol",
      "li",
      "p"
    ],
    "patient's": [
      "ol",
      "li",
      "p"
    ],
    "doctor": [
      "ol",
      "li",
      "p"
    ],
    "framework": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "em"
    ],
    "vetted": [
      "ol",
      "li",
      "p"
    ],
    "library": [
      "ol",
      "li",
      "p"
    ],
    "occur": [
      "ol",
      "li",
      "p"
    ],
    "provides": [
      "ol",
      "li",
      "p"
    ],
    "constructs": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "easier": [
      "ol",
      "li",
      "p"
    ],
    "avoid": [
      "ol",
      "li",
      "p"
    ],
    "consider": [
      "ol",
      "li",
      "p"
    ],
    "frameworks": [
      "ol",
      "li",
      "p"
    ],
    "thejaas": [
      "ol",
      "li",
      "p"
    ],
    "owasp": [
      "ol",
      "li",
      "p"
    ],
    "esapi": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "feature": [
      "ol",
      "li",
      "p"
    ],
    "server-side": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "security": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "controls": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "applications": [
      "ol",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li",
      "p"
    ],
    "mechanism": [
      "ol",
      "li",
      "p"
    ],
    "enforced": [
      "ol",
      "li",
      "p"
    ],
    "correctly": [
      "ol",
      "li",
      "p"
    ],
    "every": [
      "ol",
      "li",
      "p"
    ],
    "server": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "side": [
      "ol",
      "li",
      "p"
    ],
    "simply": [
      "ol",
      "li",
      "p"
    ],
    "requesting": [
      "ol",
      "li",
      "p"
    ],
    "direct": [
      "ol",
      "li",
      "p"
    ],
    "page": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "way": [
      "ol",
      "li",
      "p"
    ],
    "pages": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "containing": [
      "ol",
      "li",
      "p"
    ],
    "sensitive": [
      "ol",
      "li",
      "p"
    ],
    "cached": [
      "ol",
      "li",
      "p"
    ],
    "additionally": [
      "ol",
      "li",
      "p"
    ],
    "requests": [
      "ol",
      "li",
      "p"
    ],
    "must": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "contain": [
      "ol",
      "li",
      "p"
    ],
    "authenticated": [
      "ol",
      "li",
      "p"
    ],
    "token": [
      "ol",
      "li",
      "p"
    ],
    "associated": [
      "ol",
      "li",
      "p"
    ],
    "os": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "capabilities": [
      "ol",
      "li",
      "p"
    ],
    "operating": [
      "ol",
      "li",
      "p"
    ],
    "system": [
      "ol",
      "li",
      "p"
    ],
    "environment": [
      "ol",
      "li",
      "p"
    ],
    "define": [
      "ol",
      "li",
      "p"
    ],
    "lists": [
      "ol",
      "li",
      "p"
    ],
    "accordingly": [
      "ol",
      "li",
      "p"
    ],
    "\"default": [
      "ol",
      "li",
      "p"
    ],
    "deny\"": [
      "ol",
      "li",
      "p"
    ],
    "policy": [
      "ol",
      "li",
      "p"
    ],
    "defining": [
      "ol",
      "li",
      "p"
    ],
    "acls": [
      "ol",
      "li",
      "p"
    ],
    "jaas": [
      "em"
    ],
    "additional": [
      "h2"
    ],
    "about": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//cwe.mitre.org/top25/index.html#cwe-862": [
      "ul",
      "li",
      "a"
    ],
    "cwe-862": [
      "title"
    ]
  },
  "tags": {
    "h2": [
      "Description",
      "Discussion",
      "Detection",
      "Mitigation",
      "Additional Information"
    ],
    "p": [
      "The software does not perform an authorization check when an actor attempts to access a resource or perform an action.",
      "Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.",
      "When access control checks are not applied, users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposure, denial of service, and arbitrary code execution.",
      "Suppose you're hosting a house party for a few close friends and their guests. You invite everyone into your living room, but while you're catching up with one of your friends, one of the guests raids your fridge, peeks into your medicine cabinet, and ponders\n what you've hidden in the nightstand next to your bed. Software faces similar authorization problems that could lead to more dire consequences. If you don't ensure that your software's users are only doing what they're allowed to, then attackers will try to\n exploit your improper authorization and exercise unauthorized functionality that you only intended for restricted users. In May 2011, Citigroup revealed that it had been compromised by hackers who were able to steal details of hundreds of thousands of bank\n accounts by changing the account information that was present in fields in the URL. An application that implemented proper&nbsp;authorization would check that the user had the rights to access the account being specified. Earlier, a similar missing-authorization\n attack was used to steal private information of iPad owners from an AT&T site.",
      "The ways to check for missing authorization are:",
      "Automated Static Analysis. Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as\n.htaccess in Apache web servers, or detect the usage of commonly-used authorization libraries. Generally, automated static analysis tools have difficulty detecting custom authorization schemes. In addition, the software's design may include some functionality\n that is accessible to any user and does not require an authorization check; an automated technique that detects the absence of authorization may report false positives.",
      "Automated Dynamic Analysis. Automated dynamic analysis may find many or all possible interfaces that do not require authorization, but manual analysis is required to determine if the lack of authorization violates business logic.",
      "Manual Analysis. This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n Specifically, manual static analysis is useful for evaluating the correctness of custom authorization mechanisms. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business\n rules. However, manual efforts might not achieve desired code coverage within limited time constraints.",
      "The mitigation methods for missing authorization vulnerabilities are:",
      "Separate the site into secure and public areas. Divide your application into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access\n control (RBAC) to enforce the roles at the appropriate boundaries.\nNote that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role.",
      "Implement business logic checks. Ensure that you perform access control checks related to your business logic. These checks may be different from the access control checks that you apply to more generic resources such as files, connections,\n processes, memory, and database records. For example, a database may restrict access to medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor.",
      "Use a secure framework. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using authorization frameworks such as the\nJAAS Authorization Framework and the OWASP ESAPI Access Control feature.",
      "Use server-side security controls. For web applications, make sure that the access control mechanism is enforced correctly on every server side resource. Users should not be able to access any unauthorized functionality or information by\n simply requesting direct access to that page. One way to do this is to ensure that all pages containing sensitive information are not cached. Additionally, requests for such pages must contain an active and authenticated session token associated with a user.\n This user must have the required permissions to access that page.",
      "Use OS access control. Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a \"default deny\" policy when defining these ACLs."
    ],
    "ol": [
      "Automated Static Analysis. Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as\n.htaccess in Apache web servers, or detect the usage of commonly-used authorization libraries. Generally, automated static analysis tools have difficulty detecting custom authorization schemes. In addition, the software's design may include some functionality\n that is accessible to any user and does not require an authorization check; an automated technique that detects the absence of authorization may report false positives.\n    \n    \n      \n        Automated Dynamic Analysis. Automated dynamic analysis may find many or all possible interfaces that do not require authorization, but manual analysis is required to determine if the lack of authorization violates business logic.\n    \n    \n      \n        Manual Analysis. This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n Specifically, manual static analysis is useful for evaluating the correctness of custom authorization mechanisms. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business\n rules. However, manual efforts might not achieve desired code coverage within limited time constraints.",
      "Separate the site into secure and public areas. Divide your application into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access\n control (RBAC) to enforce the roles at the appropriate boundaries.\nNote that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role.\n    \n    \n      \n        Implement business logic checks. Ensure that you perform access control checks related to your business logic. These checks may be different from the access control checks that you apply to more generic resources such as files, connections,\n processes, memory, and database records. For example, a database may restrict access to medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor.\n    \n    \n      \n        Use a secure framework. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using authorization frameworks such as the\nJAAS Authorization Framework and the OWASP ESAPI Access Control feature.\n    \n    \n      \n        Use server-side security controls. For web applications, make sure that the access control mechanism is enforced correctly on every server side resource. Users should not be able to access any unauthorized functionality or information by\n simply requesting direct access to that page. One way to do this is to ensure that all pages containing sensitive information are not cached. Additionally, requests for such pages must contain an active and authenticated session token associated with a user.\n This user must have the required permissions to access that page.\n    \n    \n      \n        Use OS access control. Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a \"default deny\" policy when defining these ACLs."
    ],
    "li": [
      "Automated Static Analysis. Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as\n.htaccess in Apache web servers, or detect the usage of commonly-used authorization libraries. Generally, automated static analysis tools have difficulty detecting custom authorization schemes. In addition, the software's design may include some functionality\n that is accessible to any user and does not require an authorization check; an automated technique that detects the absence of authorization may report false positives.",
      "Automated Dynamic Analysis. Automated dynamic analysis may find many or all possible interfaces that do not require authorization, but manual analysis is required to determine if the lack of authorization violates business logic.",
      "Manual Analysis. This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n Specifically, manual static analysis is useful for evaluating the correctness of custom authorization mechanisms. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business\n rules. However, manual efforts might not achieve desired code coverage within limited time constraints.",
      "Separate the site into secure and public areas. Divide your application into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access\n control (RBAC) to enforce the roles at the appropriate boundaries.\nNote that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role.",
      "Implement business logic checks. Ensure that you perform access control checks related to your business logic. These checks may be different from the access control checks that you apply to more generic resources such as files, connections,\n processes, memory, and database records. For example, a database may restrict access to medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor.",
      "Use a secure framework. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using authorization frameworks such as the\nJAAS Authorization Framework and the OWASP ESAPI Access Control feature.",
      "Use server-side security controls. For web applications, make sure that the access control mechanism is enforced correctly on every server side resource. Users should not be able to access any unauthorized functionality or information by\n simply requesting direct access to that page. One way to do this is to ensure that all pages containing sensitive information are not cached. Additionally, requests for such pages must contain an active and authenticated session token associated with a user.\n This user must have the required permissions to access that page.",
      "Use OS access control. Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a \"default deny\" policy when defining these ACLs.",
      "For more information about missing authorization vulnerabilities, please see \nhttp://cwe.mitre.org/top25/index.html#CWE-862"
    ],
    "strong": [
      "Automated Static Analysis.",
      "Automated Dynamic Analysis.",
      "Manual Analysis.",
      "Separate the site into secure and public areas.",
      "Implement business logic checks.",
      "Use a secure framework.",
      "Use server-side security controls.",
      "Use OS access control."
    ],
    "em": [
      ".htaccess",
      "JAAS Authorization Framework",
      "ESAPI Access Control"
    ],
    "br": [
      ""
    ],
    "ul": [
      "For more information about missing authorization vulnerabilities, please see \nhttp://cwe.mitre.org/top25/index.html#CWE-862"
    ],
    "a": [
      "http://cwe.mitre.org/top25/index.html#CWE-862"
    ]
  },
  "links": [
    {
      "href": "http://cwe.mitre.org/top25/index.html#CWE-862",
      "text": "\nhttp://cwe.mitre.org/top25/index.html#CWE-862"
    }
  ],
  "html": "<h2>Description</h2>\n  <p>The software does not perform an authorization check when an actor attempts to access a resource or perform an action.</p>\n  <p>Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource.</p>\n  <p>When access control checks are not applied, users are able to access data or perform actions that they should not be allowed to perform. This can lead to a wide range of problems, including information exposure, denial of service, and arbitrary code execution.</p>\n  <h2>Discussion</h2>\n  <p>Suppose you're hosting a house party for a few close friends and their guests. You invite everyone into your living room, but while you're catching up with one of your friends, one of the guests raids your fridge, peeks into your medicine cabinet, and ponders\n what you've hidden in the nightstand next to your bed. Software faces similar authorization problems that could lead to more dire consequences. If you don't ensure that your software's users are only doing what they're allowed to, then attackers will try to\n exploit your improper authorization and exercise unauthorized functionality that you only intended for restricted users. In May 2011, Citigroup revealed that it had been compromised by hackers who were able to steal details of hundreds of thousands of bank\n accounts by changing the account information that was present in fields in the URL. An application that implemented proper&amp;nbsp;authorization would check that the user had the rights to access the account being specified. Earlier, a similar missing-authorization\n attack was used to steal private information of iPad owners from an AT&amp;T site.</p>\n  <h2>Detection</h2>\n  <p>The ways to check for missing authorization are:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Automated Static Analysis. </strong>Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as\n<em>.htaccess</em> in Apache web servers, or detect the usage of commonly-used authorization libraries. Generally, automated static analysis tools have difficulty detecting custom authorization schemes. In addition, the software's design may include some functionality\n that is accessible to any user and does not require an authorization check; an automated technique that detects the absence of authorization may report false positives.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Automated Dynamic Analysis.</strong> Automated dynamic analysis may find many or all possible interfaces that do not require authorization, but manual analysis is required to determine if the lack of authorization violates business logic.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Manual Analysis.</strong> This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active session.\n Specifically, manual static analysis is useful for evaluating the correctness of custom authorization mechanisms. These may be more effective than strictly automated techniques. This is especially the case with weaknesses that are related to design and business\n rules. However, manual efforts might not achieve desired code coverage within limited time constraints.</p>\n    </li>\n  </ol>\n  <h2>Mitigation</h2>\n  <p>The mitigation methods for missing authorization vulnerabilities are:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Separate the site into secure and public areas.</strong> Divide your application into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access\n control (RBAC) to enforce the roles at the appropriate boundaries.<br />\nNote that this approach may not protect against horizontal authorization, i.e., it will not protect a user from attacking others with the same role.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Implement business logic checks. </strong>Ensure that you perform access control checks related to your business logic. These checks may be different from the access control checks that you apply to more generic resources such as files, connections,\n processes, memory, and database records. For example, a database may restrict access to medical records to a specific database user, but each record might only be intended to be accessible to the patient and the patient's doctor.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use a secure framework.</strong> Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using authorization frameworks such as the\n<em>JAAS Authorization Framework</em> and the OWASP<em> ESAPI Access Control</em> feature.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use server-side security controls.</strong> For web applications, make sure that the access control mechanism is enforced correctly on every server side resource. Users should not be able to access any unauthorized functionality or information by\n simply requesting direct access to that page. One way to do this is to ensure that all pages containing sensitive information are not cached. Additionally, requests for such pages must contain an active and authenticated session token associated with a user.\n This user must have the required permissions to access that page.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use OS access control.</strong> Use the access control capabilities of your operating system and server environment and define your access control lists accordingly. Use a \"default deny\" policy when defining these ACLs.</p>\n    </li>\n  </ol>\n  <h2>Additional Information</h2>\n  <ul>\n    <li>For more information about missing authorization vulnerabilities, please see <a href=\"http://cwe.mitre.org/top25/index.html#CWE-862\">\nhttp://cwe.mitre.org/top25/index.html#CWE-862</a></li>\n  </ul>"
}