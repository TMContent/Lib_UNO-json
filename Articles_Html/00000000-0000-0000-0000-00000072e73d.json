{
  "id": "00000000-0000-0000-0000-00000072e73d",
  "checksum": "83e3af5d7999a8a6044f8acc36353c061666c042",
  "words": {
    "what": [
      "h2"
    ],
    "to": [
      "h2",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "do": [
      "h2"
    ],
    "don't": [
      "p"
    ],
    "allow": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "input": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "format": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "em",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "strings": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "re-)write": [
      "p",
      "ol",
      "li",
      "strong"
    ],
    "code": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "guarantee": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "li",
      "strong"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "a"
    ],
    "never": [
      "p"
    ],
    "used": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "why": [
      "h2"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "who": [
      "p"
    ],
    "can": [
      "p"
    ],
    "control": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "contents": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "a": [
      "p",
      "ol",
      "li"
    ],
    "string": [
      "p",
      "ol",
      "li"
    ],
    "may": [
      "p"
    ],
    "be": [
      "p"
    ],
    "able": [
      "p"
    ],
    "execute": [
      "p"
    ],
    "arbitrary": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "perform": [
      "p"
    ],
    "following": [
      "p",
      "ol",
      "li"
    ],
    "actions": [
      "p"
    ],
    "ensure": [
      "p"
    ],
    "not": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "a"
    ],
    "identify": [
      "ol",
      "li",
      "strong"
    ],
    "uses": [
      "ol",
      "li",
      "strong"
    ],
    "formatted": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li"
    ],
    "input-output": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "functions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "list": [
      "ol",
      "li"
    ],
    "nslog": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "stringwithformat": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "stringbyappendingformat": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "initwithformat": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "appendformat": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "em",
      "li",
      "em"
    ],
    "alertwithmessagetext": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "informativetextwithformat": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "predicatewithformat": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "sprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "_snprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "printf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "fprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "scanf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "fscanf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "sscanf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "swprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "wsprintfa": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "wsprintfw": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "vsprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "vswprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "_snwprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "_vsnprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "_vsnwprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "vprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "vwprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "vfprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "vwfprintf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "fwscanf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "wscanf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "swscanf": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "avoid": [
      "ol",
      "li",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "using": [
      "ol",
      "li",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "consider": [
      "ol",
      "li"
    ],
    "replacing": [
      "ol",
      "li"
    ],
    "with": [
      "ol",
      "li"
    ],
    "other": [
      "ol",
      "li"
    ],
    "which": [
      "ol",
      "li"
    ],
    "are": [
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "prone": [
      "ol",
      "li"
    ],
    "vulnerabilities": [
      "ol",
      "li"
    ],
    "exclude": [
      "ol",
      "li",
      "strong"
    ],
    "from": [
      "ol",
      "li",
      "strong"
    ],
    "place": [
      "ol",
      "li"
    ],
    "separate": [
      "ol",
      "li"
    ],
    "variables": [
      "ol",
      "li"
    ],
    "and": [
      "ol",
      "li"
    ],
    "pass": [
      "ol",
      "li"
    ],
    "it": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "as": [
      "ol",
      "li"
    ],
    "variadic": [
      "ol",
      "li"
    ],
    "arguments": [
      "ol",
      "li"
    ],
    "instead": [
      "ol",
      "li"
    ],
    "allowing": [
      "ol",
      "li"
    ],
    "dangerous": [
      "h2",
      "h2"
    ],
    "api": [
      "h2",
      "h2"
    ],
    "guidelines": [
      "h2"
    ],
    "url": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "handlers": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "for": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "sensitive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "operations": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "disable": [
      "ul",
      "li",
      "a"
    ],
    "parsing": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "external": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "xml": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "entities": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "use": [
      "ul",
      "li",
      "a",
      "title"
    ],
    "static": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "checklists": [
      "h2"
    ],
    "disabled": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "What to Do",
      "Why",
      "How",
      "Dangerous API Guidelines",
      "Dangerous API Checklists"
    ],
    "p": [
      "Don't allow user input in format strings. (Re-)Write code to guarantee that user input is never used in format strings.",
      "An attacker who can control the contents of a format string may be able to execute arbitrary code.",
      "Perform the following actions to ensure that user input is not used in format strings:"
    ],
    "ol": [
      "Identify code that uses formatted input-output functions. The following is a list of formatted input-output functions:\n NSLog\n stringWithFormat\n stringByAppendingFormat\n initWithFormat\n appendFormat\n alertWithMessageText\n informativeTextWithFormat\n format\n appendFormat\n predicateWithFormat\n sprintf\n _snprintf\n printf\n fprintf\n scanf\n fscanf\n sscanf\n swprintf\n wsprintfA\n wsprintfW\n vsprintf\n vswprintf\n _snwprintf\n _vsnprintf\n _vsnwprintf\n vprintf\n vwprintf\n vfprintf\n vwfprintf\n fwscanf\n wscanf\n swscanf\n Avoid using formatted functions. Consider replacing formatted input-output functions with other functions, which are not prone to format string vulnerabilities.\n (Re-)Write code to exclude user input from format strings. Place user input in separate variables and pass it as variadic arguments to the formatted input-output functions, instead of allowing it in format strings."
    ],
    "li": [
      "Identify code that uses formatted input-output functions. The following is a list of formatted input-output functions:\n NSLog\n stringWithFormat\n stringByAppendingFormat\n initWithFormat\n appendFormat\n alertWithMessageText\n informativeTextWithFormat\n format\n appendFormat\n predicateWithFormat\n sprintf\n _snprintf\n printf\n fprintf\n scanf\n fscanf\n sscanf\n swprintf\n wsprintfA\n wsprintfW\n vsprintf\n vswprintf\n _snwprintf\n _vsnprintf\n _vsnwprintf\n vprintf\n vwprintf\n vfprintf\n vwfprintf\n fwscanf\n wscanf\n swscanf",
      "NSLog",
      "stringWithFormat",
      "stringByAppendingFormat",
      "initWithFormat",
      "appendFormat",
      "alertWithMessageText",
      "informativeTextWithFormat",
      "format",
      "appendFormat",
      "predicateWithFormat",
      "sprintf",
      "_snprintf",
      "printf",
      "fprintf",
      "scanf",
      "fscanf",
      "sscanf",
      "swprintf",
      "wsprintfA",
      "wsprintfW",
      "vsprintf",
      "vswprintf",
      "_snwprintf",
      "_vsnprintf",
      "_vsnwprintf",
      "vprintf",
      "vwprintf",
      "vfprintf",
      "vwfprintf",
      "fwscanf",
      "wscanf",
      "swscanf",
      "Avoid using formatted functions. Consider replacing formatted input-output functions with other functions, which are not prone to format string vulnerabilities.",
      "(Re-)Write code to exclude user input from format strings. Place user input in separate variables and pass it as variadic arguments to the formatted input-output functions, instead of allowing it in format strings.",
      "Avoid Using URL Handlers for Sensitive Operations",
      "Disable Parsing of External XML Entities",
      "Use Static Format Strings",
      "URL Handlers Are Not Used for Sensitive Operations",
      "Parsing of External XML Entities Is Disabled",
      "Static Format Strings Are Used"
    ],
    "strong": [
      "Identify code that uses formatted input-output functions.",
      "Avoid using formatted functions.",
      "(Re-)Write code to exclude user input from format strings."
    ],
    "ul": [
      "NSLog\n stringWithFormat\n stringByAppendingFormat\n initWithFormat\n appendFormat\n alertWithMessageText\n informativeTextWithFormat\n format\n appendFormat\n predicateWithFormat\n sprintf\n _snprintf\n printf\n fprintf\n scanf\n fscanf\n sscanf\n swprintf\n wsprintfA\n wsprintfW\n vsprintf\n vswprintf\n _snwprintf\n _vsnprintf\n _vsnwprintf\n vprintf\n vwprintf\n vfprintf\n vwfprintf\n fwscanf\n wscanf\n swscanf",
      "Avoid Using URL Handlers for Sensitive Operations\n Disable Parsing of External XML Entities\n Use Static Format Strings",
      "URL Handlers Are Not Used for Sensitive Operations\n Parsing of External XML Entities Is Disabled\n Static Format Strings Are Used"
    ],
    "em": [
      "NSLog",
      "stringWithFormat",
      "stringByAppendingFormat",
      "initWithFormat",
      "appendFormat",
      "alertWithMessageText",
      "informativeTextWithFormat",
      "format",
      "appendFormat",
      "predicateWithFormat",
      "sprintf",
      "_snprintf",
      "printf",
      "fprintf",
      "scanf",
      "fscanf",
      "sscanf",
      "swprintf",
      "wsprintfA",
      "wsprintfW",
      "vsprintf",
      "vswprintf",
      "_snwprintf",
      "_vsnprintf",
      "_vsnwprintf",
      "vprintf",
      "vwprintf",
      "vfprintf",
      "vwfprintf",
      "fwscanf",
      "wscanf",
      "swscanf"
    ],
    "a": [
      "Avoid Using URL Handlers for Sensitive Operations",
      "Disable Parsing of External XML Entities",
      "Use Static Format Strings",
      "URL Handlers Are Not Used for Sensitive Operations",
      "Parsing of External XML Entities Is Disabled",
      "Static Format Strings Are Used"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-00000081be72",
      "text": "Avoid Using URL Handlers for Sensitive Operations"
    },
    {
      "href": "00000000-0000-0000-0000-0000004a6201",
      "text": "Disable Parsing of External XML Entities"
    },
    {
      "href": "00000000-0000-0000-0000-00000072e73d",
      "text": "Use Static Format Strings"
    },
    {
      "href": "00000000-0000-0000-0000-00000090f889",
      "text": "URL Handlers Are Not Used for Sensitive Operations"
    },
    {
      "href": "00000000-0000-0000-0000-00000036b1bf",
      "text": "Parsing of External XML Entities Is Disabled"
    },
    {
      "href": "00000000-0000-0000-0000-0000008ea142",
      "text": "Static Format Strings Are Used"
    }
  ],
  "html": "<h2>What to Do</h2><p>Don't allow user input in format strings. (Re-)Write code to guarantee that user input is never used in format strings.\n</p><h2>Why</h2><p>An attacker who can control the contents of a format string may be able to execute arbitrary code.\n</p><h2>How</h2><p>Perform the following actions to ensure that user input is not used in format strings:\n</p><ol>\n<li> <strong>Identify code that uses formatted input-output functions.</strong> The following is a list of formatted input-output functions:<ul>\n<li> <em>NSLog</em></li>\n<li> <em>stringWithFormat</em></li>\n<li> <em>stringByAppendingFormat</em></li>\n<li> <em>initWithFormat</em></li>\n<li> <em>appendFormat</em></li>\n<li> <em>alertWithMessageText</em></li>\n<li> <em>informativeTextWithFormat</em></li>\n<li> <em>format</em></li>\n<li> <em>appendFormat</em></li>\n<li> <em>predicateWithFormat</em></li>\n<li> <em>sprintf</em></li>\n<li> <em>_snprintf</em></li>\n<li> <em>printf</em></li>\n<li> <em>fprintf</em></li>\n<li> <em>scanf</em></li>\n<li> <em>fscanf</em></li>\n<li> <em>sscanf</em></li>\n<li> <em>swprintf</em></li>\n<li> <em>wsprintfA</em></li>\n<li> <em>wsprintfW</em></li>\n<li> <em>vsprintf</em></li>\n<li> <em>vswprintf</em></li>\n<li> <em>_snwprintf</em></li>\n<li> <em>_vsnprintf</em></li>\n<li> <em>_vsnwprintf</em></li>\n<li> <em>vprintf</em></li>\n<li> <em>vwprintf</em></li>\n<li> <em>vfprintf</em></li>\n<li> <em>vwfprintf</em></li>\n<li> <em>fwscanf</em></li>\n<li> <em>wscanf</em></li>\n<li> <em>swscanf</em></li></ul></li>\n<li> <strong>Avoid using formatted functions.</strong> Consider replacing formatted input-output functions with other functions, which are not prone to format string vulnerabilities.</li>\n<li> <strong>(Re-)Write code to exclude user input from format strings.</strong> Place user input in separate variables and pass it as variadic arguments to the formatted input-output functions, instead of allowing it in format strings.</li>\n</ol><h2>Dangerous API Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-00000081be72\">Avoid Using URL Handlers for Sensitive Operations</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000004a6201\">Disable Parsing of External XML Entities</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000072e73d\">Use Static Format Strings</a></li>\n</ul><h2>Dangerous API Checklists</h2><ul><li> <a href=\"00000000-0000-0000-0000-00000090f889\">URL Handlers Are Not Used for Sensitive Operations</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000036b1bf\">Parsing of External XML Entities Is Disabled</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000008ea142\">Static Format Strings Are Used</a></li></ul>"
}