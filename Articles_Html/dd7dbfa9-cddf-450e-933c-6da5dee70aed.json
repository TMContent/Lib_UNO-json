{
  "id": "dd7dbfa9-cddf-450e-933c-6da5dee70aed",
  "checksum": "4c4980236ef7f45aee8603993fbfa2360946f2cc",
  "words": {
    "what": [
      "h2"
    ],
    "to": [
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h2",
      "p"
    ],
    "instead": [
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "storing": [
      "p",
      "p"
    ],
    "passwords": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "in": [
      "p"
    ],
    "plain": [
      "p"
    ],
    "text": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "common": [
      "p",
      "p"
    ],
    "practice": [
      "p"
    ],
    "is": [
      "p"
    ],
    "apply": [
      "p"
    ],
    "one-way": [
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "hash": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "which": [
      "p"
    ],
    "effectively": [
      "p"
    ],
    "randomizes": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "output": [
      "p"
    ],
    "and": [
      "p",
      "title"
    ],
    "can": [
      "p",
      "p",
      "p"
    ],
    "make": [
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "p"
    ],
    "more": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "difficult": [
      "p"
    ],
    "if": [
      "p",
      "p",
      "p"
    ],
    "or": [
      "p",
      "p"
    ],
    "when?": [
      "p"
    ],
    "attackers": [
      "p"
    ],
    "gain": [
      "p"
    ],
    "access": [
      "p",
      "p"
    ],
    "your": [
      "p"
    ],
    "password": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "database": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "hashing": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "techniques": [
      "p",
      "p",
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p"
    ],
    "allow": [
      "p",
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "configure": [
      "p",
      "p",
      "p"
    ],
    "large": [
      "p",
      "p"
    ],
    "number": [
      "p",
      "p",
      "p",
      "p"
    ],
    "rounds": [
      "p",
      "p",
      "p",
      "p"
    ],
    "such": [
      "p",
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "bcrypt": [
      "p",
      "p"
    ],
    "generate": [
      "p",
      "p"
    ],
    "random": [
      "p",
      "p"
    ],
    "salt": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "each": [
      "p",
      "p"
    ],
    "time": [
      "p",
      "p"
    ],
    "process": [
      "p",
      "p",
      "p"
    ],
    "new": [
      "p",
      "p"
    ],
    "add": [
      "p",
      "p"
    ],
    "plaintext": [
      "p",
      "p"
    ],
    "before": [
      "p",
      "p"
    ],
    "when": [
      "p",
      "p",
      "p",
      "p"
    ],
    "store": [
      "p",
      "p",
      "p",
      "p"
    ],
    "also": [
      "p",
      "p"
    ],
    "salt&nbsp;": [
      "p"
    ],
    "why": [
      "h2"
    ],
    "hashes": [
      "p"
    ],
    "plain-text": [
      "p"
    ],
    "assures": [
      "p"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "cannot": [
      "p"
    ],
    "easily": [
      "p"
    ],
    "recover": [
      "p"
    ],
    "he": [
      "p"
    ],
    "gains": [
      "p"
    ],
    "files": [
      "p"
    ],
    "adding": [
      "p"
    ],
    "hashed": [
      "p",
      "p"
    ],
    "greatly": [
      "p"
    ],
    "increases": [
      "p",
      "p"
    ],
    "computational": [
      "p"
    ],
    "requirements": [
      "p"
    ],
    "for": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "guessing": [
      "p"
    ],
    "attacks": [
      "p",
      "p"
    ],
    "should": [
      "p"
    ],
    "be": [
      "p"
    ],
    "applied": [
      "p"
    ],
    "multiple": [
      "p"
    ],
    "times": [
      "p"
    ],
    "because": [
      "p"
    ],
    "modern": [
      "p"
    ],
    "computers": [
      "p"
    ],
    "perform": [
      "p"
    ],
    "operations": [
      "p"
    ],
    "very": [
      "p"
    ],
    "quickly": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "this": [
      "p"
    ],
    "may": [
      "p"
    ],
    "increase": [
      "p",
      "p"
    ],
    "expense": [
      "p"
    ],
    "processing": [
      "p"
    ],
    "incoming": [
      "p"
    ],
    "authentication": [
      "p"
    ],
    "requests": [
      "p"
    ],
    "but": [
      "p"
    ],
    "are": [
      "p",
      "p"
    ],
    "ever": [
      "p"
    ],
    "stolen": [
      "p"
    ],
    "significantly": [
      "p"
    ],
    "effort": [
      "p"
    ],
    "conducting": [
      "p"
    ],
    "brute": [
      "p"
    ],
    "force": [
      "p"
    ],
    "attack": [
      "p",
      "p"
    ],
    "including": [
      "p"
    ],
    "rainbow": [
      "p"
    ],
    "tables": [
      "p"
    ],
    "with": [
      "p",
      "ul",
      "li"
    ],
    "ability": [
      "p"
    ],
    "whenever": [
      "p"
    ],
    "cpu": [
      "p"
    ],
    "speeds": [
      "p"
    ],
    "become": [
      "p"
    ],
    "efficient": [
      "p"
    ],
    "not": [
      "p"
    ],
    "same": [
      "p"
    ],
    "every": [
      "p"
    ],
    "cwe-760).": [
      "p"
    ],
    "industry-approved": [
      "p"
    ],
    "need": [
      "p"
    ],
    "them": [
      "p"
    ],
    "correctly": [
      "p"
    ],
    "don't": [
      "p"
    ],
    "cut": [
      "p"
    ],
    "corners": [
      "p"
    ],
    "by": [
      "p"
    ],
    "skipping": [
      "p"
    ],
    "resource-intensive": [
      "p"
    ],
    "steps": [
      "p",
      "p"
    ],
    "cwe-325).": [
      "p"
    ],
    "these": [
      "p"
    ],
    "often": [
      "p"
    ],
    "essential": [
      "p"
    ],
    "preventing": [
      "p"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "information": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "about": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "without": [
      "ul",
      "li"
    ],
    "vulnerabilities": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//cwe.mitre.org/top25/index.html#cwe-759": [
      "ul",
      "li",
      "a"
    ],
    "\"cwe-325": [
      "ul",
      "li"
    ],
    "missing": [
      "ul",
      "li"
    ],
    "required": [
      "ul",
      "li"
    ],
    "cryptographic": [
      "ul",
      "li"
    ],
    "step\"": [
      "ul",
      "li"
    ],
    "see\rhttp://cwe.mitre.org/data/definitions/325.html": [
      "ul",
      "li"
    ],
    "\"cwe-760": [
      "ul",
      "li"
    ],
    "predictable": [
      "ul",
      "li"
    ],
    "salt\"": [
      "ul",
      "li"
    ],
    "see\rhttp://cwe.mitre.org/data/definitions/760.html": [
      "ul",
      "li"
    ],
    "http//cwe.mitre.org/data/definitions/325.html": [
      "a"
    ],
    "http//cwe.mitre.org/data/definitions/760.html": [
      "a"
    ]
  },
  "tags": {
    "h2": [
      "What to Do",
      "Why",
      "How",
      "Additional Resources"
    ],
    "p": [
      "Instead of storing passwords in plain text, a common practice is to apply a one-way hash, which effectively randomizes the output and can make it more difficult if (or when?) attackers gain access to your password database. Use one-way hashing techniques\r\n that allow you to configure a large number of rounds, such as bcrypt. Generate a random salt each time you process a new password. Add the salt to the plaintext password before hashing it. When you store the hash, also store the salt.&nbsp;",
      "Storing hashes instead of plain-text passwords assures that an attacker cannot easily recover the passwords if he gains access to the password files. Adding salt to hashed passwords greatly increases computational requirements for password guessing attacks.\r\n Hashing should be applied multiple times, because modern computers can perform hashing operations very quickly.",
      "Use one-way hashing techniques that allow you to configure a large number of rounds, such as bcrypt. This may increase the expense when processing incoming authentication requests, but if the hashed passwords are ever stolen, it significantly increases the\r\n effort for conducting a brute force attack, including rainbow tables. With the ability to configure the number of rounds, you can increase the number of rounds whenever CPU speeds or attack techniques become more efficient.",
      "Generate a random salt each time you process a new password. Add the salt to the plaintext password before hashing it. When you store the hash, also store the salt. Do not use the same salt for every password that you process (CWE-760).",
      "When you use industry-approved techniques, you need to use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks."
    ],
    "ul": [
      "For more information about hashing without salt vulnerabilities, please see \r\nhttp://cwe.mitre.org/top25/index.html#CWE-759\r\n    For more information about \"CWE-325: Missing Required Cryptographic Step\", please see\r\nhttp://cwe.mitre.org/data/definitions/325.html\r\n    For more information about \"CWE-760: Use of a One-Way Hash with a Predictable Salt\", please see\r\nhttp://cwe.mitre.org/data/definitions/760.html"
    ],
    "li": [
      "For more information about hashing without salt vulnerabilities, please see \r\nhttp://cwe.mitre.org/top25/index.html#CWE-759",
      "For more information about \"CWE-325: Missing Required Cryptographic Step\", please see\r\nhttp://cwe.mitre.org/data/definitions/325.html",
      "For more information about \"CWE-760: Use of a One-Way Hash with a Predictable Salt\", please see\r\nhttp://cwe.mitre.org/data/definitions/760.html"
    ],
    "a": [
      "http://cwe.mitre.org/top25/index.html#CWE-759",
      "http://cwe.mitre.org/data/definitions/325.html",
      "http://cwe.mitre.org/data/definitions/760.html"
    ]
  },
  "links": [
    {
      "href": "http://cwe.mitre.org/top25/index.html#CWE-759",
      "text": "\r\nhttp://cwe.mitre.org/top25/index.html#CWE-759"
    },
    {
      "href": "http://cwe.mitre.org/data/definitions/325.html",
      "text": "http://cwe.mitre.org/data/definitions/325.html"
    },
    {
      "href": "http://cwe.mitre.org/data/definitions/760.html",
      "text": "http://cwe.mitre.org/data/definitions/760.html"
    }
  ],
  "html": "<h2>What to Do</h2>\r\n  <p>Instead of storing passwords in plain text, a common practice is to apply a one-way hash, which effectively randomizes the output and can make it more difficult if (or when?) attackers gain access to your password database. Use one-way hashing techniques\r\n that allow you to configure a large number of rounds, such as bcrypt. Generate a random salt each time you process a new password. Add the salt to the plaintext password before hashing it. When you store the hash, also store the salt.&amp;nbsp;\r\n</p>\r\n  <h2>Why</h2>\r\n  <p>Storing hashes instead of plain-text passwords assures that an attacker cannot easily recover the passwords if he gains access to the password files. Adding salt to hashed passwords greatly increases computational requirements for password guessing attacks.\r\n Hashing should be applied multiple times, because modern computers can perform hashing operations very quickly.</p>\r\n  <h2>How</h2>\r\n  <p>Use one-way hashing techniques that allow you to configure a large number of rounds, such as bcrypt. This may increase the expense when processing incoming authentication requests, but if the hashed passwords are ever stolen, it significantly increases the\r\n effort for conducting a brute force attack, including rainbow tables. With the ability to configure the number of rounds, you can increase the number of rounds whenever CPU speeds or attack techniques become more efficient.</p>\r\n  <p>Generate a random salt each time you process a new password. Add the salt to the plaintext password before hashing it. When you store the hash, also store the salt. Do not use the same salt for every password that you process (CWE-760).</p>\r\n  <p>When you use industry-approved techniques, you need to use them correctly. Don't cut corners by skipping resource-intensive steps (CWE-325). These steps are often essential for preventing common attacks.</p>\r\n  <h2>Additional Resources</h2>\r\n  <ul>\r\n    <li>For more information about hashing without salt vulnerabilities, please see <a href=\"http://cwe.mitre.org/top25/index.html#CWE-759\">\r\nhttp://cwe.mitre.org/top25/index.html#CWE-759</a></li>\r\n    <li>For more information about \"CWE-325: Missing Required Cryptographic Step\", please see\r\n<a href=\"http://cwe.mitre.org/data/definitions/325.html\">http://cwe.mitre.org/data/definitions/325.html</a></li>\r\n    <li>For more information about \"CWE-760: Use of a One-Way Hash with a Predictable Salt\", please see\r\n<a href=\"http://cwe.mitre.org/data/definitions/760.html\">http://cwe.mitre.org/data/definitions/760.html</a></li>\r\n  </ul>"
}