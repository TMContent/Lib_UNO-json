{
  "id": "00000000-0000-0000-0000-00000097f1a4",
  "checksum": "6b2b2006b67a2abe611eafb9e7b6d13b906a75dc",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "h2",
      "p",
      "ol",
      "li",
      "h2",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "java": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2"
    ],
    "for": [
      "h2",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "identify": [
      "p",
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "code": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "p",
      "p"
    ],
    "makes": [
      "p"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "title"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "httpsession": [
      "p",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "em",
      "em",
      "em",
      "em",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "em",
      "em",
      "em",
      "em",
      "li",
      "em",
      "li",
      "em",
      "title"
    ],
    "object": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "title"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "p"
    ],
    "look": [
      "p"
    ],
    "blocks": [
      "p"
    ],
    "make": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "assumptions": [
      "p"
    ],
    "about": [
      "p",
      "ul",
      "li"
    ],
    "session": [
      "p",
      "ol",
      "li",
      "strong"
    ],
    "values": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "strong"
    ],
    "why": [
      "h2"
    ],
    "improper": [
      "p"
    ],
    "handling": [
      "p",
      "ol",
      "li",
      "strong"
    ],
    "objects": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "can": [
      "p",
      "p"
    ],
    "lead": [
      "p",
      "p"
    ],
    "race": [
      "p"
    ],
    "conditions": [
      "p"
    ],
    "concurrency": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "issues": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "ensure": [
      "p",
      "p"
    ],
    "proper": [
      "p",
      "title"
    ],
    "thread": [
      "p",
      "ol",
      "li",
      "strong",
      "p",
      "p",
      "title"
    ],
    "safety": [
      "p",
      "p",
      "title"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "may": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "modified": [
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "by": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "multiple": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "threads": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "find": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "modifies": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "which": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "accessed": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "one": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "approach": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "is": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "title"
    ],
    "search": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "keyword": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "then": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "trace": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "throughout": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "follow": [
      "ol",
      "li",
      "strong"
    ],
    "progress": [
      "ol",
      "li",
      "strong"
    ],
    "data": [
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "a": [
      "ol",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "p",
      "p",
      "p",
      "p"
    ],
    "consider": [
      "ol",
      "li",
      "strong"
    ],
    "might": [
      "ol",
      "li",
      "strong",
      "p"
    ],
    "changed": [
      "ol",
      "li",
      "strong"
    ],
    "from": [
      "ol",
      "li",
      "strong"
    ],
    "another": [
      "ol",
      "li",
      "strong"
    ],
    "special": [
      "ol",
      "li"
    ],
    "note": [
      "ol",
      "li"
    ],
    "atomic": [
      "ol",
      "li"
    ],
    "operations": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "must": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "executed": [
      "ol",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "together": [
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "immutable": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ul",
      "li"
    ],
    "as": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "strong"
    ],
    "much": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "possible": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li"
    ],
    "sound": [
      "ol",
      "li"
    ],
    "practice": [
      "ol",
      "li"
    ],
    "avoiding": [
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "li"
    ],
    "used": [
      "ol",
      "li"
    ],
    "specifics": [
      "ol",
      "li"
    ],
    "are": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "different": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "applications": [
      "ol",
      "li"
    ],
    "class": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "methods": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "local": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "variables": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "piece": [
      "ol",
      "li"
    ],
    "thread-safe": [
      "ol",
      "li"
    ],
    "if": [
      "ol",
      "li"
    ],
    "synchronize": [
      "ol",
      "li",
      "strong"
    ],
    "critical": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "p"
    ],
    "sections": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "p"
    ],
    "single": [
      "ol",
      "li",
      "strong"
    ],
    "operation": [
      "ol",
      "li",
      "strong"
    ],
    "complex": [
      "ol",
      "li"
    ],
    "on": [
      "ol",
      "li"
    ],
    "sure": [
      "ol",
      "li"
    ],
    "synchronized": [
      "ol",
      "li",
      "p"
    ],
    "problem": [
      "h2"
    ],
    "example": [
      "h2",
      "h2"
    ],
    "shopping": [
      "p"
    ],
    "cart": [
      "p"
    ],
    "has": [
      "p"
    ],
    "pay": [
      "p"
    ],
    "now": [
      "p"
    ],
    "button": [
      "p",
      "p"
    ],
    "finalizes": [
      "p"
    ],
    "purchase": [
      "p"
    ],
    "charges": [
      "p"
    ],
    "customer’s": [
      "p"
    ],
    "credit": [
      "p",
      "p"
    ],
    "card": [
      "p",
      "p"
    ],
    "an": [
      "p"
    ],
    "application": [
      "p"
    ],
    "not": [
      "p"
    ],
    "safe": [
      "p"
    ],
    "allow": [
      "p"
    ],
    "user": [
      "p"
    ],
    "double-click": [
      "p"
    ],
    "charge": [
      "p"
    ],
    "customer": [
      "p"
    ],
    "twice": [
      "p"
    ],
    "same": [
      "p"
    ],
    "transaction": [
      "p"
    ],
    "solution": [
      "h2"
    ],
    "or": [
      "p"
    ],
    "both": [
      "p"
    ],
    "help": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "simultaneous": [
      "p"
    ],
    "transactions": [
      "p"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html": [
      "ul",
      "li",
      "a"
    ],
    "access": [
      "title"
    ],
    "assured": [
      "title"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Problem Example",
      "Solution Example",
      "Additional Resources"
    ],
    "ul": [
      "Java",
      "For more information about using immutable objects, see http://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html"
    ],
    "li": [
      "Java",
      "Identify all HttpSession objects that may be modified by multiple threads. Find all code that modifies HttpSession objects, which may be accessed by multiple threads. One approach is to search code for the HttpSession keyword and then trace each HttpSession object throughout the code.",
      "Follow the progress of data values throughout a session and consider values that might be changed from another thread. Make special note of atomic operations that must be executed together.",
      "Identify all HttpSession objects that may be modified by multiple threads. Find all code that modifies HttpSession objects, which may be accessed by multiple threads. One approach is to search code for the HttpSession keyword and then trace each HttpSession object throughout the code.",
      "Use immutable objects as much as possible. Using immutable objects is a sound practice for avoiding concurrency issues and should be used as much as possible. The specifics of using immutable objects are different for different applications.",
      "Use class methods and local variables data handling. For each piece of code that modifies HttpSession objects, use thread-safe class methods and local variables if possible.",
      "Synchronize critical sections that must be executed as a single operation. For complex operations on HttpSession objects, make sure that critical sections are synchronized.",
      "For more information about using immutable objects, see http://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html"
    ],
    "p": [
      "Identify code that makes use of the HttpSession object and look for blocks of code that make assumptions about session values.",
      "Improper handling of HttpSession objects can lead to race conditions and concurrency issues.",
      "To ensure proper thread safety of HttpSession objects:",
      "To ensure thread safety:",
      "A shopping cart has a Pay Now button that finalizes a purchase and charges the customer’s credit card. An application that is not thread safe may allow for a user to double-click the button and charge the customer twice for the same transaction.",
      "Synchronized critical sections or immutable objects both can help prevent concurrency issues that might lead to simultaneous credit card transactions."
    ],
    "em": [
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession",
      "HttpSession"
    ],
    "ol": [
      "Identify all HttpSession objects that may be modified by multiple threads. Find all code that modifies HttpSession objects, which may be accessed by multiple threads. One approach is to search code for the HttpSession keyword and then trace each HttpSession object throughout the code.\n Follow the progress of data values throughout a session and consider values that might be changed from another thread. Make special note of atomic operations that must be executed together.",
      "Identify all HttpSession objects that may be modified by multiple threads. Find all code that modifies HttpSession objects, which may be accessed by multiple threads. One approach is to search code for the HttpSession keyword and then trace each HttpSession object throughout the code.\n Use immutable objects as much as possible. Using immutable objects is a sound practice for avoiding concurrency issues and should be used as much as possible. The specifics of using immutable objects are different for different applications.\n Use class methods and local variables data handling. For each piece of code that modifies HttpSession objects, use thread-safe class methods and local variables if possible. \n Synchronize critical sections that must be executed as a single operation. For complex operations on HttpSession objects, make sure that critical sections are synchronized."
    ],
    "strong": [
      "Identify all HttpSession objects that may be modified by multiple threads.",
      "Follow the progress of data values throughout a session and consider values that might be changed from another thread.",
      "Identify all HttpSession objects that may be modified by multiple threads.",
      "Use immutable objects as much as possible.",
      "Use class methods and local variables data handling.",
      "Synchronize critical sections that must be executed as a single operation."
    ],
    "a": [
      "http://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html"
    ]
  },
  "links": [
    {
      "href": "http://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html",
      "text": "http://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> Java</li>\n</ul>\n<h2>What to Check For</h2><p>Identify code that makes use of the <em>HttpSession</em> object and look for blocks of code that make assumptions about session values.\n</p>\n<h2>Why</h2><p>Improper handling of <em>HttpSession</em> objects can lead to race conditions and concurrency issues.\n</p>\n<h2>How to Check</h2><p>To ensure proper thread safety of <em>HttpSession</em> objects:\n</p><ol>\n<li> <strong>Identify all <em>HttpSession</em> objects that may be modified by multiple threads.</strong> Find all code that modifies <em>HttpSession</em> objects, which may be accessed by multiple threads. One approach is to search code for the <em>HttpSession</em> keyword and then trace each <em>HttpSession</em> object throughout the code.</li>\n<li> <strong>Follow the progress of data values throughout a session and consider values that might be changed from another thread.</strong> Make special note of atomic operations that must be executed together.</li>\n</ol>\n<h2>How to Fix</h2><p>To ensure thread safety:\n</p><ol>\n<li> <strong>Identify all <em>HttpSession</em> objects that may be modified by multiple threads.</strong> Find all code that modifies <em>HttpSession</em> objects, which may be accessed by multiple threads. One approach is to search code for the <em>HttpSession</em> keyword and then trace each <em>HttpSession</em> object throughout the code.</li>\n<li> <strong>Use immutable objects as much as possible.</strong> Using immutable objects is a sound practice for avoiding concurrency issues and should be used as much as possible. The specifics of using immutable objects are different for different applications.</li>\n<li> <strong>Use class methods and local variables data handling.</strong> For each piece of code that modifies <em>HttpSession</em> objects, use thread-safe class methods and local variables if possible. </li>\n<li> <strong>Synchronize critical sections that must be executed as a single operation.</strong> For complex operations on <em>HttpSession</em> objects, make sure that critical sections are synchronized.</li>\n</ol>\n<h2>Problem Example</h2><p>A shopping cart has a Pay Now button that finalizes a purchase and charges the customer’s credit card. An application that is not thread safe may allow for a user to double-click the button and charge the customer twice for the same transaction.\n</p>\n<h2>Solution Example</h2><p>Synchronized critical sections or immutable objects both can help prevent concurrency issues that might lead to simultaneous credit card transactions.  \n</p>\n<h2>Additional Resources</h2><ul><li> For more information about using immutable objects, see <a href=\"http://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html\">http://docs.oracle.com/javase/tutorial/essential/concurrency/immutable.html</a></li>\n</ul>\n"
}