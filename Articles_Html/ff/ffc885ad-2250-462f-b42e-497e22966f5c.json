{
  "id": "ffc885ad-2250-462f-b42e-497e22966f5c",
  "checksum": "09f5d8c18c8f57f5a7407eea3e00ace4",
  "words": {
    "0": [
      "pre",
      "pre"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "h1",
      "h1",
      "p"
    ],
    "c++": [
      "p"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "verify": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "debug": [
      "p",
      "p",
      "p",
      "title"
    ],
    "assertions": [
      "p",
      "p",
      "p",
      "title"
    ],
    "are": [
      "p",
      "p",
      "p",
      "title"
    ],
    "not": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "used": [
      "p",
      "p",
      "title"
    ],
    "error": [
      "p",
      "p",
      "p",
      "p",
      "pre",
      "ul",
      "li",
      "a",
      "title"
    ],
    "handling": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h1"
    ],
    "compiled": [
      "p"
    ],
    "out": [
      "p"
    ],
    "of": [
      "p"
    ],
    "production": [
      "p",
      "p"
    ],
    "code": [
      "p",
      "p",
      "p",
      "p"
    ],
    "so": [
      "p"
    ],
    "they": [
      "p"
    ],
    "should": [
      "p"
    ],
    "be": [
      "p"
    ],
    "relied": [
      "p"
    ],
    "on": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p"
    ],
    "a": [
      "p"
    ],
    "environment": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "search": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "\"assert\"": [
      "p",
      "p"
    ],
    "operator": [
      "p",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "identify": [
      "p"
    ],
    "uses": [
      "p"
    ],
    "rewrite": [
      "p"
    ],
    "implement": [
      "p"
    ],
    "functional": [
      "p"
    ],
    "without": [
      "p"
    ],
    "using": [
      "p"
    ],
    "assertion": [
      "p",
      "p"
    ],
    "problem": [
      "h1"
    ],
    "example": [
      "h1",
      "p",
      "h1",
      "p"
    ],
    "following": [
      "p",
      "p"
    ],
    "read": [
      "p",
      "pre",
      "p",
      "pre"
    ],
    "api": [
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p"
    ],
    "called": [
      "p",
      "p"
    ],
    "and": [
      "p",
      "p"
    ],
    "then": [
      "p",
      "p"
    ],
    "return": [
      "p",
      "pre",
      "p",
      "pre",
      "pre"
    ],
    "value": [
      "p",
      "p"
    ],
    "checked": [
      "p",
      "p"
    ],
    "errors": [
      "p",
      "p"
    ],
    "an": [
      "p"
    ],
    "bool": [
      "pre",
      "pre"
    ],
    "readfromsocketsocket": [
      "pre",
      "pre"
    ],
    "socket": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "char": [
      "pre",
      "pre"
    ],
    "*recvbuffer": [
      "pre",
      "pre"
    ],
    "int": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "len{": [
      "pre",
      "pre"
    ],
    "//first": [
      "pre",
      "pre"
    ],
    "from": [
      "pre",
      "pre"
    ],
    "ret": [
      "pre",
      "pre",
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "readsocket,": [
      "pre",
      "pre"
    ],
    "recvbuffer": [
      "pre",
      "pre"
    ],
    "len": [
      "pre",
      "pre"
    ],
    "0;": [
      "pre",
      "pre"
    ],
    "assertret": [
      "pre"
    ],
    "parsebufferrecvbuffer,": [
      "pre",
      "pre"
    ],
    "len;}": [
      "pre"
    ],
    "solution": [
      "h1"
    ],
    "if": [
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre"
    ],
    "//now": [
      "pre"
    ],
    "parse": [
      "pre"
    ],
    "buffer": [
      "pre"
    ],
    "len;": [
      "pre"
    ],
    "}": [
      "pre"
    ],
    "else": [
      "pre"
    ],
    "//can": [
      "pre"
    ],
    "call": [
      "pre"
    ],
    "wsagetlasterror": [
      "pre"
    ],
    "we": [
      "pre"
    ],
    "need": [
      "pre"
    ],
    "details": [
      "pre"
    ],
    "false": [
      "pre"
    ],
    "}}": [
      "pre"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "do": [
      "ul",
      "li",
      "a"
    ],
    "use": [
      "ul",
      "li",
      "a"
    ],
    "asserts": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {},
  "links": [
    {
      "href": "/article/b2050dca-6329-4360-b218-070305fe6890",
      "text": "Do Not Use Asserts for Error Handling"
    }
  ]
}