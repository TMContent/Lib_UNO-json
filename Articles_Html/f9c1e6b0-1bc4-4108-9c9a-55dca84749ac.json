{
  "id": "f9c1e6b0-1bc4-4108-9c9a-55dca84749ac",
  "checksum": "457d2c0b7cc9a57249cd80ef3d539881113a62d4",
  "words": {
    "0": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "h1",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "ensure": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "all": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "stored": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "p"
    ],
    "within": [
      "p"
    ],
    "configuration": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "files is": [
      "p"
    ],
    "protected": [
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h1"
    ],
    "files": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "are": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "a": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "likely": [
      "p"
    ],
    "target": [
      "p"
    ],
    "any": [
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "attacker": [
      "p",
      "p"
    ],
    "if": [
      "p"
    ],
    "an": [
      "p"
    ],
    "compromises": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "unprotected": [
      "p"
    ],
    "inside": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "them": [
      "p",
      "p"
    ],
    "will": [
      "p"
    ],
    "also": [
      "p"
    ],
    "be": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "compromised": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "use": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "following": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "steps": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "application": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "protects": [
      "p"
    ],
    "in": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "its": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "that sensitive": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "encrypted": [
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "p"
    ],
    "verify": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "pieces": [
      "ol",
      "li",
      "p"
    ],
    "place": [
      "ol",
      "li",
      "p"
    ],
    "when": [
      "ol",
      "li",
      "p"
    ],
    "encrypting": [
      "ol",
      "li",
      "p"
    ],
    "file": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "encryption": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "key": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "strong"
    ],
    "securely": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "application's": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "store": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "function": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "strong"
    ],
    "uses": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "aes": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "3des": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "or": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "other": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "strong": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "symmetric": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "invocation": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "invokes": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "cipherinit": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "and": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "cipherdofinal": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "methods": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "perform": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "procedure": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "has": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "appropriate": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "filesystem": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "permissions": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "can": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "accessed": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "administrators": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "directory": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "not": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "web": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "accessible": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "placed": [
      "ol",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "li",
      "p"
    ],
    "web-accessible": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "protect": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "locate": [
      "ol",
      "li",
      "p"
    ],
    "examples": [
      "ol",
      "li",
      "p"
    ],
    "of": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "include": [
      "ol",
      "li",
      "p"
    ],
    "but": [
      "ol",
      "li",
      "p"
    ],
    "limited": [
      "ol",
      "li",
      "p"
    ],
    "credentials": [
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "connection": [
      "ol",
      "li",
      "p"
    ],
    "strings": [
      "ol",
      "li",
      "p"
    ],
    "paths": [
      "ol",
      "li",
      "p"
    ],
    "encrypt": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "confidentiality": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "case": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "once": [
      "ol",
      "li",
      "p"
    ],
    "accesses": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "decrypt": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "pre"
    ],
    "just": [
      "ol",
      "li",
      "p"
    ],
    "before": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "p",
      "h1",
      "h1"
    ],
    "public": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "properties": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "loaddatabasecredentials)": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "throws": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "generalsecurityexception": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "ioexception{": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "//": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "set": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "ul",
      "li",
      "p",
      "strong",
      "pre"
    ],
    "decryption": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "mechanism": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "byte]": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "rawkey": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "getencryptionkey);": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "secretkeyspec": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "skeyspec": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "new": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "secretkeyspecrawkey,": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "\"aes\";": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "cipher": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "ciphergetinstance(\"aes\");": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "cipherinit(cipher.decrypt_mode,": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "skeyspec;": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "config": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "configfile": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "file\"../../config/testprop.config\");": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "tempbuff": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "byte(int)configfile.length()];": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "fileinputstream": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "filestream": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "fileinputstreamconfigfile);": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "filestreamread(tempbuff,": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "tempbufflength);": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "inputstream": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "propstream": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "bytearrayinputstreamcipher.dofinal(tempbuff));": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "propload(propstream);": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "propstreamclose();": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "filestreamclose();": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "return": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "prop}": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "choose": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong"
    ],
    "dedicate": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "storing": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "limits": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "scope": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "users who": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "potentially": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "compromise": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "contents": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "apply": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "such": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "problem": [
      "h1"
    ],
    "code": [
      "p",
      "p"
    ],
    "retrieves": [
      "p",
      "p"
    ],
    "database": [
      "p",
      "p",
      "p"
    ],
    "from": [
      "p",
      "p"
    ],
    "unfortunately": [
      "p"
    ],
    "therefore": [
      "p"
    ],
    "anybody": [
      "p"
    ],
    "with": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "p"
    ],
    "retrieve": [
      "p"
    ],
    "on": [
      "p"
    ],
    "behalf": [
      "p"
    ],
    "prop": [
      "pre"
    ],
    "properties);": [
      "pre"
    ],
    "fileinputstream\"../../config/testprop.config\");": [
      "pre"
    ],
    "solution": [
      "h1"
    ],
    "because": [
      "p"
    ],
    "decrypts": [
      "p"
    ],
    "real": [
      "p"
    ],
    "time": [
      "p"
    ],
    "protecting": [
      "p"
    ],
    "credentials'": [
      "p"
    ],
    "local": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "secured": [
      "p"
    ],
    "java": [
      "h1",
      "h1"
    ],
    "deployment": [
      "h1",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "remove": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "test": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "accounts": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "interfaces": [
      "ul",
      "li",
      "a"
    ],
    "disable": [
      "ul",
      "li",
      "a"
    ],
    "browsing": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "least-privileged": [
      "ul",
      "li",
      "a"
    ],
    "account": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "running": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "applications": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h1"
    ],
    "removed": [
      "ul",
      "li",
      "a"
    ],
    "disabled": [
      "ul",
      "li",
      "a"
    ],
    "least": [
      "ul",
      "li",
      "a"
    ],
    "privileged": [
      "ul",
      "li",
      "a"
    ],
    "used": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Problem Example",
      "Solution Example",
      "Java Deployment Guidelines",
      "Java Deployment Checklists"
    ],
    "p": [
      "Ensure all sensitive data stored within configuration files is protected.",
      "Configuration files are a likely target for any attacker. If an attacker compromises the configuration files, any unprotected sensitive data inside them will also be compromised.",
      "Use the following steps to ensure that your application protects all sensitive data in its configuration files:",
      "Ensure that sensitive data is encrypted. Verify that the following pieces are in place when encrypting the configuration file:",
      "Ensure that the configuration file has the appropriate filesystem permissions. Ensure that the configuration file can be accessed only by your application and its administrators.",
      "Verify that the configuration directory is not web accessible. Verify that the configuration file is not placed into a web-accessible directory.",
      "To protect sensitive data inside configuration files use the following steps:",
      "Identify the sensitive data. Locate all sensitive data that is stored inside configuration files. Examples of sensitive data include, but are not limited to, credentials, connection strings and directory paths.",
      "Encrypt sensitive data inside the configuration files. Encrypt the sensitive data inside the configuration file to ensure its confidentiality in case this file is compromised. Once the application accesses the configuration file, it should decrypt the sensitive data just before use. Example:",
      "Protect configuration files.",
      "Choose a configuration directory: Dedicate a directory for storing your application's configuration files. Make sure the directory is not web-accessible. This limits the scope of users who can potentially compromise the contents inside the directory.",
      "Set appropriate permissions: Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "The following code retrieves database credentials from a configuration file. Unfortunately, the credentials are not encrypted; therefore, anybody with access to the configuration file can retrieve the credentials and access the database on behalf of the application.",
      "The following code retrieves database credentials from a configuration file. Because the credentials are encrypted, the application decrypts them in real time, protecting the credentials' confidentiality in case the local access to the configuration file is not properly secured."
    ],
    "ol": [
      "Ensure that sensitive data is encrypted. Verify that the following pieces are in place when encrypting the configuration file:\n      \n        \n          Encryption Key: The encryption key is securely stored inside your application's key store. Function: Your application uses AES, 3DES or any other strong symmetric encryption function. Invocation: Your application invokes the Cipher.init and Cipher.doFinal methods to perform the encryption procedure. \n      \n      \n        \n          Ensure that the configuration file has the appropriate filesystem permissions. Ensure that the configuration file can be accessed only by your application and its administrators.\n        \n          \n            Verify that the configuration directory is not web accessible. Verify that the configuration file is not placed into a web-accessible directory.",
      "Identify the sensitive data. Locate all sensitive data that is stored inside configuration files. Examples of sensitive data include, but are not limited to, credentials, connection strings and directory paths.\n      \n        \n          Encrypt sensitive data inside the configuration files. Encrypt the sensitive data inside the configuration file to ensure its confidentiality in case this file is compromised. Once the application accesses the configuration file, it should decrypt the sensitive data just before use. Example:\n        public Properties loadDatabaseCredentials()      throws GeneralSecurityException, IOException{      // Set the decryption mechanism      byte[] rawKey = getEncryptionKey();      SecretKeySpec skeySpec = new SecretKeySpec(rawKey, \"AES\");      Cipher cipher = Cipher.getInstance(\"AES\");      cipher.init(Cipher.DECRYPT_MODE, skeySpec);      // Decrypt config file      File configFile = new File(\"../../config/testProp.config\");      byte[] tempBuff = new byte[(int)configFile.length()];      FileInputStream fileStream = new FileInputStream(configFile);      fileStream.read(tempBuff, 0, tempBuff.length);      InputStream propStream = new ByteArrayInputStream(cipher.doFinal(tempBuff));      prop.load(propStream);      propStream.close();      fileStream.close();      return prop;}\n        \n          \n            Protect configuration files.\n          \n          \n            \n              \n                Choose a configuration directory: Dedicate a directory for storing your application's configuration files. Make sure the directory is not web-accessible. This limits the scope of users who can potentially compromise the contents inside the directory.\n              \n                \n                  Set appropriate permissions: Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators."
    ],
    "li": [
      "Ensure that sensitive data is encrypted. Verify that the following pieces are in place when encrypting the configuration file:\n      \n        \n          Encryption Key: The encryption key is securely stored inside your application's key store. Function: Your application uses AES, 3DES or any other strong symmetric encryption function. Invocation: Your application invokes the Cipher.init and Cipher.doFinal methods to perform the encryption procedure.",
      "Encryption Key: The encryption key is securely stored inside your application's key store.",
      "Function: Your application uses AES, 3DES or any other strong symmetric encryption function.",
      "Invocation: Your application invokes the Cipher.init and Cipher.doFinal methods to perform the encryption procedure.",
      "Ensure that the configuration file has the appropriate filesystem permissions. Ensure that the configuration file can be accessed only by your application and its administrators.",
      "Verify that the configuration directory is not web accessible. Verify that the configuration file is not placed into a web-accessible directory.",
      "Identify the sensitive data. Locate all sensitive data that is stored inside configuration files. Examples of sensitive data include, but are not limited to, credentials, connection strings and directory paths.",
      "Encrypt sensitive data inside the configuration files. Encrypt the sensitive data inside the configuration file to ensure its confidentiality in case this file is compromised. Once the application accesses the configuration file, it should decrypt the sensitive data just before use. Example:\n        public Properties loadDatabaseCredentials()      throws GeneralSecurityException, IOException{      // Set the decryption mechanism      byte[] rawKey = getEncryptionKey();      SecretKeySpec skeySpec = new SecretKeySpec(rawKey, \"AES\");      Cipher cipher = Cipher.getInstance(\"AES\");      cipher.init(Cipher.DECRYPT_MODE, skeySpec);      // Decrypt config file      File configFile = new File(\"../../config/testProp.config\");      byte[] tempBuff = new byte[(int)configFile.length()];      FileInputStream fileStream = new FileInputStream(configFile);      fileStream.read(tempBuff, 0, tempBuff.length);      InputStream propStream = new ByteArrayInputStream(cipher.doFinal(tempBuff));      prop.load(propStream);      propStream.close();      fileStream.close();      return prop;}",
      "Protect configuration files.\n          \n          \n            \n              \n                Choose a configuration directory: Dedicate a directory for storing your application's configuration files. Make sure the directory is not web-accessible. This limits the scope of users who can potentially compromise the contents inside the directory.\n              \n                \n                  Set appropriate permissions: Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "Choose a configuration directory: Dedicate a directory for storing your application's configuration files. Make sure the directory is not web-accessible. This limits the scope of users who can potentially compromise the contents inside the directory.",
      "Set appropriate permissions: Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "Remove Test Accounts",
      "Remove Test Interfaces",
      "Disable Directory Browsing",
      "Use a Least-Privileged Account for Running Applications",
      "Protect Sensitive Data Inside Configuration Files",
      "Test Accounts Are Removed",
      "Directory Browsing Is Disabled",
      "A Least Privileged Account Is Used for Running Applications",
      "Sensitive Data Inside Configuration Files Is Protected"
    ],
    "strong": [
      "Ensure that sensitive data is encrypted.",
      "Encryption Key",
      "Function",
      "Invocation",
      "Ensure that the configuration file has the appropriate filesystem permissions.",
      "Verify that the configuration directory is not web accessible.",
      "Identify the sensitive data.",
      "Encrypt sensitive data inside the configuration files.",
      "Protect configuration files.",
      "Choose a configuration directory",
      "Set appropriate permissions"
    ],
    "ul": [
      "Encryption Key: The encryption key is securely stored inside your application's key store. Function: Your application uses AES, 3DES or any other strong symmetric encryption function. Invocation: Your application invokes the Cipher.init and Cipher.doFinal methods to perform the encryption procedure.",
      "Choose a configuration directory: Dedicate a directory for storing your application's configuration files. Make sure the directory is not web-accessible. This limits the scope of users who can potentially compromise the contents inside the directory.\n              \n                \n                  Set appropriate permissions: Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "Remove Test Accounts\n      \n        Remove Test Interfaces\n        \n          Disable Directory Browsing\n          \n            Use a Least-Privileged Account for Running Applications\n              \n                Protect Sensitive Data Inside Configuration Files",
      "Test Accounts Are Removed\n        \n          Directory Browsing Is Disabled\n          \n            A Least Privileged Account Is Used for Running Applications\n              \n                Sensitive Data Inside Configuration Files Is Protected"
    ],
    "em": [
      "Cipher.init",
      "Cipher.doFinal"
    ],
    "pre": [
      "public Properties loadDatabaseCredentials()      throws GeneralSecurityException, IOException{      // Set the decryption mechanism      byte[] rawKey = getEncryptionKey();      SecretKeySpec skeySpec = new SecretKeySpec(rawKey, \"AES\");      Cipher cipher = Cipher.getInstance(\"AES\");      cipher.init(Cipher.DECRYPT_MODE, skeySpec);      // Decrypt config file      File configFile = new File(\"../../config/testProp.config\");      byte[] tempBuff = new byte[(int)configFile.length()];      FileInputStream fileStream = new FileInputStream(configFile);      fileStream.read(tempBuff, 0, tempBuff.length);      InputStream propStream = new ByteArrayInputStream(cipher.doFinal(tempBuff));      prop.load(propStream);      propStream.close();      fileStream.close();      return prop;}",
      "public Properties loadDatabaseCredentials() throws IOException{      Properties prop = new Properties();      InputStream propStream = new FileInputStream(\"../../config/testProp.config\");      prop.load(propStream);      propStream.close();      return prop;}",
      "public Properties loadDatabaseCredentials()      throws GeneralSecurityException, IOException{      // Set the decryption mechanism      byte[] rawKey = getEncryptionKey();      SecretKeySpec skeySpec = new SecretKeySpec(rawKey, \"AES\");      Cipher cipher = Cipher.getInstance(\"AES\");      cipher.init(Cipher.DECRYPT_MODE, skeySpec);      // Decrypt config file      File configFile = new File(\"../../config/testProp.config\");      byte[] tempBuff = new byte[(int)configFile.length()];      FileInputStream fileStream = new FileInputStream(configFile);      fileStream.read(tempBuff, 0, tempBuff.length);      InputStream propStream = new ByteArrayInputStream(cipher.doFinal(tempBuff));      prop.load(propStream);      propStream.close();      fileStream.close();      return prop;}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "Remove Test Accounts",
      "Remove Test Interfaces",
      "Disable Directory Browsing",
      "Use a Least-Privileged Account for Running Applications",
      "Protect Sensitive Data Inside Configuration Files",
      "Test Accounts Are Removed",
      "Directory Browsing Is Disabled",
      "A Least Privileged Account Is Used for Running Applications",
      "Sensitive Data Inside Configuration Files Is Protected"
    ]
  },
  "links": [
    {
      "href": "/article/f21f5350-826d-44dd-b758-fd824d52f592",
      "text": "Remove Test Accounts"
    },
    {
      "href": "/article/df860f3d-2185-4939-be4b-ef26d8891855",
      "text": "Remove Test Interfaces"
    },
    {
      "href": "/article/fd675679-e8ad-40fc-bac4-d56fc440bc00",
      "text": "Disable Directory Browsing"
    },
    {
      "href": "/article/aebb10ce-aeb6-45e5-b159-e2bc76b012bf",
      "text": "Use a Least-Privileged Account for Running Applications"
    },
    {
      "href": "/article/3f301ff9-098d-46cb-ac53-cb3fa6897cdf",
      "text": "Protect Sensitive Data Inside Configuration Files"
    },
    {
      "href": "/article/256b4884-9ff0-4a33-960c-305b824bab68",
      "text": "Test Accounts Are Removed"
    },
    {
      "href": "/article/65e70f79-645d-415c-9e71-9cff045cc1c4",
      "text": "Directory Browsing Is Disabled"
    },
    {
      "href": "/article/a2000bc9-7e22-4d0c-91b8-a9ec623985d3",
      "text": "A Least Privileged Account Is Used for Running Applications"
    },
    {
      "href": "/article/f9c1e6b0-1bc4-4108-9c9a-55dca84749ac",
      "text": "Sensitive Data Inside Configuration Files Is Protected"
    }
  ],
  "html": "<h1>What to Check For</h1>\n  <p>Ensure all sensitive data stored within configuration files&nbsp;is protected.</p>\n  <h1>Why</h1>\n  <p>Configuration files are a likely target for any attacker. If an attacker compromises the configuration files, any unprotected sensitive data inside them will also be compromised.</p>\n  <h1>How to Check</h1>\n  <p>Use the following steps to ensure that your application protects all sensitive data in its configuration files:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Ensure that&nbsp;sensitive data is encrypted. </strong>Verify that the following pieces are in place when encrypting the configuration file:</p>\n      <ul>\n        <li>\n          <strong>Encryption Key</strong>: The encryption key is securely stored inside your application's key store. <li><strong>Function</strong>: Your application uses AES, 3DES or any other strong symmetric encryption function. <li><strong>Invocation</strong>: Your application invokes the <em>Cipher.init</em> and <em>Cipher.doFinal</em> methods to perform the encryption procedure. </li></li></li>\n      </ul>\n      <li>\n        <p>\n          <strong>Ensure that the configuration file has the appropriate filesystem permissions. </strong>Ensure that the configuration file can be accessed only by your application and its administrators.</p>\n        <li>\n          <p>\n            <strong>Verify that the configuration directory is not web accessible. </strong>Verify that the configuration file is not placed into a web-accessible directory.</p>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>How to Fix</h1>\n  <p>To protect sensitive data inside configuration files use the following steps:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify the sensitive data. </strong>Locate all sensitive data that is stored inside configuration files. Examples of sensitive data include, but are not limited to, credentials, connection strings and directory paths.</p>\n      <li>\n        <p>\n          <strong>Encrypt sensitive data inside the configuration files. </strong>Encrypt the sensitive data inside the configuration file to ensure its confidentiality in case this file is compromised. Once the application accesses the configuration file, it should decrypt the sensitive data just before use. Example:</p>\n        <pre>public Properties loadDatabaseCredentials()<br />      throws GeneralSecurityException, IOException&#123;<br />      // Set the decryption mechanism<br />      byte&#91;&#93; rawKey = getEncryptionKey();<br />      SecretKeySpec skeySpec = new SecretKeySpec(rawKey, \"AES\");<br />      Cipher cipher = Cipher.getInstance(\"AES\");<br />      cipher.init(Cipher.DECRYPT_MODE, skeySpec);<br /><br />      // Decrypt config file<br /><br />      File configFile = new File(\"../../config/testProp.config\");<br />      byte&#91;&#93; tempBuff = new byte&#91;(int)configFile.length()&#93;;<br />      FileInputStream fileStream = new FileInputStream(configFile);<br />      fileStream.read(tempBuff, 0, tempBuff.length);<br /><br />      InputStream propStream = new ByteArrayInputStream(cipher.doFinal(tempBuff));<br />      prop.load(propStream);<br />      propStream.close();<br />      fileStream.close();<br /><br />      return prop;&#125;</pre>\n        <li>\n          <p>\n            <strong>Protect configuration files.</strong>\n          </p>\n          <ul>\n            <li>\n              <p>\n                <strong>Choose a configuration directory</strong>: Dedicate a directory for storing your application's configuration files. Make sure the directory is not web-accessible. This limits the scope of users&nbsp;who can potentially compromise the contents inside the directory.</p>\n              <li>\n                <p>\n                  <strong>Set appropriate permissions</strong>: Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.</p>\n              </li>\n            </li>\n          </ul>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>Problem Example</h1>\n  <p>The following code retrieves database credentials from a configuration file. Unfortunately, the credentials are not encrypted; therefore, anybody with access to the configuration file can retrieve the credentials and access the database on behalf of the application.</p>\n  <pre>public Properties loadDatabaseCredentials() throws IOException&#123;<br />      Properties prop = new Properties();<br />      InputStream propStream = new FileInputStream(\"../../config/testProp.config\");<br />      prop.load(propStream);<br />      propStream.close();<br /><br />      return prop;&#125;</pre>\n  <h1>Solution Example</h1>\n  <p>The following code retrieves database credentials from a configuration file. Because the credentials are encrypted, the application decrypts them in real time, protecting the credentials' confidentiality in case the local access to the configuration file is not properly secured.</p>\n  <pre>public Properties loadDatabaseCredentials()<br />      throws GeneralSecurityException, IOException&#123;<br />      // Set the decryption mechanism<br />      byte&#91;&#93; rawKey = getEncryptionKey();<br />      SecretKeySpec skeySpec = new SecretKeySpec(rawKey, \"AES\");<br />      Cipher cipher = Cipher.getInstance(\"AES\");<br />      cipher.init(Cipher.DECRYPT_MODE, skeySpec);<br /><br />      // Decrypt config file<br /><br />      File configFile = new File(\"../../config/testProp.config\");<br />      byte&#91;&#93; tempBuff = new byte&#91;(int)configFile.length()&#93;;<br />      FileInputStream fileStream = new FileInputStream(configFile);<br />      fileStream.read(tempBuff, 0, tempBuff.length);<br /><br />      InputStream propStream = new ByteArrayInputStream(cipher.doFinal(tempBuff));<br />      prop.load(propStream);<br />      propStream.close();<br />      fileStream.close();<br /><br />      return prop;&#125;</pre>\n  <h1>Java Deployment Guidelines</h1>\n  <ul>\n    <li>\n      <a href=\"/article/f21f5350-826d-44dd-b758-fd824d52f592\">Remove Test Accounts</a>\n      <li>\n        <a href=\"/article/df860f3d-2185-4939-be4b-ef26d8891855\">Remove Test Interfaces</a>\n        <li>\n          <a href=\"/article/fd675679-e8ad-40fc-bac4-d56fc440bc00\">Disable Directory Browsing</a>\n          <li>\n            <a href=\"/article/aebb10ce-aeb6-45e5-b159-e2bc76b012bf\">Use a Least-Privileged Account for Running Applications</a>\n              <li>\n                <a href=\"/article/3f301ff9-098d-46cb-ac53-cb3fa6897cdf\">Protect Sensitive Data Inside Configuration Files</a>\n              </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ul>\n  <h1>Java Deployment Checklists</h1>\n  <ul>\n    <li>\n      <a href=\"/article/256b4884-9ff0-4a33-960c-305b824bab68\">Test Accounts Are Removed</a>\n        <li>\n          <a href=\"/article/65e70f79-645d-415c-9e71-9cff045cc1c4\">Directory Browsing Is Disabled</a>\n          <li>\n            <a href=\"/article/a2000bc9-7e22-4d0c-91b8-a9ec623985d3\">A Least Privileged Account Is Used for Running Applications</a>\n              <li>\n                <a href=\"/article/f9c1e6b0-1bc4-4108-9c9a-55dca84749ac\">Sensitive Data Inside Configuration Files Is Protected</a>\n              </li>\n          </li>\n      </li>\n    </li>\n  </ul>"
}