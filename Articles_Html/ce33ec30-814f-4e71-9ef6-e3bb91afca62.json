{
  "id": "ce33ec30-814f-4e71-9ef6-e3bb91afca62",
  "checksum": "5548494326efbf42fa2bca1552a20d9875f1984b",
  "words": {
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "h1",
      "h1",
      "p",
      "p"
    ],
    "c++": [
      "ul",
      "li",
      "p"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "verify": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "user": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "input": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "not": [
      "p",
      "title"
    ],
    "used": [
      "p",
      "p",
      "p",
      "title"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "format": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "strings": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "why": [
      "h1"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "can": [
      "p"
    ],
    "control": [
      "p"
    ],
    "the": [
      "p"
    ],
    "contents": [
      "p"
    ],
    "of": [
      "p"
    ],
    "a": [
      "p",
      "p"
    ],
    "string": [
      "p"
    ],
    "may": [
      "p"
    ],
    "be": [
      "p"
    ],
    "able": [
      "p"
    ],
    "execute": [
      "p"
    ],
    "arbitrary": [
      "p"
    ],
    "code": [
      "p",
      "p",
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "identify": [
      "p"
    ],
    "all": [
      "p"
    ],
    "uses": [
      "p"
    ],
    "formatted": [
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "input-output": [
      "p",
      "p"
    ],
    "functions": [
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "never": [
      "p",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "avoid": [
      "p"
    ],
    "using": [
      "p"
    ],
    "if": [
      "p",
      "p"
    ],
    "possible": [
      "p"
    ],
    "it": [
      "p",
      "p"
    ],
    "recommended": [
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "streams": [
      "p"
    ],
    "instead": [
      "p"
    ],
    "necessary": [
      "p"
    ],
    "write": [
      "p"
    ],
    "such": [
      "p"
    ],
    "way": [
      "p"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "more": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "about": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "excluding": [
      "ul",
      "li"
    ],
    "from": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "please": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "\"fio30-cpp": [
      "ul",
      "li"
    ],
    "exclude": [
      "ul",
      "li"
    ],
    "strings\"": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "https//www.securecoding.cert.org/confluence/display/cplusplus/fio30-cpp.+exclude+user+input+from+format+strings": [
      "ul",
      "li",
      "a"
    ],
    "output": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "\"formatted": [
      "ul",
      "li"
    ],
    "functions\"": [
      "ul",
      "li"
    ],
    "http//www.gnu.org/s/libc/manual/html_node/formatted-output-functions.html": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Additional Resources"
    ],
    "ul": [
      "C++",
      "For more information about excluding user input from format strings, please see \"FIO30-CPP. Exclude user input from format strings\" at https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings\n    For more information about formatted output functions, please see \"Formatted Output Functions\" at http://www.gnu.org/s/libc/manual/html_node/Formatted-Output-Functions.html"
    ],
    "li": [
      "C++",
      "For more information about excluding user input from format strings, please see \"FIO30-CPP. Exclude user input from format strings\" at https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings",
      "For more information about formatted output functions, please see \"Formatted Output Functions\" at http://www.gnu.org/s/libc/manual/html_node/Formatted-Output-Functions.html"
    ],
    "p": [
      "Verify that user input is not used in format strings.",
      "An attacker that can control the contents of a format string may be able to execute arbitrary code.",
      "Identify all code that uses formatted input-output functions. Verify that user input is never used in format strings.",
      "Avoid using formatted functions, if possible. It is recommended to use C++ streams instead. If it is necessary to use formatted input-output functions, write code in such a way that user input is never used in format strings."
    ],
    "a": [
      "https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings",
      "http://www.gnu.org/s/libc/manual/html_node/Formatted-Output-Functions.html"
    ],
    "br": [
      ""
    ]
  },
  "links": [
    {
      "href": "https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings",
      "text": "https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings"
    },
    {
      "href": "http://www.gnu.org/s/libc/manual/html_node/Formatted-Output-Functions.html",
      "text": "http://www.gnu.org/s/libc/manual/html_node/Formatted-Output-Functions.html"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>C++</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Verify that user input is not used in format strings.</p>\n  <h1>Why</h1>\n  <p>An attacker that can control the contents of a format string may be able to execute arbitrary code.</p>\n  <h1>How to Check</h1>\n  <p>Identify all code that uses formatted input-output functions. Verify that user input is never used in format strings.</p>\n  <h1>How to Fix</h1>\n  <p>Avoid using formatted functions, if possible. It is recommended to use C++ streams instead. If it is necessary to use formatted input-output functions, write code in such a way that user input is never used in format strings. </p>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information about excluding user input from format strings, please see \"FIO30-CPP. Exclude user input from format strings\" at <a href=\"https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings\">https://www.securecoding.cert.org/confluence/display/cplusplus/FIO30-CPP.+Exclude+user+input+from+format+strings</a></li>\n    <li>For more information about formatted output functions, please see \"Formatted Output Functions\" at <a href=\"http://www.gnu.org/s/libc/manual/html_node/Formatted-Output-Functions.html\">http://www.gnu.org/s/libc/manual/html_node/Formatted-Output-Functions.html</a></li>\n  </ul>\n  <br />"
}