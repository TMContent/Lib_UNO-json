{
  "id": "00000000-0000-0000-0000-00000057bb79",
  "checksum": "1631e9efef3d8c09787c05500ce34aa8ca89f790",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p"
    ],
    "java": [
      "ul",
      "li",
      "p"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2"
    ],
    "use": [
      "p",
      "p",
      "title"
    ],
    "strong": [
      "p",
      "p",
      "p",
      "title"
    ],
    "session": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "identifiers": [
      "p",
      "p",
      "title"
    ],
    "if": [
      "p",
      "p",
      "p"
    ],
    "your": [
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "p"
    ],
    "keeps": [
      "p"
    ],
    "state": [
      "p",
      "p"
    ],
    "why": [
      "h2"
    ],
    "using": [
      "p"
    ],
    "cryptographically": [
      "p"
    ],
    "prevents": [
      "p"
    ],
    "attackers": [
      "p"
    ],
    "from": [
      "p"
    ],
    "easily": [
      "p"
    ],
    "guessing": [
      "p"
    ],
    "ids": [
      "p",
      "p"
    ],
    "and": [
      "p",
      "p"
    ],
    "taking": [
      "p"
    ],
    "over": [
      "p"
    ],
    "users'": [
      "p"
    ],
    "sessions": [
      "p"
    ],
    "an": [
      "p",
      "p"
    ],
    "attacker": [
      "p"
    ],
    "hijacks": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "he/she": [
      "p"
    ],
    "can": [
      "p"
    ],
    "perform": [
      "p"
    ],
    "same": [
      "p"
    ],
    "functions": [
      "p"
    ],
    "as": [
      "p"
    ],
    "logged": [
      "p"
    ],
    "in": [
      "p",
      "p"
    ],
    "user": [
      "p",
      "p",
      "p"
    ],
    "this": [
      "p"
    ],
    "will": [
      "p"
    ],
    "lead": [
      "p"
    ],
    "a": [
      "p"
    ],
    "compromise": [
      "p"
    ],
    "of": [
      "p"
    ],
    "account": [
      "p"
    ],
    "case": [
      "p"
    ],
    "is": [
      "p"
    ],
    "administrator": [
      "p"
    ],
    "whole": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "httpsession": [
      "p",
      "em"
    ],
    "interface": [
      "p"
    ],
    "uses": [
      "p",
      "p"
    ],
    "by": [
      "p"
    ],
    "default": [
      "p",
      "p",
      "p"
    ],
    "please": [
      "p"
    ],
    "make": [
      "p"
    ],
    "sure": [
      "p"
    ],
    "that": [
      "p"
    ],
    "rewrite": [
      "p"
    ],
    "handling": [
      "p"
    ],
    "code": [
      "p"
    ],
    "necessary": [
      "p"
    ],
    "httpservletrequestgetsession": [
      "p",
      "em"
    ],
    "generate": [
      "p"
    ],
    "new": [
      "p"
    ],
    "id": [
      "p"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How"
    ],
    "ul": [
      "Java"
    ],
    "li": [
      "Java"
    ],
    "p": [
      "Use strong session identifiers if your application keeps session state.",
      "Using cryptographically strong session identifiers prevents attackers from easily guessing session ids and taking over users' sessions. If an attacker hijacks the session he/she can perform the same functions as the logged in user. This will lead to a compromise of user account and in case the user is an administrator, the whole application.",
      "Java HttpSession interface uses strong session IDs by default. Please, make sure that your application uses the default. Rewrite the application session state handling code, if necessary, to use the default HttpServletRequest.getSession to generate new session ID."
    ],
    "em": [
      "HttpSession",
      "HttpServletRequest.getSession"
    ]
  },
  "links": [],
  "html": "<h2>Applies To</h2><ul><li> Java</li>\n</ul><h2>What to Do</h2><p>Use strong session identifiers if your application keeps session state.\n</p><h2>Why</h2><p>Using cryptographically strong session identifiers prevents attackers from easily guessing session ids and taking over users' sessions. If an attacker hijacks the session he/she can perform the same functions as the logged in user. This will lead to a compromise of user account and in case the user is an administrator, the whole application.\n</p><h2>How</h2><p>Java <em>HttpSession</em> interface uses strong session IDs by default. Please, make sure that your application uses the default. Rewrite the application session state handling code, if necessary, to use the default <em>HttpServletRequest.getSession</em> to generate new session ID. \n</p>\n"
}