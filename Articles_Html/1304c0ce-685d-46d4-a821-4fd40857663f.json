{
  "id": "1304c0ce-685d-46d4-a821-4fd40857663f",
  "checksum": "9c6df05c4583d96d0daff95283cc77b5e3d17d37",
  "words": {
    "description": [
      "h1"
    ],
    "if": [
      "p",
      "p",
      "p"
    ],
    "you": [
      "p",
      "p",
      "p"
    ],
    "need": [
      "p",
      "p",
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "call": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "codeaccesspermission": [
      "p",
      "p",
      "b",
      "b"
    ],
    "assert": [
      "p",
      "p",
      "p",
      "b",
      "b",
      "p",
      "p",
      "p",
      "b",
      "b",
      "b",
      "title"
    ],
    "method": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "prevent": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p"
    ],
    "demand": [
      "p",
      "title"
    ],
    "from": [
      "p",
      "p"
    ],
    "propagating": [
      "p"
    ],
    "beyond": [
      "p"
    ],
    "current": [
      "p"
    ],
    "stack": [
      "p"
    ],
    "frame": [
      "p"
    ],
    "consider": [
      "p",
      "p"
    ],
    "demanding": [
      "p",
      "p"
    ],
    "an": [
      "p",
      "p",
      "p"
    ],
    "alternate": [
      "p"
    ],
    "permission": [
      "p",
      "p",
      "p"
    ],
    "authorize": [
      "p"
    ],
    "calling": [
      "p",
      "p"
    ],
    "code": [
      "p",
      "p",
      "p",
      "p"
    ],
    "before": [
      "p"
    ],
    "for": [
      "p"
    ],
    "example": [
      "p"
    ],
    "unmanaged": [
      "p",
      "p"
    ],
    "library": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "title"
    ],
    "another": [
      "p"
    ],
    "built-in": [
      "p"
    ],
    "or": [
      "p"
    ],
    "custom": [
      "p"
    ],
    "first": [
      "p"
    ],
    "only": [
      "p"
    ],
    "satisfy": [
      "p"
    ],
    "demands": [
      "p"
    ],
    "of": [
      "p",
      "p"
    ],
    "single": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "your": [
      "p",
      "p"
    ],
    "calls": [
      "p",
      "p"
    ],
    "then": [
      "p",
      "p"
    ],
    "place": [
      "p",
      "p"
    ],
    "prior": [
      "p"
    ],
    "immediately": [
      "p"
    ],
    "revertassert": [
      "p",
      "p",
      "b",
      "b"
    ],
    "keep": [
      "p"
    ],
    "assertion": [
      "p"
    ],
    "window": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "small": [
      "p"
    ],
    "possible": [
      "p"
    ],
    "ensure": [
      "p",
      "p"
    ],
    "any": [
      "p"
    ],
    "subsequent": [
      "p"
    ],
    "does": [
      "p"
    ],
    "not": [
      "p"
    ],
    "inadvertently": [
      "p"
    ],
    "succeed": [
      "p"
    ],
    "because": [
      "p"
    ],
    "is": [
      "p",
      "p"
    ],
    "still": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p"
    ],
    "effect": [
      "p"
    ],
    "common": [
      "p"
    ],
    "practice": [
      "p"
    ],
    "finally": [
      "p",
      "b"
    ],
    "block": [
      "p"
    ],
    "it": [
      "p"
    ],
    "always": [
      "p"
    ],
    "gets": [
      "p"
    ],
    "called": [
      "p"
    ],
    "even": [
      "p"
    ],
    "event": [
      "p"
    ],
    "exception": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "how": [
      "title"
    ],
    "use": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Description",
      ""
    ],
    "p": [
      "If you need to call the CodeAccessPermission. Assert method to prevent a demand from propagating beyond the current stack frame, consider demanding an alternate permission to authorize the calling code before calling CodeAccessPermission. Assert. For example, if you call an unmanaged library and need to assert the unmanaged code permission, consider demanding another built-in or custom permission first.",
      "If you only need to call Assert to satisfy the demands of a single method that your code calls, then place Assert prior to the method call. Then immediately call the RevertAssert method to keep the assertion window as small as possible, and to ensure that any subsequent code your method calls does not inadvertently succeed because Assert is still in effect. A common practice is to place the call to RevertAssert in a finally block to ensure that it always gets called, even in the event of an exception.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "b": [
      "CodeAccessPermission",
      "Assert",
      "CodeAccessPermission",
      "Assert",
      "Assert",
      "Assert",
      "RevertAssert",
      "Assert",
      "RevertAssert",
      "finally"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>Description</h1>\n  <p>If you need to call the <b>CodeAccessPermission</b>.<b> Assert</b> method to prevent a demand from propagating beyond the current stack frame, consider demanding an alternate permission to authorize the calling code before calling <b>CodeAccessPermission</b>.<b> Assert</b>. For example, if you call an unmanaged library and need to assert the unmanaged code permission, consider demanding another built-in or custom permission first. </p>\n  <p>If you only need to call <b>Assert</b> to satisfy the demands of a single method that your code calls, then place <b>Assert</b> prior to the method call. Then immediately call the <b>RevertAssert</b> method to keep the assertion window as small as possible, and to ensure that any subsequent code your method calls does not inadvertently succeed because <b>Assert</b> is still in effect. A common practice is to place the call to <b>RevertAssert</b> in a <b>finally</b> block to ensure that it always gets called, even in the event of an exception. </p>\n  <h1>&nbsp;</h1>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}