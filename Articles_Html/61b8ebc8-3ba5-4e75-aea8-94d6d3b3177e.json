{
  "id": "61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e",
  "checksum": "dc44cf6187a5b4678628c1ef204993deb5d54ea3",
  "words": {
    "1": [
      "ul",
      "li",
      "a"
    ],
    "2": [
      "ul",
      "li",
      "a"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "java": [
      "ul",
      "li",
      "h1",
      "h1",
      "h1",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "what": [
      "h1"
    ],
    "do": [
      "h1",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "include": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "unique": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "tokens": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "http": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "requests": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "when": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "performing": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "sensitive": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "operations": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "prevent": [
      "p"
    ],
    "cross-site": [
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "request": [
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "forgery": [
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "csrf).": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "csrf": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "may": [
      "p"
    ],
    "be": [
      "p"
    ],
    "possible": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "attacker": [
      "p"
    ],
    "can": [
      "p"
    ],
    "form": [
      "p"
    ],
    "a": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "url": [
      "p"
    ],
    "which": [
      "p"
    ],
    "performs": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "action": [
      "p"
    ],
    "on": [
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "behalf": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "authenticated": [
      "p"
    ],
    "user": [
      "p"
    ],
    "forming": [
      "p"
    ],
    "such": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "urls": [
      "p"
    ],
    "becomes": [
      "p"
    ],
    "much": [
      "p"
    ],
    "more": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "difficult": [
      "p"
    ],
    "if": [
      "p"
    ],
    "are": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "included": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "how": [
      "h1",
      "ul",
      "li",
      "a"
    ],
    "identify": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "review": [
      "ol",
      "li",
      "p"
    ],
    "application": [
      "ol",
      "li",
      "p"
    ],
    "design": [
      "ol",
      "li",
      "p"
    ],
    "and": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "h1"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "that": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "require": [
      "ol",
      "li",
      "p"
    ],
    "authorization": [
      "ol",
      "li",
      "p"
    ],
    "pages": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "involved": [
      "ol",
      "li",
      "p"
    ],
    "-": [
      "ol",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "li",
      "p"
    ],
    "includes": [
      "ol",
      "li",
      "p"
    ],
    "both": [
      "ol",
      "li",
      "p"
    ],
    "link": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "actually": [
      "ol",
      "li",
      "p"
    ],
    "carries": [
      "ol",
      "li",
      "p"
    ],
    "out": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "choose": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "method": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "a"
    ],
    "generating": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "there": [
      "ol",
      "li",
      "p"
    ],
    "different": [
      "ol",
      "li",
      "p"
    ],
    "ways": [
      "ol",
      "li",
      "p"
    ],
    "generate": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "one": [
      "ol",
      "li",
      "p"
    ],
    "approach": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "random": [
      "ol",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "li",
      "p"
    ],
    "another": [
      "ol",
      "li",
      "p"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "javaxfaces.viewstate.": [
      "ol",
      "li",
      "p"
    ],
    "third": [
      "ol",
      "li",
      "p"
    ],
    "api": [
      "ol",
      "li",
      "p"
    ],
    "designed": [
      "ol",
      "li",
      "p"
    ],
    "specifically": [
      "ol",
      "li",
      "p"
    ],
    "mitigating": [
      "ol",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "esapi": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "not": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "session": [
      "ol",
      "li",
      "p",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "ids": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "anti-csrf": [
      "ol",
      "li",
      "p"
    ],
    "add": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "uses": [
      "ol",
      "li",
      "p"
    ],
    "chosen": [
      "ol",
      "li",
      "p"
    ],
    "adds": [
      "ol",
      "li",
      "p"
    ],
    "generated": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "hidden": [
      "ol",
      "li",
      "p"
    ],
    "fields": [
      "ol",
      "li",
      "p"
    ],
    "token": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "validation": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "carry": [
      "ol",
      "li",
      "p"
    ],
    "validates": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "sure": [
      "ol",
      "li",
      "p"
    ],
    "they": [
      "ol",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "li",
      "p"
    ],
    "server-side": [
      "ol",
      "li",
      "p"
    ],
    "javaxfaces.viewstate": [
      "em"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "about": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "preveting": [
      "ul",
      "li"
    ],
    "vulnerabilities": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "https//www.owasp.org/index.php/cross-site_request_forgery_%28csrf%29_prevention_cheat_sheetfor": [
      "ul"
    ],
    "owasp": [
      "ul",
      "li"
    ],
    "csrfguard": [
      "ul",
      "li"
    ],
    "https//www.owasp.org/index.php/category:owasp_csrfguard_project": [
      "ul",
      "li",
      "a"
    ],
    "https//www.owasp.org/index.php/cross-site_request_forgery_%28csrf%29_prevention_cheat_sheet": [
      "li",
      "a"
    ],
    "management": [
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "offered": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "by": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "framework": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "protect": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "cookies": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "set": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "domain": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "path": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "values": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "secure": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "httponly": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "flags": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "change": [
      "ul",
      "li",
      "a"
    ],
    "during": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "authentication": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "invalidate": [
      "ul",
      "li",
      "a"
    ],
    "sessions": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "users": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "log": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "inactive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "time-out": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "security": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "decisions": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "based": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "client-accessible": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "parameters": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h1"
    ],
    "used": [
      "ul",
      "li",
      "a"
    ],
    "protected": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "strict": [
      "ul",
      "li",
      "a"
    ],
    "changed": [
      "ul",
      "li",
      "a"
    ],
    "invalidated": [
      "ul",
      "li",
      "a"
    ],
    "made": [
      "ul",
      "li",
      "a"
    ],
    "examples": [
      "h1"
    ],
    "using": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "server": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "faces": [
      "ul",
      "li",
      "a"
    ],
    "jsf)": [
      "ul",
      "li",
      "a"
    ],
    "plain": [
      "ul",
      "li",
      "a"
    ],
    "jsp)": [
      "ul",
      "li",
      "a"
    ],
    "csrf)": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "prevention": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "springmvc": [
      "ul",
      "li",
      "a"
    ],
    "struts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "testing": [
      "h1"
    ],
    "test": [
      "ul",
      "li",
      "a"
    ],
    "prediction": [
      "ul",
      "li",
      "a"
    ],
    "bugs": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Do",
      "Why",
      "How",
      "Additional Resources",
      "Java Session Management Guidelines",
      "Java Session Management Checklists",
      "Java Session Management Code Examples",
      "Java Session Management Testing"
    ],
    "ul": [
      "Java",
      "For more information about preveting Cross-Site Request Forgery vulnerabilities, please see https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_SheetFor more information about OWASP CSRFGuard, please see https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project",
      "Use Session Management Offered by the Framework\n      \n        Protect Session IDs\n        \n          Protect Session Cookies\n          \n            Set the Domain and Path Values of Session Cookies\n            \n              Set the Secure and HTTPOnly Flags on All Sensitive Cookies\n              \n                Change Session IDs During Authentication\n                \n                  Invalidate Sessions when Users Log Out\n                  \n                    Make Inactive Sessions Time-out\n                    \n                      Include Unique Tokens in HTTP Requests\n                      \n                        Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used\n      \n        Session IDs Are Protected\n        \n          Session Cookies are Protected\n          \n            The Domain and Path Values of Session Cookies Are Strict\n            \n              The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies\n              \n                Session IDs Are Changed During Authentication\n                \n                  Sessions Are Invalidated When Users Log Out\n                  \n                    Inactive Sessions Time-out\n                    \n                      Unique Tokens Are Included in HTTP Requests\n                      \n                        Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI\n    \n    \n      Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)\n    \n    \n      Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)\n    \n    \n      Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC\n    \n    \n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 1\n    \n    \n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "li": [
      "Java",
      "Identify sensitive operations. Review application design and code to identify all operations that require authorization.",
      "Identify code that performs sensitive operations. Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive operations.",
      "Choose a method for generating unique tokens. There are different ways to generate unique tokens. One approach is to generate random tokens for each request. Another approach is to use javax.faces.ViewState. A third approach is to use an API designed specifically for mitigating CSRF, such as ESAPI. Do not use session IDs as anti-CSRF tokens.",
      "Add unique tokens to HTTP requests. Add code that uses the chosen method of generating unique tokens. Add code that adds the generated unique tokens to the pages that link to sensitive operations in hidden fields.",
      "Add token validation code. Add code to the pages that carry out sensitive operations that validates the unique tokens to make sure that they have been generated on the server-side.",
      "For more information about preveting Cross-Site Request Forgery vulnerabilities, please see https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet",
      "For more information about OWASP CSRFGuard, please see https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "p": [
      "Include unique tokens in HTTP requests when performing sensitive operations to prevent Cross-Site Request Forgery (CSRF).",
      "CSRF may be possible when an attacker can form a URL, which performs an action on the behalf of an authenticated user. Forming such URLs becomes much more difficult, if unique tokens are included in HTTP requests.",
      "To include unique tokens in HTTP requests:",
      "Identify sensitive operations. Review application design and code to identify all operations that require authorization.",
      "Identify code that performs sensitive operations. Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive operations.",
      "Choose a method for generating unique tokens. There are different ways to generate unique tokens. One approach is to generate random tokens for each request. Another approach is to use javax.faces.ViewState. A third approach is to use an API designed specifically for mitigating CSRF, such as ESAPI. Do not use session IDs as anti-CSRF tokens.",
      "Add unique tokens to HTTP requests. Add code that uses the chosen method of generating unique tokens. Add code that adds the generated unique tokens to the pages that link to sensitive operations in hidden fields.",
      "Add token validation code. Add code to the pages that carry out sensitive operations that validates the unique tokens to make sure that they have been generated on the server-side."
    ],
    "ol": [
      "Identify sensitive operations. Review application design and code to identify all operations that require authorization.\n      \n        \n          Identify code that performs sensitive operations. Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive operations.\n        \n          \n            Choose a method for generating unique tokens. There are different ways to generate unique tokens. One approach is to generate random tokens for each request. Another approach is to use javax.faces.ViewState. A third approach is to use an API designed specifically for mitigating CSRF, such as ESAPI. Do not use session IDs as anti-CSRF tokens.\n          \n            \n              Add unique tokens to HTTP requests. Add code that uses the chosen method of generating unique tokens. Add code that adds the generated unique tokens to the pages that link to sensitive operations in hidden fields.\n            \n              \n                Add token validation code. Add code to the pages that carry out sensitive operations that validates the unique tokens to make sure that they have been generated on the server-side."
    ],
    "strong": [
      "Identify sensitive operations.",
      "Identify code that performs sensitive operations.",
      "Choose a method for generating unique tokens.",
      "Add unique tokens to HTTP requests.",
      "Add token validation code."
    ],
    "em": [
      "javax.faces.ViewState"
    ],
    "a": [
      "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet",
      "https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "How to Test for Session Prediction Bugs in Java"
    ]
  },
  "links": [
    {
      "href": "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet",
      "text": "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet"
    },
    {
      "href": "https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project",
      "text": "https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project"
    },
    {
      "href": "/article/42276b64-f51d-4b89-8c33-0ffd9b098890",
      "text": "Use Session Management Offered by the Framework"
    },
    {
      "href": "/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a",
      "text": "Protect Session IDs"
    },
    {
      "href": "/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717",
      "text": "Protect Session Cookies"
    },
    {
      "href": "/article/7a517ad5-8640-4bc7-9e84-ccc313a71901",
      "text": "Set the Domain and Path Values of Session Cookies"
    },
    {
      "href": "/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b",
      "text": "Set the Secure and HTTPOnly Flags on All Sensitive Cookies"
    },
    {
      "href": "/article/6c470029-5c62-4394-99a9-8990bc48b0a8",
      "text": "Change Session IDs During Authentication"
    },
    {
      "href": "/article/a223c2d8-ab42-47fb-81a2-86ad677a5632",
      "text": "Invalidate Sessions when Users Log Out"
    },
    {
      "href": "/article/acfe1a16-3f00-4383-ada4-bebafc98a836",
      "text": "Make Inactive Sessions Time-out"
    },
    {
      "href": "/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e",
      "text": "Include Unique Tokens in HTTP Requests"
    },
    {
      "href": "/article/9df0b518-f832-4a7c-9857-0517638c47db",
      "text": "Do Not Make Security Decisions Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b",
      "text": "Session Management Offered by the Framework Is Used"
    },
    {
      "href": "/article/1de62774-3392-4da7-9bae-065fb15b4a2b",
      "text": "Session IDs Are Protected"
    },
    {
      "href": "/article/59132a30-2bae-45e9-9d85-8de26441be29",
      "text": "Session Cookies are Protected"
    },
    {
      "href": "/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b",
      "text": "The Domain and Path Values of Session Cookies Are Strict"
    },
    {
      "href": "/article/d8922a46-a943-4ae0-b8af-b88eb01d6997",
      "text": "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies"
    },
    {
      "href": "/article/58df5418-8c03-4121-83e0-bc68247c5d7b",
      "text": "Session IDs Are Changed During Authentication"
    },
    {
      "href": "/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac",
      "text": "Sessions Are Invalidated When Users Log Out"
    },
    {
      "href": "/article/c486eeb2-f64f-480b-9823-48bd7d21047d",
      "text": "Inactive Sessions Time-out"
    },
    {
      "href": "/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0",
      "text": "Unique Tokens Are Included in HTTP Requests"
    },
    {
      "href": "/article/4436e342-64d9-4b1b-ae9b-3e00696053fb",
      "text": "Security Decisions are Not Made Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/7d647e95-e47f-42e3-bb84-fd0dd727245c",
      "text": "Add Unique Tokens to HTTP Requests Using ESAPI"
    },
    {
      "href": "/article/25e3943b-a651-42c5-9e19-76077de05e90",
      "text": "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)"
    },
    {
      "href": "/article/986c7161-0a76-430a-8d0e-80d4615ab5db",
      "text": "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)"
    },
    {
      "href": "/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC"
    },
    {
      "href": "/article/63deed1a-6df4-4e04-9f61-898f190e1fe1",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1"
    },
    {
      "href": "/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2"
    },
    {
      "href": "/article/40771780-be59-4d4c-b283-5ec3cc286357",
      "text": "How to Test for Session Prediction Bugs in Java"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>Java</li>\n  </ul>\n  <h1>What to Do</h1>\n  <p>Include unique tokens in HTTP requests when performing sensitive operations to prevent Cross-Site Request Forgery (CSRF).</p>\n  <h1>Why</h1>\n  <p>CSRF may be possible when an attacker can form a URL, which performs an action on the behalf of an authenticated user. Forming such URLs becomes much more difficult, if unique tokens are included in HTTP requests. </p>\n  <h1>How</h1>\n  <p>To include unique tokens in HTTP requests:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify sensitive operations.</strong> Review application design and code to identify all operations that require authorization.</p>\n      <li>\n        <p>\n          <strong>Identify code that performs sensitive operations.</strong> Identify all pages that are involved in performing sensitive operations - this includes both the pages that link to sensitive operations and the code that actually carries out the sensitive operations.</p>\n        <li>\n          <p>\n            <strong>Choose a method for generating unique tokens. </strong>There are different ways to generate unique tokens. One approach is to generate random tokens for each request. Another approach is to use <em>javax.faces.ViewState</em>. A third approach is to use an API designed specifically for mitigating CSRF, such as ESAPI. Do not use session IDs as anti-CSRF tokens.</p>\n          <li>\n            <p>\n              <strong>Add unique tokens to HTTP requests.</strong> Add code that uses the chosen method of generating unique tokens. Add code that adds the generated unique tokens to the pages that link to sensitive operations in hidden fields.</p>\n            <li>\n              <p>\n                <strong>Add token validation code.</strong> Add code to the pages that carry out sensitive operations that validates the unique tokens to make sure that they have been generated on the server-side.</p>\n            </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ol>\n  <h1>Additional Resources</h1>\n  <ul>\n    <li>For more information about preveting Cross-Site Request Forgery vulnerabilities, please see <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_&#37;28CSRF&#37;29_Prevention_Cheat_Sheet\">https://www.owasp.org/index.php/Cross-Site_Request_Forgery_&#37;28CSRF&#37;29_Prevention_Cheat_Sheet</a><li>For more information about OWASP CSRFGuard, please see <a href=\"https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project\">https://www.owasp.org/index.php/Category:OWASP_CSRFGuard_Project</a></li></li>\n  </ul>\n  <h1>Java Session Management Guidelines</h1>\n  <ul>\n    <li>\n      <a href=\"/article/42276b64-f51d-4b89-8c33-0ffd9b098890\">Use Session Management Offered by the Framework</a>\n      <li>\n        <a href=\"/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a\">Protect Session IDs</a>\n        <li>\n          <a href=\"/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717\">Protect Session Cookies</a>\n          <li>\n            <a href=\"/article/7a517ad5-8640-4bc7-9e84-ccc313a71901\">Set the Domain and Path Values of Session Cookies</a>\n            <li>\n              <a href=\"/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b\">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a>\n              <li>\n                <a href=\"/article/6c470029-5c62-4394-99a9-8990bc48b0a8\">Change Session IDs During Authentication</a>\n                <li>\n                  <a href=\"/article/a223c2d8-ab42-47fb-81a2-86ad677a5632\">Invalidate Sessions when Users Log Out</a>\n                  <li>\n                    <a href=\"/article/acfe1a16-3f00-4383-ada4-bebafc98a836\">Make Inactive Sessions Time-out</a>\n                    <li>\n                      <a href=\"/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e\">Include Unique Tokens in HTTP Requests</a>\n                      <li>\n                        <a href=\"/article/9df0b518-f832-4a7c-9857-0517638c47db\">Do Not Make Security Decisions Based on Client-Accessible Parameters</a>\n                      </li>\n                    </li>\n                  </li>\n                </li>\n              </li>\n            </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ul>\n  <h1>Java Session Management Checklists</h1>\n  <ul>\n    <li>\n      <a href=\"/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b\">Session Management Offered by the Framework Is Used</a>\n      <li>\n        <a href=\"/article/1de62774-3392-4da7-9bae-065fb15b4a2b\">Session IDs Are Protected</a>\n        <li>\n          <a href=\"/article/59132a30-2bae-45e9-9d85-8de26441be29\">Session Cookies are Protected</a>\n          <li>\n            <a href=\"/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b\">The Domain and Path Values of Session Cookies Are Strict</a>\n            <li>\n              <a href=\"/article/d8922a46-a943-4ae0-b8af-b88eb01d6997\">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a>\n              <li>\n                <a href=\"/article/58df5418-8c03-4121-83e0-bc68247c5d7b\">Session IDs Are Changed During Authentication</a>\n                <li>\n                  <a href=\"/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac\">Sessions Are Invalidated When Users Log Out</a>\n                  <li>\n                    <a href=\"/article/c486eeb2-f64f-480b-9823-48bd7d21047d\">Inactive Sessions Time-out</a>\n                    <li>\n                      <a href=\"/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0\">Unique Tokens Are Included in HTTP Requests</a>\n                      <li>\n                        <a href=\"/article/4436e342-64d9-4b1b-ae9b-3e00696053fb\">Security Decisions are Not Made Based on Client-Accessible Parameters</a>\n                      </li>\n                    </li>\n                  </li>\n                </li>\n              </li>\n            </li>\n          </li>\n        </li>\n      </li>\n    </li>\n  </ul>\n  <h1>Java Session Management Code Examples</h1>\n  <ul>\n    <li>\n      <a href=\"/article/7d647e95-e47f-42e3-bb84-fd0dd727245c\">Add Unique Tokens to HTTP Requests Using ESAPI</a>\n    </li>\n    <li>\n      <a href=\"/article/25e3943b-a651-42c5-9e19-76077de05e90\">Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)</a>\n    </li>\n    <li>\n      <a href=\"/article/986c7161-0a76-430a-8d0e-80d4615ab5db\">Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)</a>\n    </li>\n    <li>\n      <a href=\"/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6\">Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC</a>\n    </li>\n    <li>\n      <a href=\"/article/63deed1a-6df4-4e04-9f61-898f190e1fe1\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</a>\n    </li>\n    <li>\n      <a href=\"/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 2</a>\n    </li>\n  </ul>\n  <h1>Java Session Management Testing</h1>\n  <ul>\n    <li>\n      <a href=\"/article/40771780-be59-4d4c-b283-5ec3cc286357\">How to Test for Session Prediction Bugs in Java</a>\n    </li>\n  </ul>"
}