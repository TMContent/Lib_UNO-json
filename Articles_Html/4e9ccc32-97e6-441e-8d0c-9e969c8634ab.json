{
  "id": "4e9ccc32-97e6-441e-8d0c-9e969c8634ab",
  "checksum": "81afdaa424130b53bf61e9b0d299f51f419def7d",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "java": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2"
    ],
    "for": [
      "h2",
      "ul",
      "li"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "all": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "title"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "title"
    ],
    "name": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "title"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "path": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "title"
    ],
    "input": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "title"
    ],
    "is": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "title"
    ],
    "canonicalized": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "ol",
      "li",
      "title"
    ],
    "before": [
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "being": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "validated": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "why": [
      "h2"
    ],
    "when": [
      "p",
      "p"
    ],
    "validation": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "applied": [
      "p"
    ],
    "paths": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "names": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "it": [
      "p",
      "ol",
      "li"
    ],
    "only": [
      "p"
    ],
    "works": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "not": [
      "p"
    ],
    "a": [
      "p",
      "p"
    ],
    "number": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li"
    ],
    "vulnerabilities": [
      "p",
      "p"
    ],
    "may": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "be": [
      "p",
      "ol",
      "li"
    ],
    "introduced": [
      "p"
    ],
    "as": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "result": [
      "p"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "possible": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "range": [
      "p"
    ],
    "from": [
      "p",
      "ol",
      "li"
    ],
    "reading": [
      "p"
    ],
    "arbitrary": [
      "p"
    ],
    "files": [
      "p"
    ],
    "uploading": [
      "p"
    ],
    "web": [
      "p"
    ],
    "shells": [
      "p"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "identify": [
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "examine": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "application": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "find": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "cases": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "where": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "user": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "specify": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "handles": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li"
    ],
    "review": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "functions": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "handle": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "supplied": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "determine": [
      "ol",
      "li",
      "strong"
    ],
    "whether": [
      "ol",
      "li",
      "strong"
    ],
    "necessary": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "don't": [
      "ol",
      "li"
    ],
    "accept": [
      "ol",
      "li"
    ],
    "and/or": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "users": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "use": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "provided": [
      "ol",
      "li"
    ],
    "by": [
      "ol",
      "li"
    ],
    "then": [
      "ol",
      "li"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "getcanonicalpath)": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "function": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "used": [
      "ol",
      "li"
    ],
    "canonicalize": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "them": [
      "ol",
      "li"
    ],
    "user-supplied": [
      "ol",
      "li"
    ],
    "after": [
      "ol",
      "li"
    ],
    "forms": [
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "li"
    ],
    "passed": [
      "ol",
      "li"
    ],
    "routines": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "avoid": [
      "ol",
      "li",
      "strong"
    ],
    "remove": [
      "ol",
      "li"
    ],
    "replace": [
      "ol",
      "li"
    ],
    "allows": [
      "ol",
      "li"
    ],
    "enter": [
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "re-write": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "these": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "validate": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "positive": [
      "ol",
      "li"
    ],
    "on": [
      "ol",
      "li"
    ],
    "ensure": [
      "ol",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "sufficient": [
      "ol",
      "li"
    ],
    "rights": [
      "ol",
      "li"
    ],
    "access": [
      "ol",
      "li"
    ],
    "requested": [
      "ol",
      "li"
    ],
    "resource": [
      "ol",
      "li"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "canonicalizing": [
      "ul",
      "li"
    ],
    "in": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "https//www.securecoding.cert.org/confluence/display/java/ids02-j.+canonicalize+path+names+before+validating+them": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Additional Resources"
    ],
    "ul": [
      "Java",
      "For more information about canonicalizing file paths in Java, see https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    ],
    "li": [
      "Java",
      "Identify all file path and name input. Examine the application and find all cases where the user may specify file names or paths.",
      "Find code that handles file path and name input. Review application code and find all functions that handle user supplied file names or paths.",
      "Determine whether file path and name input is necessary. If possible, don't accept file names and/or paths from users.",
      "Verify that file name and path input is canonicalized. If it is necessary to use file names and/or paths provided by users, then make sure that the getCanonicalPath() function is used to canonicalize them before validation.",
      "Verify that file name and path input is validated. Review code that handles user-supplied file name and/or path input and make sure that file names and paths are validated after being canonicalized. The canonicalized forms of file names and paths should be passed to validation routines.",
      "Identify all file path and name input. Examine the application and find all cases where the user may specify file names or paths.",
      "Find code that handles file path and name input. Review application code and find all functions that handle user supplied file names or paths.",
      "Avoid file path and name input if possible. If possible, remove or replace the code that allows users to enter file names or paths.",
      "Canonicalize file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use getCanonicalPath() to canonicalize file names and paths.",
      "Validate file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use positive validation on canonicalized file names and paths. Ensure that the validation routines validate that the user has sufficient rights to access the requested resource.",
      "For more information about canonicalizing file paths in Java, see https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    ],
    "p": [
      "Verify that all file name and path input is canonicalized before being validated.",
      "When input validation is applied to file paths and names, it only works properly when file paths and names are canonicalized. If file names and paths are not canonicalized before validation, a number of vulnerabilities may be introduced as a result. The possible vulnerabilities range from reading arbitrary files to uploading web shells.",
      "To verify that all file name and path input is canonicalized before being validated:",
      "To canonicalize all file path and name input:"
    ],
    "ol": [
      "Identify all file path and name input. Examine the application and find all cases where the user may specify file names or paths.\n Find code that handles file path and name input. Review application code and find all functions that handle user supplied file names or paths.\n Determine whether file path and name input is necessary. If possible, don't accept file names and/or paths from users.\n Verify that file name and path input is canonicalized. If it is necessary to use file names and/or paths provided by users, then make sure that the getCanonicalPath() function is used to canonicalize them before validation.\n Verify that file name and path input is validated. Review code that handles user-supplied file name and/or path input and make sure that file names and paths are validated after being canonicalized. The canonicalized forms of file names and paths should be passed to validation routines.",
      "Identify all file path and name input. Examine the application and find all cases where the user may specify file names or paths.\n Find code that handles file path and name input. Review application code and find all functions that handle user supplied file names or paths.\n Avoid file path and name input if possible. If possible, remove or replace the code that allows users to enter file names or paths.\n Canonicalize file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use getCanonicalPath() to canonicalize file names and paths.\n Validate file path and name input. Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use positive validation on canonicalized file names and paths. Ensure that the validation routines validate that the user has sufficient rights to access the requested resource."
    ],
    "strong": [
      "Identify all file path and name input.",
      "Find code that handles file path and name input.",
      "Determine whether file path and name input is necessary.",
      "Verify that file name and path input is canonicalized.",
      "Verify that file name and path input is validated.",
      "Identify all file path and name input.",
      "Find code that handles file path and name input.",
      "Avoid file path and name input if possible.",
      "Canonicalize file path and name input.",
      "Validate file path and name input."
    ],
    "a": [
      "https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    ]
  },
  "links": [
    {
      "href": "https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them",
      "text": "https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> Java</li>\n</ul><h2>What to Check For</h2><p>Verify that all file name and path input is canonicalized before being validated.\n</p><h2>Why</h2><p>When input validation is applied to file paths and names, it only works properly when file paths and names are canonicalized. If file names and paths are not canonicalized before validation, a number of vulnerabilities may be introduced as a result. The possible vulnerabilities range from reading arbitrary files to uploading web shells. \n</p><h2>How to Check</h2><p>To verify that all file name and path input is canonicalized before being validated:\n</p><ol>\n<li> <strong>Identify all file path and name input.</strong> Examine the application and find all cases where the user may specify file names or paths.</li>\n<li> <strong>Find code that handles file path and name input.</strong> Review application code and find all functions that handle user supplied file names or paths.</li>\n<li> <strong>Determine whether file path and name input is necessary.</strong> If possible, don't accept file names and/or paths from users.</li>\n<li> <strong>Verify that file name and path input is canonicalized.</strong> If it is necessary to use file names and/or paths provided by users, then make sure that the getCanonicalPath() function is used to canonicalize them before validation.</li>\n<li> <strong>Verify that file name and path input is validated.</strong> Review code that handles user-supplied file name and/or path input and make sure that file names and paths are validated after being canonicalized. The canonicalized forms of file names and paths should be passed to validation routines.</li>\n</ol><h2>How to Fix</h2><p>To canonicalize all file path and name input:\n</p><ol>\n<li> <strong>Identify all file path and name input.</strong> Examine the application and find all cases where the user may specify file names or paths.</li>\n<li> <strong>Find code that handles file path and name input.</strong> Review application code and find all functions that handle user supplied file names or paths.</li>\n<li> <strong>Avoid file path and name input if possible.</strong> If possible, remove or replace the code that allows users to enter file names or paths.</li>\n<li> <strong>Canonicalize file path and name input.</strong> Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use getCanonicalPath() to canonicalize file names and paths.</li>\n<li> <strong>Validate file path and name input.</strong> Examine each function that handles user supplied file names or paths. Re-write these functions as necessary to use positive validation on canonicalized file names and paths. Ensure that the validation routines validate that the user has sufficient rights to access the requested resource.</li>\n</ol><h2>Additional Resources</h2><ul><li> For more information about canonicalizing file paths in Java, see <a href=\"https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them\">https://www.securecoding.cert.org/confluence/display/java/IDS02-J.+Canonicalize+path+names+before+validating+them</a></li>\n</ul>"
}