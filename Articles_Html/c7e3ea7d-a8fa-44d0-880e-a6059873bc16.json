{
  "id": "c7e3ea7d-a8fa-44d0-880e-a6059873bc16",
  "checksum": "9a993a0842f5a067d21902218ac364f195a4441b",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "h1",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "p"
    ],
    "ensure": [
      "p",
      "p",
      "p"
    ],
    "that": [
      "p",
      "p"
    ],
    "exceptions": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "are": [
      "p",
      "title"
    ],
    "logged": [
      "p",
      "title"
    ],
    "the": [
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "title"
    ],
    "server": [
      "p",
      "p",
      "p",
      "title"
    ],
    "allow": [
      "p"
    ],
    "further": [
      "p",
      "p"
    ],
    "analysis": [
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "pre",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "debugging": [
      "p",
      "p",
      "p"
    ],
    "why": [
      "h1"
    ],
    "malicious": [
      "p",
      "p",
      "p"
    ],
    "attacks": [
      "p"
    ],
    "may": [
      "p"
    ],
    "result": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "contain": [
      "p"
    ],
    "critical": [
      "p"
    ],
    "information": [
      "p",
      "p",
      "p"
    ],
    "on": [
      "p",
      "title"
    ],
    "problems": [
      "p",
      "p"
    ],
    "which": [
      "p"
    ],
    "occur": [
      "p",
      "p"
    ],
    "production": [
      "p"
    ],
    "systems&nbsp;logging": [
      "p"
    ],
    "them": [
      "p",
      "p"
    ],
    "will": [
      "p",
      "p"
    ],
    "help": [
      "p"
    ],
    "track": [
      "p"
    ],
    "down": [
      "p"
    ],
    "faster": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "that&nbspyour": [
      "p"
    ],
    "uses": [
      "p"
    ],
    "structured": [
      "p"
    ],
    "exception": [
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "title"
    ],
    "handling": [
      "p"
    ],
    "employs": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "global": [
      "p",
      "p",
      "p"
    ],
    "error": [
      "p",
      "p",
      "p"
    ],
    "handler": [
      "p",
      "p",
      "p"
    ],
    "all": [
      "p",
      "p"
    ],
    "handlers": [
      "p"
    ],
    "code": [
      "p",
      "p",
      "p"
    ],
    "exists": [
      "p"
    ],
    "log": [
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "pre",
      "pre"
    ],
    "details": [
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "title"
    ],
    "server&nbsp;code": [
      "p"
    ],
    "be": [
      "p"
    ],
    "similar": [
      "p",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p"
    ],
    "//get": [
      "pre",
      "pre",
      "pre"
    ],
    "reference": [
      "pre",
      "pre",
      "pre"
    ],
    "source": [
      "pre",
      "pre",
      "pre"
    ],
    "of": [
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "chain": [
      "pre",
      "pre",
      "pre"
    ],
    "ex": [
      "pre",
      "pre",
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre"
    ],
    "servergetlasterror().getbaseexception();": [
      "pre",
      "pre",
      "pre"
    ],
    "//": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "page": [
      "pre",
      "pre",
      "pre"
    ],
    "state": [
      "pre",
      "pre",
      "pre"
    ],
    "event": [
      "pre",
      "p",
      "pre",
      "pre"
    ],
    "eventlogwriteentry(\"my": [
      "pre",
      "pre",
      "pre"
    ],
    "web": [
      "pre",
      "pre",
      "pre"
    ],
    "application\"": [
      "pre",
      "pre",
      "pre"
    ],
    "\"message": [
      "pre",
      "pre",
      "pre"
    ],
    "\"": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "+": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "exmessage": [
      "pre",
      "pre",
      "pre"
    ],
    "\"\\nsource": [
      "pre",
      "pre",
      "pre"
    ],
    "exsource,": [
      "pre",
      "pre",
      "pre"
    ],
    "eventlogentrytypeerror);": [
      "pre",
      "pre",
      "pre"
    ],
    "fix": [
      "h1"
    ],
    "you": [
      "p"
    ],
    "should": [
      "p",
      "p"
    ],
    "record": [
      "p"
    ],
    "tracking": [
      "p"
    ],
    "later": [
      "p"
    ],
    "analysis&nbsp;event": [
      "p"
    ],
    "logging": [
      "p"
    ],
    "try/catch/finally": [
      "p"
    ],
    "blocks": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "well": [
      "p"
    ],
    "use": [
      "p"
    ],
    "following": [
      "p"
    ],
    "try": [
      "strong"
    ],
    "catch": [
      "strong"
    ],
    "finally": [
      "strong"
    ],
    "%@": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "language=\"c#\"": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "%": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "import": [
      "pre",
      "pre"
    ],
    "namespace=\"systemdiagnostics\"": [
      "pre",
      "pre"
    ],
    "script": [
      "pre",
      "pre"
    ],
    "runat=\"server\"": [
      "pre",
      "pre"
    ],
    "void": [
      "pre",
      "pre"
    ],
    "application_errorobject": [
      "pre",
      "pre"
    ],
    "sender": [
      "pre",
      "pre"
    ],
    "eventargs": [
      "pre",
      "pre"
    ],
    "e": [
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre"
    ],
    "optional": [
      "pre",
      "pre"
    ],
    "e-mail": [
      "pre",
      "pre"
    ],
    "or": [
      "pre",
      "pre"
    ],
    "other": [
      "pre",
      "pre"
    ],
    "notification": [
      "pre",
      "pre"
    ],
    "here..": [
      "pre",
      "pre"
    ],
    "}": [
      "pre",
      "pre"
    ],
    "/script>": [
      "pre",
      "pre"
    ],
    "problem": [
      "h1"
    ],
    "example": [
      "h1",
      "h1"
    ],
    "an": [
      "p",
      "p"
    ],
    "aspnet": [
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "under": [
      "p",
      "p"
    ],
    "attack": [
      "p",
      "p",
      "p",
      "p"
    ],
    "by": [
      "p",
      "p",
      "p"
    ],
    "user": [
      "p",
      "p"
    ],
    "one": [
      "p",
      "p"
    ],
    "side": [
      "p",
      "p"
    ],
    "effect": [
      "p",
      "p"
    ],
    "set": [
      "p",
      "p"
    ],
    "when": [
      "p",
      "p"
    ],
    "connecting": [
      "p",
      "p"
    ],
    "retrieving": [
      "p",
      "p"
    ],
    "data": [
      "p",
      "p"
    ],
    "from": [
      "p",
      "p",
      "p"
    ],
    "database&nbsp;unfortunately": [
      "p"
    ],
    "doesn't": [
      "p"
    ],
    "so": [
      "p",
      "p"
    ],
    "auditing": [
      "p",
      "p"
    ],
    "lost": [
      "p"
    ],
    "forever": [
      "p"
    ],
    "solution": [
      "h1"
    ],
    "database&nbsp;fortunately": [
      "p"
    ],
    "logs": [
      "p"
    ],
    "discovered": [
      "p"
    ],
    "site": [
      "p"
    ],
    "admin": [
      "p"
    ],
    "delivered": [
      "p"
    ],
    "development": [
      "p"
    ],
    "team": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Problem Example",
      "Solution Example"
    ],
    "p": [
      "Ensure that exceptions are logged to the server to allow further analysis and debugging.",
      "Malicious attacks may result in application exceptions. Exceptions contain critical information on problems which occur in production systems.&nbsp;Logging them will help track down problems faster.",
      "Ensure that&nbsp;your application uses structured exception handling and employs a global error handler. Ensure that in all exception handlers and the global error handler, code exists to log exception details to the server.&nbsp;Code will be similar to this:",
      "You should log all exceptions in the event log to record them for tracking and later analysis.&nbsp;Event logging should occur in Try/Catch/Finally blocks in code as well as in the global error handler. Use code similar to the following:",
      "An ASP.NET application is under attack by a malicious user. One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&nbsp;Unfortunately the application doesn't log exception details to the server, so this debugging and auditing information is lost forever.",
      "An ASP.NET application is under attack by a malicious user. One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&nbsp;Fortunately the application logs exception details to the server, so this debugging and auditing information is discovered by the site admin and delivered to the development team for further analysis.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "pre": [
      "//get reference to the source of the exception chain    Exception ex = Server.GetLastError().GetBaseException();     // log the details of the exception and page state to the    // event log.    EventLog.WriteEntry(\"My Web Application\",      \"MESSAGE: \" + ex.Message +       \"\\nSOURCE: \" + ex.Source,       EventLogEntryType.Error);",
      "<%@ Application Language=\"C#\" %> <%@ Import Namespace=\"System.Diagnostics\" %>  <script language=\"C#\" runat=\"server\"> void Application_Error(object sender, EventArgs e) {    //get reference to the source of the exception chain    Exception ex = Server.GetLastError().GetBaseException();     // log the details of the exception and page state to the    // event log.    EventLog.WriteEntry(\"My Web Application\",      \"MESSAGE: \" + ex.Message +       \"\\nSOURCE: \" + ex.Source,       EventLogEntryType.Error);     // Optional e-mail or other notification here... }   </script>",
      "<%@ Application Language=\"C#\" %> <%@ Import Namespace=\"System.Diagnostics\" %>  <script language=\"C#\" runat=\"server\"> void Application_Error(object sender, EventArgs e) {    //get reference to the source of the exception chain    Exception ex = Server.GetLastError().GetBaseException();     // log the details of the exception and page state to the    // event log.    EventLog.WriteEntry(\"My Web Application\",      \"MESSAGE: \" + ex.Message +       \"\\nSOURCE: \" + ex.Source,       EventLogEntryType.Error);     // Optional e-mail or other notification here... }   </script>"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "strong": [
      "Try",
      "Catch",
      "Finally"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Check For</h1>\n  <p>Ensure that exceptions are logged to the server to allow further analysis and debugging.</p>\n  <h1>Why</h1>\n  <p>Malicious attacks may result in application exceptions. Exceptions contain critical information on problems which occur in production systems.&amp;nbsp;Logging them will help track down problems faster. </p>\n  <h1>How to Check</h1>\n  <p>Ensure that&amp;nbsp;your application uses structured exception handling and employs a global error handler. Ensure that in all exception handlers and the global error handler, code exists to log exception details to the server.&amp;nbsp;Code will be similar to this:</p>\n  <pre>    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry(\"My Web Application\",<br />      \"MESSAGE: \" + ex.Message +<br />       \"\\nSOURCE: \" + ex.Source,<br />       EventLogEntryType.Error);</pre>\n  <h1>How to Fix</h1>\n  <p>You should log all exceptions in the event log to record them for tracking and later analysis.&amp;nbsp;Event logging should occur in <strong>Try</strong>/<strong>Catch</strong>/<strong>Finally</strong> blocks in code as well as in the global error handler. Use code similar to the following:</p>\n  <pre>&lt;%@ Application Language=\"C#\" %&gt;<br /> &lt;%@ Import Namespace=\"System.Diagnostics\" %&gt;<br />  &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> {<br />    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry(\"My Web Application\",<br />      \"MESSAGE: \" + ex.Message +<br />       \"\\nSOURCE: \" + ex.Source,<br />       EventLogEntryType.Error);<br />     // Optional e-mail or other notification here...<br /> }<br />   &lt;/script&gt;</pre>\n  <h1>Problem Example</h1>\n  <p>An ASP.NET application is under attack by a malicious user. One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&amp;nbsp;Unfortunately the application doesn't log exception details to the server, so this debugging and auditing information is lost forever.</p>\n  <h1>Solution Example</h1>\n  <p>An ASP.NET application is under attack by a malicious user. One side effect of the attack is a set of application exceptions when connecting to and retrieving data from the database.&amp;nbsp;Fortunately the application logs exception details to the server, so this debugging and auditing information is discovered by the site admin and delivered to the development team for further analysis.</p>\n  <pre>&lt;%@ Application Language=\"C#\" %&gt;<br /> &lt;%@ Import Namespace=\"System.Diagnostics\" %&gt;<br />  &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> {<br />    //get reference to the source of the exception chain<br />    Exception ex = Server.GetLastError().GetBaseException();<br />     // log the details of the exception and page state to the<br />    // event log.<br />    EventLog.WriteEntry(\"My Web Application\",<br />      \"MESSAGE: \" + ex.Message +<br />       \"\\nSOURCE: \" + ex.Source,<br />       EventLogEntryType.Error);<br />     // Optional e-mail or other notification here...<br /> }<br />   &lt;/script&gt;</pre>\n  <br />\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
}