{
  "id": "61b481cf-3b56-466b-b96e-f7ed6c4c1948",
  "checksum": "72542bb900491a6e8ca527f0e0aa8d3a9900e967",
  "words": {
    "description": [
      "h2"
    ],
    "predictable": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "resource": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "location": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "vulnerabilities": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "occur": [
      "p"
    ],
    "when": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2"
    ],
    "places": [
      "p"
    ],
    "code": [
      "p"
    ],
    "or": [
      "p",
      "p",
      "p"
    ],
    "data": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p"
    ],
    "easy": [
      "p",
      "p",
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "guess": [
      "p",
      "p",
      "p"
    ],
    "locations": [
      "p"
    ],
    "result": [
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "can": [
      "p",
      "p",
      "p"
    ],
    "where": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "specific": [
      "p"
    ],
    "portion": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "located": [
      "p"
    ],
    "and": [
      "p"
    ],
    "this": [
      "p",
      "p"
    ],
    "makes": [
      "p",
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "easier": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "carry": [
      "p"
    ],
    "out": [
      "p"
    ],
    "attacks": [
      "p",
      "p"
    ],
    "exploit": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "other": [
      "p",
      "p",
      "p"
    ],
    "don't": [
      "p"
    ],
    "give": [
      "p"
    ],
    "attackers": [
      "p",
      "p"
    ],
    "any": [
      "p"
    ],
    "dangerous": [
      "p"
    ],
    "capabilities": [
      "p"
    ],
    "by": [
      "p",
      "p"
    ],
    "themselves": [
      "p"
    ],
    "but": [
      "p",
      "p",
      "p"
    ],
    "they": [
      "p",
      "p",
      "p"
    ],
    "might": [
      "p",
      "p"
    ],
    "make": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "exploitable": [
      "p"
    ],
    "also": [
      "p"
    ],
    "write": [
      "p",
      "p",
      "p"
    ],
    "exploits": [
      "p"
    ],
    "rapidly": [
      "p",
      "p",
      "p"
    ],
    "attack": [
      "p",
      "p",
      "p"
    ],
    "multiple": [
      "p",
      "p"
    ],
    "servers": [
      "p",
      "p",
      "p",
      "p"
    ],
    "all": [
      "p"
    ],
    "applications": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "p"
    ],
    "potentially": [
      "p"
    ],
    "affected": [
      "p"
    ],
    "impact": [
      "h2",
      "p"
    ],
    "for": [
      "p",
      "ul",
      "li"
    ],
    "additional": [
      "p",
      "h2"
    ],
    "be": [
      "p",
      "p",
      "p"
    ],
    "present": [
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p"
    ],
    "with": [
      "p"
    ],
    "deployed": [
      "p"
    ],
    "on": [
      "p"
    ],
    "large": [
      "p"
    ],
    "amount": [
      "p"
    ],
    "will": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "script": [
      "p",
      "p"
    ],
    "lot": [
      "p"
    ],
    "because": [
      "p"
    ],
    "able": [
      "p",
      "p"
    ],
    "hard-code": [
      "p"
    ],
    "vulnerability": [
      "p",
      "p",
      "p"
    ],
    "into": [
      "p"
    ],
    "does": [
      "p",
      "p"
    ],
    "not": [
      "p",
      "p"
    ],
    "know": [
      "p"
    ],
    "have": [
      "p",
      "p"
    ],
    "scan": [
      "p"
    ],
    "each": [
      "p"
    ],
    "server": [
      "p"
    ],
    "individually": [
      "p"
    ],
    "find": [
      "p"
    ],
    "vulnerable": [
      "p",
      "p"
    ],
    "predict": [
      "p"
    ],
    "doesn't": [
      "p"
    ],
    "scan)": [
      "p"
    ],
    "one": [
      "p"
    ],
    "most": [
      "p"
    ],
    "common": [
      "p"
    ],
    "examples": [
      "p"
    ],
    "placing": [
      "p"
    ],
    "administrative": [
      "p"
    ],
    "page": [
      "p",
      "p"
    ],
    "such": [
      "p",
      "p"
    ],
    "as": [
      "p"
    ],
    "directory": [
      "p"
    ],
    "called": [
      "p"
    ],
    "admin": [
      "p",
      "p"
    ],
    "has": [
      "p"
    ],
    "very": [
      "p"
    ],
    "frequently": [
      "p"
    ],
    "used": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "build": [
      "p"
    ],
    "web": [
      "p"
    ],
    "based": [
      "p"
    ],
    "botnets": [
      "p"
    ],
    "countermeasures": [
      "h2"
    ],
    "mitigate": [
      "p"
    ],
    "use": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "access": [
      "p",
      "p"
    ],
    "controls": [
      "p",
      "p"
    ],
    "protect": [
      "p"
    ],
    "sensitive": [
      "p",
      "p"
    ],
    "functionality": [
      "p",
      "ul",
      "li",
      "a",
      "p",
      "ul",
      "li",
      "a"
    ],
    "\"fix\"": [
      "p"
    ],
    "much": [
      "p"
    ],
    "less": [
      "p"
    ],
    "useful": [
      "p"
    ],
    "force": [
      "ul",
      "li",
      "a"
    ],
    "re-authentication": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "executing": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "critical": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "role-based": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "authorization": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "check": [
      "h2"
    ],
    "sure": [
      "p",
      "p"
    ],
    "mitigated": [
      "p"
    ],
    "protected": [
      "p"
    ],
    "using": [
      "p"
    ],
    "enforced": [
      "ul",
      "li",
      "a"
    ],
    "resources": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//projects.webappsec.org/w/page/13246953/predictable%20resource%20location": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Description",
      "Impact",
      "Countermeasures",
      "Application Check",
      "Additional Resources"
    ],
    "p": [
      "Predictable resource location vulnerabilities occur when the application places code or data in easy to guess locations. The result is that an attacker can guess where a specific portion of the application or data is located, and this makes it easier to carry out attacks that exploit other vulnerabilities.",
      "Predictable resource location vulnerabilities don't give attackers any dangerous capabilities by themselves, but they might make other vulnerabilities exploitable or easier to exploit. Predictable resource location also makes it easier to write exploits that can rapidly attack multiple servers.",
      "All applications are potentially affected by predictable resource location vulnerabilities.",
      "The impact of predictable resource location vulnerabilities is that they make it easier for an attacker to exploit additional vulnerabilities that might be present in the application. If an application with other vulnerabilities is deployed on a large amount of servers, predictable resource location will make it easier to write a script that will attack a lot of servers rapidly, because the attacker will be able to hard-code the location of the vulnerability into the exploit. (If the attacker does not know the location of the vulnerability, they will have to scan each server individually to find the vulnerable script, but if the location is easy to predict, the attacker doesn't have to scan.)",
      "One of the most common examples of a predictable resource location vulnerability is placing an administrative page in an easy to guess location, such as a directory called admin. If the admin page has vulnerabilities in it, the attacker can write an exploit that will be able to attack multiple vulnerable servers very rapidly. Such attacks are frequently used to build web application based botnets.",
      "To mitigate predictable resource location vulnerabilities, use access controls to protect sensitive functionality. This does not \"fix\" predictable resource location, but makes it much less useful to attackers.",
      "To make sure that predictable resource location vulnerabilities are mitigated, make sure that sensitive functionality is protected using access controls."
    ],
    "ul": [
      "Force Re-authentication When Executing Critical Functionality\n Use Role-based Authorization",
      "Re-authentication Is Enforced When Executing Critical Functionality\n Role-based Authorization Is Used",
      "For more information about predictable resource location, see http://projects.webappsec.org/w/page/13246953/Predictable%20Resource%20Location"
    ],
    "li": [
      "Force Re-authentication When Executing Critical Functionality",
      "Use Role-based Authorization",
      "Re-authentication Is Enforced When Executing Critical Functionality",
      "Role-based Authorization Is Used",
      "For more information about predictable resource location, see http://projects.webappsec.org/w/page/13246953/Predictable%20Resource%20Location"
    ],
    "a": [
      "Force Re-authentication When Executing Critical Functionality",
      "Use Role-based Authorization",
      "Re-authentication Is Enforced When Executing Critical Functionality",
      "Role-based Authorization Is Used",
      "http://projects.webappsec.org/w/page/13246953/Predictable%20Resource%20Location"
    ]
  },
  "links": [
    {
      "href": "ae289022-d611-4fe4-b177-45066a398da8",
      "text": "Force Re-authentication When Executing Critical Functionality"
    },
    {
      "href": "b0a206b5-61c4-4d9f-8c06-057783ebf249",
      "text": "Use Role-based Authorization"
    },
    {
      "href": "4e186cf4-06df-4cf1-aeb9-731e218612d1",
      "text": "Re-authentication Is Enforced When Executing Critical Functionality"
    },
    {
      "href": "e38cab08-316c-4257-8001-e490827fed6e",
      "text": "Role-based Authorization Is Used"
    },
    {
      "href": "http://projects.webappsec.org/w/page/13246953/Predictable%20Resource%20Location",
      "text": "http://projects.webappsec.org/w/page/13246953/Predictable%20Resource%20Location"
    }
  ],
  "html": "<h2>Description</h2><p>Predictable resource location vulnerabilities occur when the application places code or data in easy to guess locations. The result is that an attacker can guess where a specific portion of the application or data is located, and this makes it easier to carry out attacks that exploit other vulnerabilities. \n</p><p>\nPredictable resource location vulnerabilities don't give attackers any dangerous capabilities by themselves, but they might make other vulnerabilities exploitable or easier to exploit. Predictable resource location also makes it easier to write exploits that can rapidly attack multiple servers.\n</p><p>\nAll applications are potentially affected by predictable resource location vulnerabilities.\n</p><h2>Impact</h2><p>The impact of predictable resource location vulnerabilities is that they make it easier for an attacker to exploit additional vulnerabilities that might be present in the application. If an application with other vulnerabilities is deployed on a large amount of servers, predictable resource location will make it easier to write a script that will attack a lot of servers rapidly, because the attacker will be able to hard-code the location of the vulnerability into the exploit. (If the attacker does not know the location of the vulnerability, they will have to scan each server individually to find the vulnerable script, but if the location is easy to predict, the attacker doesn't have to scan.) \n</p><p>\nOne of the most common examples of a predictable resource location vulnerability is placing an administrative page in an easy to guess location, such as a directory called admin. If the admin page has vulnerabilities in it, the attacker can write an exploit that will be able to attack multiple vulnerable servers very rapidly. Such attacks are frequently used to build web application based botnets. \n</p><h2>Countermeasures</h2><p>To mitigate predictable resource location vulnerabilities, use access controls to protect sensitive functionality. This does not \"fix\" predictable resource location, but makes it much less useful to attackers. \n</p><ul>\n<li> <a href=\"ae289022-d611-4fe4-b177-45066a398da8\">Force Re-authentication When Executing Critical Functionality</a></li>\n<li> <a href=\"b0a206b5-61c4-4d9f-8c06-057783ebf249\">Use Role-based Authorization</a></li>\n</ul><h2>Application Check</h2><p>To make sure that predictable resource location vulnerabilities are mitigated, make sure that sensitive functionality is protected using access controls.\n</p><ul>\n<li> <a href=\"4e186cf4-06df-4cf1-aeb9-731e218612d1\">Re-authentication Is Enforced When Executing Critical Functionality</a></li>\n<li> <a href=\"e38cab08-316c-4257-8001-e490827fed6e\">Role-based Authorization Is Used</a></li>\n</ul><h2>Additional Resources</h2><ul><li> For more information about predictable resource location, see <a href=\"http://projects.webappsec.org/w/page/13246953/Predictable%20Resource%20Location\">http://projects.webappsec.org/w/page/13246953/Predictable%20Resource%20Location</a></li>\n</ul>"
}