{
  "id": "00000000-0000-0000-0000-0000002e3de4",
  "checksum": "53f474c628ef433e067e8773e855803faea4f696",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "all": [
      "ul",
      "li",
      "ol",
      "li"
    ],
    "ios": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "applications": [
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2",
      "p"
    ],
    "implement": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "code": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "h2",
      "ul",
      "li",
      "a",
      "h2",
      "ul",
      "li",
      "a",
      "title"
    ],
    "integrity": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "h2",
      "ul",
      "li",
      "a",
      "h2",
      "ul",
      "li",
      "a",
      "title"
    ],
    "checks": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "that": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "are": [
      "p",
      "ol",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "difficult": [
      "p"
    ],
    "bypass": [
      "p"
    ],
    "why": [
      "h2"
    ],
    "help": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "software": [
      "p"
    ],
    "piracy": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "and": [
      "p",
      "ol",
      "li"
    ],
    "unauthorized": [
      "p"
    ],
    "modifications": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "not": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "provide": [
      "p"
    ],
    "100%": [
      "p"
    ],
    "assurance": [
      "p",
      "ol",
      "li"
    ],
    "of": [
      "p",
      "ol",
      "li"
    ],
    "but": [
      "p",
      "ol",
      "li"
    ],
    "they": [
      "p"
    ],
    "make": [
      "p",
      "ol",
      "li"
    ],
    "it": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "harder": [
      "p",
      "ol",
      "li"
    ],
    "for": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "an": [
      "p",
      "ol",
      "li"
    ],
    "attacker": [
      "p",
      "ol",
      "li"
    ],
    "modify": [
      "p"
    ],
    "binary": [
      "p"
    ],
    "without": [
      "p"
    ],
    "breaking": [
      "p"
    ],
    "how": [
      "h2"
    ],
    "check": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "write": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "functions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "often": [
      "ol",
      "li"
    ],
    "try": [
      "ol",
      "li"
    ],
    "determine": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "whether": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "running": [
      "ol",
      "li"
    ],
    "on": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "a": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "jailbroken": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "device": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "necessarily": [
      "ol",
      "li"
    ],
    "pirated": [
      "ol",
      "li"
    ],
    "if": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "there": [
      "ol",
      "li"
    ],
    "no": [
      "ol",
      "li"
    ],
    "fool-proof": [
      "ol",
      "li"
    ],
    "anti-piracy": [
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "measures": [
      "ol",
      "li"
    ],
    "devices": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "can": [
      "ol",
      "li"
    ],
    "by": [
      "ol",
      "li"
    ],
    "looking": [
      "ol",
      "li"
    ],
    "files": [
      "ol",
      "li"
    ],
    "only": [
      "ol",
      "li"
    ],
    "appear": [
      "ol",
      "li"
    ],
    "such": [
      "ol",
      "li"
    ],
    "as": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "cydia": [
      "ol",
      "li"
    ],
    "concern": [
      "ol",
      "li"
    ],
    "this": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "step": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "may": [
      "ol",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "omitted": [
      "ol",
      "li"
    ],
    "most": [
      "ol",
      "li"
    ],
    "common": [
      "ol",
      "li"
    ],
    "ways": [
      "ol",
      "li"
    ],
    "classes": [
      "ol",
      "li"
    ],
    "expected": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "addresses": [
      "ol",
      "li"
    ],
    "checksums": [
      "ol",
      "li"
    ],
    "class_getmethodimplementation": [
      "ol",
      "li",
      "em",
      "ul",
      "li",
      "em"
    ],
    "method": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "returns": [
      "ol",
      "li"
    ],
    "pointer": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "checking": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "value": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "against": [
      "ol",
      "li"
    ],
    "provides": [
      "ol",
      "li"
    ],
    "reasonable": [
      "ol",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "been": [
      "ol",
      "li"
    ],
    "modified": [
      "ol",
      "li"
    ],
    "during": [
      "ol",
      "li"
    ],
    "runtime": [
      "ol",
      "li"
    ],
    "define": [
      "ol",
      "li",
      "strong"
    ],
    "inline": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "em"
    ],
    "written": [
      "ol",
      "li"
    ],
    "in": [
      "ol",
      "li"
    ],
    "previous": [
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "li"
    ],
    "defined": [
      "ol",
      "li"
    ],
    "so": [
      "ol",
      "li"
    ],
    "compiler": [
      "ol",
      "li"
    ],
    "inserts": [
      "ol",
      "li"
    ],
    "full": [
      "ol",
      "li"
    ],
    "wherever": [
      "ol",
      "li"
    ],
    "invoked": [
      "ol",
      "li"
    ],
    "scatter": [
      "ol",
      "li",
      "strong"
    ],
    "throughout": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "multiple": [
      "ol",
      "li"
    ],
    "function": [
      "ol",
      "li"
    ],
    "calls": [
      "ol",
      "li"
    ],
    "spread": [
      "ol",
      "li"
    ],
    "out": [
      "ol",
      "li"
    ],
    "find": [
      "ol",
      "li"
    ],
    "them": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "patch": [
      "ol",
      "li"
    ],
    "guidelines": [
      "h2"
    ],
    "sign": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "updates": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h2"
    ],
    "implemented": [
      "ul",
      "li",
      "a"
    ],
    "signed": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "https//developer.apple.com/library/mac/#documentation/cocoa/reference/objcruntimeref/reference/reference.html": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "How",
      "Code Integrity Guidelines",
      "Code Integrity Checklists",
      "Additional Resources"
    ],
    "ul": [
      "All iOS applications.",
      "Implement Code Integrity Checks\n Sign iOS Application Updates\n Sign iOS Applications",
      "Code Integrity Checks Are Implemented\n iOS Application Updates Are Signed\n iOS Applications Are Signed",
      "For more information about the class_getMethodImplementation method, please see https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html"
    ],
    "li": [
      "All iOS applications.",
      "Write piracy check functions. Piracy check functions often try to determine whether the application is running on a jailbroken device. The application is not necessarily pirated if it is on a jailbroken device, but there are no fool-proof anti-piracy or code integrity measures for jailbroken devices. Piracy checks can determine whether a device is jailbroken by looking for files that only appear on jailbroken devices, such as Cydia. If piracy is not a concern, this step may be omitted.",
      "Write integrity check functions. The most common ways to implement code integrity checks is to check classes for expected addresses or checksums. The class_getMethodImplementation method returns a pointer to a method; checking the value of this pointer against the expected value provides reasonable assurance that the method has not been modified during runtime.",
      "Define integrity check functions as inline. The integrity check functions written in the previous step should be defined as inline so that the compiler inserts the full integrity checking code wherever it is invoked.",
      "Scatter integrity check functions throughout the application. Multiple integrity check function calls spread out throughout the application make it harder for an attacker to find them all and patch them.",
      "Implement Code Integrity Checks",
      "Sign iOS Application Updates",
      "Sign iOS Applications",
      "Code Integrity Checks Are Implemented",
      "iOS Application Updates Are Signed",
      "iOS Applications Are Signed",
      "For more information about the class_getMethodImplementation method, please see https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html"
    ],
    "p": [
      "Implement code integrity checks that are difficult to bypass.",
      "Code integrity checks help prevent software piracy and unauthorized modifications to the application. Code integrity checks do not provide 100% assurance of code integrity, but they make it harder for an attacker to modify the application binary code without breaking it.",
      "To check code for integrity:"
    ],
    "ol": [
      "Write piracy check functions. Piracy check functions often try to determine whether the application is running on a jailbroken device. The application is not necessarily pirated if it is on a jailbroken device, but there are no fool-proof anti-piracy or code integrity measures for jailbroken devices. Piracy checks can determine whether a device is jailbroken by looking for files that only appear on jailbroken devices, such as Cydia. If piracy is not a concern, this step may be omitted.\n Write integrity check functions. The most common ways to implement code integrity checks is to check classes for expected addresses or checksums. The class_getMethodImplementation method returns a pointer to a method; checking the value of this pointer against the expected value provides reasonable assurance that the method has not been modified during runtime.\n Define integrity check functions as inline. The integrity check functions written in the previous step should be defined as inline so that the compiler inserts the full integrity checking code wherever it is invoked.\n Scatter integrity check functions throughout the application. Multiple integrity check function calls spread out throughout the application make it harder for an attacker to find them all and patch them."
    ],
    "strong": [
      "Write piracy check functions.",
      "Write integrity check functions.",
      "Define integrity check functions as inline.",
      "Scatter integrity check functions throughout the application."
    ],
    "em": [
      "class_getMethodImplementation",
      "inline",
      "class_getMethodImplementation"
    ],
    "a": [
      "Implement Code Integrity Checks",
      "Sign iOS Application Updates",
      "Sign iOS Applications",
      "Code Integrity Checks Are Implemented",
      "iOS Application Updates Are Signed",
      "iOS Applications Are Signed",
      "https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-0000002e3de4",
      "text": "Implement Code Integrity Checks"
    },
    {
      "href": "00000000-0000-0000-0000-000000470103",
      "text": "Sign iOS Application Updates"
    },
    {
      "href": "00000000-0000-0000-0000-000000986af1",
      "text": "Sign iOS Applications"
    },
    {
      "href": "00000000-0000-0000-0000-0000002d9dac",
      "text": "Code Integrity Checks Are Implemented"
    },
    {
      "href": "00000000-0000-0000-0000-000000892dc7",
      "text": "iOS Application Updates Are Signed"
    },
    {
      "href": "00000000-0000-0000-0000-00000039db6a",
      "text": "iOS Applications Are Signed"
    },
    {
      "href": "https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html",
      "text": "https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> All iOS applications.</li>\n</ul><h2>What to Do</h2><p>Implement code integrity checks that are difficult to bypass.\n</p><h2>Why</h2><p>Code integrity checks help prevent software piracy and unauthorized modifications to the application. Code integrity checks do not provide 100% assurance of code integrity, but they make it harder for an attacker to modify the application binary code without breaking it.\n</p><h2>How</h2><p>To check code for integrity:\n</p><ol>\n<li> <strong>Write piracy check functions.</strong> Piracy check functions often try to determine whether the application is running on a jailbroken device. The application is not necessarily pirated if it is on a jailbroken device, but there are no fool-proof anti-piracy or code integrity measures for jailbroken devices. Piracy checks can determine whether a device is jailbroken by looking for files that only appear on jailbroken devices, such as Cydia. If piracy is not a concern, this step may be omitted.</li>\n<li> <strong>Write integrity check functions.</strong> The most common ways to implement code integrity checks is to check classes for expected addresses or checksums. The <em>class_getMethodImplementation</em> method returns a pointer to a method; checking the value of this pointer against the expected value provides reasonable assurance that the method has not been modified during runtime.</li>\n<li> <strong>Define integrity check functions as inline.</strong> The integrity check functions written in the previous step should be defined as <em>inline</em> so that the compiler inserts the full integrity checking code wherever it is invoked.</li>\n<li> <strong>Scatter integrity check functions throughout the application.</strong> Multiple integrity check function calls spread out throughout the application make it harder for an attacker to find them all and patch them.</li>\n</ol><h2>Code Integrity Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000002e3de4\">Implement Code Integrity Checks</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000470103\">Sign iOS Application Updates</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000986af1\">Sign iOS Applications</a></li>\n</ul><h2>Code Integrity Checklists</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000002d9dac\">Code Integrity Checks Are Implemented</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000892dc7\">iOS Application Updates Are Signed</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000039db6a\">iOS Applications Are Signed</a></li>\n</ul><h2>Additional Resources</h2><ul><li> For more information about the <em>class_getMethodImplementation</em> method, please see <a href=\"https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html\">https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html</a></li></ul>"
}