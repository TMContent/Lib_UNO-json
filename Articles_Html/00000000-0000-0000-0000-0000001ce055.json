{
  "id": "00000000-0000-0000-0000-0000001ce055",
  "checksum": "fe53e730faf31b832c22d0b61d1704340597c7cc",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "php": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2",
      "ol",
      "ol",
      "li",
      "strong",
      "li"
    ],
    "for": [
      "h2",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "including": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "code": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li"
    ],
    "from": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li"
    ],
    "other": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "files": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "a": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "very": [
      "p"
    ],
    "common": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "dangerous": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "programming": [
      "p"
    ],
    "practice": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "make": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "sure": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "that": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "locations": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "filenames": [
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "included": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "title"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "title"
    ],
    "validated": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "user": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "input": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "not": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "used": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "specify": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "or": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "include": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em",
      "em",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "em",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em",
      "em",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "em"
    ],
    "why": [
      "h2"
    ],
    "evaluates": [
      "p"
    ],
    "as": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "if": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "attacker": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "able": [
      "p",
      "p",
      "p",
      "p"
    ],
    "manipulate": [
      "p"
    ],
    "which": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "he": [
      "p"
    ],
    "execute": [
      "p",
      "p",
      "p"
    ],
    "arbitrary": [
      "p",
      "p",
      "p"
    ],
    "context": [
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "this": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "usually": [
      "p"
    ],
    "gives": [
      "p"
    ],
    "full": [
      "p"
    ],
    "control": [
      "p"
    ],
    "local": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "way": [
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "called": [
      "p",
      "p"
    ],
    "file": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "inclusion": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "lfi).": [
      "p"
    ],
    "remote": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "rfi).": [
      "p"
    ],
    "safely": [
      "p",
      "p",
      "p",
      "title"
    ],
    "prevents": [
      "p",
      "p"
    ],
    "manipulating": [
      "p"
    ],
    "thus": [
      "p"
    ],
    "lfi": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "rfi": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "vulnerabilities": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "how": [
      "h2",
      "ol",
      "li",
      "h2",
      "ol",
      "li"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "version": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "old": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "versions": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "have": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "null-byte": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "vulnerability": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "makes": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "easier": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "exploit": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "potential": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "recent": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "remove": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "harder": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "find": [
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li"
    ],
    "includes": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "search": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "following": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "keywords": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "require": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "em"
    ],
    "include_once": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "em"
    ],
    "require_once": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "em"
    ],
    "list": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "contain": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "these": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "indicate": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "go": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "through": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "apply": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "steps": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "call": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "only": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "filesystem": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "allows": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "via": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "url": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "examine": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "string": [
      "ol",
      "li"
    ],
    "variable": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "location": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "helps": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "prevent": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "ability": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "hosts": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "too": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "use": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li"
    ],
    "disabled": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "altogether": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "separate": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "folder": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "realpath": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "determine": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "absolute": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "path": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "contains": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "before": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "installation": [
      "ol",
      "li"
    ],
    "instructions": [
      "ol",
      "li"
    ],
    "note": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "read-only": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "after": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "deploying": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "extensions": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "choose": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "extension": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "such": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "\"inc\"": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "\"php\"": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "carrying": [
      "ol",
      "li"
    ],
    "out": [
      "ol",
      "li"
    ],
    "actual": [
      "ol",
      "li"
    ],
    "static": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "names": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li"
    ],
    "paths": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "most": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "effective": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "preventative": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "measure": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "against": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "defined": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "strings": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "any": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "with": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "considered": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "safe": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "dynamic": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "suspect": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "name": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "one": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "decided": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "by": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "at": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "run-time": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "based": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "on": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "more": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "variables": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "piece": [
      "ol",
      "li"
    ],
    "whether": [
      "ol",
      "li"
    ],
    "uses": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "mapping": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "li",
      "strong",
      "li"
    ],
    "values": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "li"
    ],
    "necessary": [
      "ol",
      "li",
      "strong"
    ],
    "design": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "requires": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "conditionally": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "choosing": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "white-list": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "valid": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "taken": [
      "ol",
      "li"
    ],
    "data": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "see": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "value": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "throughout": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "point": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "may": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "even": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "partially": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "needs": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "rewritten": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "changed": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "because": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "essence": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "update": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "don't": [
      "ol",
      "li"
    ],
    "do": [
      "ol",
      "li"
    ],
    "-": [
      "ol",
      "li"
    ],
    "system": [
      "ol",
      "li"
    ],
    "validate": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "place": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "located": [
      "ol",
      "li"
    ],
    "inside": [
      "ol",
      "li"
    ],
    "dedicated": [
      "ol",
      "li"
    ],
    "add": [
      "ol",
      "li"
    ],
    "documentation": [
      "ol",
      "li"
    ],
    "limiting": [
      "ol",
      "li"
    ],
    "single": [
      "ol",
      "li"
    ],
    "an": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "minor": [
      "ol",
      "li"
    ],
    "defense-in-depth": [
      "ol",
      "li"
    ],
    "but": [
      "ol",
      "li"
    ],
    "possible": [
      "ol",
      "li"
    ],
    "define": [
      "ol",
      "li"
    ],
    "variation": [
      "ol",
      "li"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "into": [
      "ol",
      "li"
    ],
    "array": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "containing": [
      "ol",
      "li"
    ],
    "avoid": [
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "importantly": [
      "ol",
      "li"
    ],
    "affected": [
      "ol",
      "li"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix"
    ],
    "ul": [
      "PHP"
    ],
    "li": [
      "PHP",
      "Check PHP version. Old PHP versions have the Null-byte vulnerability. The Null-byte vulnerability makes it easier to exploit potential Local File Inclusion vulnerabilities. Make sure that PHP is a recent version to remove the Null-byte vulnerability and make it harder to exploit potential Local File Inclusion vulnerabilities.",
      "Find all code that includes code from other files. Search application code for the following keywords: include, require, include_once, and require_once. Make a list of all the files that contain these keywords. This list should indicate all PHP files that include code from other PHP files. Go through this list and apply the following steps to each call to include, require, include_once and require_once.",
      "Verify that files are only included from the filesystem. PHP allows including files via a URL. Examine each string and variable that is used to specify the location of the file to be included to make sure that files are only included from the filesystem. Only including files from the filesystem helps prevent Remote File Inclusion vulnerabilities. The ability to include files from other hosts is too dangerous to use in practice and should be disabled altogether.",
      "Verify that the locations of the included files are validated. Verify that all files to be included are in a separate folder. Verify that realpath is used to determine the absolute path to the folder that contains the files to be included. Verify that the location of each file to be included is validated before the file is included. Make sure the application installation instructions contain a note to make the folder that contains the files to be included read-only after deploying the application.",
      "Verify that the file extensions of the included files are validated. Choose a file extension, such as \".inc\" or \".php\" for the files to be included. Make sure that file extensions of the files to be included are validated before carrying out the actual inclusion.",
      "Verify that included files have static file names and paths. The most effective preventative measure against LFI and RFI is only including files that have file names and paths defined as static strings in code. Any code that includes files with static file names should be considered safe. Any code that includes files with dynamic file names or paths should be considered suspect. A dynamic file name or path is one which is decided by the application at run-time based on one or more variables. Examine each piece of code that includes PHP files and check whether it uses static file names and paths.",
      "Verify that mapping values are used if necessary. If the application design requires conditionally choosing which file to include, a white-list of valid files to include should be used. Verify that a white-list of valid files to include is defined as a list of static file names and paths. Make sure that the locations and file names of files to be included are taken only from the white-list of valid files.",
      "Make sure that user data is not used to specify the files to include. Examine each call to include, require, include_once and require_once to see if it uses a variable to determine which file to include. If a variable is used to determine which file to include, examine how the value of this variable is defined throughout the application. If at any point the value of this variable may be even partially defined by user input, this file inclusion is not safe. It needs to be rewritten to use static file names and paths or mapping values. If the application design requires file inclusion based on user data, the design needs to be changed, because this is the essence of RFI and LFI.",
      "Update PHP. Old PHP versions have the Null-byte vulnerability. The Null-byte vulnerability makes it easier to exploit potential Local File Inclusion vulnerabilities. Update PHP to a recent version to remove the Null-byte vulnerability and make it harder to exploit potential Local File Inclusion vulnerabilities.",
      "Find all code that includes code from other files. Search application code for the following keywords: include, require, include_once, and require_once. Make a list of all the files that contain these keywords. This list should indicate all PHP files that include code from other PHP files. Go through this list and apply the following steps to each call to include, require, include_once and require_once.",
      "Only include files from the filesystem. PHP allows including files via a URL. Don't do this - only include files via the filesystem. Only including files from the file system helps prevent Remote File Inclusion vulnerabilities. The ability to include files from other hosts is too dangerous to use in practice and should be disabled altogether.",
      "Validate the locations of the included files. Place all files to be included in a separate folder. Use realpath to determine the absolute path to the folder that contains the files to be included. Validate the location of each file to be included to make sure that it is located inside the dedicated include folder. Add a note to the application documentation to make the include folder read-only after deploying the application. Limiting the location of the included files to a single folder makes it harder for an attacker to exploit the Local File Inclusion vulnerability.",
      "Validate the file extension of the included files. Choose a file extension, such as \".inc\" or \".php\" for the files to be included. Validate that the file to be included has that file extension. This is only a minor defense-in-depth measure, but it makes it harder for an attacker to exploit the Local File Inclusion vulnerability.",
      "Use static file names to include files. The most effective preventative measure against LFI and RFI is only including files that have file names and paths defined as static strings in code. Any code that includes files with static file names should be considered safe. Any code that includes files with dynamic file names or paths should be considered suspect. A dynamic file name or path is one which is decided by the application at run-time based on one or more variables. Code that includes files with dynamic names or paths should be rewritten to use static names and paths if at all possible.",
      "Use a mapping of valid files to include. If the application design requires conditionally choosing which file to include, define a white-list of valid files to include as a list of static file names and paths. This is a variation of using static file names and paths to include files. Place the list of valid files to include into an array. Only include files using the file names and paths from the array containing the white-list of valid files to include.",
      "Avoid including files based on user input. Most importantly, avoid including files based on variables that may be affected by user input. Examine each call to include, require, include_once and require_once to see if it uses a variable to determine which file to include. If a variable is used to determine which file to include, examine how the value of this variable is defined throughout the application. If at any point the value of this variable may be even partially defined by user input, this file inclusion is not safe. It needs to be rewritten to use static file names and paths or mapping values. If the application design requires file inclusion based on user data, the design needs to be changed, because this is the essence of RFI and LFI."
    ],
    "p": [
      "Including code from other PHP files is a very common and dangerous programming practice in PHP. Make sure that the locations and the filenames of the included files are validated. Make sure that user input is not used to specify the locations or the filenames of the files to include.",
      "PHP evaluates included files as PHP code. If the attacker is able to manipulate which files are included, he is able to execute arbitrary code in the context of the PHP application. This usually gives full control of the application to the attacker. If the attacker is able to execute arbitrary local files this way it is called Local File Inclusion (LFI). If the attacker is able to execute arbitrary remote files this way it is called Remote File Inclusion (RFI). Including files safely prevents the attacker from manipulating which files are included and thus prevents LFI and RFI vulnerabilities.",
      "To verify that files are included safely:",
      "To include files safely:"
    ],
    "ol": [
      "Check PHP version. Old PHP versions have the Null-byte vulnerability. The Null-byte vulnerability makes it easier to exploit potential Local File Inclusion vulnerabilities. Make sure that PHP is a recent version to remove the Null-byte vulnerability and make it harder to exploit potential Local File Inclusion vulnerabilities.\n Find all code that includes code from other files. Search application code for the following keywords: include, require, include_once, and require_once. Make a list of all the files that contain these keywords. This list should indicate all PHP files that include code from other PHP files. Go through this list and apply the following steps to each call to include, require, include_once and require_once. \n Verify that files are only included from the filesystem. PHP allows including files via a URL. Examine each string and variable that is used to specify the location of the file to be included to make sure that files are only included from the filesystem. Only including files from the filesystem helps prevent Remote File Inclusion vulnerabilities. The ability to include files from other hosts is too dangerous to use in practice and should be disabled altogether.\n Verify that the locations of the included files are validated. Verify that all files to be included are in a separate folder. Verify that realpath is used to determine the absolute path to the folder that contains the files to be included. Verify that the location of each file to be included is validated before the file is included. Make sure the application installation instructions contain a note to make the folder that contains the files to be included read-only after deploying the application.\n Verify that the file extensions of the included files are validated. Choose a file extension, such as \".inc\" or \".php\" for the files to be included. Make sure that file extensions of the files to be included are validated before carrying out the actual inclusion.\n Verify that included files have static file names and paths. The most effective preventative measure against LFI and RFI is only including files that have file names and paths defined as static strings in code. Any code that includes files with static file names should be considered safe. Any code that includes files with dynamic file names or paths should be considered suspect. A dynamic file name or path is one which is decided by the application at run-time based on one or more variables. Examine each piece of code that includes PHP files and check whether it uses static file names and paths.\n Verify that mapping values are used if necessary. If the application design requires conditionally choosing which file to include, a white-list of valid files to include should be used. Verify that a white-list of valid files to include is defined as a list of static file names and paths. Make sure that the locations and file names of files to be included are taken only from the white-list of valid files.\n Make sure that user data is not used to specify the files to include. Examine each call to include, require, include_once and require_once to see if it uses a variable to determine which file to include. If a variable is used to determine which file to include, examine how the value of this variable is defined throughout the application. If at any point the value of this variable may be even partially defined by user input, this file inclusion is not safe. It needs to be rewritten to use static file names and paths or mapping values. If the application design requires file inclusion based on user data, the design needs to be changed, because this is the essence of RFI and LFI.",
      "Update PHP. Old PHP versions have the Null-byte vulnerability. The Null-byte vulnerability makes it easier to exploit potential Local File Inclusion vulnerabilities. Update PHP to a recent version to remove the Null-byte vulnerability and make it harder to exploit potential Local File Inclusion vulnerabilities.\n Find all code that includes code from other files. Search application code for the following keywords: include, require, include_once, and require_once. Make a list of all the files that contain these keywords. This list should indicate all PHP files that include code from other PHP files. Go through this list and apply the following steps to each call to include, require, include_once and require_once. \n Only include files from the filesystem. PHP allows including files via a URL. Don't do this - only include files via the filesystem. Only including files from the file system helps prevent Remote File Inclusion vulnerabilities. The ability to include files from other hosts is too dangerous to use in practice and should be disabled altogether.\n Validate the locations of the included files. Place all files to be included in a separate folder. Use realpath to determine the absolute path to the folder that contains the files to be included. Validate the location of each file to be included to make sure that it is located inside the dedicated include folder. Add a note to the application documentation to make the include folder read-only after deploying the application. Limiting the location of the included files to a single folder makes it harder for an attacker to exploit the Local File Inclusion vulnerability.\n Validate the file extension of the included files. Choose a file extension, such as \".inc\" or \".php\" for the files to be included. Validate that the file to be included has that file extension. This is only a minor defense-in-depth measure, but it makes it harder for an attacker to exploit the Local File Inclusion vulnerability.\n Use static file names to include files. The most effective preventative measure against LFI and RFI is only including files that have file names and paths defined as static strings in code. Any code that includes files with static file names should be considered safe. Any code that includes files with dynamic file names or paths should be considered suspect. A dynamic file name or path is one which is decided by the application at run-time based on one or more variables. Code that includes files with dynamic names or paths should be rewritten to use static names and paths if at all possible.\n Use a mapping of valid files to include. If the application design requires conditionally choosing which file to include, define a white-list of valid files to include as a list of static file names and paths. This is a variation of using static file names and paths to include files. Place the list of valid files to include into an array. Only include files using the file names and paths from the array containing the white-list of valid files to include. \n Avoid including files based on user input. Most importantly, avoid including files based on variables that may be affected by user input. Examine each call to include, require, include_once and require_once to see if it uses a variable to determine which file to include. If a variable is used to determine which file to include, examine how the value of this variable is defined throughout the application. If at any point the value of this variable may be even partially defined by user input, this file inclusion is not safe. It needs to be rewritten to use static file names and paths or mapping values. If the application design requires file inclusion based on user data, the design needs to be changed, because this is the essence of RFI and LFI."
    ],
    "strong": [
      "Check PHP version.",
      "Find all code that includes code from other files.",
      "Verify that files are only included from the filesystem.",
      "Verify that the locations of the included files are validated.",
      "Verify that the file extensions of the included files are validated.",
      "Verify that included files have static file names and paths.",
      "Verify that mapping values are used if necessary.",
      "Make sure that user data is not used to specify the files to include.",
      "Update PHP.",
      "Find all code that includes code from other files.",
      "Only include files from the filesystem.",
      "Validate the locations of the included files.",
      "Validate the file extension of the included files.",
      "Use static file names to include files.",
      "Use a mapping of valid files to include.",
      "Avoid including files based on user input."
    ],
    "em": [
      "include",
      "require",
      "include_once",
      "require_once",
      "include",
      "require",
      "include_once",
      "require_once",
      "realpath",
      "include",
      "require",
      "include_once",
      "require_once",
      "include",
      "require",
      "include_once",
      "require_once",
      "include",
      "require",
      "include_once",
      "require_once",
      "realpath",
      "include",
      "require",
      "include_once",
      "require_once"
    ]
  },
  "links": [],
  "html": "<h2>Applies To</h2><ul><li> PHP</li>\n</ul><h2>What to Check For</h2><p>Including code from other PHP files is a very common and dangerous programming practice in PHP. Make sure that the locations and the filenames of the included files are validated. Make sure that user input is not used to specify the locations or the filenames of the files to include.\n</p><h2>Why</h2><p>PHP evaluates included files as PHP code. If the attacker is able to manipulate which files are included, he is able to execute arbitrary code in the context of the PHP application. This usually gives full control of the application to the attacker. If the attacker is able to execute arbitrary local files this way it is called Local File Inclusion (LFI). If the attacker is able to execute arbitrary remote files this way it is called Remote File Inclusion (RFI). Including files safely prevents the attacker from manipulating which files are included and thus prevents LFI and RFI vulnerabilities.\n</p><h2>How To Check</h2><p>To verify that files are included safely:\n</p><ol>\n<li> <strong>Check PHP version.</strong> Old PHP versions have the Null-byte vulnerability. The Null-byte vulnerability makes it easier to exploit potential Local File Inclusion vulnerabilities. Make sure that PHP is a recent version to remove the Null-byte vulnerability and make it harder to exploit potential Local File Inclusion vulnerabilities.</li>\n<li> <strong>Find all code that includes code from other files.</strong> Search application code for the following keywords: <em>include</em>, <em>require</em>, <em>include_once</em>, and <em>require_once</em>. Make a list of all the files that contain these keywords. This list should indicate all PHP files that include code from other PHP files. Go through this list and apply the following steps to each call to <em>include</em>, <em>require</em>, <em>include_once</em> and <em>require_once</em>. </li>\n<li> <strong>Verify that files are only included from the filesystem.</strong> PHP allows including files via a URL. Examine each string and variable that is used to specify the location of the file to be included to make sure that files are only included from the filesystem. Only including files from the filesystem helps prevent Remote File Inclusion vulnerabilities. The ability to include files from other hosts is too dangerous to use in practice and should be disabled altogether.</li>\n<li> <strong>Verify that the locations of the included files are validated.</strong> Verify that all files to be included are in a separate folder. Verify that <em>realpath</em> is used to determine the absolute path to the folder that contains the files to be included. Verify that the location of each file to be included is validated before the file is included. Make sure the application installation instructions contain a note to make the folder that contains the files to be included read-only after deploying the application.</li>\n<li> <strong>Verify that the file extensions of the included files are validated.</strong> Choose a file extension, such as \".inc\" or \".php\" for the files to be included. Make sure that file extensions of the files to be included are validated before carrying out the actual inclusion.</li>\n<li> <strong>Verify that included files have static file names and paths.</strong> The most effective preventative measure against LFI and RFI is only including files that have file names and paths defined as static strings in code. Any code that includes files with static file names should be considered safe. Any code that includes files with dynamic file names or paths should be considered suspect. A dynamic file name or path is one which is decided by the application at run-time based on one or more variables. Examine each piece of code that includes PHP files and check whether it uses static file names and paths.</li>\n<li> <strong>Verify that mapping values are used if necessary.</strong> If the application design requires conditionally choosing which file to include, a white-list of valid files to include should be used. Verify that a white-list of valid files to include is defined as a list of static file names and paths. Make sure that the locations and file names of files to be included are taken only from the white-list of valid files.</li>\n<li> <strong>Make sure that user data is not used to specify the files to include.</strong> Examine each call to <em>include</em>, <em>require</em>, <em>include_once</em> and <em>require_once</em> to see if it uses a variable to determine which file to include. If a variable is used to determine which file to include, examine how the value of this variable is defined throughout the application. If at any point the value of this variable may be even partially defined by user input, this file inclusion is not safe. It needs to be rewritten to use static file names and paths or mapping values. If the application design requires file inclusion based on user data, the design needs to be changed, because this is the essence of RFI and LFI.</li>\n</ol>\n<h2>How To Fix</h2><p>To include files safely:\n</p><ol>\n<li> <strong>Update PHP.</strong> Old PHP versions have the Null-byte vulnerability. The Null-byte vulnerability makes it easier to exploit potential Local File Inclusion vulnerabilities. Update PHP to a recent version to remove the Null-byte vulnerability and make it harder to exploit potential Local File Inclusion vulnerabilities.</li>\n<li> <strong>Find all code that includes code from other files.</strong> Search application code for the following keywords: <em>include</em>, <em>require</em>, <em>include_once</em>, and <em>require_once</em>. Make a list of all the files that contain these keywords. This list should indicate all PHP files that include code from other PHP files. Go through this list and apply the following steps to each call to <em>include</em>, <em>require</em>, <em>include_once</em> and <em>require_once</em>. </li>\n<li> <strong>Only include files from the filesystem.</strong> PHP allows including files via a URL. Don't do this - only include files via the filesystem. Only including files from the file system helps prevent Remote File Inclusion vulnerabilities. The ability to include files from other hosts is too dangerous to use in practice and should be disabled altogether.</li>\n<li> <strong>Validate the locations of the included files.</strong> Place all files to be included in a separate folder. Use <em>realpath</em> to determine the absolute path to the folder that contains the files to be included. Validate the location of each file to be included to make sure that it is located inside the dedicated include folder. Add a note to the application documentation to make the include folder read-only after deploying the application. Limiting the location of the included files to a single folder makes it harder for an attacker to exploit the Local File Inclusion vulnerability.</li>\n<li> <strong>Validate the file extension of the included files.</strong> Choose a file extension, such as \".inc\" or \".php\" for the files to be included. Validate that the file to be included has that file extension. This is only a minor defense-in-depth measure, but it makes it harder for an attacker to exploit the Local File Inclusion vulnerability.</li>\n<li> <strong>Use static file names to include files.</strong> The most effective preventative measure against LFI and RFI is only including files that have file names and paths defined as static strings in code. Any code that includes files with static file names should be considered safe. Any code that includes files with dynamic file names or paths should be considered suspect. A dynamic file name or path is one which is decided by the application at run-time based on one or more variables. Code that includes files with dynamic names or paths should be rewritten to use static names and paths if at all possible.</li>\n<li> <strong>Use a mapping of valid files to include.</strong> If the application design requires conditionally choosing which file to include, define a white-list of valid files to include as a list of static file names and paths. This is a variation of using static file names and paths to include files. Place the list of valid files to include into an array. Only include files using the file names and paths from the array containing the white-list of valid files to include. </li>\n<li> <strong>Avoid including files based on user input.</strong> Most importantly, avoid including files based on variables that may be affected by user input. Examine each call to <em>include</em>, <em>require</em>, <em>include_once</em> and <em>require_once</em> to see if it uses a variable to determine which file to include. If a variable is used to determine which file to include, examine how the value of this variable is defined throughout the application. If at any point the value of this variable may be even partially defined by user input, this file inclusion is not safe. It needs to be rewritten to use static file names and paths or mapping values. If the application design requires file inclusion based on user data, the design needs to be changed, because this is the essence of RFI and LFI.</li>\n</ol>"
}