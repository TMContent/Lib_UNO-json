{
  "id": "3ee9b07c-557a-4008-a0ac-cfb605505f88",
  "checksum": "4a915121e5fcf71ac8f346a27e34f2d4e7a0e503",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "aspnet": [
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "what": [
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "check": [
      "h1",
      "h1",
      "p"
    ],
    "for": [
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "important": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "business": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "operations": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "are": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ul",
      "li",
      "title"
    ],
    "logged": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "should": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "be": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "help": [
      "p"
    ],
    "identify": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "attacks": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "progress": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "investigate": [
      "p"
    ],
    "have": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "already": [
      "p"
    ],
    "occurred": [
      "p"
    ],
    "how": [
      "h1",
      "ol",
      "li",
      "p",
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "perform": [
      "p"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "following": [
      "p",
      "p"
    ],
    "actions": [
      "p"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "li",
      "p"
    ],
    "list": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "a": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "of": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "carried": [
      "ol",
      "li",
      "p"
    ],
    "out": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "application": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "such": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "placing": [
      "ol",
      "li",
      "p"
    ],
    "orders": [
      "ol",
      "li",
      "p"
    ],
    "manipulating": [
      "ol",
      "li",
      "p"
    ],
    "inventory": [
      "ol",
      "li",
      "p"
    ],
    "etc": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "which": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "these": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "em"
    ],
    "most": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "performs": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "find": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "matches": [
      "ol",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "one": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "functions": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "logging": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "functionality": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "examine": [
      "ol",
      "li",
      "p"
    ],
    "architecture": [
      "ol",
      "li",
      "p"
    ],
    "facilities": [
      "ol",
      "li",
      "p"
    ],
    "api": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "where": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "audit": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "trails": [
      "ol",
      "li",
      "p"
    ],
    "actually": [
      "ol",
      "li",
      "p"
    ],
    "stored": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "apis": [
      "ol",
      "li",
      "p"
    ],
    "used": [
      "ol",
      "li",
      "p"
    ],
    "log": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "events": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "document": [
      "ol",
      "li",
      "p"
    ],
    "them": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "they": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "store": [
      "ol",
      "li",
      "p"
    ],
    "logs": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "carry": [
      "ol",
      "li",
      "p"
    ],
    "uses": [
      "ol",
      "li",
      "p"
    ],
    "records": [
      "ol",
      "li",
      "p"
    ],
    "when": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "take": [
      "ol",
      "li",
      "p"
    ],
    "place": [
      "ol",
      "li",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "access": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "logic": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "is easy": [
      "p"
    ],
    "steps": [
      "p"
    ],
    "walk": [
      "p"
    ],
    "you": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "em"
    ],
    "through": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "process": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "significant": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "your": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "application in": [
      "ol",
      "li",
      "p"
    ],
    "order": [
      "ol",
      "li",
      "p"
    ],
    "properly": [
      "ol",
      "li",
      "p"
    ],
    "activity": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "first": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "must": [
      "ol",
      "li",
      "p"
    ],
    "understand": [
      "ol",
      "li",
      "p"
    ],
    "activities": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "their": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "needs": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "are this": [
      "ol",
      "li",
      "p"
    ],
    "information": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "come": [
      "ol",
      "li",
      "p"
    ],
    "directly": [
      "ol",
      "li",
      "p"
    ],
    "from": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "requirements": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "an": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "added": [
      "ol",
      "li",
      "p"
    ],
    "documentation": [
      "ol",
      "li",
      "p"
    ],
    "it's": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "not": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "present. if": [
      "ol",
      "li",
      "p"
    ],
    "don't": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "good": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p"
    ],
    "breakdown": [
      "ol",
      "li",
      "p"
    ],
    "modeling": [
      "ol",
      "li",
      "p"
    ],
    "phase": [
      "ol",
      "li",
      "p"
    ],
    "threat": [
      "ol",
      "li",
      "p"
    ],
    "model": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "way": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "generate": [
      "ol",
      "li",
      "p"
    ],
    "determine": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "level": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "requires": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "much": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "need": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p"
    ],
    "about": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "depends": [
      "ol",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "able": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "say": [
      "ol",
      "li",
      "p"
    ],
    "occurence": [
      "ol",
      "li",
      "p"
    ],
    "after": [
      "ol",
      "li",
      "p"
    ],
    "fact there": [
      "ol",
      "li",
      "p"
    ],
    "three": [
      "ol",
      "li",
      "p"
    ],
    "rough": [
      "ol",
      "li",
      "p"
    ],
    "levels": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "namely": [
      "ol",
      "li",
      "p"
    ],
    "tracking": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "verification": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "non-repudiation": [
      "ol",
      "li",
      "p"
    ],
    "has": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "increasing": [
      "ol",
      "li",
      "p"
    ],
    "requirement": [
      "ol",
      "li",
      "p"
    ],
    "purposes": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "only": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "provide": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "statistical": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "data": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "p"
    ],
    "transactions": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "--": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "frequency": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "timing": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "statistics": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "accurate": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "per-event": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "still": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "particularly": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "flexibility": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "desired": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "actual": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "gathered": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "slightly": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "more": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "depth": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "li",
      "p"
    ],
    "relevent": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "basic": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "transaction": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "recorded": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "goal": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "full": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "record": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "sufficient": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "manually": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "re-create": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "transaction this": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "default": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "nonrepudiation": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "significantly": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "higher": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "standard the": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "here": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "ensure": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "p",
      "strong"
    ],
    "parties": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "disputes": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "proof": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "validity": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "can": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "produce being": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "architecture-level": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "issue": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "implications": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "many": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "security-relevant": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "design": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "issues": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "especially": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "authentication": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "but": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "fundamentally": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "hard": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "part": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "ensuring": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "exists": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "within": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "system log": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "files": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "designed": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "support": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "include": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "related": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "h1"
    ],
    "ideally": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "cryptographic": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "signatures": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "itself": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "signed": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "prevent": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "tampering": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "securely": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "ways": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "accessing": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "that logic": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "with": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "data once": [
      "ol",
      "li",
      "p"
    ],
    "know": [
      "ol",
      "li",
      "p"
    ],
    "pieces": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "enumerate": [
      "ol",
      "li",
      "p"
    ],
    "those": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "logic for": [
      "ol",
      "li",
      "p"
    ],
    "applications": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "there": [
      "ol",
      "li",
      "p"
    ],
    "single": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "entry": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "point": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "any": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "given": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "piece": [
      "ol",
      "li",
      "p"
    ],
    "complicated": [
      "ol",
      "li",
      "p"
    ],
    "may": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "em"
    ],
    "than": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "also": [
      "ol",
      "li",
      "p"
    ],
    "multiple": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "provides": [
      "ol",
      "li",
      "p"
    ],
    "form": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "defense": [
      "ol",
      "li",
      "p"
    ],
    "case": [
      "ol",
      "li",
      "p"
    ],
    "circumvented n-tier": [
      "ol",
      "li",
      "p"
    ],
    "systems": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "p"
    ],
    "while": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "normal": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "front-end": [
      "ol",
      "li",
      "p"
    ],
    "middleware": [
      "ol",
      "li",
      "p"
    ],
    "database": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "layers": [
      "ol",
      "li",
      "p"
    ],
    "very": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "detecting": [
      "ol",
      "li",
      "p"
    ],
    "circumvention": [
      "ol",
      "li",
      "p"
    ],
    "point when": [
      "ol",
      "li",
      "p"
    ],
    "do": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "li",
      "p"
    ],
    "even": [
      "ol",
      "li",
      "p"
    ],
    "non-hierarchical": [
      "ol",
      "li",
      "p"
    ],
    "working": [
      "ol",
      "li",
      "p"
    ],
    "together": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "vital": [
      "ol",
      "li",
      "p"
    ],
    "business-level": [
      "ol",
      "li",
      "p"
    ],
    "unifieing": [
      "ol",
      "li",
      "p"
    ],
    "disparate": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sources": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "view": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "health": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "monitoring": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li"
    ],
    "enabled": [
      "ol",
      "li",
      "p"
    ],
    "infrastructure": [
      "ol",
      "li",
      "p"
    ],
    "error": [
      "ol",
      "li",
      "p"
    ],
    "inheriting": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "systemweb.management.weberrorevent)": [
      "ol",
      "li",
      "p"
    ],
    "failure": [
      "ol",
      "li",
      "p"
    ],
    "systemweb.management.webfailureauditevent)": [
      "ol",
      "li",
      "p"
    ],
    "written": [
      "ol",
      "li",
      "p"
    ],
    "event": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "log the": [
      "ol",
      "li",
      "p"
    ],
    "configuration": [
      "ol",
      "li",
      "p"
    ],
    "defined": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "healthmonitoring>": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "element": [
      "ol",
      "li",
      "p"
    ],
    "machine-level": [
      "ol",
      "li",
      "p"
    ],
    "webconfig": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "em"
    ],
    "file": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "additional": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "create": [
      "ol",
      "li",
      "p"
    ],
    "custom": [
      "ol",
      "li",
      "p"
    ],
    "types": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "deriving": [
      "ol",
      "li",
      "p"
    ],
    "built-in": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "feature": [
      "ol",
      "li",
      "p"
    ],
    "providers": [
      "ol",
      "li",
      "p"
    ],
    "allow": [
      "ol",
      "li",
      "p"
    ],
    "e-mail": [
      "ol",
      "li",
      "p"
    ],
    "message": [
      "ol",
      "li",
      "p"
    ],
    "simplemailwebeventprovider,": [
      "ol",
      "li",
      "p"
    ],
    "templatedmailwebeventprovider,": [
      "ol",
      "li",
      "p"
    ],
    "sql": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "server": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sqlwebeventprovider),": [
      "ol",
      "li",
      "p"
    ],
    "eventlogwebeventprovider),": [
      "ol",
      "li",
      "p"
    ],
    "trace": [
      "ol",
      "li",
      "p"
    ],
    "output": [
      "ol",
      "li",
      "p"
    ],
    "tracewebeventprovider),": [
      "ol",
      "li",
      "p"
    ],
    "windows": [
      "ol",
      "li",
      "p"
    ],
    "management": [
      "ol",
      "li",
      "p"
    ],
    "instrumentation": [
      "ol",
      "li",
      "p"
    ],
    "wmi)": [
      "ol",
      "li",
      "p"
    ],
    "provider": [
      "ol",
      "li",
      "p"
    ],
    "wmiwebeventprovider). you": [
      "ol",
      "li",
      "p"
    ],
    "configure": [
      "ol",
      "li",
      "p"
    ],
    "machine": [
      "ol",
      "li",
      "p"
    ],
    "modify": [
      "ol",
      "li",
      "p"
    ],
    "in-database": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "implemented": [
      "ol",
      "li",
      "p"
    ],
    "either": [
      "ol",
      "li",
      "p"
    ],
    "inside": [
      "ol",
      "li",
      "p"
    ],
    "procedures": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "interact": [
      "ol",
      "li",
      "p"
    ],
    "via": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "triggers logging": [
      "ol",
      "li",
      "p"
    ],
    "triggers": [
      "ol",
      "li",
      "p"
    ],
    "preferable": [
      "ol",
      "li",
      "p"
    ],
    "some": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "cases": [
      "ol",
      "li",
      "p"
    ],
    "because": [
      "ol",
      "li",
      "p"
    ],
    "alterations": [
      "ol",
      "li",
      "p"
    ],
    "occur": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "outside": [
      "ol",
      "li",
      "p"
    ],
    "say,": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "injection": [
      "ol",
      "li",
      "p"
    ],
    "vulnerability": [
      "ol",
      "li",
      "p"
    ],
    "logged care": [
      "ol",
      "li",
      "p"
    ],
    "taken": [
      "ol",
      "li",
      "p"
    ],
    "implementing": [
      "ol",
      "li",
      "p"
    ],
    "normally": [
      "ol",
      "li",
      "p"
    ],
    "generating": [
      "ol",
      "li",
      "p"
    ],
    "entries": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "cannot": [
      "ol",
      "li",
      "p"
    ],
    "overwrite": [
      "ol",
      "li",
      "p"
    ],
    "monitored the": [
      "ol",
      "li",
      "p"
    ],
    "next": [
      "ol",
      "li",
      "p"
    ],
    "step": [
      "ol",
      "li",
      "p"
    ],
    "monitored": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "acted": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "upon logging": [
      "ol",
      "li",
      "p"
    ],
    "won't": [
      "ol",
      "li",
      "p"
    ],
    "results": [
      "ol",
      "li",
      "p"
    ],
    "never": [
      "ol",
      "li",
      "p"
    ],
    "see": [
      "ol",
      "li",
      "p"
    ],
    "light": [
      "ol",
      "li",
      "p"
    ],
    "day work": [
      "ol",
      "li",
      "p"
    ],
    "team": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "who": [
      "ol",
      "li",
      "p"
    ],
    "managing": [
      "ol",
      "li",
      "p"
    ],
    "define": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "plan": [
      "ol",
      "li",
      "p"
    ],
    "responding": [
      "ol",
      "li",
      "p"
    ],
    "depending": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "environment": [
      "ol",
      "li",
      "p"
    ],
    "scratch": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "fitting": [
      "ol",
      "li",
      "p"
    ],
    "pre-exisiting": [
      "ol",
      "li",
      "p"
    ],
    "framework": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "you're": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "defining": [
      "ol",
      "li",
      "p"
    ],
    "things": [
      "ol",
      "li",
      "p"
    ],
    "consider": [
      "ol",
      "li",
      "p"
    ],
    "monitored—some": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "24x7": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "coverage": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "fine": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "8x5": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "time": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "take—if your": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "a large": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "ecommerce": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "site": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "dedicated": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "small": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "app": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "safe": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "enough": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "sysadmin": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "taking": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "look": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "couple": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "times": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "day": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "response": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "needs—if": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "there's": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "serious": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "problem": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "it'll": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "show": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "up": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "tolerance": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "problems": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "minutes": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "hours": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "days?": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "procedure": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "acting": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "potential": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "be?": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "control": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "derived": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "sensitive": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "likely": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "capabilities": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "have?": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "own": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "does": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "no": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "can't": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "on—suspcious": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "investigated": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "accounts": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "frozen": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "avoid": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "pitfalls": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "harder": [
      "ol",
      "li",
      "p"
    ],
    "providing": [
      "ol",
      "li",
      "p"
    ],
    "implementation": [
      "ol",
      "li",
      "p"
    ],
    "like": [
      "ol",
      "li",
      "p"
    ],
    "specific": [
      "ol",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "li",
      "p"
    ],
    "calls": [
      "ol",
      "li",
      "p"
    ],
    "traffic": [
      "ol",
      "li",
      "p"
    ],
    "queries": [
      "ol",
      "li",
      "p"
    ],
    "work": [
      "ol",
      "li",
      "p"
    ],
    "coherent": [
      "ol",
      "li",
      "p"
    ],
    "allowing": [
      "ol",
      "li",
      "p"
    ],
    "component": [
      "ol",
      "li",
      "p"
    ],
    "implementation-level": [
      "ol",
      "li",
      "p"
    ],
    "easily": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "found": [
      "ol",
      "li",
      "p"
    ],
    "easy": [
      "ol",
      "li",
      "p"
    ],
    "task": [
      "ol",
      "li",
      "p"
    ],
    "complexity": [
      "ol",
      "li",
      "p"
    ],
    "integration": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "li",
      "p"
    ],
    "query": [
      "ol",
      "li",
      "p"
    ],
    "instance": [
      "ol",
      "li",
      "p"
    ],
    "probably": [
      "ol",
      "li",
      "p"
    ],
    "automate": [
      "ol",
      "li",
      "p"
    ],
    "sort": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "thing": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "larger": [
      "ol",
      "li",
      "p"
    ],
    "complex": [
      "ol",
      "li",
      "p"
    ],
    "however": [
      "ol",
      "li",
      "p"
    ],
    "require": [
      "ol",
      "li",
      "p"
    ],
    "coordination": [
      "ol",
      "li",
      "p"
    ],
    "too": [
      "ol",
      "li",
      "p"
    ],
    "end": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "li",
      "p"
    ],
    "once": [
      "ol",
      "li",
      "p"
    ],
    "idea": [
      "ol",
      "li",
      "p"
    ],
    "volume": [
      "ol",
      "li",
      "p"
    ],
    "seeing": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "worthwhile": [
      "ol",
      "li",
      "p"
    ],
    "implement": [
      "ol",
      "li",
      "p"
    ],
    "throttling": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "reduce": [
      "ol",
      "li",
      "p"
    ],
    "flow": [
      "ol",
      "li",
      "p"
    ],
    "rate": [
      "ol",
      "li",
      "p"
    ],
    "act": [
      "ol",
      "li",
      "p"
    ],
    "upon": [
      "ol",
      "li",
      "p"
    ],
    "eliminate": [
      "ol",
      "li",
      "p"
    ],
    "redundant": [
      "ol",
      "li",
      "p"
    ],
    "surface": [
      "ol",
      "li",
      "p"
    ],
    "automatically": [
      "ol",
      "li",
      "p"
    ],
    "action": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "based": [
      "ol",
      "li",
      "p"
    ],
    "detection": [
      "ol",
      "li",
      "p"
    ],
    "anomolous": [
      "ol",
      "li",
      "p"
    ],
    "conditions": [
      "ol",
      "li",
      "p"
    ],
    "dangerous": [
      "ol",
      "li",
      "p"
    ],
    "is best": [
      "ol",
      "li",
      "p"
    ],
    "avoided": [
      "ol",
      "li",
      "p"
    ],
    "reasonable": [
      "ol",
      "li",
      "p"
    ],
    "throttle": [
      "ol",
      "li",
      "p"
    ],
    "speed": [
      "ol",
      "li",
      "p"
    ],
    "login": [
      "ol",
      "li",
      "p"
    ],
    "attempt": [
      "ol",
      "li",
      "p"
    ],
    "preventing": [
      "ol",
      "li",
      "p"
    ],
    "occurring may": [
      "ol",
      "li",
      "p"
    ],
    "result": [
      "ol",
      "li",
      "p"
    ],
    "easy-to-launch": [
      "ol",
      "li",
      "p"
    ],
    "denial": [
      "ol",
      "li",
      "p"
    ],
    "service": [
      "ol",
      "li",
      "p"
    ],
    "attack": [
      "ol",
      "li",
      "p"
    ],
    "against": [
      "ol",
      "li",
      "p"
    ],
    "systemweb.management.weberrorevent": [
      "em"
    ],
    "systemweb.management.webfailureauditevent": [
      "em"
    ],
    "simplemailwebeventprovider": [
      "em"
    ],
    "templatedmailwebeventprovider": [
      "em"
    ],
    "sqlwebeventprovider": [
      "em"
    ],
    "eventlogwebeventprovider": [
      "em"
    ],
    "tracewebeventprovider": [
      "em"
    ],
    "wmiwebeventprovider": [
      "em"
    ],
    "items": [
      "h1"
    ],
    "articles": [
      "em"
    ],
    "useful": [
      "em"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix",
      "Related Items",
      "",
      ""
    ],
    "ul": [
      "ASP.NET 4.0",
      "Logging for tracking. Logging for tracking purposes is appropriate when you only need to provide statistical data about transactions -- frequency, timing, etc. As the statistics need to be accurate, per-event logging is still appropriate, particularly if flexibility is desired in the actual statistics to be gathered.\n        \n        \n          \n            Logging for verification. Verification is slightly more in depth; all relevent basic information about the transaction should be recorded. The goal of logging at this level is to provide a full record of transactions, sufficient to manually re-create the transaction. This is the default level to log at for most business logic.\n        \n        \n          \n            Logging for nonrepudiation. Nonrepudiation is a significantly higher standard. The goal here is to ensure that, if one of the parties to a transaction disputes the transaction, proof of the validity of the transaction can be produce. Being able to provide this proof is an architecture-level issue, which will have implications for many security-relevant design issues, especially authentication, but the issue is fundamentally a logging one. The hard part for nonrepudiation is ensuring that sufficient data exists within the system. Log files designed to support nonrepudiation should include all data related to the transaction. This data should ideally include cryptographic signatures, and should itself be signed to prevent tampering, and stored securely.",
      "When do the logs need to be monitored—some applications will need 24x7 coverage, but many will be fine with 8x5. \n        How much time will log monitoring take—if your application is a large ecommerce site, you may have a dedicated team for log monitoring, but a small web app may be safe enough with a sysadmin taking a look a couple times a day. \n        What are your response time needs—if there's a serious problem with the site, it'll show up in the logs first; is your tolerance for problems defined in minutes, hours, or days? \n        What will your procedure for acting on potential issues be? \n        How will you control access to your logs and information derived from them; how sensitive is the information likely to be? \n        What response capabilities will the log monitoring team have?  Log monitoring on it's own does no good if the information can't be acted on—suspcious events need to be investigated, accounts frozen, etc.",
      "Log Important Business Operations"
    ],
    "li": [
      "ASP.NET 4.0",
      "List important business operations. Make a list of business operations carried out by the application, such as placing orders, manipulating inventory, etc. Identify which of these operations are the most important.",
      "Identify code that performs important business operations. Use the list of important business operations to find code that matches each one. Make a list of functions in this code.",
      "Identify logging functionality. Examine the application architecture to identify logging facilities, such as the logging API and where audit trails are actually stored. Make a list of APIs used to log events, document how to use them, and where they store logs.",
      "Verify that code logs important business operations. Use the list of functions that carry out important business operations and verify that each one uses the logging API to make records when important business operations take place.",
      "Identify significant business logic in your application. In order to properly log business activity, you first must understand what the important activities that your application performs are, and what their logging needs are. This information should come directly from the business requirements of an application (and should be added to the requirements documentation for the application if it's not present). If you don't have a good breakdown of business activities for the application, the requirements modeling phase of a threat model is a good way to generate one.",
      "Determine what level of logging each activity requires. How much information you need to log about each activity depends on what you need to be able to say about an occurence of the activity after the fact. There are three rough levels of logging, namely tracking, verification, and non-repudiation, each of which has an increasing requirement for what needs to be logged.\n      \n        \n          \n            Logging for tracking. Logging for tracking purposes is appropriate when you only need to provide statistical data about transactions -- frequency, timing, etc. As the statistics need to be accurate, per-event logging is still appropriate, particularly if flexibility is desired in the actual statistics to be gathered.\n        \n        \n          \n            Logging for verification. Verification is slightly more in depth; all relevent basic information about the transaction should be recorded. The goal of logging at this level is to provide a full record of transactions, sufficient to manually re-create the transaction. This is the default level to log at for most business logic.\n        \n        \n          \n            Logging for nonrepudiation. Nonrepudiation is a significantly higher standard. The goal here is to ensure that, if one of the parties to a transaction disputes the transaction, proof of the validity of the transaction can be produce. Being able to provide this proof is an architecture-level issue, which will have implications for many security-relevant design issues, especially authentication, but the issue is fundamentally a logging one. The hard part for nonrepudiation is ensuring that sufficient data exists within the system. Log files designed to support nonrepudiation should include all data related to the transaction. This data should ideally include cryptographic signatures, and should itself be signed to prevent tampering, and stored securely.",
      "Logging for tracking. Logging for tracking purposes is appropriate when you only need to provide statistical data about transactions -- frequency, timing, etc. As the statistics need to be accurate, per-event logging is still appropriate, particularly if flexibility is desired in the actual statistics to be gathered.",
      "Logging for verification. Verification is slightly more in depth; all relevent basic information about the transaction should be recorded. The goal of logging at this level is to provide a full record of transactions, sufficient to manually re-create the transaction. This is the default level to log at for most business logic.",
      "Logging for nonrepudiation. Nonrepudiation is a significantly higher standard. The goal here is to ensure that, if one of the parties to a transaction disputes the transaction, proof of the validity of the transaction can be produce. Being able to provide this proof is an architecture-level issue, which will have implications for many security-relevant design issues, especially authentication, but the issue is fundamentally a logging one. The hard part for nonrepudiation is ensuring that sufficient data exists within the system. Log files designed to support nonrepudiation should include all data related to the transaction. This data should ideally include cryptographic signatures, and should itself be signed to prevent tampering, and stored securely.",
      "Ensure that all ways of accessing that logic are logged with sufficient data. Once you know all of the pieces of logic which need to have their access logged, and what levels they need to be logged at, you need to enumerate all of the ways of accessing those pieces of logic. For most applications, there will be a single entry point for any given piece of logic, but more complicated applications may have more than one entry point. Also, logging on multiple levels provides a form of defense in depth, in case higher levels of functionality are circumvented. N-tier systems are a good example of this -- while the normal entry point may be through a web front-end, logging at the middleware and database layers is very important in detecting circumvention of the normal entry point. When you do have multiple levels of logging, or even multiple non-hierarchical systems working together, it's vital that business-level logging provide a way of unifieing those disparate data sources into a single view.\n      By default, health monitoring is enabled for ASP.NET applications and all Web infrastructure error events (inheriting from System.Web.Management.WebErrorEvent) and all audit failure events (inheriting from System.Web.Management.WebFailureAuditEvent) are written to the event log. The default configuration is defined in the <healthMonitoring> element in the machine-level Web.config file. To audit additional events, you create custom event types by deriving from one of the built-in types. \n      \n      The health monitoring feature has built-in providers that allow you to log events in an e-mail message (SimpleMailWebEventProvider, TemplatedMailWebEventProvider), to SQL Server (SqlWebEventProvider), to the event log (EventLogWebEventProvider), as ASP.NET trace output (TraceWebEventProvider), or to the Windows Management Instrumentation (WMI) Web event provider (WMIWebEventProvider). You can configure health monitoring in the machine or application Web.config file to modify the events that are logged and the way in which they are logged.\n      In-database logging can be implemented either inside the stored procedures which you use to interact with the data, or via triggers. Logging via triggers may be preferable in some cases, because alterations to the data which occur outside of stored procedures (say, via a SQL injection vulnerability) will still be logged. Care should be taken when implementing in-database logging to ensure that the process which is normally generating the log entries cannot overwrite them.",
      "Ensure that logs are monitored. The next step is ensuring that logs are monitored and the information in them acted upon. Logging won't do any good if the results never see the light of day. Work with the operations team who will be managing the application to define a plan for monitoring and responding to log events. Depending on the environment, you may need to define this from scratch, or you may be fitting into a pre-exisiting framework. \n      If you're defining a monitoring framework from scratch, here are some things you need to consider: \n      \n        When do the logs need to be monitored—some applications will need 24x7 coverage, but many will be fine with 8x5. \n        How much time will log monitoring take—if your application is a large ecommerce site, you may have a dedicated team for log monitoring, but a small web app may be safe enough with a sysadmin taking a look a couple times a day. \n        What are your response time needs—if there's a serious problem with the site, it'll show up in the logs first; is your tolerance for problems defined in minutes, hours, or days? \n        What will your procedure for acting on potential issues be? \n        How will you control access to your logs and information derived from them; how sensitive is the information likely to be? \n        What response capabilities will the log monitoring team have?  Log monitoring on it's own does no good if the information can't be acted on—suspcious events need to be investigated, accounts frozen, etc.",
      "When do the logs need to be monitored—some applications will need 24x7 coverage, but many will be fine with 8x5.",
      "How much time will log monitoring take—if your application is a large ecommerce site, you may have a dedicated team for log monitoring, but a small web app may be safe enough with a sysadmin taking a look a couple times a day.",
      "What are your response time needs—if there's a serious problem with the site, it'll show up in the logs first; is your tolerance for problems defined in minutes, hours, or days?",
      "What will your procedure for acting on potential issues be?",
      "How will you control access to your logs and information derived from them; how sensitive is the information likely to be?",
      "What response capabilities will the log monitoring team have?  Log monitoring on it's own does no good if the information can't be acted on—suspcious events need to be investigated, accounts frozen, etc.",
      "Avoid pitfalls for logging. Logging information at the business level is harder than providing implementation level logs, like logs of specific function calls, web server traffic, or database queries.  Ensuring all of these disparate sources of information work together to provide a coherent view of business level events while still allowing the component implementation-level log entries that make up those events to be easily found is not an easy task.  Depending on the complexity of your application, this level of logging integration may not be necessary -- if it's possible to easily determine which business event a given database query is part of, for instance, you probably don't need to automate this sort of thing.  Larger and more complex applications, however, do require this sort of logging coordination.\n      Logging too much information can end up being a problem of its own.  Once you have an idea of the volume of log events that you're seeing from your application, it may be worthwhile to implement some form of log throttling to reduce the flow of information to a rate at which you can act upon.  Good log throttling should only eliminate redundant information and should provide a way to surface the most important information first. \n      Automatically taking action based on detection of anomolous conditions is a very dangerous thing to do, and is best avoided.  While it may be reasonable to throttle the speed at which an event (say, a login attempt) may occur, preventing an action from occurring may result in an easy-to-launch denial of service attack against your application.",
      "Log Important Business Operations"
    ],
    "p": [
      "Verify that important business operations are logged.",
      "Important business operations should be logged to help identify attacks in progress and to investigate attacks that have already occurred.",
      "Perform the following actions to check if important business operations are logged.",
      "List important business operations. Make a list of business operations carried out by the application, such as placing orders, manipulating inventory, etc. Identify which of these operations are the most important.",
      "Identify code that performs important business operations. Use the list of important business operations to find code that matches each one. Make a list of functions in this code.",
      "Identify logging functionality. Examine the application architecture to identify logging facilities, such as the logging API and where audit trails are actually stored. Make a list of APIs used to log events, document how to use them, and where they store logs.",
      "Verify that code logs important business operations. Use the list of functions that carry out important business operations and verify that each one uses the logging API to make records when important business operations take place.",
      "Logging access to business logic is easy. The following steps walk you through the process:",
      "Identify significant business logic in your application. In order to properly log business activity, you first must understand what the important activities that your application performs are, and what their logging needs are. This information should come directly from the business requirements of an application (and should be added to the requirements documentation for the application if it's not present). If you don't have a good breakdown of business activities for the application, the requirements modeling phase of a threat model is a good way to generate one.",
      "Determine what level of logging each activity requires. How much information you need to log about each activity depends on what you need to be able to say about an occurence of the activity after the fact. There are three rough levels of logging, namely tracking, verification, and non-repudiation, each of which has an increasing requirement for what needs to be logged.",
      "Logging for tracking. Logging for tracking purposes is appropriate when you only need to provide statistical data about transactions -- frequency, timing, etc. As the statistics need to be accurate, per-event logging is still appropriate, particularly if flexibility is desired in the actual statistics to be gathered.",
      "Logging for verification. Verification is slightly more in depth; all relevent basic information about the transaction should be recorded. The goal of logging at this level is to provide a full record of transactions, sufficient to manually re-create the transaction. This is the default level to log at for most business logic.",
      "Logging for nonrepudiation. Nonrepudiation is a significantly higher standard. The goal here is to ensure that, if one of the parties to a transaction disputes the transaction, proof of the validity of the transaction can be produce. Being able to provide this proof is an architecture-level issue, which will have implications for many security-relevant design issues, especially authentication, but the issue is fundamentally a logging one. The hard part for nonrepudiation is ensuring that sufficient data exists within the system. Log files designed to support nonrepudiation should include all data related to the transaction. This data should ideally include cryptographic signatures, and should itself be signed to prevent tampering, and stored securely.",
      "Ensure that all ways of accessing that logic are logged with sufficient data. Once you know all of the pieces of logic which need to have their access logged, and what levels they need to be logged at, you need to enumerate all of the ways of accessing those pieces of logic. For most applications, there will be a single entry point for any given piece of logic, but more complicated applications may have more than one entry point. Also, logging on multiple levels provides a form of defense in depth, in case higher levels of functionality are circumvented. N-tier systems are a good example of this -- while the normal entry point may be through a web front-end, logging at the middleware and database layers is very important in detecting circumvention of the normal entry point. When you do have multiple levels of logging, or even multiple non-hierarchical systems working together, it's vital that business-level logging provide a way of unifieing those disparate data sources into a single view.",
      "By default, health monitoring is enabled for ASP.NET applications and all Web infrastructure error events (inheriting from System.Web.Management.WebErrorEvent) and all audit failure events (inheriting from System.Web.Management.WebFailureAuditEvent) are written to the event log. The default configuration is defined in the <healthMonitoring> element in the machine-level Web.config file. To audit additional events, you create custom event types by deriving from one of the built-in types.",
      "",
      "The health monitoring feature has built-in providers that allow you to log events in an e-mail message (SimpleMailWebEventProvider, TemplatedMailWebEventProvider), to SQL Server (SqlWebEventProvider), to the event log (EventLogWebEventProvider), as ASP.NET trace output (TraceWebEventProvider), or to the Windows Management Instrumentation (WMI) Web event provider (WMIWebEventProvider). You can configure health monitoring in the machine or application Web.config file to modify the events that are logged and the way in which they are logged.",
      "In-database logging can be implemented either inside the stored procedures which you use to interact with the data, or via triggers. Logging via triggers may be preferable in some cases, because alterations to the data which occur outside of stored procedures (say, via a SQL injection vulnerability) will still be logged. Care should be taken when implementing in-database logging to ensure that the process which is normally generating the log entries cannot overwrite them.",
      "Ensure that logs are monitored. The next step is ensuring that logs are monitored and the information in them acted upon. Logging won't do any good if the results never see the light of day. Work with the operations team who will be managing the application to define a plan for monitoring and responding to log events. Depending on the environment, you may need to define this from scratch, or you may be fitting into a pre-exisiting framework.",
      "If you're defining a monitoring framework from scratch, here are some things you need to consider:",
      "Avoid pitfalls for logging. Logging information at the business level is harder than providing implementation level logs, like logs of specific function calls, web server traffic, or database queries.  Ensuring all of these disparate sources of information work together to provide a coherent view of business level events while still allowing the component implementation-level log entries that make up those events to be easily found is not an easy task.  Depending on the complexity of your application, this level of logging integration may not be necessary -- if it's possible to easily determine which business event a given database query is part of, for instance, you probably don't need to automate this sort of thing.  Larger and more complex applications, however, do require this sort of logging coordination.",
      "Logging too much information can end up being a problem of its own.  Once you have an idea of the volume of log events that you're seeing from your application, it may be worthwhile to implement some form of log throttling to reduce the flow of information to a rate at which you can act upon.  Good log throttling should only eliminate redundant information and should provide a way to surface the most important information first.",
      "Automatically taking action based on detection of anomolous conditions is a very dangerous thing to do, and is best avoided.  While it may be reasonable to throttle the speed at which an event (say, a login attempt) may occur, preventing an action from occurring may result in an easy-to-launch denial of service attack against your application.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "List important business operations. Make a list of business operations carried out by the application, such as placing orders, manipulating inventory, etc. Identify which of these operations are the most important.\n    \n    \n      \n        Identify code that performs important business operations. Use the list of important business operations to find code that matches each one. Make a list of functions in this code.\n    \n    \n      \n        Identify logging functionality. Examine the application architecture to identify logging facilities, such as the logging API and where audit trails are actually stored. Make a list of APIs used to log events, document how to use them, and where they store logs.\n    \n    \n      \n        Verify that code logs important business operations. Use the list of functions that carry out important business operations and verify that each one uses the logging API to make records when important business operations take place.",
      "Identify significant business logic in your application. In order to properly log business activity, you first must understand what the important activities that your application performs are, and what their logging needs are. This information should come directly from the business requirements of an application (and should be added to the requirements documentation for the application if it's not present). If you don't have a good breakdown of business activities for the application, the requirements modeling phase of a threat model is a good way to generate one. \n    \n    \n      \n        Determine what level of logging each activity requires. How much information you need to log about each activity depends on what you need to be able to say about an occurence of the activity after the fact. There are three rough levels of logging, namely tracking, verification, and non-repudiation, each of which has an increasing requirement for what needs to be logged.\n      \n        \n          \n            Logging for tracking. Logging for tracking purposes is appropriate when you only need to provide statistical data about transactions -- frequency, timing, etc. As the statistics need to be accurate, per-event logging is still appropriate, particularly if flexibility is desired in the actual statistics to be gathered.\n        \n        \n          \n            Logging for verification. Verification is slightly more in depth; all relevent basic information about the transaction should be recorded. The goal of logging at this level is to provide a full record of transactions, sufficient to manually re-create the transaction. This is the default level to log at for most business logic.\n        \n        \n          \n            Logging for nonrepudiation. Nonrepudiation is a significantly higher standard. The goal here is to ensure that, if one of the parties to a transaction disputes the transaction, proof of the validity of the transaction can be produce. Being able to provide this proof is an architecture-level issue, which will have implications for many security-relevant design issues, especially authentication, but the issue is fundamentally a logging one. The hard part for nonrepudiation is ensuring that sufficient data exists within the system. Log files designed to support nonrepudiation should include all data related to the transaction. This data should ideally include cryptographic signatures, and should itself be signed to prevent tampering, and stored securely.\n        \n      \n    \n    \n      \n        Ensure that all ways of accessing that logic are logged with sufficient data. Once you know all of the pieces of logic which need to have their access logged, and what levels they need to be logged at, you need to enumerate all of the ways of accessing those pieces of logic. For most applications, there will be a single entry point for any given piece of logic, but more complicated applications may have more than one entry point. Also, logging on multiple levels provides a form of defense in depth, in case higher levels of functionality are circumvented. N-tier systems are a good example of this -- while the normal entry point may be through a web front-end, logging at the middleware and database layers is very important in detecting circumvention of the normal entry point. When you do have multiple levels of logging, or even multiple non-hierarchical systems working together, it's vital that business-level logging provide a way of unifieing those disparate data sources into a single view.\n      By default, health monitoring is enabled for ASP.NET applications and all Web infrastructure error events (inheriting from System.Web.Management.WebErrorEvent) and all audit failure events (inheriting from System.Web.Management.WebFailureAuditEvent) are written to the event log. The default configuration is defined in the <healthMonitoring> element in the machine-level Web.config file. To audit additional events, you create custom event types by deriving from one of the built-in types. \n      \n      The health monitoring feature has built-in providers that allow you to log events in an e-mail message (SimpleMailWebEventProvider, TemplatedMailWebEventProvider), to SQL Server (SqlWebEventProvider), to the event log (EventLogWebEventProvider), as ASP.NET trace output (TraceWebEventProvider), or to the Windows Management Instrumentation (WMI) Web event provider (WMIWebEventProvider). You can configure health monitoring in the machine or application Web.config file to modify the events that are logged and the way in which they are logged.\n      In-database logging can be implemented either inside the stored procedures which you use to interact with the data, or via triggers. Logging via triggers may be preferable in some cases, because alterations to the data which occur outside of stored procedures (say, via a SQL injection vulnerability) will still be logged. Care should be taken when implementing in-database logging to ensure that the process which is normally generating the log entries cannot overwrite them.\n    \n    \n      \n        Ensure that logs are monitored. The next step is ensuring that logs are monitored and the information in them acted upon. Logging won't do any good if the results never see the light of day. Work with the operations team who will be managing the application to define a plan for monitoring and responding to log events. Depending on the environment, you may need to define this from scratch, or you may be fitting into a pre-exisiting framework. \n      If you're defining a monitoring framework from scratch, here are some things you need to consider: \n      \n        When do the logs need to be monitored—some applications will need 24x7 coverage, but many will be fine with 8x5. \n        How much time will log monitoring take—if your application is a large ecommerce site, you may have a dedicated team for log monitoring, but a small web app may be safe enough with a sysadmin taking a look a couple times a day. \n        What are your response time needs—if there's a serious problem with the site, it'll show up in the logs first; is your tolerance for problems defined in minutes, hours, or days? \n        What will your procedure for acting on potential issues be? \n        How will you control access to your logs and information derived from them; how sensitive is the information likely to be? \n        What response capabilities will the log monitoring team have?  Log monitoring on it's own does no good if the information can't be acted on—suspcious events need to be investigated, accounts frozen, etc.\n      \n    \n    \n      \n        Avoid pitfalls for logging. Logging information at the business level is harder than providing implementation level logs, like logs of specific function calls, web server traffic, or database queries.  Ensuring all of these disparate sources of information work together to provide a coherent view of business level events while still allowing the component implementation-level log entries that make up those events to be easily found is not an easy task.  Depending on the complexity of your application, this level of logging integration may not be necessary -- if it's possible to easily determine which business event a given database query is part of, for instance, you probably don't need to automate this sort of thing.  Larger and more complex applications, however, do require this sort of logging coordination.\n      Logging too much information can end up being a problem of its own.  Once you have an idea of the volume of log events that you're seeing from your application, it may be worthwhile to implement some form of log throttling to reduce the flow of information to a rate at which you can act upon.  Good log throttling should only eliminate redundant information and should provide a way to surface the most important information first. \n      Automatically taking action based on detection of anomolous conditions is a very dangerous thing to do, and is best avoided.  While it may be reasonable to throttle the speed at which an event (say, a login attempt) may occur, preventing an action from occurring may result in an easy-to-launch denial of service attack against your application."
    ],
    "strong": [
      "List important business operations.",
      "Identify code that performs important business operations.",
      "Identify logging functionality.",
      "Verify that code logs important business operations.",
      "Identify significant business logic in your application.",
      "Determine what level of logging each activity requires.",
      "Logging for tracking.",
      "Logging for verification.",
      "Logging for nonrepudiation.",
      "Ensure that all ways of accessing that logic are logged with sufficient data.",
      "Ensure that logs are monitored.",
      "Avoid pitfalls for logging."
    ],
    "em": [
      "System.Web.Management.WebErrorEvent",
      "System.Web.Management.WebFailureAuditEvent",
      "<healthMonitoring>",
      "SimpleMailWebEventProvider, TemplatedMailWebEventProvider",
      "SqlWebEventProvider",
      "EventLogWebEventProvider",
      "TraceWebEventProvider",
      "WMIWebEventProvider",
      "Web.config",
      "You may find these additional articles useful"
    ],
    "a": [
      "Log Important Business Operations"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "/article/7d0273ff-f79d-469f-9843-06e1f0f1167f",
      "text": "Log Important Business Operations"
    }
  ],
  "html": "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Verify that important business operations are logged.</p>\n  <h1>Why</h1>\n  <p>Important business operations should be logged to help identify attacks in progress and to investigate attacks that have already occurred.</p>\n  <h1>How To Check</h1>\n  <p>Perform the following actions to check if important business operations are logged.</p>\n  <ol>\n    <li>\n      <p>\n        <strong>List important business operations.</strong> Make a list of business operations carried out by the application, such as placing orders, manipulating inventory, etc. Identify which of these operations are the most important.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Identify code that performs important business operations.</strong> Use the list of important business operations to find code that matches each one. Make a list of functions in this code.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Identify logging functionality.</strong> Examine the application architecture to identify logging facilities, such as the logging API and where audit trails are actually stored. Make a list of APIs used to log events, document how to use them, and where they store logs.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Verify that code logs important business operations.</strong> Use the list of functions that carry out important business operations and verify that each one uses the logging API to make records when important business operations take place.</p>\n    </li>\n  </ol>\n  <h1>How To Fix</h1>\n  <p>Logging access to business logic is&nbsp;easy. The following steps walk you through the process:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify significant business logic in your application.</strong>&nbsp;In order to properly log business activity, you first must understand what the important activities that your application performs are, and what their logging needs are.&nbsp;This information should come directly from the business requirements of an application (and should be added to the requirements documentation for the application if it's not present).&nbsp;If you don't have a good breakdown of business activities for the application, the requirements modeling phase of a threat model is a good way to generate one.&nbsp;</p>\n    </li>\n    <li>\n      <p>\n        <strong>Determine what level of logging each activity requires.</strong> How much information you need to log about each activity depends on what you need to be able to say about an occurence of the activity after the fact.&nbsp;There are three rough levels of logging, namely tracking, verification, and non-repudiation, each of which has an increasing requirement for what needs to be logged.</p>\n      <ul>\n        <li>\n          <p>\n            <strong>Logging for tracking.</strong> Logging for tracking purposes is appropriate when you only need to provide statistical data about transactions -- frequency, timing, etc. As the statistics need to be accurate, per-event logging is still appropriate, particularly if flexibility is desired in the actual statistics to be gathered.</p>\n        </li>\n        <li>\n          <p>\n            <strong>Logging for verification. </strong>Verification is slightly more in depth; all relevent basic information about the transaction should be recorded. The goal of logging at this level is to provide a full record of transactions, sufficient to manually re-create the transaction.&nbsp;This is the default level to log at for most business logic.</p>\n        </li>\n        <li>\n          <p>\n            <strong>Logging for nonrepudiation.</strong> Nonrepudiation is a significantly higher standard.&nbsp;The goal here is to ensure that, if one of the parties to a transaction disputes the transaction, proof of the validity of the transaction can be produce.&nbsp;Being able to provide this proof is an architecture-level issue, which will have implications for many security-relevant design issues, especially authentication, but the issue is fundamentally a logging one. The hard part for nonrepudiation is ensuring that sufficient data exists within the system.&nbsp;Log files designed to support nonrepudiation should include all data related to the transaction.&nbsp;This data should ideally include cryptographic signatures, and should itself be signed to prevent tampering, and stored securely.</p>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure that all ways of accessing that&nbsp;logic are logged with sufficient data.&nbsp;</strong>Once you know all of the pieces of logic which need to have their access logged, and what levels they need to be logged at, you need to enumerate all of the ways of accessing those pieces of logic.&nbsp;For most applications, there will be a single entry point for any given piece of logic, but more complicated applications may have more than one entry point. Also, logging on multiple levels provides a form of defense in depth, in case higher levels of functionality are circumvented.&nbsp;N-tier systems are a good example of this -- while the normal entry point may be through a web front-end, logging at the middleware and database layers is very important in detecting circumvention of the normal entry point.&nbsp;When you do have multiple levels of logging, or even multiple non-hierarchical systems working together, it's vital that business-level logging provide a way of unifieing those disparate data sources into a single view.</p>\n      <p>By default, health monitoring is enabled for ASP.NET applications and all Web infrastructure error events (inheriting from <em>System.Web.Management.WebErrorEvent</em>) and all audit failure events (inheriting from <em>System.Web.Management.WebFailureAuditEvent</em>) are written to the event log.&nbsp;The default configuration is defined in the <em>&lt;healthMonitoring&gt;</em> element in the machine-level Web.config file. To audit additional events, you create custom event types by deriving from one of the built-in types. </p>\n      <p />\n      <p>The health monitoring feature has built-in providers that allow you to log events in an e-mail message (<em>SimpleMailWebEventProvider, TemplatedMailWebEventProvider</em>), to SQL Server (<em>SqlWebEventProvider</em>), to the event log (<em>EventLogWebEventProvider</em>), as ASP.NET trace output (<em>TraceWebEventProvider</em>), or to the Windows Management Instrumentation (WMI) Web event provider (<em>WMIWebEventProvider</em>).&nbsp;You can configure health monitoring in the machine or application <em>Web.config</em> file to modify the events that are logged and the way in which they are logged.</p>\n      <p>In-database logging can be implemented either inside the stored procedures which you use to interact with the data, or via triggers.&nbsp;Logging via triggers may be preferable in some cases, because alterations to the data which occur outside of stored procedures (say, via a SQL injection vulnerability) will still be logged.&nbsp;Care should be taken when implementing in-database logging to ensure that the process which is normally generating the log entries cannot overwrite them.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure that logs are monitored.</strong>&nbsp;The next step is ensuring that logs are monitored and the information in them acted upon.&nbsp;Logging won't do any good if the results never see the light of day.&nbsp;Work with the operations team who will be managing the application to define a plan for monitoring and responding to log events. Depending on the environment, you may need to define this from scratch, or you may be fitting into a pre-exisiting framework. </p>\n      <p>If you're defining a monitoring framework from scratch, here are some things you need to consider: </p>\n      <ul>\n        <li>When do the logs need to be monitored—some applications will need 24x7 coverage, but many will be fine with 8x5. </li>\n        <li>How much time will log monitoring take—if&nbsp;your application is a&nbsp;large ecommerce site, you may have a dedicated team for log monitoring, but a small web app may be safe enough with a sysadmin taking a look a couple times a day. </li>\n        <li>What are your response time needs—if there's a serious problem with the site, it'll show up in the logs first; is your tolerance for problems defined in minutes, hours, or days? </li>\n        <li>What will your procedure for acting on potential issues be? </li>\n        <li>How will you control access to your logs and information derived from them; how sensitive is the information likely to be? </li>\n        <li>What response capabilities will the log monitoring team have?&nbsp; Log monitoring on it's own does no good if the information can't be acted on—suspcious events need to be investigated, accounts frozen, etc.</li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Avoid pitfalls for logging. </strong>Logging information at the business level is harder than providing implementation level logs, like logs of specific function calls, web server traffic, or database queries.&nbsp; Ensuring all of these disparate sources of information work together to provide a coherent view of business level events while still allowing the component implementation-level log entries that make up those events to be easily found is not an easy task.&nbsp; Depending on the complexity of your application, this level of logging integration may not be necessary -- if it's possible to easily determine which business event a given database query is part of, for instance, you probably don't need to automate this sort of thing.&nbsp; Larger and more complex applications, however, do require this sort of logging coordination.</p>\n      <p>Logging too much information can end up being a problem of its own.&nbsp; Once you have an idea of the volume of log events that you're seeing from your application, it may be worthwhile to implement some form of log throttling to reduce the flow of information to a rate at which you can act upon.&nbsp; Good log throttling should only eliminate redundant information and should provide a way to surface the most important information first. </p>\n      <p>Automatically taking action based on detection of anomolous conditions is a very dangerous thing to do, and is&nbsp;best avoided.&nbsp; While it may be reasonable to throttle the speed at which an event (say, a login attempt) may occur, preventing an action from occurring&nbsp;may result in an easy-to-launch denial of service attack against your application. </p>\n    </li>\n  </ol>\n  <h1>Related Items</h1>\n  <em>You may find these additional articles useful</em>\n  <ul>\n    <li>\n      <a href=\"/article/7d0273ff-f79d-469f-9843-06e1f0f1167f\">Log Important Business Operations</a>\n    </li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>\n  <h1>\n  </h1>\n  <h1>\n  </h1>"
}