{
  "id": "254ddab5-ecd2-4e05-a2b0-861e970bc0d9",
  "checksum": "fbf127a7dc9e317663a03d023b97cd4f49d9c7c2",
  "words": {
    "10": [
      "ol",
      "li",
      "p"
    ],
    "30": [
      "ol",
      "li",
      "p"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "pre",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "p"
    ],
    "protect": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "confidentiality": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "integrity": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "session": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "title"
    ],
    "cookies": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "are": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "used": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "by": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "an": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "identify": [
      "p"
    ],
    "associated": [
      "p"
    ],
    "with": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "particular": [
      "p"
    ],
    "user": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "pre",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "protecting": [
      "p"
    ],
    "can": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "help": [
      "p"
    ],
    "prevent": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "attacker": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "from": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "hijacking": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "posing": [
      "p"
    ],
    "as": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "legitimate": [
      "p"
    ],
    "when": [
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "p"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "uses": [
      "p",
      "p",
      "p",
      "p"
    ],
    "maintain": [
      "p"
    ],
    "user's": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "state": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "steps": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "secure": [
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "not": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "allow": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "users": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "choose": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "their": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "p"
    ],
    "own": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "identifiers": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "generating": [
      "ol",
      "li",
      "p"
    ],
    "using": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "values": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "ids": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "may": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "lead": [
      "ol",
      "li",
      "p"
    ],
    "prediction": [
      "ol",
      "li",
      "p"
    ],
    "attacks": [
      "ol",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "forecasted": [
      "ol",
      "li",
      "p"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "based": [
      "ol",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "guessable": [
      "ol",
      "li",
      "p"
    ],
    "elements": [
      "ol",
      "li",
      "p"
    ],
    "like": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "username": [
      "ol",
      "li",
      "p"
    ],
    "instead": [
      "ol",
      "li",
      "p"
    ],
    "that": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "generated": [
      "ol",
      "li",
      "p"
    ],
    "aspnet": [
      "ol",
      "li",
      "p"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "its": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "sessions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "minimizes": [
      "ol",
      "li",
      "p"
    ],
    "risk": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "another": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "because": [
      "ol",
      "li",
      "p"
    ],
    "strongly": [
      "ol",
      "li",
      "p"
    ],
    "random": [
      "ol",
      "li",
      "p"
    ],
    "id": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "pre",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "assigned": [
      "ol",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "accessed": [
      "ol",
      "li",
      "p"
    ],
    "via": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "sessionsessionid).": [
      "ol",
      "li",
      "p"
    ],
    "reuse": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "always": [
      "ol",
      "li",
      "p"
    ],
    "clean": [
      "ol",
      "li",
      "p"
    ],
    "prevents": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "old": [
      "ol",
      "li",
      "p"
    ],
    "data": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "possibly": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "disclosed": [
      "ol",
      "li",
      "p"
    ],
    "helps": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "privacy": [
      "ol",
      "li",
      "p"
    ],
    "accounts": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li",
      "p"
    ],
    "sessionids": [
      "ol",
      "li",
      "p"
    ],
    "never": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "recycled": [
      "ol",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "must": [
      "ol",
      "li",
      "p"
    ],
    "set": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "pre",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "regenerateexpiredsessionid": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "attribute": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "sessionstate": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "pre",
      "li",
      "li",
      "p",
      "pre"
    ],
    "configuration": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "false": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "pre",
      "strong"
    ],
    "element": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "in": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "machineconfig": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "webconfig": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "file": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "shown": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "below": [
      "ol",
      "li",
      "p"
    ],
    "..": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "cookieless=\"usecookies\"": [
      "ol",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "cookiename=\"aspnet_sessionid\"": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "timeout=\"20\"": [
      "ol",
      "li",
      "pre"
    ],
    "allowcustomsqldatabase=\"false\"": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "regenerateexpiredsessionid=\"false\"": [
      "ol",
      "ol",
      "li",
      "pre",
      "strong",
      "li",
      "pre"
    ],
    "/sessionstate>": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "time-out": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "expiration": [
      "ol",
      "li",
      "p"
    ],
    "time": [
      "ol",
      "li",
      "p"
    ],
    "mitigate": [
      "ol",
      "li",
      "p"
    ],
    "threat": [
      "ol",
      "li",
      "p"
    ],
    "http": [
      "ol",
      "li",
      "p"
    ],
    "attack": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "giving": [
      "ol",
      "li",
      "p"
    ],
    "smaller": [
      "ol",
      "li",
      "p"
    ],
    "window": [
      "ol",
      "li",
      "p"
    ],
    "opportunity": [
      "ol",
      "li",
      "p"
    ],
    "depending": [
      "ol",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "li",
      "p"
    ],
    "timeout": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "anywhere": [
      "ol",
      "li",
      "p"
    ],
    "minutes": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "value": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "timeout=\"10\"": [
      "ol",
      "li",
      "pre",
      "strong"
    ],
    "terminate": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "allowing": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "invalidate": [
      "ol",
      "li",
      "p"
    ],
    "reduces": [
      "ol",
      "li",
      "p"
    ],
    "decides": [
      "ol",
      "li",
      "p"
    ],
    "log-off": [
      "ol",
      "li",
      "p"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "sessionabandon()": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "strong"
    ],
    "method": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "conjunction": [
      "ol",
      "li",
      "p"
    ],
    "setting": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "mentioned": [
      "ol",
      "li",
      "p"
    ],
    "point": [
      "ol",
      "li",
      "p"
    ],
    "#2.": [
      "ol",
      "li",
      "p"
    ],
    "once": [
      "ol",
      "li",
      "p"
    ],
    "called": [
      "ol",
      "li",
      "p"
    ],
    "current": [
      "ol",
      "li",
      "p"
    ],
    "no": [
      "ol",
      "li",
      "p"
    ],
    "longer": [
      "ol",
      "li",
      "p"
    ],
    "valid": [
      "ol",
      "li",
      "p"
    ],
    "new": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "started": [
      "ol",
      "li",
      "p"
    ],
    "hide": [
      "ol",
      "li",
      "p",
      "strong",
      "p"
    ],
    "scripts": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "authentication": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "pre",
      "p",
      "p",
      "pre",
      "p",
      "p"
    ],
    "only": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "server": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "side": [
      "ol",
      "li",
      "p"
    ],
    "authenticate": [
      "ol",
      "li",
      "p"
    ],
    "requests": [
      "ol",
      "li",
      "p"
    ],
    "coming": [
      "ol",
      "li",
      "p"
    ],
    "they're": [
      "ol",
      "li",
      "p"
    ],
    "client": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "preventing": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "accessing": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "them": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "means": [
      "ol",
      "li",
      "p"
    ],
    "script": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "injection": [
      "ol",
      "li",
      "p"
    ],
    "occurs": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "able": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "steal": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "done": [
      "ol",
      "li",
      "p"
    ],
    "httponlycookies": [
      "ol",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong"
    ],
    "httpcookies": [
      "ol",
      "li",
      "p",
      "strong",
      "strong",
      "pre",
      "pre"
    ],
    "follows": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "system.web>...<httpcookies": [
      "ol",
      "li",
      "pre"
    ],
    "httponlycookies=\"true\"": [
      "ol",
      "li",
      "pre",
      "strong",
      "pre"
    ],
    "requiressl=\"true\"": [
      "ol",
      "ol",
      "li",
      "pre",
      "strong",
      "li",
      "strong",
      "pre",
      "pre",
      "pre"
    ],
    "topic=\"\"": [
      "ol",
      "li",
      "pre",
      "strong",
      "pre",
      "pre"
    ],
    "/...</system.web>": [
      "ol",
      "li",
      "pre"
    ],
    "also": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "programmatically": [
      "ol",
      "li",
      "p"
    ],
    "httponly": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "property": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "systemnet.cookie": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "class": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "protection": [
      "ol",
      "li",
      "p"
    ],
    "effective": [
      "ol",
      "li",
      "p"
    ],
    "microsoft's": [
      "ol",
      "li",
      "p"
    ],
    "internet": [
      "ol",
      "li",
      "p"
    ],
    "explorer": [
      "ol",
      "li",
      "p"
    ],
    "circumvented": [
      "ol",
      "li",
      "p"
    ],
    "variety": [
      "ol",
      "li",
      "p"
    ],
    "ways": [
      "ol",
      "li",
      "p"
    ],
    "but": [
      "ol",
      "li",
      "p"
    ],
    "still": [
      "ol",
      "li",
      "p"
    ],
    "adds": [
      "ol",
      "li",
      "p"
    ],
    "layer": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "defense": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "ensure": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "sent": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "over": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "encrypted": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "channels": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "ssl": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "both": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "authorization": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "li",
      "p"
    ],
    "order": [
      "ol",
      "li",
      "p"
    ],
    "assuming": [
      "ol",
      "li",
      "p"
    ],
    "other": [
      "ol",
      "li",
      "p"
    ],
    "identities": [
      "ol",
      "li",
      "p"
    ],
    "altering": [
      "ol",
      "li",
      "p"
    ],
    "roles": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "they": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "have": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "system": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "forms": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "li",
      "strong",
      "pre"
    ],
    "aspnet,": [
      "ol",
      "li",
      "p"
    ],
    "requiressl": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "stored": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p",
      "p"
    ],
    "mode=\"forms\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "loginurl=\"member_loginaspx\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "cookieless=\"usecookies\"requiressl=\"true\"": [
      "ol",
      "li",
      "pre"
    ],
    "path=\"/myapplication\"": [
      "ol",
      "li",
      "pre"
    ],
    "/</authentication>": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "alter": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "cookie": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "p",
      "strong",
      "p"
    ],
    "potentially": [
      "ol",
      "li",
      "p"
    ],
    "allowed": [
      "ol",
      "li",
      "p"
    ],
    "take": [
      "ol",
      "li",
      "p"
    ],
    "reading": [
      "ol",
      "li",
      "p"
    ],
    "forge": [
      "ol",
      "li",
      "p"
    ],
    "working": [
      "ol",
      "li",
      "p"
    ],
    "again": [
      "ol",
      "li",
      "p"
    ],
    "gain": [
      "ol",
      "li",
      "p"
    ],
    "more": [
      "ol",
      "li",
      "p"
    ],
    "access": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "than": [
      "ol",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "encrypt": [
      "ol",
      "li",
      "p"
    ],
    "cookieprotection": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "rolemanager": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "pre",
      "pre",
      "li",
      "li",
      "p",
      "pre"
    ],
    "all": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "connections": [
      "ol",
      "li",
      "p"
    ],
    "cookierequiressl": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "enabled=\"true\"": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "cacherolesincookie=\"true\"": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "cookiename=\"asproles\"": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "cookietimeout=\"30\"": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "cookiepath=\"/\"cookierequiressl=\"true\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookieslidingexpiration=\"true\"cookieprotection=\"all\"": [
      "ol",
      "li",
      "pre"
    ],
    "createpersistentcookie=\"false\"</rolemanager>": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "li",
      "pre"
    ],
    "without": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "sometimes": [
      "ol",
      "li",
      "p"
    ],
    "true": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "mobile": [
      "ol",
      "li",
      "p"
    ],
    "applications,": [
      "ol",
      "li",
      "p"
    ],
    "then": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "cookieslidingexpiration": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "along": [
      "ol",
      "li",
      "p"
    ],
    "described": [
      "ol",
      "li",
      "p"
    ],
    "above": [
      "ol",
      "li",
      "p"
    ],
    "forces": [
      "ol",
      "li",
      "p"
    ],
    "re-authenticate": [
      "ol",
      "li",
      "p"
    ],
    "after": [
      "ol",
      "li",
      "p"
    ],
    "period": [
      "ol",
      "li",
      "p"
    ],
    "regardless": [
      "ol",
      "li",
      "p"
    ],
    "activity": [
      "ol",
      "li",
      "p"
    ],
    "inactivity.": [
      "ol",
      "li",
      "p"
    ],
    "path=\"/myapplication\"slidingexpiration=\"false\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookiepath=\"/\"": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "cookierequiressl=\"false\"cookieslidingexpiration=\"false\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookieprotection=\"all\"": [
      "ol",
      "ol",
      "li",
      "strong",
      "pre",
      "li",
      "pre"
    ],
    "persistent": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "profile": [
      "ol",
      "li",
      "p"
    ],
    "compromised": [
      "ol",
      "li",
      "p"
    ],
    "gets": [
      "ol",
      "li",
      "p"
    ],
    "physical": [
      "ol",
      "li",
      "p"
    ],
    "machine": [
      "ol",
      "li",
      "p"
    ],
    "who": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "accesses": [
      "ol",
      "li",
      "p"
    ],
    "public": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "machines": [
      "ol",
      "li",
      "p"
    ],
    "forgets": [
      "ol",
      "li",
      "p"
    ],
    "log": [
      "ol",
      "li",
      "p"
    ],
    "out": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "it's": [
      "ol",
      "li",
      "p"
    ],
    "acceptable": [
      "ol",
      "li",
      "p"
    ],
    "identification": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "so": [
      "ol",
      "li",
      "p"
    ],
    "welcome": [
      "ol",
      "li",
      "p"
    ],
    "returning": [
      "ol",
      "li",
      "p"
    ],
    "site": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "name": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "however": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "very": [
      "ol",
      "li",
      "p"
    ],
    "careful": [
      "ol",
      "li",
      "p"
    ],
    "does": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "become": [
      "ol",
      "li",
      "p"
    ],
    "login": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "any": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "protected": [
      "ol",
      "li",
      "p"
    ],
    "resources": [
      "ol",
      "li",
      "p"
    ],
    "unauthorized": [
      "ol",
      "li",
      "p"
    ],
    "follow": [
      "ol",
      "li",
      "p"
    ],
    "one": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "controls": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "displayrememberme": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong"
    ],
    "control": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "specify": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "non-persistent": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "pre"
    ],
    "call": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "either": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "redirectfromloginpage": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong"
    ],
    "setauthcookie": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong"
    ],
    "methods": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "formsauthentication": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "strong"
    ],
    "having": [
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "validated": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "credentials": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "pre"
    ],
    "here": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "void": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "login_clickobject": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "sender": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "eventargs": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "e{": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "//": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "valid?": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "membership.validateuser(username.text,": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "passwordtext))": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "parameter": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "two": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "indicates": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "formsauthenticationredirectfromloginpage(username.text,": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "false;": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "}": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "else": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "statustext": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "=": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"invalid": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "please": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "try": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "again\";": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "}}": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "createpersistentcookie": [
      "ol",
      "li",
      "p"
    ],
    "cookierequiressl=\"true\"": [
      "ol",
      "strong",
      "li",
      "pre"
    ],
    "cookieslidingexpiration=\"true\"": [
      "ol",
      "li",
      "pre"
    ],
    "unique": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "names": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "paths": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "ensuring": [
      "ol",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "problems": [
      "ol",
      "li",
      "p"
    ],
    "occur": [
      "ol",
      "li",
      "p"
    ],
    "hosting": [
      "ol",
      "li",
      "p"
    ],
    "multiple": [
      "ol",
      "li",
      "p"
    ],
    "applications": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "p",
      "h1",
      "h1"
    ],
    "distinct": [
      "ol",
      "li",
      "p"
    ],
    "authenticated": [
      "ol",
      "li",
      "p"
    ],
    "request": [
      "ol",
      "li",
      "p"
    ],
    "redirected": [
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "li",
      "p"
    ],
    "page": [
      "ol",
      "li",
      "p"
    ],
    "path": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "attributes": [
      "ol",
      "li",
      "p"
    ],
    "forms>": [
      "ol",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "li",
      "p"
    ],
    "locating": [
      "ol",
      "li",
      "p"
    ],
    "name=\"yourappname\"": [
      "ol",
      "li",
      "pre"
    ],
    "path=\"/formsauth\"": [
      "ol",
      "li",
      "pre"
    ],
    "/": [
      "ol",
      "strong",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "sessionsessionid": [
      "strong"
    ],
    "slidingexpiration=\"false\"": [
      "strong"
    ],
    "cookieslidingexpiration=\"false\"": [
      "strong"
    ],
    "problem": [
      "h1"
    ],
    "provide": [
      "p"
    ],
    "connection": [
      "p"
    ],
    "generates": [
      "p"
    ],
    "strong": [
      "p"
    ],
    "times": [
      "p"
    ],
    "terminates": [
      "p"
    ],
    "appropriately": [
      "p"
    ],
    "susceptible": [
      "p"
    ],
    "cross-site": [
      "p",
      "p"
    ],
    "scripting": [
      "p",
      "p",
      "p"
    ],
    "flaws": [
      "p"
    ],
    "despite": [
      "p"
    ],
    "base": [
      "p"
    ],
    "mostly": [
      "p"
    ],
    "ie": [
      "p"
    ],
    "looks": [
      "p"
    ],
    "system.web>": [
      "pre",
      "pre"
    ],
    "httponlycookies=\"false\"": [
      "pre"
    ],
    "..</system.web>": [
      "pre",
      "pre"
    ],
    "cross": [
      "p"
    ],
    "discovered": [
      "p"
    ],
    "she": [
      "p"
    ],
    "malicious": [
      "p",
      "p"
    ],
    "impersonate": [
      "p"
    ],
    "those": [
      "p"
    ],
    "solution": [
      "h1"
    ],
    "designers": [
      "p"
    ],
    "learn": [
      "p"
    ],
    "lesson": [
      "p"
    ],
    "addition": [
      "p"
    ],
    "fixing": [
      "p"
    ],
    "further": [
      "p"
    ],
    "vulnerabilities": [
      "p"
    ],
    "decide": [
      "p"
    ],
    "added": [
      "p"
    ],
    "including": [
      "p"
    ],
    "most": [
      "p"
    ],
    "ones": [
      "p"
    ],
    "browser": [
      "p"
    ],
    "now": [
      "p"
    ],
    "safer": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How",
      "Problem Example",
      "Solution Example"
    ],
    "p": [
      "Protect the confidentiality and integrity of session cookies.",
      "Session cookies are used by an application to identify the session associated with a particular user. Protecting session cookies can help prevent an attacker from hijacking the session and posing as a legitimate user.",
      "If your application uses cookies to maintain a user's session state.",
      "Use the following steps to secure session cookies:",
      "Do not allow users to choose their own session identifiers: Generating and using your own values as session IDs may lead to session prediction attacks if the values can be forecasted or are based on guessable elements like the username. Instead, use the IDs that are generated by ASP.NET for its sessions. This minimizes the risk of an attacker hijacking another user's session because a strongly random ID is assigned to each session (and can be accessed via Session.SessionID).",
      "Do not reuse sessions: Always use clean sessions. This prevents old data (possibly from another user) from being disclosed and helps to protect the privacy and the integrity of user accounts. To make sure that sessionIDs are never recycled you must set the regenerateExpiredSessionId attribute of the sessionState configuration to false. The sessionState element can be set in the Machine.config or Web.config file, as shown below:",
      "Time-out sessions: Set an expiration time for sessions. This helps mitigate the threat of an HTTP Session Hijacking Attack by giving an attacker a smaller window of opportunity. Depending on your application an appropriate timeout can be anywhere from 10 to 30 minutes. The timeout value (in minutes) can be set via the timeout attribute in the sessionState configuration:",
      "Allow users to terminate their sessions: Allowing users to invalidate their sessions reduces the risk of session hijacking. When a user decides to log-off from the web application, use the Session.Abandon() method in conjunction with setting the regenerateExpiredSessionId attribute to false (as mentioned in point #2). Once the Session.Abandon() method is called the current session is no longer valid and a new session can be started.",
      "Hide cookies from scripts: Authentication cookies are only used on the server side to authenticate requests coming from a user; they're never used on the client. Preventing the client from accessing them via scripts means that if a script injection attack occurs, the attacker will not be able to steal a user's cookies. This can be done by setting the httpOnlyCookies attribute in the httpCookies configuration of web.config or machine.config file as follows:",
      "This value can also be set programmatically by setting the HttpOnly property in the System.Net.Cookie class. This protection is only effective for users using Microsoft's Internet Explorer and can be circumvented in a variety of ways, but still adds a layer of defense.",
      "Ensure that cookies are sent over encrypted channels: Use SSL to protect the integrity and confidentiality of session cookies for both authentication and authorization in order to prevent users from assuming other user's identities, or from altering the roles they have in the system.",
      "For Authentication: When using forms authentication in ASP.NET, set the requireSSL attribute in the authentication configuration, which is stored in the web.config file for your web application. It may be set as follows:",
      "For Authorization: If a user can alter their authorization cookie, they can potentially alter the roles they are allowed to take in the system. Reading another user's authorization cookie may allow a user to forge a working authorization cookie, again allowing them to gain more access to the system than they should have. Encrypt the authorization cookies by setting the cookieProtection attribute of the roleManager configuration in the web.config or machine.config file for your web application to All, and ensure it is only sent over secure connections by setting the cookieRequireSSL attribute. They may be set as follows:",
      "Without SSL: If SSL can not be used for your application (sometimes true in mobile applications), then set the cookieSlidingExpiration attribute to false for both authentication and authorization cookies. When this attribute is set along with the timeout attribute (described above) it forces your user to re-authenticate after the set timeout period regardless of user activity (or inactivity). This can be set for authentication cookies as follows:",
      "And it can be set for authorization cookies as follows:",
      "Do not use persistent session cookies: Persistent session cookies will be stored in a user profile and can be compromised if an attacker gets physical access to the machine or if a user who accesses your application from public machines forgets to log out. It's acceptable to have a persistent user identification cookie, so that you can welcome a returning user to the site by name. However, be very careful that the identification cookie does not become a login cookie or allow access to any protected resources. To prevent unauthorized access, follow one of the following steps:",
      "If using Login controls: Set the DisplayRememberMe property of the Login control to false.",
      "If you are not using the login controls, you can specify a non-persistent cookie when you call either the RedirectFromLoginPage or SetAuthCookie methods of the FormsAuthentication class having validated the user's credentials, as shown here:",
      "For authorization cookies, set the createPersistentCookie attribute of the roleManager configuration. It may be set as follows:",
      "Use unique cookie names and paths: By ensuring unique names, you prevent possible problems that can occur when hosting multiple applications on the same server. For example, if you do not use distinct names, it is possible for a user who is authenticated in one application to make a request to another application without being redirected to that application's login page.",
      "Set a unique value for the name and path attributes on the <forms> element at the following locating in your web.config file.",
      "A web application uses SSL to provide a secure connection for user data, generates strong, new session IDs for each user, and times out and terminates sessions appropriately. However, it is susceptible to cross-site scripting flaws, and despite having a user base that mostly uses IE, does not set httpOnlyCookies on its cookies. The web.config file for this application looks like this:",
      "When the Cross Site Scripting Attack is discovered by an attacker, she uses it to steal user session cookies via a malicious script and is then able to impersonate those users.",
      "The designers of the web application learn their lesson and in addition to fixing and preventing further Cross-Site Scripting vulnerabilities, they also decide to hide their authentication cookies from scripts as an added layer of defense. They do this by setting the httpOnlyCookies attribute as follows:",
      "This prevents any scripts (including most malicious ones) in the client browser from accessing the authentication cookie, and the users of the system are now safer.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Do not allow users to choose their own session identifiers: Generating and using your own values as session IDs may lead to session prediction attacks if the values can be forecasted or are based on guessable elements like the username. Instead, use the IDs that are generated by ASP.NET for its sessions. This minimizes the risk of an attacker hijacking another user's session because a strongly random ID is assigned to each session (and can be accessed via Session.SessionID).\r\n    \r\n    \r\n      \r\n        Do not reuse sessions: Always use clean sessions. This prevents old data (possibly from another user) from being disclosed and helps to protect the privacy and the integrity of user accounts. To make sure that sessionIDs are never recycled you must set the regenerateExpiredSessionId attribute of the sessionState configuration to false. The sessionState element can be set in the Machine.config or Web.config file, as shown below:\r\n      <sessionState   ...   ...   cookieless=\"UseCookies\"   cookieName=\"ASP.NET_SessionId\"   timeout=\"20\"   allowCustomSqlDatabase=\"false\" regenerateExpiredSessionId=\"false\" </sessionState>\r\n    \r\n    \r\n      \r\n        Time-out sessions: Set an expiration time for sessions. This helps mitigate the threat of an HTTP Session Hijacking Attack by giving an attacker a smaller window of opportunity. Depending on your application an appropriate timeout can be anywhere from 10 to 30 minutes. The timeout value (in minutes) can be set via the timeout attribute in the sessionState configuration:\r\n      <sessionState   ...   ...   cookieless=\"UseCookies\"    cookieName=\"ASP.NET_SessionId\" timeout=\"10\"    allowCustomSqlDatabase=\"false\"    regenerateExpiredSessionId=\"false\" </sessionState>\r\n    \r\n    \r\n      \r\n        Allow users to terminate their sessions: Allowing users to invalidate their sessions reduces the risk of session hijacking. When a user decides to log-off from the web application, use the Session.Abandon() method in conjunction with setting the regenerateExpiredSessionId attribute to false (as mentioned in point #2). Once the Session.Abandon() method is called the current session is no longer valid and a new session can be started.\r\n    \r\n    \r\n      \r\n        Hide cookies from scripts: Authentication cookies are only used on the server side to authenticate requests coming from a user; they're never used on the client. Preventing the client from accessing them via scripts means that if a script injection attack occurs, the attacker will not be able to steal a user's cookies. This can be done by setting the httpOnlyCookies attribute in the httpCookies configuration of web.config or machine.config file as follows:\r\n      <system.web>...<httpCookies httpOnlyCookies=\"true\" requireSSL=\"true\" topic=\"\" />...</system.web>\r\n      This value can also be set programmatically by setting the HttpOnly property in the System.Net.Cookie class. This protection is only effective for users using Microsoft's Internet Explorer and can be circumvented in a variety of ways, but still adds a layer of defense.\r\n    \r\n    \r\n      \r\n        Ensure that cookies are sent over encrypted channels: Use SSL to protect the integrity and confidentiality of session cookies for both authentication and authorization in order to prevent users from assuming other user's identities, or from altering the roles they have in the system.\r\n      \r\n        For Authentication: When using forms authentication in ASP.NET, set the requireSSL attribute in the authentication configuration, which is stored in the web.config file for your web application. It may be set as follows:\r\n      <authentication mode=\"Forms\">  <forms loginUrl=\"member_login.aspx\"    cookieless=\"UseCookies\"requireSSL=\"true\"    path=\"/MyApplication\" /></authentication>\r\n      \r\n        For Authorization: If a user can alter their authorization cookie, they can potentially alter the roles they are allowed to take in the system. Reading another user's authorization cookie may allow a user to forge a working authorization cookie, again allowing them to gain more access to the system than they should have. Encrypt the authorization cookies by setting the cookieProtection attribute of the roleManager configuration in the web.config or machine.config file for your web application to All, and ensure it is only sent over secure connections by setting the cookieRequireSSL attribute. They may be set as follows:\r\n      <roleManager enabled=\"true\"  cacheRolesInCookie=\"true\"  cookieName=\".ASPROLES\"  cookieTimeout=\"30\"  cookiePath=\"/\"cookieRequireSSL=\"true\"  cookieSlidingExpiration=\"true\"cookieProtection=\"All\"  createPersistentCookie=\"false\"></roleManager>\r\n      \r\n        Without SSL: If SSL can not be used for your application (sometimes true in mobile applications), then set the cookieSlidingExpiration attribute to false for both authentication and authorization cookies. When this attribute is set along with the timeout attribute (described above) it forces your user to re-authenticate after the set timeout period regardless of user activity (or inactivity). This can be set for authentication cookies as follows:\r\n      <authentication mode=\"Forms\">  <forms loginUrl=\"member_login.aspx\"    cookieless=\"UseCookies\"    requireSSL=\"true\"    path=\"/MyApplication\"slidingExpiration=\"false\" /></authentication>\r\n      And it can be set for authorization cookies as follows:\r\n      <roleManager enabled=\"true\"  cacheRolesInCookie=\"true\"  cookieName=\".ASPROLES\"  cookieTimeout=\"30\"  cookiePath=\"/\"  cookieRequireSSL=\"false\"cookieSlidingExpiration=\"false\"  cookieProtection=\"All\"  createPersistentCookie=\"false\"></roleManager>\r\n    \r\n    \r\n      \r\n        Do not use persistent session cookies: Persistent session cookies will be stored in a user profile and can be compromised if an attacker gets physical access to the machine or if a user who accesses your application from public machines forgets to log out. It's acceptable to have a persistent user identification cookie, so that you can welcome a returning user to the site by name. However, be very careful that the identification cookie does not become a login cookie or allow access to any protected resources. To prevent unauthorized access, follow one of the following steps:\r\n      \r\n        \r\n          If using Login controls: Set the DisplayRememberMe property of the Login control to false.\r\n        \r\n        \r\n          If you are not using the login controls, you can specify a non-persistent cookie when you call either the RedirectFromLoginPage or SetAuthCookie methods of the FormsAuthentication class having validated the user's credentials, as shown here:\r\n          public void Login_Click(object sender, EventArgs e){   // Is the user valid?   if (Membership.ValidateUser(userName.Text, password.Text))   {        // Parameter two set to false indicates non-persistent cookie        FormsAuthentication.RedirectFromLoginPage(username.Text, false);   }   else    {          Status.Text = \"Invalid credentials. Please try again.\";   }}\r\n        \r\n      \r\n      For authorization cookies, set the createPersistentCookie attribute of the roleManager configuration. It may be set as follows:\r\n      <roleManager enabled=\"true\"             cacheRolesInCookie=\"true\"             cookieName=\".ASPROLES\"             cookieTimeout=\"30\"             cookiePath=\"/\"             cookieRequireSSL=\"true\"             cookieSlidingExpiration=\"true\"             cookieProtection=\"All\"             createPersistentCookie=\"false\"></roleManager>\r\n    \r\n    \r\n      \r\n        Use unique cookie names and paths: By ensuring unique names, you prevent possible problems that can occur when hosting multiple applications on the same server. For example, if you do not use distinct names, it is possible for a user who is authenticated in one application to make a request to another application without being redirected to that application's login page.\r\n      Set a unique value for the name and path attributes on the <forms> element at the following locating in your web.config file.\r\n      <forms name=\"YourAppName\"       path=\"/FormsAuth\" ... />"
    ],
    "li": [
      "Do not allow users to choose their own session identifiers: Generating and using your own values as session IDs may lead to session prediction attacks if the values can be forecasted or are based on guessable elements like the username. Instead, use the IDs that are generated by ASP.NET for its sessions. This minimizes the risk of an attacker hijacking another user's session because a strongly random ID is assigned to each session (and can be accessed via Session.SessionID).",
      "Do not reuse sessions: Always use clean sessions. This prevents old data (possibly from another user) from being disclosed and helps to protect the privacy and the integrity of user accounts. To make sure that sessionIDs are never recycled you must set the regenerateExpiredSessionId attribute of the sessionState configuration to false. The sessionState element can be set in the Machine.config or Web.config file, as shown below:\r\n      <sessionState   ...   ...   cookieless=\"UseCookies\"   cookieName=\"ASP.NET_SessionId\"   timeout=\"20\"   allowCustomSqlDatabase=\"false\" regenerateExpiredSessionId=\"false\" </sessionState>",
      "Time-out sessions: Set an expiration time for sessions. This helps mitigate the threat of an HTTP Session Hijacking Attack by giving an attacker a smaller window of opportunity. Depending on your application an appropriate timeout can be anywhere from 10 to 30 minutes. The timeout value (in minutes) can be set via the timeout attribute in the sessionState configuration:\r\n      <sessionState   ...   ...   cookieless=\"UseCookies\"    cookieName=\"ASP.NET_SessionId\" timeout=\"10\"    allowCustomSqlDatabase=\"false\"    regenerateExpiredSessionId=\"false\" </sessionState>",
      "Allow users to terminate their sessions: Allowing users to invalidate their sessions reduces the risk of session hijacking. When a user decides to log-off from the web application, use the Session.Abandon() method in conjunction with setting the regenerateExpiredSessionId attribute to false (as mentioned in point #2). Once the Session.Abandon() method is called the current session is no longer valid and a new session can be started.",
      "Hide cookies from scripts: Authentication cookies are only used on the server side to authenticate requests coming from a user; they're never used on the client. Preventing the client from accessing them via scripts means that if a script injection attack occurs, the attacker will not be able to steal a user's cookies. This can be done by setting the httpOnlyCookies attribute in the httpCookies configuration of web.config or machine.config file as follows:\r\n      <system.web>...<httpCookies httpOnlyCookies=\"true\" requireSSL=\"true\" topic=\"\" />...</system.web>\r\n      This value can also be set programmatically by setting the HttpOnly property in the System.Net.Cookie class. This protection is only effective for users using Microsoft's Internet Explorer and can be circumvented in a variety of ways, but still adds a layer of defense.",
      "Ensure that cookies are sent over encrypted channels: Use SSL to protect the integrity and confidentiality of session cookies for both authentication and authorization in order to prevent users from assuming other user's identities, or from altering the roles they have in the system.\r\n      \r\n        For Authentication: When using forms authentication in ASP.NET, set the requireSSL attribute in the authentication configuration, which is stored in the web.config file for your web application. It may be set as follows:\r\n      <authentication mode=\"Forms\">  <forms loginUrl=\"member_login.aspx\"    cookieless=\"UseCookies\"requireSSL=\"true\"    path=\"/MyApplication\" /></authentication>\r\n      \r\n        For Authorization: If a user can alter their authorization cookie, they can potentially alter the roles they are allowed to take in the system. Reading another user's authorization cookie may allow a user to forge a working authorization cookie, again allowing them to gain more access to the system than they should have. Encrypt the authorization cookies by setting the cookieProtection attribute of the roleManager configuration in the web.config or machine.config file for your web application to All, and ensure it is only sent over secure connections by setting the cookieRequireSSL attribute. They may be set as follows:\r\n      <roleManager enabled=\"true\"  cacheRolesInCookie=\"true\"  cookieName=\".ASPROLES\"  cookieTimeout=\"30\"  cookiePath=\"/\"cookieRequireSSL=\"true\"  cookieSlidingExpiration=\"true\"cookieProtection=\"All\"  createPersistentCookie=\"false\"></roleManager>\r\n      \r\n        Without SSL: If SSL can not be used for your application (sometimes true in mobile applications), then set the cookieSlidingExpiration attribute to false for both authentication and authorization cookies. When this attribute is set along with the timeout attribute (described above) it forces your user to re-authenticate after the set timeout period regardless of user activity (or inactivity). This can be set for authentication cookies as follows:\r\n      <authentication mode=\"Forms\">  <forms loginUrl=\"member_login.aspx\"    cookieless=\"UseCookies\"    requireSSL=\"true\"    path=\"/MyApplication\"slidingExpiration=\"false\" /></authentication>\r\n      And it can be set for authorization cookies as follows:\r\n      <roleManager enabled=\"true\"  cacheRolesInCookie=\"true\"  cookieName=\".ASPROLES\"  cookieTimeout=\"30\"  cookiePath=\"/\"  cookieRequireSSL=\"false\"cookieSlidingExpiration=\"false\"  cookieProtection=\"All\"  createPersistentCookie=\"false\"></roleManager>",
      "Do not use persistent session cookies: Persistent session cookies will be stored in a user profile and can be compromised if an attacker gets physical access to the machine or if a user who accesses your application from public machines forgets to log out. It's acceptable to have a persistent user identification cookie, so that you can welcome a returning user to the site by name. However, be very careful that the identification cookie does not become a login cookie or allow access to any protected resources. To prevent unauthorized access, follow one of the following steps:\r\n      \r\n        \r\n          If using Login controls: Set the DisplayRememberMe property of the Login control to false.\r\n        \r\n        \r\n          If you are not using the login controls, you can specify a non-persistent cookie when you call either the RedirectFromLoginPage or SetAuthCookie methods of the FormsAuthentication class having validated the user's credentials, as shown here:\r\n          public void Login_Click(object sender, EventArgs e){   // Is the user valid?   if (Membership.ValidateUser(userName.Text, password.Text))   {        // Parameter two set to false indicates non-persistent cookie        FormsAuthentication.RedirectFromLoginPage(username.Text, false);   }   else    {          Status.Text = \"Invalid credentials. Please try again.\";   }}\r\n        \r\n      \r\n      For authorization cookies, set the createPersistentCookie attribute of the roleManager configuration. It may be set as follows:\r\n      <roleManager enabled=\"true\"             cacheRolesInCookie=\"true\"             cookieName=\".ASPROLES\"             cookieTimeout=\"30\"             cookiePath=\"/\"             cookieRequireSSL=\"true\"             cookieSlidingExpiration=\"true\"             cookieProtection=\"All\"             createPersistentCookie=\"false\"></roleManager>",
      "If using Login controls: Set the DisplayRememberMe property of the Login control to false.",
      "If you are not using the login controls, you can specify a non-persistent cookie when you call either the RedirectFromLoginPage or SetAuthCookie methods of the FormsAuthentication class having validated the user's credentials, as shown here:\r\n          public void Login_Click(object sender, EventArgs e){   // Is the user valid?   if (Membership.ValidateUser(userName.Text, password.Text))   {        // Parameter two set to false indicates non-persistent cookie        FormsAuthentication.RedirectFromLoginPage(username.Text, false);   }   else    {          Status.Text = \"Invalid credentials. Please try again.\";   }}",
      "Use unique cookie names and paths: By ensuring unique names, you prevent possible problems that can occur when hosting multiple applications on the same server. For example, if you do not use distinct names, it is possible for a user who is authenticated in one application to make a request to another application without being redirected to that application's login page.\r\n      Set a unique value for the name and path attributes on the <forms> element at the following locating in your web.config file.\r\n      <forms name=\"YourAppName\"       path=\"/FormsAuth\" ... />"
    ],
    "strong": [
      "Do not allow users to choose their own session identifiers",
      "Session.SessionID",
      "Do not reuse sessions",
      "regenerateExpiredSessionId",
      "sessionState",
      "false",
      "regenerateExpiredSessionId=\"false\"",
      "Time-out sessions",
      "timeout",
      "timeout=\"10\"",
      "Allow users to terminate their sessions",
      "Session.Abandon()",
      "regenerateExpiredSessionId",
      "Session.Abandon()",
      "Hide cookies from scripts",
      "httpOnlyCookies",
      "httpCookies",
      "<httpCookies httpOnlyCookies=\"true\" requireSSL=\"true\" topic=\"\" />",
      "HttpOnly",
      "System.Net.Cookie",
      "Ensure that cookies are sent over encrypted channels",
      "For Authentication",
      "requireSSL",
      "authentication",
      "requireSSL=\"true\"",
      "For Authorization",
      "cookieProtection",
      "roleManager",
      "All",
      "cookieRequireSSL",
      "cookieRequireSSL=\"true\"",
      "cookieProtection=\"All\"",
      "Without SSL",
      "cookieSlidingExpiration",
      "false",
      "timeout",
      "slidingExpiration=\"false\"",
      "cookieSlidingExpiration=\"false\"",
      "Do not use persistent session cookies",
      "DisplayRememberMe",
      "Login",
      "false",
      "RedirectFromLoginPage",
      "SetAuthCookie",
      "FormsAuthentication",
      "Use unique cookie names and paths",
      "name",
      "path",
      "forms",
      "httpOnlyCookies",
      "false",
      "httpOnlyCookies",
      "true"
    ],
    "pre": [
      "<sessionState   ...   ...   cookieless=\"UseCookies\"   cookieName=\"ASP.NET_SessionId\"   timeout=\"20\"   allowCustomSqlDatabase=\"false\" regenerateExpiredSessionId=\"false\" </sessionState>",
      "<sessionState   ...   ...   cookieless=\"UseCookies\"    cookieName=\"ASP.NET_SessionId\" timeout=\"10\"    allowCustomSqlDatabase=\"false\"    regenerateExpiredSessionId=\"false\" </sessionState>",
      "<system.web>...<httpCookies httpOnlyCookies=\"true\" requireSSL=\"true\" topic=\"\" />...</system.web>",
      "<authentication mode=\"Forms\">  <forms loginUrl=\"member_login.aspx\"    cookieless=\"UseCookies\"requireSSL=\"true\"    path=\"/MyApplication\" /></authentication>",
      "<roleManager enabled=\"true\"  cacheRolesInCookie=\"true\"  cookieName=\".ASPROLES\"  cookieTimeout=\"30\"  cookiePath=\"/\"cookieRequireSSL=\"true\"  cookieSlidingExpiration=\"true\"cookieProtection=\"All\"  createPersistentCookie=\"false\"></roleManager>",
      "<authentication mode=\"Forms\">  <forms loginUrl=\"member_login.aspx\"    cookieless=\"UseCookies\"    requireSSL=\"true\"    path=\"/MyApplication\"slidingExpiration=\"false\" /></authentication>",
      "<roleManager enabled=\"true\"  cacheRolesInCookie=\"true\"  cookieName=\".ASPROLES\"  cookieTimeout=\"30\"  cookiePath=\"/\"  cookieRequireSSL=\"false\"cookieSlidingExpiration=\"false\"  cookieProtection=\"All\"  createPersistentCookie=\"false\"></roleManager>",
      "public void Login_Click(object sender, EventArgs e){   // Is the user valid?   if (Membership.ValidateUser(userName.Text, password.Text))   {        // Parameter two set to false indicates non-persistent cookie        FormsAuthentication.RedirectFromLoginPage(username.Text, false);   }   else    {          Status.Text = \"Invalid credentials. Please try again.\";   }}",
      "<roleManager enabled=\"true\"             cacheRolesInCookie=\"true\"             cookieName=\".ASPROLES\"             cookieTimeout=\"30\"             cookiePath=\"/\"             cookieRequireSSL=\"true\"             cookieSlidingExpiration=\"true\"             cookieProtection=\"All\"             createPersistentCookie=\"false\"></roleManager>",
      "<forms name=\"YourAppName\"       path=\"/FormsAuth\" ... />",
      "<system.web>  ...  <httpCookies httpOnlyCookies=\"false\" requireSSL=\"true\" topic=\"\" />  ...</system.web>",
      "<system.web>  ...  <httpCookies httpOnlyCookies=\"true\" requireSSL=\"true\" topic=\"\" />  ...</system.web>"
    ],
    "ul": [
      "If using Login controls: Set the DisplayRememberMe property of the Login control to false.\r\n        \r\n        \r\n          If you are not using the login controls, you can specify a non-persistent cookie when you call either the RedirectFromLoginPage or SetAuthCookie methods of the FormsAuthentication class having validated the user's credentials, as shown here:\r\n          public void Login_Click(object sender, EventArgs e){   // Is the user valid?   if (Membership.ValidateUser(userName.Text, password.Text))   {        // Parameter two set to false indicates non-persistent cookie        FormsAuthentication.RedirectFromLoginPage(username.Text, false);   }   else    {          Status.Text = \"Invalid credentials. Please try again.\";   }}"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<br />\r\n  <h1>What to Do</h1>\r\n  <p>Protect the confidentiality and integrity of session cookies.</p>\r\n  <h1>Why</h1>\r\n  <p>Session cookies are used by an application to identify the session associated with a particular user. Protecting session cookies can help prevent an attacker from hijacking the session and posing as a legitimate user.</p>\r\n  <h1>When</h1>\r\n  <p>If your application uses cookies to maintain a user's session state.</p>\r\n  <h1>How</h1>\r\n  <p>Use the following steps to secure session cookies:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Do not allow users to choose their own session identifiers</strong>: Generating and using your own values as session IDs may lead to session prediction attacks if the values can be forecasted or are based on guessable elements like the username. Instead, use the IDs that are generated by ASP.NET for its sessions. This minimizes the risk of an attacker hijacking another user's session because a strongly random ID is assigned to each session (and can be accessed via <strong>Session.SessionID</strong>).</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Do not reuse sessions</strong>: Always use clean sessions. This prevents old data (possibly from another user) from being disclosed and helps to protect the privacy and the integrity of user accounts. To make sure that sessionIDs are never recycled you must set the <strong>regenerateExpiredSessionId</strong> attribute of the <strong>sessionState</strong> configuration to <strong>false</strong>. The sessionState element can be set in the Machine.config or Web.config file, as shown below:</p>\r\n      <pre>&lt;sessionState<br />   ...<br />   ...<br />   cookieless=\"UseCookies\"<br />   cookieName=\"ASP.NET_SessionId\"<br />   timeout=\"20\"<br />   allowCustomSqlDatabase=\"false\" <br /><strong>regenerateExpiredSessionId=\"false\"<br /></strong> &lt;/sessionState&gt;</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Time-out sessions</strong>: Set an expiration time for sessions. This helps mitigate the threat of an HTTP Session Hijacking Attack by giving an attacker a smaller window of opportunity. Depending on your application an appropriate timeout can be anywhere from 10 to 30 minutes. The timeout value (in minutes) can be set via the <strong>timeout</strong> attribute in the sessionState configuration:</p>\r\n      <pre>&lt;sessionState<br />   ...<br />   ...<br />   cookieless=\"UseCookies\" <br />   cookieName=\"ASP.NET_SessionId\" <br /><strong>timeout=\"10\" <br /></strong>   allowCustomSqlDatabase=\"false\" <br />   regenerateExpiredSessionId=\"false\"<br /> &lt;/sessionState&gt;</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Allow users to terminate their sessions</strong>: Allowing users to invalidate their sessions reduces the risk of session hijacking. When a user decides to log-off from the web application, use the <strong>Session.Abandon()</strong> method in conjunction with setting the <strong>regenerateExpiredSessionId</strong> attribute to false (as mentioned in point #2). Once the <strong>Session.Abandon()</strong> method is called the current session is no longer valid and a new session can be started.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Hide cookies from scripts</strong>: Authentication cookies are only used on the server side to authenticate requests coming from a user; they're never used on the client. Preventing the client from accessing them via scripts means that if a script injection attack occurs, the attacker will not be able to steal a user's cookies. This can be done by setting the <strong>httpOnlyCookies</strong> attribute in the <strong>httpCookies</strong> configuration of web.config or machine.config file as follows:</p>\r\n      <pre>&lt;system.web&gt;<br />...<br /><strong>&lt;httpCookies httpOnlyCookies=\"true\" requireSSL=\"true\" topic=\"\" /&gt;</strong><br />...<br />&lt;/system.web&gt;</pre>\r\n      <p>This value can also be set programmatically by setting the <strong>HttpOnly</strong> property in the <strong>System.Net.Cookie</strong> class. This protection is only effective for users using Microsoft's Internet Explorer and can be circumvented in a variety of ways, but still adds a layer of defense.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure that cookies are sent over encrypted channels</strong>: Use SSL to protect the integrity and confidentiality of session cookies for both authentication and authorization in order to prevent users from assuming other user's identities, or from altering the roles they have in the system.</p>\r\n      <p>\r\n        <strong>For Authentication</strong>: When using forms authentication in ASP.NET, set the <strong>requireSSL</strong> attribute in the <strong>authentication</strong> configuration, which is stored in the web.config file for your web application. It may be set as follows:</p>\r\n      <pre>&lt;authentication mode=\"Forms\"&gt;<br />  &lt;forms loginUrl=\"member_login.aspx\"<br />    cookieless=\"UseCookies\"<br /><strong>requireSSL=\"true\"<br /></strong>    path=\"/MyApplication\" /&gt;<br />&lt;/authentication&gt;</pre>\r\n      <p>\r\n        <strong>For Authorization</strong>: If a user can alter their authorization cookie, they can potentially alter the roles they are allowed to take in the system. Reading another user's authorization cookie may allow a user to forge a working authorization cookie, again allowing them to gain more access to the system than they should have. Encrypt the authorization cookies by setting the <strong>cookieProtection</strong> attribute of the <strong>roleManager</strong> configuration in the web.config or machine.config file for your web application to <strong>All</strong>, and ensure it is only sent over secure connections by setting the <strong>cookieRequireSSL</strong> attribute. They may be set as follows:</p>\r\n      <pre>&lt;roleManager enabled=\"true\"<br />  cacheRolesInCookie=\"true\"<br />  cookieName=\".ASPROLES\"<br />  cookieTimeout=\"30\"<br />  cookiePath=\"/\"<br /><strong>cookieRequireSSL=\"true\"<br /></strong>  cookieSlidingExpiration=\"true\"<br /><strong>cookieProtection=\"All\"<br /></strong>  createPersistentCookie=\"false\"&gt;<br />&lt;/roleManager&gt;</pre>\r\n      <p>\r\n        <strong>Without SSL</strong>: If SSL can not be used for your application (sometimes true in mobile applications), then set the <strong>cookieSlidingExpiration</strong> attribute to <strong>false</strong> for both authentication and authorization cookies. When this attribute is set along with the <strong>timeout</strong> attribute (described above) it forces your user to re-authenticate after the set timeout period regardless of user activity (or inactivity). This can be set for authentication cookies as follows:</p>\r\n      <pre>&lt;authentication mode=\"Forms\"&gt;<br />  &lt;forms loginUrl=\"member_login.aspx\"<br />    cookieless=\"UseCookies\"<br />    requireSSL=\"true\"<br />    path=\"/MyApplication\"<br /><strong>slidingExpiration=\"false\"</strong> /&gt;<br />&lt;/authentication&gt;</pre>\r\n      <p>And it can be set for authorization cookies as follows:</p>\r\n      <pre>&lt;roleManager enabled=\"true\"<br />  cacheRolesInCookie=\"true\"<br />  cookieName=\".ASPROLES\"<br />  cookieTimeout=\"30\"<br />  cookiePath=\"/\"<br />  cookieRequireSSL=\"false\"<br /><strong>cookieSlidingExpiration=\"false\"<br /></strong>  cookieProtection=\"All\"<br />  createPersistentCookie=\"false\"&gt;<br />&lt;/roleManager&gt;</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Do not use persistent session cookies</strong>: Persistent session cookies will be stored in a user profile and can be compromised if an attacker gets physical access to the machine or if a user who accesses your application from public machines forgets to log out. It's acceptable to have a persistent user identification cookie, so that you can welcome a returning user to the site by name. However, be very careful that the identification cookie does not become a login cookie or allow access to any protected resources. To prevent unauthorized access, follow one of the following steps:</p>\r\n      <ul>\r\n        <li>\r\n          <p>If using Login controls: Set the <strong>DisplayRememberMe</strong> property of the <strong>Login</strong> control to <strong>false</strong>.</p>\r\n        </li>\r\n        <li>\r\n          <p>If you are not using the login controls, you can specify a non-persistent cookie when you call either the <strong>RedirectFromLoginPage</strong> or <strong>SetAuthCookie</strong> methods of the <strong>FormsAuthentication</strong> class having validated the user's credentials, as shown here:</p>\r\n          <pre>public void Login_Click(object sender, EventArgs e)<br />{<br />   // Is the user valid?<br />   if (Membership.ValidateUser(userName.Text, password.Text))<br />   {<br />        // Parameter two set to false indicates non-persistent cookie<br />        FormsAuthentication.RedirectFromLoginPage(username.Text, false);<br />   }<br />   else <br />   {  <br />        Status.Text = \"Invalid credentials. Please try again.\";<br />   }<br />}</pre>\r\n        </li>\r\n      </ul>\r\n      <p>For authorization cookies, set the createPersistentCookie attribute of the roleManager configuration. It may be set as follows:</p>\r\n      <pre>&lt;roleManager enabled=\"true\"<br />             cacheRolesInCookie=\"true\"<br />             cookieName=\".ASPROLES\"<br />             cookieTimeout=\"30\"<br />             cookiePath=\"/\"<br />             cookieRequireSSL=\"true\"<br />             cookieSlidingExpiration=\"true\"<br />             cookieProtection=\"All\"<br />             createPersistentCookie=\"false\"&gt;&lt;/roleManager&gt;</pre>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Use unique cookie names and paths</strong>: By ensuring unique names, you prevent possible problems that can occur when hosting multiple applications on the same server. For example, if you do not use distinct names, it is possible for a user who is authenticated in one application to make a request to another application without being redirected to that application's login page.</p>\r\n      <p>Set a unique value for the <strong>name</strong> and <strong>path</strong> attributes on the &lt;<strong>forms</strong>&gt; element at the following locating in your web.config file.</p>\r\n      <pre>&lt;forms name=\"YourAppName\"<br />       path=\"/FormsAuth\" ... /&gt;</pre>\r\n    </li>\r\n  </ol>\r\n  <h1>Problem Example</h1>\r\n  <p>A web application uses SSL to provide a secure connection for user data, generates strong, new session IDs for each user, and times out and terminates sessions appropriately. However, it is susceptible to cross-site scripting flaws, and despite having a user base that mostly uses IE, does not set <strong>httpOnlyCookies</strong> on its cookies. The web.config file for this application looks like this:</p>\r\n  <pre>&lt;system.web&gt;<br />  ...<br />  &lt;httpCookies httpOnlyCookies=\"<strong>false</strong>\" requireSSL=\"true\" topic=\"\" /&gt;<br />  ...<br />&lt;/system.web&gt;</pre>\r\n  <p>When the Cross Site Scripting Attack is discovered by an attacker, she uses it to steal user session cookies via a malicious script and is then able to impersonate those users.</p>\r\n  <h1>Solution Example</h1>\r\n  <p>The designers of the web application learn their lesson and in addition to fixing and preventing further Cross-Site Scripting vulnerabilities, they also decide to hide their authentication cookies from scripts as an added layer of defense. They do this by setting the <strong>httpOnlyCookies</strong> attribute as follows:</p>\r\n  <pre>&lt;system.web&gt;<br />  ...<br />  &lt;httpCookies httpOnlyCookies=\"<strong>true</strong>\" requireSSL=\"true\" topic=\"\" /&gt;<br />  ...<br />&lt;/system.web&gt;</pre>\r\n  <p>This prevents any scripts (including most malicious ones) in the client browser from accessing the authentication cookie, and the users of the system are now safer.</p>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}