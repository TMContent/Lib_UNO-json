{
  "id": "00000000-0000-0000-0000-00000015b09d",
  "checksum": "f0775b6cf6945d167220ecdd5706d769679ef750",
  "words": {
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "title"
    ],
    "java": [
      "ul",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "what": [
      "h2"
    ],
    "check": [
      "h2",
      "h2",
      "ol",
      "li"
    ],
    "for": [
      "h2",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "make": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "sure": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "that": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "processbuilder": [
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "li",
      "strong",
      "em",
      "em",
      "li",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "li",
      "em",
      "em",
      "ul",
      "li",
      "em"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "used": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "title"
    ],
    "execute": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "li",
      "title"
    ],
    "external": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "title"
    ],
    "commands": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "title"
    ],
    "instead": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "runtimeexec().": [
      "p"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "user": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "data": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "passed": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "processes": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li"
    ],
    "validated": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "runtimeexec()": [
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "why": [
      "h2"
    ],
    "command": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "injection": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "vulnerabilities": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "typically": [
      "p"
    ],
    "occur": [
      "p"
    ],
    "when": [
      "p"
    ],
    "spawn": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "usually": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "li",
      "li"
    ],
    "developers": [
      "p"
    ],
    "don't": [
      "p",
      "ol",
      "li",
      "strong"
    ],
    "want": [
      "p"
    ],
    "users": [
      "p"
    ],
    "be": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "able": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "choose": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "which": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "are": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "title"
    ],
    "executed": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "most": [
      "p"
    ],
    "effective": [
      "p"
    ],
    "way": [
      "p"
    ],
    "enforce": [
      "p"
    ],
    "process": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "use": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "parameterized": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "title"
    ],
    "apis": [
      "p",
      "ol",
      "li",
      "strong",
      "title"
    ],
    "call": [
      "p",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "this": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "doesn't": [
      "p"
    ],
    "work": [
      "p"
    ],
    "being": [
      "p",
      "ol",
      "li"
    ],
    "called": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "another": [
      "p"
    ],
    "based": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "on": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "parameters": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "example": [
      "p",
      "ol",
      "li"
    ],
    "if": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "cmdexe": [
      "p",
      "em",
      "ol",
      "li",
      "em"
    ],
    "or": [
      "p",
      "ol",
      "li"
    ],
    "bash": [
      "p",
      "em",
      "ol",
      "li",
      "em"
    ],
    "as": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "an": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "attacker": [
      "p"
    ],
    "can": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "pass": [
      "p"
    ],
    "any": [
      "p",
      "ol",
      "li"
    ],
    "-": [
      "p"
    ],
    "a": [
      "p",
      "ol",
      "li"
    ],
    "vulnerability": [
      "p",
      "ol",
      "li"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "find": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li"
    ],
    "executes": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "search": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "application": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "strong"
    ],
    "following": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "keywords": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "getruntime": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "exec": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "start": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "avoid": [
      "ol",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "strong",
      "li"
    ],
    "using": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "li",
      "strong"
    ],
    "review": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "case": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "where": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "absolutely": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "necessary": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "very": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "dangerous": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "so": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "calling": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "should": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "avoided": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "much": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "possible": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "reduce": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "risk": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "such": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "replace": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "calls": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "with": [
      "ol",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "does": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "same": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "thing": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "not": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "arguments": [
      "ol",
      "li"
    ],
    "via": [
      "ol",
      "li"
    ],
    "first": [
      "ol",
      "li"
    ],
    "positive": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "validation": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "routines": [
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "let": [
      "ol",
      "li",
      "strong"
    ],
    "go": [
      "ol",
      "li"
    ],
    "without": [
      "ol",
      "li"
    ],
    "saying": [
      "ol",
      "li"
    ],
    "but": [
      "ol",
      "li"
    ],
    "might": [
      "ol",
      "li"
    ],
    "option": [
      "ol",
      "li"
    ],
    "administrative": [
      "ol",
      "li"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "then": [
      "ol",
      "li"
    ],
    "functionality": [
      "ol",
      "li"
    ],
    "protected": [
      "ol",
      "li"
    ],
    "access": [
      "ol",
      "li"
    ],
    "controls": [
      "ol",
      "li"
    ],
    "ideally": [
      "ol",
      "li"
    ],
    "exposed": [
      "ol",
      "li"
    ],
    "internet": [
      "ol",
      "li"
    ],
    "allowing": [
      "ol",
      "li"
    ],
    "essentially": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "definition": [
      "ol",
      "li"
    ],
    "api": [
      "ol",
      "li"
    ],
    "in": [
      "ol",
      "li"
    ],
    "uses": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "other": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "them": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "passing": [
      "ol",
      "li"
    ],
    "negates": [
      "ol",
      "li"
    ],
    "parameterization": [
      "ol",
      "li"
    ],
    "because": [
      "ol",
      "li"
    ],
    "shell": [
      "ol",
      "li"
    ],
    "interpreters": [
      "ol",
      "li"
    ],
    "validate": [
      "ol",
      "li",
      "strong"
    ],
    "input": [
      "ol",
      "li"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//docs.oracle.com/javase/1.5.0/docs/api/java/lang/processbuilder.html": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Additional Resources"
    ],
    "ul": [
      "Java",
      "For more information about ProcessBuilder, see http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html"
    ],
    "li": [
      "Java",
      "Find all code that executes external commands. Search the application code for the following keywords to find all code that executes external commands: getRuntime, exec, start, ProcessBuilder.",
      "Avoid using external processes. Review each case where an external process is called to make sure it is absolutely necessary. Command injection vulnerabilities are very dangerous, so calling external processes should be avoided as much as possible to reduce the risk of such vulnerabilities. Replace code that calls external processes with Java code that does the same thing, if possible.",
      "Verify that ProcessBuilder is used to execute external commands. Check all code that executes external processes to make sure that ProcessBuilder is used to execute external processes. Make sure that Runtime.exec() is not used to execute external commands.",
      "Verify that user data passed to external commands is validated. Verify that any user data that is passed to external processes as arguments via ProcessBuilder is first validated using positive validation routines.",
      "Find all code that executes external commands. Search the application code for the following keywords to find all code that executes external commands: getRuntime, exec, start, ProcessBuilder.",
      "Avoid using external processes. Review each case where an external process is called to make sure it is absolutely necessary. Command injection vulnerabilities are very dangerous, so calling external processes should be avoided as much as possible to reduce the risk of such vulnerabilities. Replace code that calls external processes with Java code that does the same thing, if possible.",
      "Don't let the user choose the external application. This should go without saying, but the user should not be able to choose the external process which is being executed. If this is absolutely necessary, it might be an option for an administrative user, and then this functionality should be protected with access controls and ideally not exposed to the Internet. Allowing the user to choose which external command to execute is essentially the definition of a command injection vulnerability.",
      "Use parameterized APIs. ProcessBuilder is the parameterized API for calling external commands in Java. Replace all code that uses Runtime.exec() with code that uses ProcessBuilder. Avoid calling processes that can spawn other processes based on parameters passed to them. For example, calling cmd.exe or bash and passing parameters to them essentially negates the use of parameterization, because shell interpreters can spawn other processes based on parameters passed to them.",
      "Validate user data passed to external commands. Use positive input validation on data passed to external commands.",
      "For more information about ProcessBuilder, see http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html"
    ],
    "p": [
      "Make sure that ProcessBuilder is used to execute external commands instead of Runtime.exec(). Verify that user data passed to external processes is validated.",
      "Command injection vulnerabilities typically occur when user data is used to spawn external processes. Usually, the developers don't want the users to be able to choose which external commands are executed. The most effective way to enforce which external process is executed is to use parameterized APIs to call it. This doesn't work is the external process, which is being called, is able to spawn another process based on parameters passed to it. For example, if cmd.exe or bash is used as an external process, an attacker can pass data to it to call any command - this is a command injection vulnerability.",
      "To make sure that ProcessBuilder is used to execute external commands:",
      "To use ProcessBuilder to execute external commands:"
    ],
    "em": [
      "ProcessBuilder",
      "Runtime.exec()",
      "cmd.exe",
      "bash",
      "ProcessBuilder",
      "getRuntime",
      "exec",
      "start",
      "ProcessBuilder",
      "ProcessBuilder",
      "ProcessBuilder",
      "Runtime.exec()",
      "ProcessBuilder",
      "ProcessBuilder",
      "getRuntime",
      "exec",
      "start",
      "ProcessBuilder",
      "ProcessBuilder",
      "Runtime.exec()",
      "ProcessBuilder",
      "cmd.exe",
      "bash",
      "ProcessBuilder"
    ],
    "ol": [
      "Find all code that executes external commands. Search the application code for the following keywords to find all code that executes external commands: getRuntime, exec, start, ProcessBuilder.\n Avoid using external processes. Review each case where an external process is called to make sure it is absolutely necessary. Command injection vulnerabilities are very dangerous, so calling external processes should be avoided as much as possible to reduce the risk of such vulnerabilities. Replace code that calls external processes with Java code that does the same thing, if possible.\n Verify that ProcessBuilder is used to execute external commands. Check all code that executes external processes to make sure that ProcessBuilder is used to execute external processes. Make sure that Runtime.exec() is not used to execute external commands.\n Verify that user data passed to external commands is validated. Verify that any user data that is passed to external processes as arguments via ProcessBuilder is first validated using positive validation routines.",
      "Find all code that executes external commands. Search the application code for the following keywords to find all code that executes external commands: getRuntime, exec, start, ProcessBuilder.\n Avoid using external processes. Review each case where an external process is called to make sure it is absolutely necessary. Command injection vulnerabilities are very dangerous, so calling external processes should be avoided as much as possible to reduce the risk of such vulnerabilities. Replace code that calls external processes with Java code that does the same thing, if possible.\n Don't let the user choose the external application. This should go without saying, but the user should not be able to choose the external process which is being executed. If this is absolutely necessary, it might be an option for an administrative user, and then this functionality should be protected with access controls and ideally not exposed to the Internet. Allowing the user to choose which external command to execute is essentially the definition of a command injection vulnerability.\n Use parameterized APIs. ProcessBuilder is the parameterized API for calling external commands in Java. Replace all code that uses Runtime.exec() with code that uses ProcessBuilder. Avoid calling processes that can spawn other processes based on parameters passed to them. For example, calling cmd.exe or bash and passing parameters to them essentially negates the use of parameterization, because shell interpreters can spawn other processes based on parameters passed to them. \n Validate user data passed to external commands. Use positive input validation on data passed to external commands."
    ],
    "strong": [
      "Find all code that executes external commands.",
      "Avoid using external processes.",
      "Verify that ProcessBuilder is used to execute external commands.",
      "Verify that user data passed to external commands is validated.",
      "Find all code that executes external commands.",
      "Avoid using external processes.",
      "Don't let the user choose the external application.",
      "Use parameterized APIs.",
      "Validate user data passed to external commands."
    ],
    "a": [
      "http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html"
    ]
  },
  "links": [
    {
      "href": "http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html",
      "text": "http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> Java</li>\n</ul><h2>What to Check For</h2><p>Make sure that <em>ProcessBuilder</em> is used to execute external commands instead of <em>Runtime.exec()</em>. Verify that user data passed to external processes is validated.\n</p><h2>Why</h2><p>Command injection vulnerabilities typically occur when user data is used to spawn external processes. Usually, the developers don't want the users to be able to choose which external commands are executed. The most effective way to enforce which external process is executed is to use parameterized APIs to call it. This doesn't work is the external process, which is being called, is able to spawn another process based on parameters passed to it. For example, if <em>cmd.exe</em> or <em>bash</em> is used as an external process, an attacker can pass data to it to call any command - this is a command injection vulnerability.\n</p><h2>How to Check</h2><p>To make sure that <em>ProcessBuilder</em> is used to execute external commands:\n</p><ol>\n<li> <strong>Find all code that executes external commands.</strong> Search the application code for the following keywords to find all code that executes external commands: <em>getRuntime</em>, <em>exec</em>, <em>start</em>, <em>ProcessBuilder</em>.</li>\n<li> <strong>Avoid using external processes.</strong> Review each case where an external process is called to make sure it is absolutely necessary. Command injection vulnerabilities are very dangerous, so calling external processes should be avoided as much as possible to reduce the risk of such vulnerabilities. Replace code that calls external processes with Java code that does the same thing, if possible.</li>\n<li> <strong>Verify that <em>ProcessBuilder</em> is used to execute external commands.</strong> Check all code that executes external processes to make sure that <em>ProcessBuilder</em> is used to execute external processes. Make sure that <em>Runtime.exec()</em> is not used to execute external commands.</li>\n<li> <strong>Verify that user data passed to external commands is validated.</strong> Verify that any user data that is passed to external processes as arguments via <em>ProcessBuilder</em> is first validated using positive validation routines.</li>\n</ol><h2>How to Fix</h2><p>To use <em>ProcessBuilder</em> to execute external commands:\n</p><ol>\n<li> <strong>Find all code that executes external commands.</strong> Search the application code for the following keywords to find all code that executes external commands: <em>getRuntime</em>, <em>exec</em>, <em>start</em>, <em>ProcessBuilder</em>.</li>\n<li> <strong>Avoid using external processes.</strong> Review each case where an external process is called to make sure it is absolutely necessary. Command injection vulnerabilities are very dangerous, so calling external processes should be avoided as much as possible to reduce the risk of such vulnerabilities. Replace code that calls external processes with Java code that does the same thing, if possible.</li>\n<li> <strong>Don't let the user choose the external application.</strong> This should go without saying, but the user should not be able to choose the external process which is being executed. If this is absolutely necessary, it might be an option for an administrative user, and then this functionality should be protected with access controls and ideally not exposed to the Internet. Allowing the user to choose which external command to execute is essentially the definition of a command injection vulnerability.</li>\n<li> <strong>Use parameterized APIs.</strong> <em>ProcessBuilder</em> is the parameterized API for calling external commands in Java. Replace all code that uses <em>Runtime.exec()</em> with code that uses <em>ProcessBuilder</em>. Avoid calling processes that can spawn other processes based on parameters passed to them. For example, calling <em>cmd.exe</em> or <em>bash</em> and passing parameters to them essentially negates the use of parameterization, because shell interpreters can spawn other processes based on parameters passed to them. </li>\n<li> <strong>Validate user data passed to external commands.</strong> Use positive input validation on data passed to external commands. </li>\n</ol><h2>Additional Resources</h2><ul><li> For more information about <em>ProcessBuilder</em>, see <a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html\">http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html</a></li></ul>"
}