{
  "id": "6f9fefbf-ecdd-465a-a09c-0769166a3ce0",
  "checksum": "d0500c03f25e274e6c8f7637dd1575b73d8dc9b5",
  "words": {
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "li",
      "p"
    ],
    "c++windows": [
      "ul"
    ],
    "c++": [
      "li"
    ],
    "windows": [
      "li"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1",
      "p"
    ],
    "for": [
      "h1",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "processes": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "are": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "created": [
      "p",
      "p",
      "title"
    ],
    "safely": [
      "p",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "improperly": [
      "p"
    ],
    "creating": [
      "p"
    ],
    "may": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "allow": [
      "p"
    ],
    "an": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "attacker": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "execute": [
      "p"
    ],
    "arbitrary": [
      "p"
    ],
    "code": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p"
    ],
    "if": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "creates": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "search": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "functions": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "create": [
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "createprocess),": [
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "createprocessasuser),": [
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "createprocesswithlogon),": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "shellexecute),": [
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em"
    ],
    "shellexecuteex),": [
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em"
    ],
    "exec),": [
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "em"
    ],
    "spawn).": [
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "shell": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "em",
      "ol",
      "li",
      "p"
    ],
    "crt": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "apis": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong"
    ],
    "not": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "review": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "unless": [
      "ol",
      "li",
      "p"
    ],
    "absolutely": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "createprocess)": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "em",
      "em",
      "li",
      "li",
      "p",
      "p",
      "em",
      "em",
      "ul",
      "li",
      "a",
      "title"
    ],
    "is": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "with": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "fully-qualified": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "names": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "either": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "lpapplicationname": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "lpcommandline": [
      "ol",
      "li",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "in": [
      "ol",
      "li",
      "p"
    ],
    "calls": [
      "ol",
      "li",
      "p"
    ],
    "createprocesswithlogon).": [
      "ol",
      "li",
      "p"
    ],
    "spawn)": [
      "em",
      "em",
      "em"
    ],
    "createprocesswithlogon)": [
      "em"
    ],
    "fix": [
      "h1"
    ],
    "perform": [
      "p"
    ],
    "actions": [
      "p"
    ],
    "securely": [
      "p",
      "ul",
      "li",
      "a"
    ],
    "replace": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "base": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "li",
      "p"
    ],
    "wrap": [
      "ol",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "li",
      "p"
    ],
    "some": [
      "ol",
      "li",
      "p"
    ],
    "point": [
      "ol",
      "li",
      "p"
    ],
    "while": [
      "ol",
      "li",
      "p"
    ],
    "adding": [
      "ol",
      "li",
      "p"
    ],
    "additional": [
      "ol",
      "li",
      "p"
    ],
    "threats": [
      "ol",
      "li",
      "p"
    ],
    "as": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "often": [
      "ol",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "li",
      "p"
    ],
    "fully": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "qualified": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "paths": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "createprocess).": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "neither": [
      "ol",
      "li",
      "p"
    ],
    "of": [
      "ol",
      "li",
      "p"
    ],
    "them": [
      "ol",
      "li",
      "p"
    ],
    "place": [
      "ol",
      "li",
      "p"
    ],
    "executable": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p"
    ],
    "name": [
      "ol",
      "li",
      "p"
    ],
    "one": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "li",
      "p"
    ],
    "launched": [
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "li",
      "p"
    ],
    "current": [
      "ol",
      "li",
      "p"
    ],
    "folder": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "li",
      "p"
    ],
    "run": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p"
    ],
    "instead": [
      "ol",
      "li",
      "p"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Related Items"
    ],
    "ul": [
      "C++Windows",
      "Create Processes Securely with CreateProcess()"
    ],
    "li": [
      "C++",
      "Windows",
      "Identify code the creates processes. Search code for the following functions that may be used to create processes: CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Verify that shell or CRT APIs are not used. Review code to make sure the following APIs are not used unless absolutely necessary: ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Verify that CreateProcess() is used with fully-qualified names. Review code to make sure that either lpApplicationName or lpCommandLine is fully-qualified in calls to CreateProcess(), CreateProcessAsUser(), or CreateProcessWithLogon().",
      "Identify code the creates processes. Search code for the following functions that may be used to create processes: CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Replace shell and CRT APIs with base APIs. Shell APIs and CRT functions all wrap CreateProcess() at some point while adding additional threats. Use CreateProcess() as often as possible. Shell and CRT APIs are: ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Use fully qualified paths with CreateProcess(). Either lpApplicationName or lpCommandLine should be fully qualified. If neither of them are fully-qualified, an attacker may place an executable with the same name as the one being launched by CreateProcess() into the current folder and CreateProcess() will run it instead.",
      "Create Processes Securely with CreateProcess()"
    ],
    "p": [
      "Verify that processes are created safely.",
      "Improperly creating processes may allow an attacker to execute arbitrary code.",
      "Use the following steps to check if processes are created safely:",
      "Identify code the creates processes. Search code for the following functions that may be used to create processes: CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Verify that shell or CRT APIs are not used. Review code to make sure the following APIs are not used unless absolutely necessary: ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Verify that CreateProcess() is used with fully-qualified names. Review code to make sure that either lpApplicationName or lpCommandLine is fully-qualified in calls to CreateProcess(), CreateProcessAsUser(), or CreateProcessWithLogon().",
      "Perform the following actions to create processes securely:",
      "Identify code the creates processes. Search code for the following functions that may be used to create processes: CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Replace shell and CRT APIs with base APIs. Shell APIs and CRT functions all wrap CreateProcess() at some point while adding additional threats. Use CreateProcess() as often as possible. Shell and CRT APIs are: ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "Use fully qualified paths with CreateProcess(). Either lpApplicationName or lpCommandLine should be fully qualified. If neither of them are fully-qualified, an attacker may place an executable with the same name as the one being launched by CreateProcess() into the current folder and CreateProcess() will run it instead."
    ],
    "ol": [
      "Identify code the creates processes. Search code for the following functions that may be used to create processes: CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().\r\n      \r\n        \r\n          Verify that shell or CRT APIs are not used. Review code to make sure the following APIs are not used unless absolutely necessary: ShellExecute(), ShellExecuteEx(), exec(), spawn().\r\n        \r\n          \r\n            Verify that CreateProcess() is used with fully-qualified names. Review code to make sure that either lpApplicationName or lpCommandLine is fully-qualified in calls to CreateProcess(), CreateProcessAsUser(), or CreateProcessWithLogon().",
      "Identify code the creates processes. Search code for the following functions that may be used to create processes: CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().\r\n      \r\n        \r\n          Replace shell and CRT APIs with base APIs. Shell APIs and CRT functions all wrap CreateProcess() at some point while adding additional threats. Use CreateProcess() as often as possible. Shell and CRT APIs are: ShellExecute(), ShellExecuteEx(), exec(), spawn().\r\n        \r\n          \r\n            Use fully qualified paths with CreateProcess(). Either lpApplicationName or lpCommandLine should be fully qualified. If neither of them are fully-qualified, an attacker may place an executable with the same name as the one being launched by CreateProcess() into the current folder and CreateProcess() will run it instead."
    ],
    "strong": [
      "Identify code the creates processes.",
      "Verify that shell or CRT APIs are not used.",
      "Verify that CreateProcess() is used with fully-qualified names.",
      "Identify code the creates processes.",
      "Replace shell and CRT APIs with base APIs.",
      "Use fully qualified paths with CreateProcess()."
    ],
    "em": [
      "CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().",
      "ShellExecute(), ShellExecuteEx(), exec(), spawn()",
      "lpApplicationName",
      "lpCommandLine",
      "CreateProcess(), CreateProcessAsUser(), or CreateProcessWithLogon()",
      "CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn()",
      "CreateProcess()",
      "CreateProcess()",
      "ShellExecute(), ShellExecuteEx(), exec(), spawn()",
      "lpApplicationName",
      "lpCommandLine",
      "CreateProcess()",
      "CreateProcess()"
    ],
    "a": [
      "Create Processes Securely with CreateProcess()"
    ],
    "br": [
      ""
    ]
  },
  "links": [
    {
      "href": "/article/2314618a-47ce-4ff0-9641-365fb3e262e4",
      "text": "Create Processes Securely with CreateProcess()"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>C&#43;&#43;<li>Windows</li></li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that processes are created safely.</p>\r\n  <h1>Why</h1>\r\n  <p>Improperly creating processes may allow an attacker to execute arbitrary code.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to check if processes are created safely:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify code the creates processes.</strong> Search code for the following functions that may be used to create processes: <em>CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn().</em></p>\r\n      <li>\r\n        <p>\r\n          <strong>Verify that shell or CRT APIs are not used.</strong> Review code to make sure the following APIs are not used unless absolutely necessary:<em> ShellExecute(), ShellExecuteEx(), exec(), spawn()</em>.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Verify that CreateProcess() is used with fully-qualified names.</strong> Review code to make sure that either <em>lpApplicationName</em> or <em>lpCommandLine</em> is fully-qualified in calls to <em>CreateProcess(), CreateProcessAsUser(), or CreateProcessWithLogon()</em>.</p>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p>Perform the following actions to create processes securely:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify code the creates processes.</strong> Search code for the following functions that may be used to create processes: <em>CreateProcess(), CreateProcessAsUser(), CreateProcessWithLogon(), ShellExecute(), ShellExecuteEx(), exec(), spawn()</em>.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Replace shell and CRT APIs with base APIs.</strong> Shell APIs and CRT functions all wrap <em>CreateProcess()</em> at some point while adding additional threats. Use <em>CreateProcess()</em> as often as possible. Shell and CRT APIs are: <em>ShellExecute(), ShellExecuteEx(), exec(), spawn()</em>.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Use fully qualified paths with CreateProcess().</strong> Either <em>lpApplicationName</em> or <em>lpCommandLine</em> should be fully qualified. If neither of them are fully-qualified, an attacker may place an executable with the same name as the one being launched by <em>CreateProcess()</em> into the current folder and <em>CreateProcess()</em> will run it instead.</p>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Related Items</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/2314618a-47ce-4ff0-9641-365fb3e262e4\">Create Processes Securely with CreateProcess()<br /></a>\r\n    </li>\r\n  </ul>"
}