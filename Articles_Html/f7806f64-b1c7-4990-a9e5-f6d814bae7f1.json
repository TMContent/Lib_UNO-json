{
  "id": "f7806f64-b1c7-4990-a9e5-f6d814bae7f1",
  "checksum": "84c820884d78e32b9df09b72f73844485214ed6c",
  "words": {
    "1": [
      "ul",
      "li",
      "a"
    ],
    "2": [
      "ul",
      "li",
      "a"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "span",
      "p",
      "span",
      "p",
      "span",
      "span",
      "span",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "java": [
      "ul",
      "li",
      "h1",
      "h1",
      "h1"
    ],
    "web-based": [
      "ul",
      "li"
    ],
    "applications": [
      "ul",
      "li",
      "span",
      "p"
    ],
    "summary": [
      "h1"
    ],
    "use": [
      "span",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "the": [
      "span",
      "p",
      "span",
      "span",
      "p",
      "p",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "span",
      "span",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "span",
      "ul",
      "li"
    ],
    "esapi": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "p",
      "span",
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "library": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "p"
    ],
    "encode": [
      "span",
      "p",
      "span",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "or": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "p"
    ],
    "decode": [
      "span",
      "p"
    ],
    "data": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "span",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1"
    ],
    "for": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "p",
      "span",
      "ul",
      "li",
      "li"
    ],
    "usage": [
      "span",
      "p"
    ],
    "in": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "a",
      "a",
      "li",
      "li",
      "a",
      "a",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "a",
      "a",
      "li",
      "li",
      "a",
      "a",
      "ul",
      "li",
      "a"
    ],
    "a": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "span",
      "p",
      "p",
      "span",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "given": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "span",
      "p",
      "p"
    ],
    "context": [
      "span",
      "p",
      "span",
      "span",
      "p",
      "p",
      "span",
      "span",
      "p",
      "p",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p"
    ],
    "objectives": [
      "h1"
    ],
    "provides": [
      "span",
      "p",
      "span",
      "p"
    ],
    "an": [
      "span",
      "p",
      "span",
      "p"
    ],
    "encoder": [
      "span",
      "p",
      "span",
      "span",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "control": [
      "span",
      "p",
      "span",
      "p"
    ],
    "that": [
      "span",
      "p",
      "span",
      "p"
    ],
    "prepares": [
      "span",
      "p"
    ],
    "be": [
      "span",
      "p",
      "span",
      "span",
      "p",
      "p"
    ],
    "used": [
      "span",
      "p"
    ],
    "output": [
      "span",
      "span",
      "p",
      "p",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "depending": [
      "span",
      "p"
    ],
    "on": [
      "span",
      "p"
    ],
    "this": [
      "span",
      "p",
      "span",
      "p",
      "span",
      "p"
    ],
    "can": [
      "span",
      "p"
    ],
    "prevent": [
      "span",
      "p"
    ],
    "xss": [
      "span",
      "p"
    ],
    "other": [
      "span",
      "p"
    ],
    "types": [
      "span",
      "p"
    ],
    "of": [
      "span",
      "p",
      "span",
      "p"
    ],
    "injection": [
      "span",
      "p"
    ],
    "xml,": [
      "span",
      "p"
    ],
    "xpath": [
      "span",
      "p"
    ],
    "os": [
      "span",
      "p"
    ],
    "etc).": [
      "span",
      "p"
    ],
    "scenarios": [
      "h1"
    ],
    "constantly": [
      "span",
      "p"
    ],
    "send": [
      "span",
      "p"
    ],
    "location": [
      "span",
      "p"
    ],
    "such": [
      "span",
      "p"
    ],
    "as": [
      "span",
      "p"
    ],
    "database": [
      "span",
      "p"
    ],
    "flat": [
      "span",
      "p"
    ],
    "file": [
      "span",
      "p"
    ],
    "web": [
      "span",
      "p"
    ],
    "page": [
      "span",
      "p"
    ],
    "etc": [
      "span",
      "p"
    ],
    "whenever": [
      "span",
      "p"
    ],
    "occurs": [
      "span",
      "p"
    ],
    "care": [
      "span",
      "p"
    ],
    "must": [
      "span",
      "p"
    ],
    "taken": [
      "span",
      "p"
    ],
    "ensure": [
      "span",
      "span",
      "p",
      "p"
    ],
    "special": [
      "span",
      "p"
    ],
    "characters": [
      "span",
      "p"
    ],
    "are": [
      "span",
      "span",
      "span",
      "p",
      "p",
      "p"
    ],
    "specific": [
      "span",
      "p"
    ],
    "either": [
      "span",
      "p"
    ],
    "filtered": [
      "span",
      "p"
    ],
    "escaped": [
      "span",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "proper": [
      "span",
      "p"
    ],
    "functioning": [
      "span",
      "p"
    ],
    "manipulate": [
      "span",
      "p"
    ],
    "into": [
      "span",
      "p"
    ],
    "various": [
      "span",
      "span",
      "p",
      "p"
    ],
    "examples": [
      "span",
      "p",
      "h1"
    ],
    "below": [
      "span",
      "p"
    ],
    "using": [
      "span",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "safely": [
      "span",
      "p"
    ],
    "escape": [
      "span",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "contexts": [
      "span",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "solution": [
      "h1"
    ],
    "example": [
      "h1"
    ],
    "sending": [
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p"
    ],
    "webpage": [
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p"
    ],
    "html": [
      "span",
      "span",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "div><%=": [
      "span",
      "pre"
    ],
    "esapiencoder().encodeforhtml(mystring)": [
      "span",
      "pre"
    ],
    "%</div>": [
      "span",
      "pre"
    ],
    "attribute": [
      "span",
      "p"
    ],
    "input": [
      "span",
      "pre",
      "ul",
      "li",
      "a"
    ],
    "type=\"text\"": [
      "span",
      "pre"
    ],
    "value=\"%=": [
      "span",
      "pre"
    ],
    "esapiencoder().encodeforhtmlattribute(mystring)": [
      "span",
      "pre"
    ],
    "%\"": [
      "span",
      "span",
      "pre",
      "pre"
    ],
    "/": [
      "span",
      "pre"
    ],
    "javascript": [
      "span",
      "p"
    ],
    "var": [
      "span",
      "pre"
    ],
    "myvar": [
      "span",
      "pre"
    ],
    "=": [
      "span",
      "span",
      "pre",
      "pre"
    ],
    "'%=": [
      "span",
      "pre"
    ],
    "esapiencoder().encodeforjavascript(mystring)": [
      "span",
      "pre"
    ],
    "%';": [
      "span",
      "pre"
    ],
    "url": [
      "span",
      "span",
      "p",
      "p"
    ],
    "note:": [
      "span",
      "p"
    ],
    "is": [
      "span",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "only": [
      "span",
      "p"
    ],
    "parameter": [
      "span",
      "p"
    ],
    "values": [
      "span",
      "p"
    ],
    "not": [
      "span",
      "p"
    ],
    "entire": [
      "span",
      "p"
    ],
    "url:": [
      "span",
      "p"
    ],
    "href=\"/myapp/mypagejsp?a=123&b=<%=": [
      "span",
      "pre"
    ],
    "esapiencoder().encodeforurl(mystring)": [
      "span",
      "pre"
    ],
    "/\">click": [
      "span",
      "pre"
    ],
    "me/a>": [
      "span",
      "pre"
    ],
    "base64": [
      "span",
      "p"
    ],
    "format": [
      "span",
      "p"
    ],
    "string": [
      "span",
      "pre"
    ],
    "base64data": [
      "span",
      "pre"
    ],
    "esapiencoder().encodeforbase64(mystr);": [
      "span",
      "pre"
    ],
    "see": [
      "h1",
      "span",
      "span",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "also": [
      "h1"
    ],
    "more": [
      "span",
      "span",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "information": [
      "span",
      "span",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "about": [
      "span",
      "span",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "cross-site": [
      "span",
      "ul",
      "li"
    ],
    "scripting": [
      "span",
      "ul",
      "li"
    ],
    "prevention": [
      "span",
      "ul",
      "li"
    ],
    "please": [
      "span",
      "span",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "https//www.owasp.org/index.php/xss_%28cross_site_scripting%29_prevention_cheat_sheetfor": [
      "span",
      "ul"
    ],
    "owasp": [
      "span",
      "ul",
      "li"
    ],
    "project": [
      "span",
      "ul",
      "li"
    ],
    "https//www.owasp.org/index.php/category:owasp_enterprise_security_api": [
      "span",
      "ul",
      "li",
      "a"
    ],
    "https//www.owasp.org/index.php/xss_%28cross_site_scripting%29_prevention_cheat_sheet": [
      "li",
      "a"
    ],
    "sanitization": [
      "h1",
      "h1",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "all": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "untrusted": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "jsf": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "jsp": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h1"
    ],
    "encoded": [
      "ul",
      "li",
      "a"
    ],
    "code": [
      "h1"
    ],
    "houtputtext": [
      "ul",
      "li",
      "a"
    ],
    "echoed": [
      "ul",
      "li",
      "a"
    ],
    "encoding": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "springmvc": [
      "ul",
      "li",
      "a"
    ],
    "struts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Objectives",
      "Scenarios",
      "Solution Example",
      "See Also",
      "Java Data Sanitization Guidelines",
      "Java Data Sanitization Checklists",
      "Java Data Sanitization Code Examples"
    ],
    "ul": [
      "Java web-based applications.",
      "For more information about Cross-Site Scripting prevention, please see https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_SheetFor more information about the OWASP ESAPI project, please see https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API",
      "Encode All Output Data\n      \n        Escape All Untrusted Data in HTML Contexts in JSF\n        \n          Escape All Untrusted Data in HTML Contexts in JSP",
      "All Output Data Is Encoded\n      \n        All Untrusted Data in HTML Contexts Is Escaped in JSF\n        \n          All Untrusted Data in HTML Contexts is Escaped in JSP",
      "Use h:outputText to Encode Echoed Input in JSF\n    \n    \n      Output Encoding Using JSF\n    \n    \n      Output Encoding Using SpringMVC\n    \n    \n      Output Encoding Using Struts 1\n    \n    \n      Output Encoding Using Struts 2\n    \n    \n      Use ESAPI Encoder"
    ],
    "li": [
      "Java web-based applications.",
      "For more information about Cross-Site Scripting prevention, please see https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",
      "For more information about the OWASP ESAPI project, please see https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API",
      "Encode All Output Data",
      "Escape All Untrusted Data in HTML Contexts in JSF",
      "Escape All Untrusted Data in HTML Contexts in JSP",
      "All Output Data Is Encoded",
      "All Untrusted Data in HTML Contexts Is Escaped in JSF",
      "All Untrusted Data in HTML Contexts is Escaped in JSP",
      "Use h:outputText to Encode Echoed Input in JSF",
      "Output Encoding Using JSF",
      "Output Encoding Using SpringMVC",
      "Output Encoding Using Struts 1",
      "Output Encoding Using Struts 2",
      "Use ESAPI Encoder"
    ],
    "span": [
      "Use the ESAPI library to encode or decode data for usage in a given context.",
      "The ESAPI library provides an Encoder control that prepares data to be used in a given output context. Depending on the output context, this can prevent XSS or other types of injection (xml, xpath, OS, etc.).",
      "Applications constantly send data to an output location, such as a database, flat file, web page, etc. Whenever this occurs, care must be taken to ensure special characters that are specific to the output context are either filtered or escaped to ensure proper functioning. The ESAPI library provides the Encoder control to manipulate data to be output into a given context. Various examples are given below of using the Encoder to safely escape data for various output contexts.",
      "Sending data to a webpage in the HTML context:\n    <div><%= ESAPI.encoder().encodeForHTML(myString) %></div>\n    Sending data to a webpage in the HTML attribute context:\n    <input type=\"text\" value=\"<%= ESAPI.encoder().encodeForHTMLAttribute(myString) %>\" />\n    Sending data to a webpage in the JavaScript context:\n    var myVar = '<%= ESAPI.encoder().encodeForJavaScript(myString) %>';\n    Sending data to a webpage in the URL context (Note: This is only for url parameter values, NOT the entire url):\n    <a href=\"/myapp/mypage.jsp?a=123&b=<%= ESAPI.encoder().encodeForURL(myString) %>\" />\">Click me</a>\n    Encode data in the Base64 format:\n    String base64Data = ESAPI.encoder().encodeForBase64(myStr);",
      "For more information about Cross-Site Scripting prevention, please see https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_SheetFor more information about the OWASP ESAPI project, please see https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API"
    ],
    "p": [
      "Use the ESAPI library to encode or decode data for usage in a given context.",
      "The ESAPI library provides an Encoder control that prepares data to be used in a given output context. Depending on the output context, this can prevent XSS or other types of injection (xml, xpath, OS, etc.).",
      "Applications constantly send data to an output location, such as a database, flat file, web page, etc. Whenever this occurs, care must be taken to ensure special characters that are specific to the output context are either filtered or escaped to ensure proper functioning. The ESAPI library provides the Encoder control to manipulate data to be output into a given context. Various examples are given below of using the Encoder to safely escape data for various output contexts.",
      "Sending data to a webpage in the HTML context:",
      "Sending data to a webpage in the HTML attribute context:",
      "Sending data to a webpage in the JavaScript context:",
      "Sending data to a webpage in the URL context (Note: This is only for url parameter values, NOT the entire url):",
      "Encode data in the Base64 format:"
    ],
    "pre": [
      "<div><%= ESAPI.encoder().encodeForHTML(myString) %></div>",
      "<input type=\"text\" value=\"<%= ESAPI.encoder().encodeForHTMLAttribute(myString) %>\" />",
      "var myVar = '<%= ESAPI.encoder().encodeForJavaScript(myString) %>';",
      "<a href=\"/myapp/mypage.jsp?a=123&b=<%= ESAPI.encoder().encodeForURL(myString) %>\" />\">Click me</a>",
      "String base64Data = ESAPI.encoder().encodeForBase64(myStr);"
    ],
    "a": [
      "https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",
      "https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API",
      "Encode All Output Data",
      "Escape All Untrusted Data in HTML Contexts in JSF",
      "Escape All Untrusted Data in HTML Contexts in JSP",
      "All Output Data Is Encoded",
      "All Untrusted Data in HTML Contexts Is Escaped in JSF",
      "All Untrusted Data in HTML Contexts is Escaped in JSP",
      "Use h:outputText to Encode Echoed Input in JSF",
      "Output Encoding Using JSF",
      "Output Encoding Using SpringMVC",
      "Output Encoding Using Struts 1",
      "Output Encoding Using Struts 2",
      "Use ESAPI Encoder"
    ]
  },
  "links": [
    {
      "href": "https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",
      "text": "https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet"
    },
    {
      "href": "https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API",
      "text": "https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API"
    },
    {
      "href": "/article/f83b953a-9b0c-406a-b274-9b2962d9c4e7",
      "text": "Encode All Output Data"
    },
    {
      "href": "/article/c929277f-5bb0-44d5-9bf5-112c55927783",
      "text": "Escape All Untrusted Data in HTML Contexts in JSF"
    },
    {
      "href": "/article/bc8de6c5-ba3a-4db5-a5ff-675c7336a2e8",
      "text": "Escape All Untrusted Data in HTML Contexts in JSP"
    },
    {
      "href": "/article/13112146-7c14-4b6d-9e94-24daa22eefc4",
      "text": "All Output Data Is Encoded"
    },
    {
      "href": "/article/90893370-cbce-4116-b9ff-2e69dab56cfa",
      "text": "All Untrusted Data in HTML Contexts Is Escaped in JSF"
    },
    {
      "href": "/article/02c900ca-0740-412a-b685-56b13408793d",
      "text": "All Untrusted Data in HTML Contexts is Escaped in JSP"
    },
    {
      "href": "/article/8cc6c40a-5a4c-4d77-8900-4b896e2d3912",
      "text": "Use h:outputText to Encode Echoed Input in JSF"
    },
    {
      "href": "/article/a4c5ae58-6b1b-49b7-b16e-4199598f3446",
      "text": "Output Encoding Using JSF"
    },
    {
      "href": "/article/2dc1ab76-320b-47ec-a562-9e203d1b630f",
      "text": "Output Encoding Using SpringMVC"
    },
    {
      "href": "/article/f8d330df-9387-45b2-a88b-40c08d0af3c4",
      "text": "Output Encoding Using Struts 1"
    },
    {
      "href": "/article/9135b59f-8c73-4a4f-83c5-9894d6587cca",
      "text": "Output Encoding Using Struts 2"
    },
    {
      "href": "/article/f7806f64-b1c7-4990-a9e5-f6d814bae7f1",
      "text": "Use ESAPI Encoder"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>Java web-based applications.</li>\n  </ul>\n  <h1>Summary</h1>\n  <span>\n    <p>Use the ESAPI library to encode or decode data for usage in a given context. </p>\n  </span>\n  <h1>Objectives</h1>\n  <span>\n    <p>The ESAPI library provides an Encoder control that prepares data to be used in a given output context. Depending on the output context, this can prevent XSS or other types of injection (xml, xpath, OS, etc.).</p>\n  </span>\n  <h1>Scenarios</h1>\n  <span>\n    <p>Applications constantly send data to an output location, such as a database, flat file, web page, etc. Whenever this occurs, care must be taken to ensure special characters that are specific to the output context are either filtered or escaped to ensure proper functioning. The ESAPI library provides the Encoder control to manipulate data to be output into a given context. Various examples are given below of using the Encoder to safely escape data for various output contexts.</p>\n  </span>\n  <h1>Solution Example</h1>\n  <span>\n    <p>Sending data to a webpage in the HTML context:</p>\n    <pre>&lt;div&gt;&lt;&#37;= ESAPI.encoder().encodeForHTML(myString) &#37;&gt;&lt;/div&gt;</pre>\n    <p>Sending data to a webpage in the HTML attribute context:</p>\n    <pre>&lt;input type=\"text\" value=\"&lt;&#37;= ESAPI.encoder().encodeForHTMLAttribute(myString) &#37;&gt;\" /&gt;</pre>\n    <p>Sending data to a webpage in the JavaScript context:</p>\n    <pre>var myVar = '&lt;&#37;= ESAPI.encoder().encodeForJavaScript(myString) &#37;&gt;';</pre>\n    <p>Sending data to a webpage in the URL context (Note: This is only for url parameter values, NOT the entire url):</p>\n    <pre>&lt;a href=\"/myapp/mypage.jsp?a=123&b=&lt;&#37;= ESAPI.encoder().encodeForURL(myString) &#37;&gt;\" /&gt;\"&gt;Click me&lt;/a&gt;</pre>\n    <p>Encode data in the Base64 format:</p>\n    <pre>String base64Data = ESAPI.encoder().encodeForBase64(myStr);</pre>\n  </span>\n  <h1>See Also</h1>\n  <span>\n    <ul>\n      <li>For more information about Cross-Site Scripting prevention, please see <a href=\"https://www.owasp.org/index.php/XSS_&#37;28Cross_Site_Scripting&#37;29_Prevention_Cheat_Sheet\">https://www.owasp.org/index.php/XSS_&#37;28Cross_Site_Scripting&#37;29_Prevention_Cheat_Sheet</a><li>For more information about the OWASP ESAPI project, please see <a href=\"https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API\">https://www.owasp.org/index.php/Category:OWASP_Enterprise_Security_API</a></li></li>\n    </ul>\n  </span>\n  <h1>Java Data Sanitization Guidelines</h1>\n  <ul>\n    <li>\n      <a href=\"/article/f83b953a-9b0c-406a-b274-9b2962d9c4e7\">Encode All Output Data</a>\n      <li>\n        <a href=\"/article/c929277f-5bb0-44d5-9bf5-112c55927783\">Escape All Untrusted Data in HTML Contexts in JSF</a>\n        <li>\n          <a href=\"/article/bc8de6c5-ba3a-4db5-a5ff-675c7336a2e8\">Escape All Untrusted Data in HTML Contexts in JSP</a>\n        </li>\n      </li>\n    </li>\n  </ul>\n  <h1>Java Data Sanitization Checklists</h1>\n  <ul>\n    <li>\n      <a href=\"/article/13112146-7c14-4b6d-9e94-24daa22eefc4\">All Output Data Is Encoded</a>\n      <li>\n        <a href=\"/article/90893370-cbce-4116-b9ff-2e69dab56cfa\">All Untrusted Data in HTML Contexts Is Escaped in JSF</a>\n        <li>\n          <a href=\"/article/02c900ca-0740-412a-b685-56b13408793d\">All Untrusted Data in HTML Contexts is Escaped in JSP</a>\n        </li>\n      </li>\n    </li>\n  </ul>\n  <h1>Java Data Sanitization Code Examples</h1>\n  <ul>\n    <li>\n      <a href=\"/article/8cc6c40a-5a4c-4d77-8900-4b896e2d3912\">Use h:outputText to Encode Echoed Input in JSF</a>\n    </li>\n    <li>\n      <a href=\"/article/a4c5ae58-6b1b-49b7-b16e-4199598f3446\">Output Encoding Using JSF</a>\n    </li>\n    <li>\n      <a href=\"/article/2dc1ab76-320b-47ec-a562-9e203d1b630f\">Output Encoding Using SpringMVC</a>\n    </li>\n    <li>\n      <a href=\"/article/f8d330df-9387-45b2-a88b-40c08d0af3c4\">Output Encoding Using Struts 1</a>\n    </li>\n    <li>\n      <a href=\"/article/9135b59f-8c73-4a4f-83c5-9894d6587cca\">Output Encoding Using Struts 2</a>\n    </li>\n    <li>\n      <a href=\"/article/f7806f64-b1c7-4990-a9e5-f6d814bae7f1\">Use ESAPI Encoder</a>\n    </li>\n  </ul>"
}