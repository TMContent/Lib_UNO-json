{
  "id": "33a894ce-2061-4741-be92-1d063c9cf057",
  "checksum": "e79a073da5f55177896d1a822defd466af218ca3",
  "words": {
    "26": [
      "p"
    ],
    "217": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "218": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "220": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h1",
      "p"
    ],
    "use": [
      "p",
      "p",
      "title"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "global": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "exception": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "pre",
      "title"
    ],
    "handler": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "catch": [
      "p",
      "p",
      "p"
    ],
    "unhandled": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "exceptions": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "improves": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "application's": [
      "p",
      "p"
    ],
    "robustness": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "minimizes": [
      "p"
    ],
    "risk": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "p"
    ],
    "information": [
      "p",
      "p",
      "p",
      "p"
    ],
    "disclosure": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "can": [
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "p"
    ],
    "serious": [
      "p"
    ],
    "stumbling": [
      "p"
    ],
    "block": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "performance": [
      "p"
    ],
    "security": [
      "p"
    ],
    "must": [
      "p"
    ],
    "avoided": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "they": [
      "p"
    ],
    "result": [
      "p",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "entering": [
      "p"
    ],
    "unknown": [
      "p"
    ],
    "state": [
      "p"
    ],
    "and/or": [
      "p"
    ],
    "revealing": [
      "p"
    ],
    "sensitive": [
      "p"
    ],
    "internal": [
      "p"
    ],
    "details": [
      "p",
      "p",
      "p",
      "strong"
    ],
    "using": [
      "p"
    ],
    "will": [
      "p",
      "p"
    ],
    "prevent": [
      "p"
    ],
    "when": [
      "h1",
      "p",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "p"
    ],
    "guideline": [
      "p"
    ],
    "is": [
      "p"
    ],
    "applicable": [
      "p"
    ],
    "if": [
      "p",
      "table",
      "tbody",
      "tr",
      "td",
      "pre",
      "pre"
    ],
    "your": [
      "p",
      "p",
      "pre"
    ],
    "generates": [
      "p"
    ],
    "any": [
      "p"
    ],
    "type": [
      "p"
    ],
    "how": [
      "h1"
    ],
    "handlers": [
      "p"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "are": [
      "p",
      "p",
      "pre",
      "p"
    ],
    "not": [
      "p",
      "p",
      "p",
      "p"
    ],
    "otherwise": [
      "p"
    ],
    "handled": [
      "p",
      "p"
    ],
    "code": [
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "pre"
    ],
    "define": [
      "p"
    ],
    "application-level": [
      "p",
      "p"
    ],
    "error": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "globalasax": [
      "p"
    ],
    "all": [
      "p",
      "p",
      "p"
    ],
    "avoid": [
      "p"
    ],
    "returning": [
      "p"
    ],
    "detailed": [
      "p",
      "p"
    ],
    "client": [
      "p",
      "p",
      "p"
    ],
    "you": [
      "p"
    ],
    "should": [
      "p"
    ],
    "record": [
      "p"
    ],
    "event": [
      "p"
    ],
    "log": [
      "p",
      "p"
    ],
    "for": [
      "p",
      "p",
      "title"
    ],
    "tracking": [
      "p"
    ],
    "purposes": [
      "p"
    ],
    "later": [
      "p"
    ],
    "analysis": [
      "p"
    ],
    "similar": [
      "p"
    ],
    "following": [
      "p"
    ],
    "%@": [
      "pre",
      "pre"
    ],
    "language=\"c#\"": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "%<%@": [
      "pre",
      "pre"
    ],
    "import": [
      "pre",
      "pre"
    ],
    "namespace=\"systemdiagnostics\"": [
      "pre",
      "pre"
    ],
    "%": [
      "pre",
      "pre"
    ],
    "script": [
      "pre",
      "pre"
    ],
    "runat=\"server\"": [
      "pre",
      "pre"
    ],
    "void": [
      "pre",
      "pre"
    ],
    "application_errorobject": [
      "pre",
      "pre"
    ],
    "sender": [
      "pre",
      "pre"
    ],
    "eventargs": [
      "pre",
      "pre"
    ],
    "e": [
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "//": [
      "pre",
      "pre"
    ],
    "add": [
      "pre",
      "pre"
    ],
    "appropriate": [
      "pre",
      "pre"
    ],
    "logging": [
      "pre",
      "p",
      "pre"
    ],
    "responsewrite(\"we": [
      "pre"
    ],
    "sorry": [
      "pre"
    ],
    "but": [
      "pre"
    ],
    "we": [
      "pre"
    ],
    "cannot": [
      "pre"
    ],
    "complete": [
      "pre"
    ],
    "request": [
      "pre",
      "p"
    ],
    "please": [
      "pre",
      "p"
    ],
    "try": [
      "pre"
    ],
    "again": [
      "pre"
    ],
    "later!\";": [
      "pre"
    ],
    "serverclearerror();": [
      "pre",
      "pre"
    ],
    "}": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "/script>": [
      "pre",
      "pre"
    ],
    "problem": [
      "h1"
    ],
    "example": [
      "h1",
      "h1"
    ],
    "aspnet": [
      "p",
      "p"
    ],
    "connects": [
      "p"
    ],
    "sql": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "database": [
      "p",
      "p"
    ],
    "however": [
      "p"
    ],
    "does": [
      "p",
      "p"
    ],
    "have": [
      "p"
    ],
    "generic": [
      "p",
      "p"
    ],
    "specified": [
      "p",
      "p"
    ],
    "connection": [
      "p",
      "p"
    ],
    "times": [
      "p"
    ],
    "out": [
      "p"
    ],
    "revealed": [
      "p"
    ],
    "description": [
      "p",
      "strong"
    ],
    "occurred": [
      "p",
      "p"
    ],
    "during": [
      "p"
    ],
    "execution": [
      "p"
    ],
    "current": [
      "p"
    ],
    "web": [
      "p"
    ],
    "review": [
      "p"
    ],
    "stack": [
      "p"
    ],
    "trace": [
      "p"
    ],
    "more": [
      "p",
      "p"
    ],
    "about": [
      "p"
    ],
    "where": [
      "p"
    ],
    "it": [
      "p",
      "p"
    ],
    "originated": [
      "p"
    ],
    "systemdata.sqlclient.sqlexception:": [
      "p"
    ],
    "has": [
      "p",
      "p",
      "p"
    ],
    "while": [
      "p",
      "p"
    ],
    "establishing": [
      "p"
    ],
    "server": [
      "p",
      "p",
      "p",
      "p"
    ],
    "connecting": [
      "p"
    ],
    "failure": [
      "p"
    ],
    "may": [
      "p"
    ],
    "caused": [
      "p"
    ],
    "by": [
      "p"
    ],
    "fact": [
      "p"
    ],
    "under": [
      "p"
    ],
    "default": [
      "p"
    ],
    "settings": [
      "p"
    ],
    "allow": [
      "p"
    ],
    "remote": [
      "p"
    ],
    "connections": [
      "p"
    ],
    "provider:": [
      "p"
    ],
    "network": [
      "p"
    ],
    "interfaces": [
      "p"
    ],
    "-": [
      "p"
    ],
    "locating": [
      "p"
    ],
    "server/instance": [
      "p"
    ],
    "source": [
      "p",
      "strong"
    ],
    "line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "216line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "conn.state": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "!=": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "connectionstateopen)line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "connopen();line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "219line": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "cmdconnection": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "=": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre",
      "pre"
    ],
    "conn": [
      "table",
      "tbody",
      "tr",
      "td",
      "pre"
    ],
    "solution": [
      "h1"
    ],
    "connect": [
      "p"
    ],
    "defined": [
      "p"
    ],
    "trap": [
      "p"
    ],
    "allows": [
      "p"
    ],
    "present": [
      "p"
    ],
    "message": [
      "p"
    ],
    "ex": [
      "pre"
    ],
    "servergetlasterror();": [
      "pre"
    ],
    "ex.gettype().name.equals(\"sqlexception\"))": [
      "pre"
    ],
    "servertransfer(\"dberror.html\");": [
      "pre"
    ],
    "else": [
      "pre"
    ],
    "servertransfer(\"genericerror.html\");": [
      "pre"
    ],
    "adapted": [
      "p"
    ],
    "from": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "sink]": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How",
      "Problem Example",
      "Solution Example"
    ],
    "p": [
      "Use a global exception handler to catch unhandled exceptions. A global exception handler improves the application's robustness and minimizes the risk of information disclosure.",
      "Unhandled exceptions can be a serious stumbling block to an application's performance and security. Unhandled exceptions must be avoided as they can result in the application entering an unknown state and/or revealing sensitive internal application details. Using a global exception handler will prevent unhandled exceptions.",
      "This guideline is applicable if your application generates any type of exceptions.",
      "Global exception handlers will catch exceptions that are not otherwise handled in your code. Define an application-level global error handler in Global.asax to catch all exceptions that are not handled in the code. Do this to avoid returning detailed error information to the client. You should record all exceptions in the event log for tracking purposes and later analysis. Use code similar to the following.",
      "An ASP.NET application connects to a SQL database. However, the application does not have a generic error handler specified. As a result, when the connection times out application details are revealed to the client in the exception:",
      "Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.",
      "Exception Details: System.Data.SqlClient.SqlException: An error has occurred while establishing a connection to the server. When connecting to SQL Server, this failure may be caused by the fact that under the default settings SQL Server does not allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)",
      "Source Error:",
      "An ASP.NET application has code to connect to a SQL database. It has defined an application-level global error handler to trap and log all unhandled exceptions. This allows the application to present a generic error message to the client while logging more detailed information to the server.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "pre": [
      "<%@ Application Language=\"C#\" %><%@ Import Namespace=\"System.Diagnostics\" %> <script language=\"C#\" runat=\"server\"> void Application_Error(object sender, EventArgs e) {     // Add the appropriate logging code        Response.Write(\"We are sorry, but we cannot complete your request. Please try again later!\");    Server.ClearError(); } </script>",
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;",
      "<%@ Application Language=\"C#\" %><%@ Import Namespace=\"System.Diagnostics\" %> <script language=\"C#\" runat=\"server\"> void Application_Error(object sender, EventArgs e) {     // Add the appropriate logging code     Exception ex = Server.GetLastError();     if (ex.GetType().Name.Equals(\"SQLException\"))     {         Server.Transfer(\"dbError.html\");     }     else     {         Server.Transfer(\"genericError.html\");     }         Server.ClearError(); } </script>"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "strong": [
      "Description:",
      "Exception Details:",
      "Source Error:"
    ],
    "table": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "tbody": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "tr": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "td": [
      "Line 216:Line 217:            if (conn.State != ConnectionState.Open)Line 218:                conn.Open();Line 219:Line 220:            cmd.Connection = conn;"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Do</h1>\n  <p>Use a global exception handler to catch unhandled exceptions. A global exception handler improves the application's robustness and minimizes the risk of information disclosure.</p>\n  <h1>Why</h1>\n  <p>Unhandled exceptions can be a serious stumbling block to an application's performance and security. Unhandled exceptions must be avoided as they can result in the application entering an unknown state and/or revealing sensitive internal application details. Using a global exception handler will prevent unhandled exceptions.</p>\n  <h1>When</h1>\n  <p>This guideline is applicable if your application generates any type of exceptions. </p>\n  <h1>How</h1>\n  <p>Global exception handlers will catch exceptions that are not otherwise handled in your code. Define an application-level global error handler in Global.asax to catch all exceptions that are not handled in the code. Do this to avoid returning detailed error information to the client. You should record all exceptions in the event log for tracking purposes and later analysis. Use code similar to the following.</p>\n  <pre>&lt;%@ Application Language=\"C#\" %&gt;<br />&lt;%@ Import Namespace=\"System.Diagnostics\" %&gt;<br /> &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> {<br />     // Add the appropriate logging code<br />        Response.Write(\"We are sorry, but we cannot complete your request. Please try again later!\");<br />    Server.ClearError();<br /> }<br /> &lt;/script&gt;</pre>\n  <h1>Problem Example</h1>\n  <p>An ASP.NET application connects to a SQL database. However, the application does not have a generic error handler specified. As a result, when the connection times out application details are revealed to the client in the exception: </p>\n  <p>\n    <strong>Description:</strong> An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.</p>\n  <p>\n    <strong>Exception Details:</strong> System.Data.SqlClient.SqlException: An error has occurred while establishing a connection to the server. When connecting to SQL Server, this failure may be caused by the fact that under the default settings SQL Server does not allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)</p>\n  <p>\n    <strong>Source Error:</strong>\n  </p>\n  <table>\n    <tbody>\n      <tr>\n        <td>\n          <pre>\n            <br />Line 216:<br />Line 217:            if (conn.State != ConnectionState.Open)<br />Line 218:                conn.Open();<br />Line 219:<br />Line 220:            cmd.Connection = conn;</pre>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h1>Solution Example</h1>\n  <p>An ASP.NET application has code to connect to a SQL database. It has defined an application-level global error handler to trap and log all unhandled exceptions. This allows the application to present a generic error message to the client while logging more detailed information to the server. </p>\n  <pre>&lt;%@ Application Language=\"C#\" %&gt;<br />&lt;%@ Import Namespace=\"System.Diagnostics\" %&gt;<br /> &lt;script language=\"C#\" runat=\"server\"&gt;<br /> void Application_Error(object sender, EventArgs e)<br /> {<br />     // Add the appropriate logging code<br />     Exception ex = Server.GetLastError();<br />     if (ex.GetType().Name.Equals(\"SQLException\"))<br />     { <br />        Server.Transfer(\"dbError.html\");<br />     }<br />     else<br />     {<br />         Server.Transfer(\"genericError.html\");<br />     }<br />         Server.ClearError();<br /> }<br /> &lt;/script&gt;</pre>\n  <br />\n  <hr />\n  <p>Adapted from Microsoft patterns &amp; practices guidance. </p>"
}