{
  "id": "9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b",
  "checksum": "6a62dc27f5552f1a2dd8536bf85b579bb2999066",
  "words": {
    "1": [
      "ul",
      "li",
      "a"
    ],
    "2": [
      "ul",
      "li",
      "a"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "span",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "java": [
      "ul",
      "li",
      "h1",
      "h1",
      "h1",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "jsp": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "do": [
      "h1",
      "ul",
      "li",
      "a"
    ],
    "set": [
      "p",
      "span",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "the": [
      "p",
      "span",
      "span",
      "span",
      "span",
      "span",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "\"secure\"": [
      "p",
      "span",
      "span",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "\"httponly\"": [
      "p",
      "span",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "flags": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "on": [
      "p",
      "span",
      "span",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "all": [
      "p",
      "span",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "sensitive": [
      "p",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "cookies": [
      "p",
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "ecure": [
      "em",
      "em",
      "em"
    ],
    "httponly": [
      "em",
      "em",
      "em",
      "em",
      "em",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h1"
    ],
    "flag": [
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "protect": [
      "span",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "contents": [
      "span",
      "span",
      "p",
      "p"
    ],
    "of": [
      "span",
      "span",
      "span",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "from": [
      "span",
      "span",
      "p",
      "p"
    ],
    "eavesdropping": [
      "span",
      "p"
    ],
    "attacks": [
      "span",
      "span",
      "p",
      "p"
    ],
    "setting": [
      "span",
      "p"
    ],
    "ensures": [
      "span",
      "p"
    ],
    "they": [
      "span",
      "p"
    ],
    "are": [
      "span",
      "span",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "only": [
      "span",
      "p"
    ],
    "transferred": [
      "span",
      "p"
    ],
    "over": [
      "span",
      "p",
      "ol",
      "li",
      "p"
    ],
    "connections": [
      "span",
      "p"
    ],
    "that": [
      "span",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "secured": [
      "span",
      "p"
    ],
    "by": [
      "span",
      "span",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "ssl": [
      "span",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "prevents": [
      "span",
      "p"
    ],
    "marked": [
      "span",
      "p"
    ],
    "cookie": [
      "span",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "pre"
    ],
    "being": [
      "span",
      "p"
    ],
    "accessed": [
      "span",
      "p"
    ],
    "client-side": [
      "span",
      "p"
    ],
    "script": [
      "span",
      "p"
    ],
    "-": [
      "span",
      "p"
    ],
    "this": [
      "span",
      "p",
      "ol",
      "li",
      "p"
    ],
    "measure": [
      "span",
      "p"
    ],
    "helps": [
      "span",
      "p"
    ],
    "reduce": [
      "span",
      "p"
    ],
    "potential": [
      "span",
      "p"
    ],
    "damage": [
      "span",
      "p"
    ],
    "cross-site": [
      "span",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "scripting": [
      "span",
      "p"
    ],
    "secure": [
      "em",
      "em",
      "em",
      "em",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "how": [
      "h1",
      "ul",
      "li",
      "a"
    ],
    "verify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "is": [
      "ol",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "available": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "forces": [
      "ol",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "sent": [
      "ol",
      "li",
      "p"
    ],
    "has": [
      "ol",
      "li",
      "p"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "work": [
      "ol",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "session": [
      "ol",
      "li",
      "p",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h1",
      "h1",
      "ul",
      "li",
      "a"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "always": [
      "ol",
      "li",
      "p"
    ],
    "considered": [
      "ol",
      "li",
      "p"
    ],
    "enumerate": [
      "ol",
      "li",
      "p"
    ],
    "used": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "application": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "a": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "list": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "may": [
      "ol",
      "li",
      "p"
    ],
    "contain": [
      "ol",
      "li",
      "p"
    ],
    "information": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "h1"
    ],
    "creates": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "each": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "in": [
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "find": [
      "ol",
      "li",
      "p"
    ],
    "piece": [
      "ol",
      "li",
      "p"
    ],
    "add": [
      "ol",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "sets": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "p"
    ],
    "sensitivecookie": [
      "ol",
      "li",
      "pre"
    ],
    "=": [
      "ol",
      "li",
      "pre"
    ],
    "new": [
      "ol",
      "li",
      "pre"
    ],
    "cookie“sessionid”,sessionid);sensitivecookie.setsecure(true);sensitivecookie.sethttponly(true);": [
      "ol",
      "li",
      "pre"
    ],
    "management": [
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "ul",
      "li",
      "a",
      "h1",
      "h1"
    ],
    "guidelines": [
      "h1"
    ],
    "use": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "offered": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "framework": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "ids": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "domain": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "path": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "values": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "change": [
      "ul",
      "li",
      "a"
    ],
    "during": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "authentication": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "invalidate": [
      "ul",
      "li",
      "a"
    ],
    "sessions": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "when": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "users": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "log": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "out": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "inactive": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "time-out": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "include": [
      "ul",
      "li",
      "a"
    ],
    "unique": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "tokens": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "http": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "requests": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "not": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "security": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "decisions": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "based": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "client-accessible": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "parameters": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h1"
    ],
    "protected": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "strict": [
      "ul",
      "li",
      "a"
    ],
    "changed": [
      "ul",
      "li",
      "a"
    ],
    "invalidated": [
      "ul",
      "li",
      "a"
    ],
    "included": [
      "ul",
      "li",
      "a"
    ],
    "made": [
      "ul",
      "li",
      "a"
    ],
    "examples": [
      "h1"
    ],
    "using": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "esapi": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "server": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "faces": [
      "ul",
      "li",
      "a"
    ],
    "jsf)": [
      "ul",
      "li",
      "a"
    ],
    "plain": [
      "ul",
      "li",
      "a"
    ],
    "pages": [
      "ul",
      "li",
      "a"
    ],
    "jsp)": [
      "ul",
      "li",
      "a"
    ],
    "request": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "forgery": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "csrf)": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "prevention": [
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "springmvc": [
      "ul",
      "li",
      "a"
    ],
    "struts": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "httputilities": [
      "ul",
      "li",
      "a"
    ],
    "testing": [
      "h1"
    ],
    "test": [
      "ul",
      "li",
      "a"
    ],
    "prediction": [
      "ul",
      "li",
      "a"
    ],
    "bugs": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Do",
      "Why",
      "How",
      "Java Session Management Guidelines",
      "Java Session Management Checklists",
      "Java Session Management Code Examples",
      "Java Session Management Testing"
    ],
    "ul": [
      "JAVA JSP",
      "Use Session Management Offered by the Framework\r\n      \r\n        Protect Session IDs\r\n        \r\n          Protect Session Cookies\r\n          \r\n            Set the Domain and Path Values of Session Cookies\r\n            \r\n              Set the Secure and HTTPOnly Flags on All Sensitive Cookies\r\n              \r\n                Change Session IDs During Authentication\r\n                \r\n                  Invalidate Sessions when Users Log Out\r\n                  \r\n                    Make Inactive Sessions Time-out\r\n                    \r\n                      Include Unique Tokens in HTTP Requests\r\n                      \r\n                        Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used\r\n      \r\n        Session IDs Are Protected\r\n        \r\n          Session Cookies are Protected\r\n          \r\n            The Domain and Path Values of Session Cookies Are Strict\r\n            \r\n              The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies\r\n              \r\n                Session IDs Are Changed During Authentication\r\n                \r\n                  Sessions Are Invalidated When Users Log Out\r\n                  \r\n                    Inactive Sessions Time-out\r\n                    \r\n                      Unique Tokens Are Included in HTTP Requests\r\n                      \r\n                        Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI\r\n    \r\n    \r\n      Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)\r\n    \r\n    \r\n      Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 1\r\n    \r\n    \r\n      Cross-Site Request Forgery (CSRF) Prevention Using Struts 2\r\n    \r\n    \r\n      Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "li": [
      "JAVA",
      "JSP",
      "Verify that SSL is available. The \"Secure\" flag forces cookies to be sent over SSL. SSL has to be available for this to work.",
      "Identify sensitive cookies. Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.",
      "Identify code that creates sensitive cookies. For each sensitive cookie in the list, find the code that creates that cookie.",
      "Set the \"Secure\" and \"HTTPOnly\" flags for each sensitive cookie. For each piece of code that creates a sensitive cookie, add code that sets the \"Secure\" and \"HTTPOnly\" flags for the cookie. For example:\r\n            Cookie sensitiveCookie = new Cookie(“SessionID”,sessionID);sensitiveCookie.setSecure(true);sensitiveCookie.setHttpOnly(true);",
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ],
    "p": [
      "Set the \"Secure\" and \"HTTPOnly\" flags on all sensitive cookies.",
      "Set the \"Secure\" flag on all sensitive cookies to protect the contents of the sensitive cookies from eavesdropping attacks. Setting the \"Secure\" flag on sensitive cookies ensures they are only transferred over connections that are secured by SSL. The \"HTTPOnly\" flag prevents the contents of the marked cookie from being accessed by client-side script - this measure helps reduce the potential damage of Cross-Site Scripting attacks.",
      "To set the \"Secure\" and \"HTTPOnly\" flags on all sensitive cookies:",
      "Verify that SSL is available. The \"Secure\" flag forces cookies to be sent over SSL. SSL has to be available for this to work.",
      "Identify sensitive cookies. Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.",
      "Identify code that creates sensitive cookies. For each sensitive cookie in the list, find the code that creates that cookie.",
      "Set the \"Secure\" and \"HTTPOnly\" flags for each sensitive cookie. For each piece of code that creates a sensitive cookie, add code that sets the \"Secure\" and \"HTTPOnly\" flags for the cookie. For example:"
    ],
    "em": [
      "ecure",
      "HTTPOnly",
      "Secure",
      "Secure",
      "HTTPOnly",
      "Secure",
      "HTTPOnly",
      "Secure",
      "ecure",
      "HTTPOnly",
      "ecure",
      "HTTPOnly"
    ],
    "span": [
      "Set the \"Secure\" flag on all sensitive cookies to protect the contents of the sensitive cookies from eavesdropping attacks. Setting the \"Secure\" flag on sensitive cookies ensures they are only transferred over connections that are secured by SSL. The \"HTTPOnly\" flag prevents the contents of the marked cookie from being accessed by client-side script - this measure helps reduce the potential damage of Cross-Site Scripting attacks."
    ],
    "ol": [
      "Verify that SSL is available. The \"Secure\" flag forces cookies to be sent over SSL. SSL has to be available for this to work.\r\n      \r\n        \r\n          Identify sensitive cookies. Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.\r\n        \r\n          \r\n            Identify code that creates sensitive cookies. For each sensitive cookie in the list, find the code that creates that cookie.\r\n          \r\n            \r\n              Set the \"Secure\" and \"HTTPOnly\" flags for each sensitive cookie. For each piece of code that creates a sensitive cookie, add code that sets the \"Secure\" and \"HTTPOnly\" flags for the cookie. For example:\r\n            Cookie sensitiveCookie = new Cookie(“SessionID”,sessionID);sensitiveCookie.setSecure(true);sensitiveCookie.setHttpOnly(true);"
    ],
    "strong": [
      "Verify that SSL is available.",
      "Identify sensitive cookies.",
      "Identify code that creates sensitive cookies.",
      "Set the \"Secure\" and \"HTTPOnly\" flags for each sensitive cookie."
    ],
    "pre": [
      "Cookie sensitiveCookie = new Cookie(“SessionID”,sessionID);sensitiveCookie.setSecure(true);sensitiveCookie.setHttpOnly(true);"
    ],
    "br": [
      "",
      ""
    ],
    "a": [
      "Use Session Management Offered by the Framework",
      "Protect Session IDs",
      "Protect Session Cookies",
      "Set the Domain and Path Values of Session Cookies",
      "Set the Secure and HTTPOnly Flags on All Sensitive Cookies",
      "Change Session IDs During Authentication",
      "Invalidate Sessions when Users Log Out",
      "Make Inactive Sessions Time-out",
      "Include Unique Tokens in HTTP Requests",
      "Do Not Make Security Decisions Based on Client-Accessible Parameters",
      "Session Management Offered by the Framework Is Used",
      "Session IDs Are Protected",
      "Session Cookies are Protected",
      "The Domain and Path Values of Session Cookies Are Strict",
      "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies",
      "Session IDs Are Changed During Authentication",
      "Sessions Are Invalidated When Users Log Out",
      "Inactive Sessions Time-out",
      "Unique Tokens Are Included in HTTP Requests",
      "Security Decisions are Not Made Based on Client-Accessible Parameters",
      "Add Unique Tokens to HTTP Requests Using ESAPI",
      "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)",
      "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)",
      "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1",
      "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2",
      "Use ESAPI HTTPUtilities",
      "How to Test for Session Prediction Bugs in Java"
    ]
  },
  "links": [
    {
      "href": "/article/42276b64-f51d-4b89-8c33-0ffd9b098890",
      "text": "Use Session Management Offered by the Framework"
    },
    {
      "href": "/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a",
      "text": "Protect Session IDs"
    },
    {
      "href": "/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717",
      "text": "Protect Session Cookies"
    },
    {
      "href": "/article/7a517ad5-8640-4bc7-9e84-ccc313a71901",
      "text": "Set the Domain and Path Values of Session Cookies"
    },
    {
      "href": "/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b",
      "text": "Set the Secure and HTTPOnly Flags on All Sensitive Cookies"
    },
    {
      "href": "/article/6c470029-5c62-4394-99a9-8990bc48b0a8",
      "text": "Change Session IDs During Authentication"
    },
    {
      "href": "/article/a223c2d8-ab42-47fb-81a2-86ad677a5632",
      "text": "Invalidate Sessions when Users Log Out"
    },
    {
      "href": "/article/acfe1a16-3f00-4383-ada4-bebafc98a836",
      "text": "Make Inactive Sessions Time-out"
    },
    {
      "href": "/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e",
      "text": "Include Unique Tokens in HTTP Requests"
    },
    {
      "href": "/article/9df0b518-f832-4a7c-9857-0517638c47db",
      "text": "Do Not Make Security Decisions Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b",
      "text": "Session Management Offered by the Framework Is Used"
    },
    {
      "href": "/article/1de62774-3392-4da7-9bae-065fb15b4a2b",
      "text": "Session IDs Are Protected"
    },
    {
      "href": "/article/59132a30-2bae-45e9-9d85-8de26441be29",
      "text": "Session Cookies are Protected"
    },
    {
      "href": "/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b",
      "text": "The Domain and Path Values of Session Cookies Are Strict"
    },
    {
      "href": "/article/d8922a46-a943-4ae0-b8af-b88eb01d6997",
      "text": "The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies"
    },
    {
      "href": "/article/58df5418-8c03-4121-83e0-bc68247c5d7b",
      "text": "Session IDs Are Changed During Authentication"
    },
    {
      "href": "/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac",
      "text": "Sessions Are Invalidated When Users Log Out"
    },
    {
      "href": "/article/c486eeb2-f64f-480b-9823-48bd7d21047d",
      "text": "Inactive Sessions Time-out"
    },
    {
      "href": "/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0",
      "text": "Unique Tokens Are Included in HTTP Requests"
    },
    {
      "href": "/article/4436e342-64d9-4b1b-ae9b-3e00696053fb",
      "text": "Security Decisions are Not Made Based on Client-Accessible Parameters"
    },
    {
      "href": "/article/7d647e95-e47f-42e3-bb84-fd0dd727245c",
      "text": "Add Unique Tokens to HTTP Requests Using ESAPI"
    },
    {
      "href": "/article/25e3943b-a651-42c5-9e19-76077de05e90",
      "text": "Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)"
    },
    {
      "href": "/article/986c7161-0a76-430a-8d0e-80d4615ab5db",
      "text": "Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)"
    },
    {
      "href": "/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC"
    },
    {
      "href": "/article/63deed1a-6df4-4e04-9f61-898f190e1fe1",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 1"
    },
    {
      "href": "/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b",
      "text": "Cross-Site Request Forgery (CSRF) Prevention Using Struts 2"
    },
    {
      "href": "/article/4d7ee521-8680-481e-a40b-3afb04c2616d",
      "text": "Use ESAPI HTTPUtilities"
    },
    {
      "href": "/article/40771780-be59-4d4c-b283-5ec3cc286357",
      "text": "How to Test for Session Prediction Bugs in Java"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>JAVA <li>JSP</li></li>\r\n  </ul>\r\n  <h1>What to Do</h1>\r\n  <p>Set the \"S<em>ecure</em>\" and \"<em>HTTPOnly</em>\" flags on all sensitive cookies.</p>\r\n  <h1>Why</h1>\r\n  <span>\r\n    <p>Set the \"<em>Secure</em>\" flag on all sensitive cookies to protect the contents of the sensitive cookies from eavesdropping attacks. Setting the \"<em>Secure</em>\" flag on sensitive cookies ensures they are only transferred over connections that are secured by SSL. The \"<em>HTTPOnly</em>\" flag prevents the contents of the marked cookie from being accessed by client-side script - this measure helps reduce the potential damage of Cross-Site Scripting attacks.</p>\r\n  </span>\r\n  <h1>How</h1>\r\n  <p>To set the \"<em>Secure</em>\" and \"<em>HTTPOnly</em>\" flags on all sensitive cookies:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that SSL is available.</strong> The \"<em>Secure</em>\" flag forces cookies to be sent over SSL. SSL has to be available for this to work.</p>\r\n      <li>\r\n        <p>\r\n          <strong>Identify sensitive cookies.</strong> Session cookies should always be considered sensitive. Enumerate all cookies used by the application. Make a list of cookies that may contain sensitive information.</p>\r\n        <li>\r\n          <p>\r\n            <strong>Identify code that creates sensitive cookies. </strong>For each sensitive cookie in the list, find the code that creates that cookie.</p>\r\n          <li>\r\n            <p>\r\n              <strong>Set the \"S<em>ecure</em>\" and \"<em>HTTPOnly</em>\" flags for each sensitive cookie.</strong> For each piece of code that creates a sensitive cookie, add code that sets the \"S<em>ecure</em>\" and \"<em>HTTPOnly</em>\" flags for the cookie. For example:</p>\r\n            <pre>Cookie sensitiveCookie = new Cookie(&#8220;SessionID&#8221;,sessionID);<br />sensitiveCookie.setSecure(true);<br />sensitiveCookie.setHttpOnly(true);</pre>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ol>\r\n  <h1>Java Session Management Guidelines</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/42276b64-f51d-4b89-8c33-0ffd9b098890\">Use Session Management Offered by the Framework</a>\r\n      <li>\r\n        <a href=\"/article/2aa12bed-347a-43c6-a419-48ffd5bc3f5a\">Protect Session IDs</a>\r\n        <li>\r\n          <a href=\"/article/6012e717-6ba6-4380-8ca8-2f0b7c69d717\">Protect Session Cookies</a>\r\n          <li>\r\n            <a href=\"/article/7a517ad5-8640-4bc7-9e84-ccc313a71901\">Set the Domain and Path Values of Session Cookies</a>\r\n            <li>\r\n              <a href=\"/article/9b7e6e63-c37c-403b-a2f5-60b1e1abbb0b\">Set the Secure and HTTPOnly Flags on All Sensitive Cookies</a>\r\n              <li>\r\n                <a href=\"/article/6c470029-5c62-4394-99a9-8990bc48b0a8\">Change Session IDs During Authentication</a>\r\n                <li>\r\n                  <a href=\"/article/a223c2d8-ab42-47fb-81a2-86ad677a5632\">Invalidate Sessions when Users Log Out</a>\r\n                  <li>\r\n                    <a href=\"/article/acfe1a16-3f00-4383-ada4-bebafc98a836\">Make Inactive Sessions Time-out</a>\r\n                    <li>\r\n                      <a href=\"/article/61b8ebc8-3ba5-4e75-aea8-94d6d3b3177e\">Include Unique Tokens in HTTP Requests</a>\r\n                      <li>\r\n                        <a href=\"/article/9df0b518-f832-4a7c-9857-0517638c47db\">Do Not Make Security Decisions Based on Client-Accessible Parameters</a>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Checklists</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/3f2660b3-a935-4b4e-85ff-27ae28683f5b\">Session Management Offered by the Framework Is Used</a>\r\n      <li>\r\n        <a href=\"/article/1de62774-3392-4da7-9bae-065fb15b4a2b\">Session IDs Are Protected</a>\r\n        <li>\r\n          <a href=\"/article/59132a30-2bae-45e9-9d85-8de26441be29\">Session Cookies are Protected</a>\r\n          <li>\r\n            <a href=\"/article/500d61f2-c9fa-4b1e-91f5-0a589c0fe00b\">The Domain and Path Values of Session Cookies Are Strict</a>\r\n            <li>\r\n              <a href=\"/article/d8922a46-a943-4ae0-b8af-b88eb01d6997\">The Secure and HTTPOnly Flags Are Set on All Sensitive Cookies</a>\r\n              <li>\r\n                <a href=\"/article/58df5418-8c03-4121-83e0-bc68247c5d7b\">Session IDs Are Changed During Authentication</a>\r\n                <li>\r\n                  <a href=\"/article/0e40c446-c740-42a9-a4d2-72c9d05e55ac\">Sessions Are Invalidated When Users Log Out</a>\r\n                  <li>\r\n                    <a href=\"/article/c486eeb2-f64f-480b-9823-48bd7d21047d\">Inactive Sessions Time-out</a>\r\n                    <li>\r\n                      <a href=\"/article/0463ae25-dc35-45e7-8b24-9b1f8ddb6af0\">Unique Tokens Are Included in HTTP Requests</a>\r\n                      <li>\r\n                        <a href=\"/article/4436e342-64d9-4b1b-ae9b-3e00696053fb\">Security Decisions are Not Made Based on Client-Accessible Parameters</a>\r\n                      </li>\r\n                    </li>\r\n                  </li>\r\n                </li>\r\n              </li>\r\n            </li>\r\n          </li>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Code Examples</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/7d647e95-e47f-42e3-bb84-fd0dd727245c\">Add Unique Tokens to HTTP Requests Using ESAPI</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/25e3943b-a651-42c5-9e19-76077de05e90\">Add Unique Tokens to HTTP Requests Using Java Server Faces (JSF)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/986c7161-0a76-430a-8d0e-80d4615ab5db\">Add Unique Tokens to HTTP Requests Using Plain Java Server Pages (JSP)</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/bf931bed-21c0-4b89-9cb2-9274d8c796a6\">Cross-Site Request Forgery (CSRF) Prevention Using SpringMVC</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/63deed1a-6df4-4e04-9f61-898f190e1fe1\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 1</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/a9c2c121-614c-4a3f-9b7c-f2cf57d6aa0b\">Cross-Site Request Forgery (CSRF) Prevention Using Struts 2</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"/article/4d7ee521-8680-481e-a40b-3afb04c2616d\">Use ESAPI HTTPUtilities</a>\r\n    </li>\r\n  </ul>\r\n  <h1>Java Session Management Testing</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/40771780-be59-4d4c-b283-5ec3cc286357\">How to Test for Session Prediction Bugs in Java</a>\r\n    </li>\r\n  </ul>"
}