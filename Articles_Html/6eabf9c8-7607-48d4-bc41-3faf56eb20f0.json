{
  "id": "6eabf9c8-7607-48d4-bc41-3faf56eb20f0",
  "checksum": "dc806dadc30862064712f3ee01183afbb23ee63f",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "applies": [
      "h1",
      "p"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "aspnet": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "ensure": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "application": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "connects": [
      "p"
    ],
    "databases": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "using": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "least-privileged": [
      "p",
      "title"
    ],
    "account": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "possible": [
      "p"
    ],
    "why": [
      "h1"
    ],
    "connecting": [
      "p"
    ],
    "database": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "with": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "a": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "least": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "privilege": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "limits": [
      "p"
    ],
    "damage": [
      "p"
    ],
    "can": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "be": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "done": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "event": [
      "p",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "sql": [
      "p"
    ],
    "injection": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "or": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "an": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "attacker": [
      "p"
    ],
    "obtaining": [
      "p"
    ],
    "your": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "account's": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "credentials": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "principle": [
      "p",
      "p",
      "p"
    ],
    "requires": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "users": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "pre",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "are": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "title"
    ],
    "granted": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "enough": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "privileges": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "complete": [
      "p"
    ],
    "their": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "respective": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "tasks": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "uses": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "backend": [
      "p"
    ],
    "server": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "p"
    ],
    "take": [
      "p"
    ],
    "following": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p",
      "p"
    ],
    "identify": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "accounts": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "pre",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "list": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "existing": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "various": [
      "ol",
      "li",
      "p"
    ],
    "servers": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p"
    ],
    "information": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li"
    ],
    "usually": [
      "ol",
      "li",
      "p"
    ],
    "obtained": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li"
    ],
    "from": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "connection": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "strings": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "webconfig": [
      "ol",
      "li",
      "p"
    ],
    "file": [
      "ol",
      "li",
      "p"
    ],
    "hard-coded": [
      "ol",
      "li",
      "p"
    ],
    "details": [
      "ol",
      "li",
      "p"
    ],
    "found": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "p"
    ],
    "they": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "should": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "changed": [
      "ol",
      "li",
      "p"
    ],
    "refer": [
      "ol",
      "li",
      "p"
    ],
    "configurable": [
      "ol",
      "li",
      "p"
    ],
    "roles": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "associated": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "each": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "actions": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "performs": [
      "ol",
      "li",
      "p"
    ],
    "matrix": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "minimum": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "set": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "account/role": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "strong"
    ],
    "determine": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "ol",
      "li",
      "p"
    ],
    "tables": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "stored": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "procedures": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "accessed": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "actionsread,": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "write": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "drop": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "create": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "etc": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "performed": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "determined": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "sections": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "where": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "accesses": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "back-end": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "a"
    ],
    "proc": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "table------------------------------------------------------app_admin": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "connect": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "ol",
      "li",
      "p"
    ],
    "always": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "read": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "occasionally": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "modify": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "never": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "app_normal": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "actually": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "has": [
      "ol",
      "li",
      "ul",
      "li",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "actual": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p"
    ],
    "access": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "no": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "extra": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "compare": [
      "ol",
      "li",
      "p"
    ],
    "intended": [
      "ol",
      "li",
      "p"
    ],
    "against": [
      "ol",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "li",
      "p"
    ],
    "verify": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "direct": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "table": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "provided": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "limited": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "selected": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "needed": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "required": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "role": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "used": [
      "ol",
      "li",
      "ul",
      "li",
      "title"
    ],
    "avoid": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "granting": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "permissions": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "directly": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "fixed": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "user": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "complicated": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "separated": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "partitioning": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "different": [
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "apply": [
      "p"
    ],
    "understand": [
      "ol",
      "li",
      "p"
    ],
    "purpose": [
      "ol",
      "li",
      "p"
    ],
    "functionality": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "li",
      "p"
    ],
    "executing": [
      "ol",
      "li",
      "p"
    ],
    "map": [
      "ol",
      "li",
      "p"
    ],
    "require": [
      "ol",
      "li",
      "p"
    ],
    "none": [
      "ol",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "administrative": [
      "ol",
      "li",
      "p"
    ],
    "rights": [
      "ol",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "once": [
      "ol",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "li",
      "p"
    ],
    "identified": [
      "ol",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li",
      "p"
    ],
    "execute": [
      "ol",
      "li",
      "p"
    ],
    "assigned": [
      "ol",
      "li",
      "p"
    ],
    "any": [
      "ol",
      "li",
      "p"
    ],
    "revoked": [
      "ol",
      "li",
      "p"
    ],
    "guidelines": [
      "ol",
      "li",
      "p"
    ],
    "ideally": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "provide": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "limit": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "em"
    ],
    "must": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "grant": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "do": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "not": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "update": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "sufficient": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "isolates": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "potential": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "changes": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "name": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "change": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "simply": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "add": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "new": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "remove": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "one": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "needs": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "affect": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "many": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "consider": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "separation": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "setup": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "then": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "separate": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "carry": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "out": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "operations": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "permitted": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "legitimate": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "may": [
      "em"
    ],
    "find": [
      "em"
    ],
    "these": [
      "em"
    ],
    "additional": [
      "em"
    ],
    "articles": [
      "em"
    ],
    "useful": [
      "em"
    ],
    "privileged": [
      "ul",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix",
      "Related Items"
    ],
    "ul": [
      "ASP.NET 4.0",
      "Identify the minimum set of privileges that each account/role requires: Determine the tables and stored procedures accessed and the actions(read, write, drop, create, etc) performed on the tables by each account/role. This can be determined from the sections of code where the application accesses the back-end database. Use this information to create a matrix:\n          Accounts     Actions    Stored Proc     Users Table------------------------------------------------------app_admin    Connect    Always          Always             Read       Always          Always             Use        Always          Occasionally             Modify     Never           Occasionally app_normal   Connect    Always          Always             Read       Always          Always             Use        Always          Always             Modify     Never           Never\n        \n        \n          Identify the set of privileges that each account/role actually has. Determine the actual database access privileges granted to each database account. This information can be obtained from the database server.",
      "No direct table access is provided and access is limited to selected stored procedures only. \n        If table access is needed, only minimum access required is granted \n        A database role is used to avoid granting permissions directly to a fixed user \n        If application is complicated, privileges are separated by partitioning the database access into different accounts",
      "Ideally, provide no direct table access and limit access to selected stored procedures only. \n        \n        \n          If you must grant table access, grant the minimum access that the application requires. For example, do not grant update access if read access is sufficient. \n        \n        \n          Use a database role, to avoid granting permissions directly to the database user. This isolates you from potential changes to the database user name. For example, if you change the database user name, you can simply add the new user to the database role and remove the existing one. \n        \n        \n          If an application needs to affect many databases, or if an application is complicated, consider using separation of privilege by partitioning the database access into different accounts. For example, create a database user that only has permissions necessary to setup new application users, and then create a separate database user to carry out operations permitted by legitimate application users.",
      "Use Least Privileged Accounts for Database Access"
    ],
    "li": [
      "ASP.NET 4.0",
      "Identify all database accounts that the application uses. List all of the application's database accounts existing on the various servers it uses. The database account information can usually be obtained from the connection strings in the web.config file. If hard-coded account details are found in the application code, they should be changed to refer to configurable connection strings.",
      "Identify the roles associated with each database account. Identify the database actions that each account performs. Using a matrix, identify the minimum set of privileges that each account requires:\n      \n        \n          \n            Identify the minimum set of privileges that each account/role requires: Determine the tables and stored procedures accessed and the actions(read, write, drop, create, etc) performed on the tables by each account/role. This can be determined from the sections of code where the application accesses the back-end database. Use this information to create a matrix:\n          Accounts     Actions    Stored Proc     Users Table------------------------------------------------------app_admin    Connect    Always          Always             Read       Always          Always             Use        Always          Occasionally             Modify     Never           Occasionally app_normal   Connect    Always          Always             Read       Always          Always             Use        Always          Always             Modify     Never           Never\n        \n        \n          Identify the set of privileges that each account/role actually has. Determine the actual database access privileges granted to each database account. This information can be obtained from the database server.",
      "Identify the minimum set of privileges that each account/role requires: Determine the tables and stored procedures accessed and the actions(read, write, drop, create, etc) performed on the tables by each account/role. This can be determined from the sections of code where the application accesses the back-end database. Use this information to create a matrix:\n          Accounts     Actions    Stored Proc     Users Table------------------------------------------------------app_admin    Connect    Always          Always             Read       Always          Always             Use        Always          Occasionally             Modify     Never           Occasionally app_normal   Connect    Always          Always             Read       Always          Always             Use        Always          Always             Modify     Never           Never",
      "Identify the set of privileges that each account/role actually has. Determine the actual database access privileges granted to each database account. This information can be obtained from the database server.",
      "Ensure that no extra privileges are granted to an account. Compare each account's intended privileges against its actual privileges. Verify that no account is granted extra privileges.\n      \n        No direct table access is provided and access is limited to selected stored procedures only. \n        If table access is needed, only minimum access required is granted \n        A database role is used to avoid granting permissions directly to a fixed user \n        If application is complicated, privileges are separated by partitioning the database access into different accounts",
      "No direct table access is provided and access is limited to selected stored procedures only.",
      "If table access is needed, only minimum access required is granted",
      "A database role is used to avoid granting permissions directly to a fixed user",
      "If application is complicated, privileges are separated by partitioning the database access into different accounts",
      "Identify all database accounts. Create a list with all of your application's database accounts and the respective servers and databases that they connect to.",
      "Identify the roles associated with each database account. Understand the purpose of the accounts and the functionality they will be executing. Using a table, map all accounts to the privileges they require. None of the application's accounts should have administrative rights on the database server.",
      "Set appropriate privileges. Once all accounts and their roles have been identified, set the appropriate privileges at the respective database servers. Make sure that each account has enough privileges to execute the assigned tasks only. Any extra privileges should be revoked. \n      Use the following guidelines to determine appropriate access permissions:\n      \n        \n          Ideally, provide no direct table access and limit access to selected stored procedures only. \n        \n        \n          If you must grant table access, grant the minimum access that the application requires. For example, do not grant update access if read access is sufficient. \n        \n        \n          Use a database role, to avoid granting permissions directly to the database user. This isolates you from potential changes to the database user name. For example, if you change the database user name, you can simply add the new user to the database role and remove the existing one. \n        \n        \n          If an application needs to affect many databases, or if an application is complicated, consider using separation of privilege by partitioning the database access into different accounts. For example, create a database user that only has permissions necessary to setup new application users, and then create a separate database user to carry out operations permitted by legitimate application users.",
      "Ideally, provide no direct table access and limit access to selected stored procedures only.",
      "If you must grant table access, grant the minimum access that the application requires. For example, do not grant update access if read access is sufficient.",
      "Use a database role, to avoid granting permissions directly to the database user. This isolates you from potential changes to the database user name. For example, if you change the database user name, you can simply add the new user to the database role and remove the existing one.",
      "If an application needs to affect many databases, or if an application is complicated, consider using separation of privilege by partitioning the database access into different accounts. For example, create a database user that only has permissions necessary to setup new application users, and then create a separate database user to carry out operations permitted by legitimate application users.",
      "Use Least Privileged Accounts for Database Access"
    ],
    "p": [
      "Ensure that the application connects to databases using the least-privileged account possible.",
      "Connecting to the database with a least privilege account limits the damage that can be done in the event of a SQL injection attack or in the event of an attacker obtaining your account's credentials.",
      "The principle of least privilege requires that users are granted enough privileges to complete their respective tasks. If your application uses a backend database server, take the following steps to ensure that your application applies the principle of least privilege:",
      "Identify all database accounts that the application uses. List all of the application's database accounts existing on the various servers it uses. The database account information can usually be obtained from the connection strings in the web.config file. If hard-coded account details are found in the application code, they should be changed to refer to configurable connection strings.",
      "Identify the roles associated with each database account. Identify the database actions that each account performs. Using a matrix, identify the minimum set of privileges that each account requires:",
      "Identify the minimum set of privileges that each account/role requires: Determine the tables and stored procedures accessed and the actions(read, write, drop, create, etc) performed on the tables by each account/role. This can be determined from the sections of code where the application accesses the back-end database. Use this information to create a matrix:",
      "Ensure that no extra privileges are granted to an account. Compare each account's intended privileges against its actual privileges. Verify that no account is granted extra privileges.",
      "Use the following steps to apply the principle of least privilege to the application's database accounts:",
      "Identify all database accounts. Create a list with all of your application's database accounts and the respective servers and databases that they connect to.",
      "Identify the roles associated with each database account. Understand the purpose of the accounts and the functionality they will be executing. Using a table, map all accounts to the privileges they require. None of the application's accounts should have administrative rights on the database server.",
      "Set appropriate privileges. Once all accounts and their roles have been identified, set the appropriate privileges at the respective database servers. Make sure that each account has enough privileges to execute the assigned tasks only. Any extra privileges should be revoked.",
      "Use the following guidelines to determine appropriate access permissions:",
      "Ideally, provide no direct table access and limit access to selected stored procedures only.",
      "If you must grant table access, grant the minimum access that the application requires. For example, do not grant update access if read access is sufficient.",
      "Use a database role, to avoid granting permissions directly to the database user. This isolates you from potential changes to the database user name. For example, if you change the database user name, you can simply add the new user to the database role and remove the existing one.",
      "If an application needs to affect many databases, or if an application is complicated, consider using separation of privilege by partitioning the database access into different accounts. For example, create a database user that only has permissions necessary to setup new application users, and then create a separate database user to carry out operations permitted by legitimate application users.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Identify all database accounts that the application uses. List all of the application's database accounts existing on the various servers it uses. The database account information can usually be obtained from the connection strings in the web.config file. If hard-coded account details are found in the application code, they should be changed to refer to configurable connection strings.\n    \n    \n      \n        Identify the roles associated with each database account. Identify the database actions that each account performs. Using a matrix, identify the minimum set of privileges that each account requires:\n      \n        \n          \n            Identify the minimum set of privileges that each account/role requires: Determine the tables and stored procedures accessed and the actions(read, write, drop, create, etc) performed on the tables by each account/role. This can be determined from the sections of code where the application accesses the back-end database. Use this information to create a matrix:\n          Accounts     Actions    Stored Proc     Users Table------------------------------------------------------app_admin    Connect    Always          Always             Read       Always          Always             Use        Always          Occasionally             Modify     Never           Occasionally app_normal   Connect    Always          Always             Read       Always          Always             Use        Always          Always             Modify     Never           Never\n        \n        \n          Identify the set of privileges that each account/role actually has. Determine the actual database access privileges granted to each database account. This information can be obtained from the database server.\n      \n    \n    \n      \n        Ensure that no extra privileges are granted to an account. Compare each account's intended privileges against its actual privileges. Verify that no account is granted extra privileges.\n      \n        No direct table access is provided and access is limited to selected stored procedures only. \n        If table access is needed, only minimum access required is granted \n        A database role is used to avoid granting permissions directly to a fixed user \n        If application is complicated, privileges are separated by partitioning the database access into different accounts",
      "Identify all database accounts. Create a list with all of your application's database accounts and the respective servers and databases that they connect to. \n    \n    \n      \n        Identify the roles associated with each database account. Understand the purpose of the accounts and the functionality they will be executing. Using a table, map all accounts to the privileges they require. None of the application's accounts should have administrative rights on the database server. \n    \n    \n      \n        Set appropriate privileges. Once all accounts and their roles have been identified, set the appropriate privileges at the respective database servers. Make sure that each account has enough privileges to execute the assigned tasks only. Any extra privileges should be revoked. \n      Use the following guidelines to determine appropriate access permissions:\n      \n        \n          Ideally, provide no direct table access and limit access to selected stored procedures only. \n        \n        \n          If you must grant table access, grant the minimum access that the application requires. For example, do not grant update access if read access is sufficient. \n        \n        \n          Use a database role, to avoid granting permissions directly to the database user. This isolates you from potential changes to the database user name. For example, if you change the database user name, you can simply add the new user to the database role and remove the existing one. \n        \n        \n          If an application needs to affect many databases, or if an application is complicated, consider using separation of privilege by partitioning the database access into different accounts. For example, create a database user that only has permissions necessary to setup new application users, and then create a separate database user to carry out operations permitted by legitimate application users."
    ],
    "strong": [
      "Identify all database accounts that the application uses.",
      "Identify the roles associated with each database account.",
      "Identify the minimum set of privileges that each account/role requires:",
      "Identify the set of privileges that each account/role actually has.",
      "Ensure that no extra privileges are granted to an account.",
      "Identify all database accounts.",
      "Identify the roles associated with each database account.",
      "Set appropriate privileges."
    ],
    "pre": [
      "Accounts     Actions    Stored Proc     Users Table------------------------------------------------------app_admin    Connect    Always          Always             Read       Always          Always             Use        Always          Occasionally             Modify     Never           Occasionally app_normal   Connect    Always          Always             Read       Always          Always             Use        Always          Always             Modify     Never           Never"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "em": [
      "You may find these additional articles useful"
    ],
    "a": [
      "Use Least Privileged Accounts for Database Access"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "/article/93af668f-1c1a-422b-9cdf-1378f6acd96f",
      "text": "Use Least Privileged Accounts for Database Access"
    }
  ],
  "html": "<h1>Applies To</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Ensure that the application connects to databases using the least-privileged account possible.</p>\n  <h1>Why</h1>\n  <p>Connecting to the database with a least privilege account limits the damage that can be done in the event of a SQL injection attack or in the event of an attacker obtaining your account's credentials. </p>\n  <h1>How To Check</h1>\n  <p>The principle of least privilege requires that users are granted enough privileges to complete their respective tasks. If your application uses a backend database server, take the following steps to ensure that your application applies the principle of least privilege:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify all database accounts that the application uses.</strong> List all of the application's database accounts existing on the various servers it uses. The database account information can usually be obtained from the connection strings in the web.config file. If hard-coded account details are found in the application code, they should be changed to refer to configurable connection strings.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Identify the roles associated with each database account.</strong> Identify the database actions that each account performs. Using a matrix, identify the minimum set of privileges that each account requires:</p>\n      <ul>\n        <li>\n          <p>\n            <strong>Identify the minimum set of privileges that each account/role requires:</strong> Determine the tables and stored procedures accessed and the actions(read, write, drop, create, etc) performed on the tables by each account/role. This can be determined from the sections of code where the application accesses the back-end database. Use this information to create a matrix:</p>\n          <pre>Accounts     Actions    Stored Proc     Users Table<br />------------------------------------------------------<br />app_admin    Connect    Always          Always<br />             Read       Always          Always<br />             Use        Always          Occasionally<br />             Modify     Never           Occasionally <br />app_normal   Connect    Always          Always<br />             Read       Always          Always<br />             Use        Always          Always<br />             Modify     Never           Never</pre>\n        </li>\n        <li>\n          <strong>Identify the set of privileges that each account/role actually has.</strong> Determine the actual database access privileges granted to each database account. This information can be obtained from the database server.</li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Ensure that no extra privileges are granted to an account.</strong> Compare each account's intended privileges against its actual privileges. Verify that no account is granted extra privileges.</p>\n      <ul>\n        <li>No direct table access is provided and access is limited to selected stored procedures only. </li>\n        <li>If table access is needed, only minimum access required is granted </li>\n        <li>A database role is used to avoid granting permissions directly to a fixed user </li>\n        <li>If application is complicated, privileges are separated by partitioning the database access into different accounts</li>\n      </ul>\n    </li>\n  </ol>\n  <h1>How To Fix</h1>\n  <p>Use the following steps to apply the principle of least privilege to the application's database accounts:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Identify all database accounts.</strong> Create a list with all of your application's database accounts and the respective servers and databases that they connect to. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Identify the roles associated with each database account.</strong> Understand the purpose of the accounts and the functionality they will be executing. Using a table, map all accounts to the privileges they require. None of the application's accounts should have administrative rights on the database server. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Set appropriate privileges.</strong> Once all accounts and their roles have been identified, set the appropriate privileges at the respective database servers. Make sure that each account has enough privileges to execute the assigned tasks only. Any extra privileges should be revoked. </p>\n      <p>Use the following guidelines to determine appropriate access permissions:</p>\n      <ul>\n        <li>\n          <p>Ideally, provide no direct table access and limit access to selected stored procedures only. </p>\n        </li>\n        <li>\n          <p>If you must grant table access, grant the minimum access that the application requires. For example, do not grant update access if read access is sufficient. </p>\n        </li>\n        <li>\n          <p>Use a database role, to avoid granting permissions directly to the database user. This isolates you from potential changes to the database user name. For example, if you change the database user name, you can simply add the new user to the database role and remove the existing one. </p>\n        </li>\n        <li>\n          <p>If an application needs to affect many databases, or if an application is complicated, consider using separation of privilege by partitioning the database access into different accounts. For example, create a database user that only has permissions necessary to setup new application users, and then create a separate database user to carry out operations permitted by legitimate application users.</p>\n        </li>\n      </ul>\n    </li>\n  </ol>\n  <h1>Related Items</h1>\n  <em>You may find these additional articles useful</em>\n  <ul>\n    <li>\n      <a href=\"/article/93af668f-1c1a-422b-9cdf-1378f6acd96f\">Use Least Privileged Accounts for Database Access</a>\n    </li>\n  </ul>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}