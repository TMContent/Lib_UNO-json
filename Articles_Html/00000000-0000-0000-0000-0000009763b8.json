{
  "id": "00000000-0000-0000-0000-0000009763b8",
  "checksum": "f8820f7600fb6989e6811b86a0aa34bb01b6b2c8",
  "words": {
    "what": [
      "h2",
      "p"
    ],
    "to": [
      "h2",
      "p",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "h2",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li"
    ],
    "check": [
      "h2",
      "h2"
    ],
    "for": [
      "h2",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "li"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "li"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "names": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "and": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "paths": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "are": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "canonicalized": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "why": [
      "h2"
    ],
    "canonicalizing": [
      "p"
    ],
    "before": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "validating": [
      "p"
    ],
    "them": [
      "p"
    ],
    "helps": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "unauthorized": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "a": [
      "p",
      "ol",
      "li"
    ],
    "path": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "not": [
      "p"
    ],
    "an": [
      "p"
    ],
    "attacker": [
      "p"
    ],
    "may": [
      "p"
    ],
    "use": [
      "p",
      "ol",
      "li"
    ],
    "special": [
      "p"
    ],
    "characters": [
      "p"
    ],
    "resources": [
      "p",
      "h2"
    ],
    "outside": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "allowed": [
      "p"
    ],
    "by": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "the": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li"
    ],
    "application": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "how": [
      "h2",
      "h2"
    ],
    "identify": [
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "input": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "enumerate": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "performed": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "examine": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li"
    ],
    "responsible": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "accessing": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "each": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "take": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "note": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "any": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "form": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "or": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "data": [
      "ol",
      "li",
      "strong",
      "ol",
      "li",
      "strong",
      "h2",
      "ul",
      "li",
      "a",
      "h2",
      "ul",
      "li",
      "a"
    ],
    "handles": [
      "ol",
      "li"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "it": [
      "ol",
      "li"
    ],
    "translates": [
      "ol",
      "li"
    ],
    "into": [
      "ol",
      "li",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "canonical": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "forms": [
      "ol",
      "li"
    ],
    "using": [
      "ol",
      "li"
    ],
    "files": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "hard-coded": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "they": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "don't": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "need": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "be": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "validated": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "opens": [
      "ol",
      "li"
    ],
    "being": [
      "ol",
      "li"
    ],
    "fix": [
      "h2"
    ],
    "canonicalize": [
      "p",
      "ol",
      "li",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "getcanonicalpath": [
      "ol",
      "li",
      "em",
      "ul",
      "li",
      "em"
    ],
    "method": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "get": [
      "ol",
      "li"
    ],
    "validate": [
      "ol",
      "li",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "user": [
      "ol",
      "li"
    ],
    "authorized": [
      "ol",
      "li"
    ],
    "specified": [
      "ol",
      "li"
    ],
    "resource": [
      "ol",
      "li"
    ],
    "validation": [
      "h2",
      "h2"
    ],
    "guidelines": [
      "h2"
    ],
    "encode": [
      "ul",
      "li",
      "a"
    ],
    "inserted": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "xml": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "documents": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "formats": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklists": [
      "h2"
    ],
    "encoded": [
      "ul",
      "li",
      "a"
    ],
    "additional": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//developer.android.com/reference/java/io/file.html#getcanonicalpath()": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Data Validation Guidelines",
      "Data Validation Checklists",
      "Additional Resources"
    ],
    "p": [
      "Verify that file names and paths are canonicalized.",
      "Canonicalizing file paths before validating them helps prevent unauthorized access. If a file path is not canonicalized, an attacker may use special characters to access resources outside of what is allowed by the application.",
      "To verify that file names and paths are canonicalized:",
      "To canonicalize file names and paths:"
    ],
    "ol": [
      "Identify all input used for file access. Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.\n Verify that all input data used for file paths is canonicalized. Examine code that handles file names and paths and make sure that it translates file paths and names into canonical forms before using the files. If file names or paths are hard-coded, they don't need to be canonicalized.\n Verify that all file paths are validated. Examine code that opens files to make sure that file names and paths are validated before being used. If file names or paths are hard-coded, they don't need to be validated.",
      "Identify all input used for file access. Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.\n Canonicalize all input data used for file access. Use the getCanonicalPath method to get the canonical path to a file.\n Validate file paths. Verify that the user or application are authorized to access the specified resource."
    ],
    "li": [
      "Identify all input used for file access. Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.",
      "Verify that all input data used for file paths is canonicalized. Examine code that handles file names and paths and make sure that it translates file paths and names into canonical forms before using the files. If file names or paths are hard-coded, they don't need to be canonicalized.",
      "Verify that all file paths are validated. Examine code that opens files to make sure that file names and paths are validated before being used. If file names or paths are hard-coded, they don't need to be validated.",
      "Identify all input used for file access. Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.",
      "Canonicalize all input data used for file access. Use the getCanonicalPath method to get the canonical path to a file.",
      "Validate file paths. Verify that the user or application are authorized to access the specified resource.",
      "Canonicalize File Names and Paths",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "File Formats Are Validated",
      "For more information about the getCanonicalPath method, see http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    ],
    "strong": [
      "Identify all input used for file access.",
      "Verify that all input data used for file paths is canonicalized.",
      "Verify that all file paths are validated.",
      "Identify all input used for file access.",
      "Canonicalize all input data used for file access.",
      "Validate file paths."
    ],
    "em": [
      "getCanonicalPath",
      "getCanonicalPath"
    ],
    "ul": [
      "Canonicalize File Names and Paths\n Validate All Input\n Validate and Encode Data Inserted into XML Documents\n Validate File Formats",
      "File Names and Paths Are Canonicalized\n All Input Is Validated\n Data Inserted into XML Documents Is Validated and Encoded\n File Formats Are Validated",
      "For more information about the getCanonicalPath method, see http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    ],
    "a": [
      "Canonicalize File Names and Paths",
      "Validate All Input",
      "Validate and Encode Data Inserted into XML Documents",
      "Validate File Formats",
      "File Names and Paths Are Canonicalized",
      "All Input Is Validated",
      "Data Inserted into XML Documents Is Validated and Encoded",
      "File Formats Are Validated",
      "http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    ]
  },
  "links": [
    {
      "href": "00000000-0000-0000-0000-0000008d3cec",
      "text": "Canonicalize File Names and Paths"
    },
    {
      "href": "00000000-0000-0000-0000-0000008149ca",
      "text": "Validate All Input"
    },
    {
      "href": "00000000-0000-0000-0000-0000006c7089",
      "text": "Validate and Encode Data Inserted into XML Documents"
    },
    {
      "href": "00000000-0000-0000-0000-0000007635ae",
      "text": "Validate File Formats"
    },
    {
      "href": "00000000-0000-0000-0000-0000009763b8",
      "text": "File Names and Paths Are Canonicalized"
    },
    {
      "href": "00000000-0000-0000-0000-0000004f2fec",
      "text": "All Input Is Validated"
    },
    {
      "href": "00000000-0000-0000-0000-00000071b4f0",
      "text": "Data Inserted into XML Documents Is Validated and Encoded"
    },
    {
      "href": "00000000-0000-0000-0000-00000080c790",
      "text": "File Formats Are Validated"
    },
    {
      "href": "http://developer.android.com/reference/java/io/File.html#getCanonicalPath()",
      "text": "http://developer.android.com/reference/java/io/File.html#getCanonicalPath()"
    }
  ],
  "html": "<h2>What to Check For</h2><p>Verify that file names and paths are canonicalized.\n</p><h2>Why</h2><p>Canonicalizing file paths before validating them helps prevent unauthorized access. If a file path is not canonicalized, an attacker may use special characters to access resources outside of what is allowed by the application.\n</p><h2>How to Check</h2><p>To verify that file names and paths are canonicalized:\n</p><ol>\n<li> <strong>Identify all input used for file access.</strong> Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.</li>\n<li> <strong>Verify that all input data used for file paths is canonicalized.</strong> Examine code that handles file names and paths and make sure that it translates file paths and names into canonical forms before using the files. If file names or paths are hard-coded, they don't need to be canonicalized.</li>\n<li> <strong>Verify that all file paths are validated.</strong> Examine code that opens files to make sure that file names and paths are validated before being used. If file names or paths are hard-coded, they don't need to be validated.</li>\n</ol><h2>How to Fix</h2><p>To canonicalize file names and paths:\n</p><ol>\n<li> <strong>Identify all input used for file access.</strong> Enumerate all file access performed by the application. Examine code responsible for accessing each file. Take note of any input used to form path or file names for file access.</li>\n<li> <strong>Canonicalize all input data used for file access.</strong> Use the <em>getCanonicalPath</em> method to get the canonical path to a file.</li>\n<li> <strong>Validate file paths.</strong> Verify that the user or application are authorized to access the specified resource.</li>\n</ol><h2>Data Validation Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000008d3cec\">Canonicalize File Names and Paths</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000008149ca\">Validate All Input</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000006c7089\">Validate and Encode Data Inserted into XML Documents</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000007635ae\">Validate File Formats</a></li>\n</ul><h2>Data Validation Checklists</h2><ul><li> <a href=\"00000000-0000-0000-0000-0000009763b8\">File Names and Paths Are Canonicalized</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000004f2fec\">All Input Is Validated</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000071b4f0\">Data Inserted into XML Documents Is Validated and Encoded</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000080c790\">File Formats Are Validated</a></li>\n</ul><h2>Additional Resources</h2><ul><li> For more information about the <em>getCanonicalPath</em> method, see <a href=\"http://developer.android.com/reference/java/io/File.html#getCanonicalPath()\">http://developer.android.com/reference/java/io/File.html#getCanonicalPath()</a></li>\n</ul>"
}