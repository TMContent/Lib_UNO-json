{
  "id": "fdb65a4c-d979-4ab7-b2fa-b88e908207fe",
  "checksum": "b6c26139811175cdf061011dd80342f30180b1f5",
  "words": {
    "5": [
      "ul",
      "li"
    ],
    "6": [
      "ul",
      "li"
    ],
    "2000": [
      "ul",
      "li"
    ],
    "2003": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h1",
      "p",
      "p",
      "p",
      "title"
    ],
    "avoid": [
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "the": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "title"
    ],
    "of": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "impersonation": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "unless": [
      "p",
      "title"
    ],
    "required": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "and": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "limit": [
      "p",
      "p"
    ],
    "its": [
      "p"
    ],
    "as": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "much": [
      "p",
      "p"
    ],
    "possible": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "when": [
      "p",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "ul",
      "li",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "why": [
      "h1"
    ],
    "if": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "programmatic": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "not": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "done": [
      "p"
    ],
    "properly": [
      "p"
    ],
    "can": [
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "introduce": [
      "p",
      "ul",
      "li"
    ],
    "security": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "vulnerabilities": [
      "p"
    ],
    "difficult": [
      "p"
    ],
    "get": [
      "p"
    ],
    "correct": [
      "p"
    ],
    "particularly": [
      "p",
      "ul",
      "li"
    ],
    "in": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "multithreaded": [
      "p"
    ],
    "applications": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "alternative": [
      "p"
    ],
    "approaches": [
      "p"
    ],
    "such": [
      "p"
    ],
    "a": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "custom": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "domain": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "process": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li"
    ],
    "identity": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "strong"
    ],
    "for": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "resource": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "pre"
    ],
    "you": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "should": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "where": [
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "following": [
      "p",
      "p"
    ],
    "reasons": [
      "p"
    ],
    "easy": [
      "ul",
      "li"
    ],
    "errors": [
      "ul",
      "li"
    ],
    "because": [
      "ul",
      "li"
    ],
    "thread": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "switches": [
      "ul",
      "li"
    ],
    "token": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "propagated": [
      "ul",
      "li"
    ],
    "across": [
      "ul",
      "li"
    ],
    "threads": [
      "ul",
      "li"
    ],
    "some": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "techniques": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "require": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "store": [
      "ul",
      "li"
    ],
    "credentials": [
      "ul",
      "li"
    ],
    "which": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "be": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "avoided": [
      "ul",
      "li",
      "p"
    ],
    "grant": [
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "additional": [
      "ul",
      "li"
    ],
    "privileges": [
      "ul",
      "li",
      "p"
    ],
    "your": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "account": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "example": [
      "ul",
      "li",
      "h1",
      "h1"
    ],
    "must": [
      "ul",
      "li",
      "p"
    ],
    "\"act": [
      "ul",
      "li"
    ],
    "part": [
      "ul",
      "li"
    ],
    "operating": [
      "ul",
      "li"
    ],
    "system\"": [
      "ul",
      "li"
    ],
    "call": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "logonuser": [
      "ul",
      "li",
      "strong"
    ],
    "on": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "windows": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "strong"
    ],
    "server": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "or": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "obtain": [
      "ul",
      "li"
    ],
    "an": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "impersonate-level": [
      "ul",
      "li"
    ],
    "new": [
      "ul",
      "li",
      "pre"
    ],
    "windowsidentity": [
      "ul",
      "li",
      "strong",
      "pre"
    ],
    "constructor": [
      "ul",
      "li"
    ],
    "that": [
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "generates": [
      "ul",
      "li"
    ],
    "from": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "user": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "principal": [
      "ul",
      "li"
    ],
    "name": [
      "ul",
      "li"
    ],
    "exceptions": [
      "ul",
      "li"
    ],
    "occur": [
      "ul",
      "li"
    ],
    "while": [
      "ul",
      "li",
      "p"
    ],
    "impersonating": [
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "malicious": [
      "ul",
      "li"
    ],
    "code": [
      "ul",
      "li",
      "p"
    ],
    "higher": [
      "ul",
      "li"
    ],
    "stack": [
      "ul",
      "li"
    ],
    "run": [
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "using": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p"
    ],
    "impersonated": [
      "ul",
      "li",
      "p"
    ],
    "this": [
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "present": [
      "ul",
      "li"
    ],
    "issues": [
      "ul",
      "li"
    ],
    "impersonate": [
      "ul",
      "li"
    ],
    "highly": [
      "ul",
      "li"
    ],
    "privileged": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "always": [
      "p"
    ],
    "application's": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "how": [
      "h1"
    ],
    "by": [
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "default": [
      "p",
      "ul",
      "li"
    ],
    "aspnet": [
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "runs": [
      "p"
    ],
    "with": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "configuration": [
      "p"
    ],
    "iis": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "least": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "later": [
      "ul",
      "li"
    ],
    "inside": [
      "ul",
      "li"
    ],
    "application": [
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "pool": [
      "ul",
      "li"
    ],
    "network": [
      "ul",
      "li"
    ],
    "service": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "need": [
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "web": [
      "ul",
      "li",
      "p"
    ],
    "create": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "least-privileged": [
      "ul",
      "li"
    ],
    "might": [
      "ul",
      "li",
      "p"
    ],
    "isolate": [
      "ul",
      "li"
    ],
    "other": [
      "ul",
      "li",
      "p"
    ],
    "same": [
      "ul",
      "li"
    ],
    "able": [
      "ul",
      "li"
    ],
    "audit": [
      "ul",
      "li"
    ],
    "each": [
      "ul",
      "li"
    ],
    "separately": [
      "ul",
      "li"
    ],
    "potentially": [
      "p",
      "p",
      "p"
    ],
    "very": [
      "p"
    ],
    "dangerous": [
      "p"
    ],
    "although": [
      "p"
    ],
    "safely": [
      "p"
    ],
    "absolutely": [
      "p"
    ],
    "merely": [
      "p"
    ],
    "securely": [
      "p"
    ],
    "pass": [
      "p"
    ],
    "downstream": [
      "p"
    ],
    "opposed": [
      "p"
    ],
    "their": [
      "p"
    ],
    "entire": [
      "p"
    ],
    "context": [
      "p"
    ],
    "instance": [
      "p"
    ],
    "database": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "p"
    ],
    "backend": [
      "p"
    ],
    "needs": [
      "p"
    ],
    "know": [
      "p"
    ],
    "connecting": [
      "p",
      "p"
    ],
    "front": [
      "p"
    ],
    "end": [
      "p"
    ],
    "act": [
      "p"
    ],
    "trusted": [
      "p",
      "p",
      "p"
    ],
    "subsystem": [
      "p",
      "p"
    ],
    "authenticate": [
      "p"
    ],
    "authorize": [
      "p"
    ],
    "users": [
      "p"
    ],
    "passing": [
      "p"
    ],
    "id": [
      "p"
    ],
    "over": [
      "p"
    ],
    "secure": [
      "p",
      "p"
    ],
    "connection": [
      "p",
      "p"
    ],
    "instead": [
      "p",
      "p",
      "p",
      "p"
    ],
    "only": [
      "p",
      "p"
    ],
    "these": [
      "p",
      "p"
    ],
    "cases": [
      "p"
    ],
    "more": [
      "p",
      "p"
    ],
    "it's": [
      "p"
    ],
    "also": [
      "p",
      "ul",
      "li"
    ],
    "faster—impersonating": [
      "p"
    ],
    "situation": [
      "p"
    ],
    "prevents": [
      "p"
    ],
    "pools": [
      "p"
    ],
    "adding": [
      "p"
    ],
    "lot": [
      "p"
    ],
    "overhead": [
      "p"
    ],
    "whenever": [
      "p"
    ],
    "single": [
      "p",
      "p",
      "p"
    ],
    "gain": [
      "p"
    ],
    "resources": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "appropriate": [
      "p"
    ],
    "solution": [
      "p",
      "p",
      "h1"
    ],
    "either": [
      "p"
    ],
    "alter": [
      "p"
    ],
    "acls": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "needed": [
      "p"
    ],
    "so": [
      "p"
    ],
    "normal": [
      "p"
    ],
    "intermediate": [
      "p"
    ],
    "point": [
      "p"
    ],
    "handles": [
      "p"
    ],
    "control": [
      "p"
    ],
    "care": [
      "p",
      "p"
    ],
    "taken": [
      "p",
      "p"
    ],
    "both": [
      "p"
    ],
    "subsystems": [
      "p"
    ],
    "they": [
      "p",
      "p"
    ],
    "have": [
      "p"
    ],
    "advantage": [
      "p"
    ],
    "providing": [
      "p"
    ],
    "calling": [
      "p"
    ],
    "specific": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "strong"
    ],
    "ability": [
      "p"
    ],
    "allowing": [
      "p"
    ],
    "anything": [
      "p"
    ],
    "most": [
      "p"
    ],
    "common": [
      "p"
    ],
    "situations": [
      "p"
    ],
    "functionality": [
      "p"
    ],
    "are": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "original": [
      "ul",
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "li",
      "strong"
    ],
    "caller": [
      "ul",
      "ul",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "want": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "protected": [
      "ul",
      "li"
    ],
    "configured": [
      "ul",
      "li"
    ],
    "accounts": [
      "ul",
      "li"
    ],
    "method": [
      "ul",
      "li"
    ],
    "valid": [
      "ul",
      "li",
      "p"
    ],
    "located": [
      "ul",
      "li"
    ],
    "behind": [
      "ul",
      "li"
    ],
    "firewall": [
      "ul",
      "li"
    ],
    "organization's": [
      "ul",
      "li"
    ],
    "controller": [
      "ul",
      "li"
    ],
    "will": [
      "ul",
      "li",
      "p"
    ],
    "restricted": [
      "ul",
      "li"
    ],
    "programmatically": [
      "ul",
      "li",
      "strong"
    ],
    "predominantly": [
      "ul",
      "li"
    ],
    "but": [
      "ul",
      "li",
      "p"
    ],
    "methods": [
      "ul",
      "li"
    ],
    "caller's": [
      "ul",
      "li"
    ],
    "several": [
      "ul",
      "li"
    ],
    "identities": [
      "ul",
      "li"
    ],
    "particular": [
      "ul",
      "li"
    ],
    "all": [
      "p"
    ],
    "uses": [
      "p",
      "p"
    ],
    "ensure": [
      "p"
    ],
    "action": [
      "p"
    ],
    "cannot": [
      "p"
    ],
    "accomplished": [
      "p"
    ],
    "without": [
      "p"
    ],
    "before": [
      "p"
    ],
    "implementing": [
      "p"
    ],
    "problem": [
      "h1"
    ],
    "myapp": [
      "p",
      "p"
    ],
    "hr": [
      "p",
      "p"
    ],
    "at": [
      "p",
      "p",
      "p"
    ],
    "mycorp": [
      "p",
      "p"
    ],
    "order": [
      "p",
      "p"
    ],
    "provide": [
      "p",
      "p"
    ],
    "data": [
      "p",
      "p"
    ],
    "impersonates": [
      "p"
    ],
    "talking": [
      "p"
    ],
    "enforcing": [
      "p"
    ],
    "policy": [
      "p"
    ],
    "locally": [
      "p"
    ],
    "allows": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "take": [
      "p"
    ],
    "actions": [
      "p"
    ],
    "real": [
      "p"
    ],
    "just": [
      "p"
    ],
    "case": [
      "p"
    ],
    "sql": [
      "p",
      "p",
      "p"
    ],
    "injection": [
      "p",
      "p",
      "p"
    ],
    "unhardened": [
      "p"
    ],
    "could": [
      "p"
    ],
    "critical": [
      "p"
    ],
    "winidentity": [
      "pre"
    ],
    "=": [
      "pre",
      "pre"
    ],
    "windowsidentityusername": [
      "pre"
    ],
    "+": [
      "pre"
    ],
    "\"@ntdomain\";windowsimpersonationcontext": [
      "pre"
    ],
    "ctx": [
      "pre"
    ],
    "winidentityimpersonate();": [
      "pre"
    ],
    "//": [
      "pre"
    ],
    "carefully": [
      "p"
    ],
    "enforces": [
      "p"
    ],
    "intended": [
      "p"
    ],
    "set": [
      "p",
      "p"
    ],
    "business": [
      "p"
    ],
    "rules": [
      "p"
    ],
    "layer": [
      "p"
    ],
    "low": [
      "p"
    ],
    "privilege": [
      "p",
      "p"
    ],
    "connect": [
      "p"
    ],
    "full": [
      "p"
    ],
    "has": [
      "p"
    ],
    "databse": [
      "p"
    ],
    "than": [
      "p"
    ],
    "running": [
      "p",
      "p"
    ],
    "pre-specified": [
      "p"
    ],
    "stored": [
      "p"
    ],
    "procedures": [
      "p"
    ],
    "even": [
      "p"
    ],
    "compromise": [
      "p"
    ],
    "occurs": [
      "p"
    ],
    "system": [
      "p"
    ],
    "elevated": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "What to Do",
      "Why",
      "When",
      "How",
      "Problem Example",
      "Solution Example"
    ],
    "p": [
      "Avoid the use of impersonation unless required, and limit its use as much as possible when it is required.",
      "If programmatic impersonation is not done properly, it can introduce security vulnerabilities. It is difficult to get impersonation correct, particularly in multithreaded applications. When possible, use alternative approaches such as a custom domain process identity for resource access. You should avoid programmatic impersonation where possible for the following reasons:",
      "Always limit your application's use of impersonation as much as possible.",
      "By default ASP.NET runs with the following configuration:",
      "Impersonation is potentially very dangerous. Although it is possible to use it safely, impersonation should be avoided when it is not absolutely required.",
      "Do not use impersonation when you merely need to securely pass the identity of a user downstream, as opposed to their entire security context. For instance, if a database backend needs to know the identity of the user connecting to it, the web front end can act as a trusted subsystem and authenticate and authorize users, passing the user id to the database over a secure connection instead of impersonating that user to the database. Not only is not using impersonation in these cases more secure, it's also faster—impersonating a user in this situation prevents use of connection pools, adding a lot of overhead.",
      "Whenever possible, avoid impersonating a single user to gain access to resources. A more appropriate solution is to either alter ACLs as needed so as to grant the application's normal process identity access, or to use a trusted subsystem solution where an intermediate point handles access control. While care must be taken with both ACLs and trusted subsystems, they have the advantage of only providing the calling process the single specific ability they need, instead of allowing the process to do anything the impersonated identity can do.",
      "The most common situations where impersonation might be required for application functionality are:",
      "These are all valid uses of impersonation, but care should be taken to ensure that the action cannot be accomplished without using impersonation before implementing it.",
      "MyApp is the HR application at MyCorp. In order to provide security for user data in the database, the application impersonates the connecting user when talking to the database, instead of enforcing the security policy locally. This allows an attack to potentially take actions as a real user in the domain, instead of just as the application account. In the case of SQL injection to an unhardened SQL server, this could be potentially critical.",
      "MyApp is the HR application at MyCorp. In order to provide security for user data in the database, the application carefully enforces the intended set of business rules at the application layer and uses a single, low privilege account to connect to the database with. The account is not a full domain user, and has not privileges in the databse other than running a pre-specified set of stored procedures. Even if a SQL injection or code injection compromise occurs, the system will not be running with an elevated privilege.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ul": [
      "It is easy to introduce errors because of thread switches where the thread impersonation token is not propagated across threads. \n    Some programmatic techniques require you to store credentials which should be avoided. \n    Some programmatic techniques require you to grant additional privileges to your process account, which you should avoid. For example, you must grant your process account \"Act as part of the operating system\" if you call LogonUser on Windows Server 2000 or to obtain an impersonate-level token on Windows Server 2003 when you use the new WindowsIdentity constructor that generates a token from a user principal name. \n    If exceptions occur while impersonating, it is possible for malicious code higher in the call stack to run using the impersonated identity. This can present security issues, particularly if you impersonate a highly privileged account.",
      "IIS 5: Applications run by default using the least privileged ASPNET account. \n    IIS 6 and later: Applications run inside an application pool using the least privileged Network Service account. If you need to use a custom service account to run your ASP.NET Web application, create a least-privileged account. You might need to create a custom service account to isolate your application from other applications on the same server or to be able to audit each application separately.",
      "Impersonating the original caller. You want to access Windows resources that are protected with ACLs configured for your application's domain user accounts. This method is also valid when your application is located behind a firewall as access to your organization's domain controller will be restricted. \n    \n      Impersonating the original caller programmatically. You want to access resources predominantly by using the application's process identity, but specific methods need to use the original caller's identity. \n    \n      Impersonating a specific Windows identity. You need to use a specific identity or several Windows identities to access particular resources."
    ],
    "li": [
      "It is easy to introduce errors because of thread switches where the thread impersonation token is not propagated across threads.",
      "Some programmatic techniques require you to store credentials which should be avoided.",
      "Some programmatic techniques require you to grant additional privileges to your process account, which you should avoid. For example, you must grant your process account \"Act as part of the operating system\" if you call LogonUser on Windows Server 2000 or to obtain an impersonate-level token on Windows Server 2003 when you use the new WindowsIdentity constructor that generates a token from a user principal name.",
      "If exceptions occur while impersonating, it is possible for malicious code higher in the call stack to run using the impersonated identity. This can present security issues, particularly if you impersonate a highly privileged account.",
      "IIS 5: Applications run by default using the least privileged ASPNET account.",
      "IIS 6 and later: Applications run inside an application pool using the least privileged Network Service account. If you need to use a custom service account to run your ASP.NET Web application, create a least-privileged account. You might need to create a custom service account to isolate your application from other applications on the same server or to be able to audit each application separately.",
      "Impersonating the original caller. You want to access Windows resources that are protected with ACLs configured for your application's domain user accounts. This method is also valid when your application is located behind a firewall as access to your organization's domain controller will be restricted.",
      "Impersonating the original caller programmatically. You want to access resources predominantly by using the application's process identity, but specific methods need to use the original caller's identity.",
      "Impersonating a specific Windows identity. You need to use a specific identity or several Windows identities to access particular resources."
    ],
    "strong": [
      "LogonUser",
      "WindowsIdentity",
      "Impersonating the original caller.",
      "Impersonating the original caller programmatically.",
      "Impersonating a specific Windows identity."
    ],
    "br": [
      "",
      "",
      "",
      ""
    ],
    "pre": [
      "WindowsIdentity winIdentity = new WindowsIdentity(username + \"@NTDOMAIN\");WindowsImpersonationContext ctx = winIdentity.Impersonate(); // Access the database"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>What to Do</h1>\n  <p>Avoid the use of impersonation unless required, and limit its use as much as possible when it is required.</p>\n  <h1>Why</h1>\n  <p>If programmatic impersonation is not done properly, it can introduce security vulnerabilities. It is difficult to get impersonation correct, particularly in multithreaded applications. When possible, use alternative approaches such as a custom domain process identity for resource access. You should avoid programmatic impersonation where possible for the following reasons:</p>\n  <ul>\n    <li>It is easy to introduce errors because of thread switches where the thread impersonation token is not propagated across threads. </li>\n    <li>Some programmatic techniques require you to store credentials which should be avoided. </li>\n    <li>Some programmatic techniques require you to grant additional privileges to your process account, which you should avoid. For example, you must grant your process account \"Act as part of the operating system\" if you call <strong>LogonUser</strong> on Windows Server 2000 or to obtain an impersonate-level token on Windows Server 2003 when you use the new <strong>WindowsIdentity</strong> constructor that generates a token from a user principal name. </li>\n    <li>If exceptions occur while impersonating, it is possible for malicious code higher in the call stack to run using the impersonated identity. This can present security issues, particularly if you impersonate a highly privileged account. <br /></li>\n  </ul>\n  <h1>When</h1>\n  <p>Always limit your application's use of impersonation as much as possible. <br /></p>\n  <h1>How</h1>\n  <p>By default ASP.NET runs with the following configuration:</p>\n  <ul>\n    <li>IIS 5: Applications run by default using the least privileged ASPNET account. </li>\n    <li>IIS 6 and later: Applications run inside an application pool using the least privileged Network Service account. If you need to use a custom service account to run your ASP.NET Web application, create a least-privileged account. You might need to create a custom service account to isolate your application from other applications on the same server or to be able to audit each application separately.</li>\n  </ul>\n  <p>Impersonation is potentially very dangerous. Although it is possible to use it safely, impersonation should be avoided when it is not absolutely required. </p>\n  <p>Do not use impersonation when you merely need to securely pass the identity of a user downstream, as opposed to their entire security context. For instance, if a database backend needs to know the identity of the user connecting to it, the web front end can act as a trusted subsystem and authenticate and authorize users, passing the user id to the database over a secure connection instead of impersonating that user to the database. Not only is not using impersonation in these cases more secure, it's also faster—impersonating a user in this situation prevents use of connection pools, adding a lot of overhead.</p>\n  <p>Whenever possible, avoid impersonating a single user to gain access to resources. A more appropriate solution is to either alter ACLs as needed so as to grant the application's normal process identity access, or to use a trusted subsystem solution where an intermediate point handles access control. While care must be taken with both ACLs and trusted subsystems, they have the advantage of only providing the calling process the single specific ability they need, instead of allowing the process to do anything the impersonated identity can do. </p>\n  <p>The most common situations where impersonation might be required for application functionality are: </p>\n  <ul>\n    <li>\n      <strong>Impersonating the original caller.</strong> You want to access Windows resources that are protected with ACLs configured for your application's domain user accounts. This method is also valid when your application is located behind a firewall as access to your organization's domain controller will be restricted. </li>\n    <li>\n      <strong>Impersonating the original caller programmatically. </strong>You want to access resources predominantly by using the application's process identity, but specific methods need to use the original caller's identity. </li>\n    <li>\n      <strong>Impersonating a specific Windows identity.</strong> You need to use a specific identity or several Windows identities to access particular resources.</li>\n  </ul>\n  <p>These are all valid uses of impersonation, but care should be taken to ensure that the action cannot be accomplished without using impersonation before implementing it.</p>\n  <h1>Problem Example</h1>\n  <p>MyApp is the HR application at MyCorp. In order to provide security for user data in the database, the application impersonates the connecting user when talking to the database, instead of enforcing the security policy locally. This allows an attack to potentially take actions as a real user in the domain, instead of just as the application account. In the case of SQL injection to an unhardened SQL server, this could be potentially critical.</p>\n  <pre>WindowsIdentity winIdentity = new WindowsIdentity(username + \"@NTDOMAIN\");<br />WindowsImpersonationContext ctx = winIdentity.Impersonate(); // Access the database</pre>\n  <h1>Solution Example</h1>\n  <p>MyApp is the HR application at MyCorp. In order to provide security for user data in the database, the application carefully enforces the intended set of business rules at the application layer and uses a single, low privilege account to connect to the database with. The account is not a full domain user, and has not privileges in the databse other than running a pre-specified set of stored procedures. Even if a SQL injection or code injection compromise occurs, the system will not be running with an elevated privilege.</p>\n  <br />\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}