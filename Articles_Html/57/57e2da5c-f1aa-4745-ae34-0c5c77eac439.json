{
  "id": "57e2da5c-f1aa-4745-ae34-0c5c77eac439",
  "checksum": "d6302efaa8757c238ea47720a94fb518",
  "words": {
    "2048": [
      "pre"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "p",
      "p",
      "ul",
      "li",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "c#": [
      "ul",
      "li"
    ],
    "summary": [
      "h1"
    ],
    "this": [
      "p",
      "pre"
    ],
    "code": [
      "p",
      "p"
    ],
    "demonstrates": [
      "p"
    ],
    "generation": [
      "p"
    ],
    "of": [
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "an": [
      "p",
      "ul",
      "li",
      "pre",
      "ul",
      "li",
      "p",
      "title"
    ],
    "rsa": [
      "p",
      "ul",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "signature": [
      "p",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "title"
    ],
    "on": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p"
    ],
    "a": [
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "title"
    ],
    "given": [
      "p",
      "ul",
      "li",
      "p",
      "title"
    ],
    "message": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "which": [
      "p",
      "ul",
      "li",
      "pre",
      "p",
      "p",
      "pre"
    ],
    "can": [
      "p",
      "ul",
      "li",
      "pre",
      "p"
    ],
    "be": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "used": [
      "p",
      "ul",
      "li",
      "p",
      "p"
    ],
    "perform": [
      "p",
      "pre",
      "p",
      "p",
      "ul",
      "li"
    ],
    "integrity": [
      "p",
      "ul",
      "li"
    ],
    "checking": [
      "p"
    ],
    "and": [
      "p",
      "ul",
      "li",
      "pre",
      "p"
    ],
    "provides": [
      "p"
    ],
    "non-repudiation": [
      "p",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "for": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "the": [
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "pre"
    ],
    "sent": [
      "p"
    ],
    "by": [
      "p",
      "ul",
      "li",
      "pre",
      "p",
      "p"
    ],
    "another": [
      "p"
    ],
    "entity": [
      "p",
      "p"
    ],
    "objectives": [
      "h1"
    ],
    "create": [
      "ul",
      "li",
      "pre",
      "pre"
    ],
    "cryptographic": [
      "ul",
      "li",
      "pre"
    ],
    "public": [
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "pre",
      "p"
    ],
    "key": [
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "pre"
    ],
    "in": [
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "providing": [
      "ul",
      "li"
    ],
    "checks": [
      "ul",
      "li"
    ],
    "data": [
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "pre",
      "p",
      "pre",
      "p"
    ],
    "stored": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "periods": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "time": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "or": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "transmitted": [
      "ul",
      "li"
    ],
    "provide": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "piece": [
      "ul",
      "li"
    ],
    "independently": [
      "ul",
      "li"
    ],
    "validated": [
      "ul",
      "li"
    ],
    "users": [
      "ul",
      "li"
    ],
    "who": [
      "ul",
      "li"
    ],
    "posess": [
      "ul",
      "li"
    ],
    "scenarios": [
      "h1"
    ],
    "two": [
      "ul",
      "li",
      "p"
    ],
    "entities": [
      "ul",
      "li",
      "p"
    ],
    "client-server": [
      "ul",
      "li"
    ],
    "client-client": [
      "ul",
      "li"
    ],
    "architecture": [
      "ul",
      "li"
    ],
    "need": [
      "ul",
      "li"
    ],
    "transmit": [
      "ul",
      "li"
    ],
    "with": [
      "ul",
      "li",
      "pre",
      "pre",
      "p",
      "ul",
      "li",
      "pre",
      "pre",
      "p",
      "pre"
    ],
    "mechanism": [
      "ul",
      "li"
    ],
    "validate": [
      "ul",
      "li"
    ],
    "authenticity": [
      "ul",
      "li"
    ],
    "sender": [
      "ul",
      "li",
      "p"
    ],
    "non-repududiation": [
      "ul",
      "li"
    ],
    "application": [
      "ul",
      "li",
      "pre"
    ],
    "stores": [
      "ul",
      "li"
    ],
    "files": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "prolonged": [
      "ul",
      "li"
    ],
    "developer": [
      "ul",
      "li"
    ],
    "wants": [
      "ul",
      "li"
    ],
    "ensure": [
      "ul",
      "li",
      "pre",
      "p",
      "p",
      "pre"
    ],
    "they": [
      "ul",
      "li"
    ],
    "aren't": [
      "ul",
      "li"
    ],
    "altered": [
      "ul",
      "li"
    ],
    "over": [
      "ul",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "solution": [
      "h1",
      "p"
    ],
    "example": [
      "h1",
      "h1",
      "p"
    ],
    "//": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "signatures": [
      "pre",
      "p"
    ],
    "is": [
      "pre",
      "pre",
      "p",
      "p",
      "ul",
      "li",
      "pre",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "hashed": [
      "pre",
      "p"
    ],
    "predefined": [
      "pre"
    ],
    "hashing": [
      "pre",
      "p"
    ],
    "algorithm//": [
      "pre"
    ],
    "digest": [
      "pre",
      "p",
      "pre"
    ],
    "hash": [
      "pre",
      "ul",
      "li"
    ],
    "signed": [
      "pre"
    ],
    "private": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "pre"
    ],
    "keypairpublic": [
      "pre"
    ],
    "static": [
      "pre",
      "pre"
    ],
    "byte]": [
      "pre",
      "pre",
      "pre"
    ],
    "signmessagebyte[]": [
      "pre"
    ],
    "rsaparameters": [
      "pre",
      "pre",
      "pre"
    ],
    "privkey{": [
      "pre"
    ],
    "crypto": [
      "pre"
    ],
    "provider": [
      "pre"
    ],
    "default": [
      "pre"
    ],
    "creating": [
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "rsacryptoserviceprovider": [
      "pre",
      "pre",
      "pre"
    ],
    "causes": [
      "pre"
    ],
    "/": [
      "pre",
      "ul",
      "li"
    ],
    "pair": [
      "pre",
      "p"
    ],
    "generated": [
      "pre"
    ],
    "myrsaprovider": [
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "rsacryptoserviceprovider);": [
      "pre"
    ],
    "import": [
      "pre"
    ],
    "our": [
      "pre",
      "p",
      "pre"
    ],
    "so": [
      "pre"
    ],
    "we": [
      "pre",
      "pre"
    ],
    "signing": [
      "pre",
      "p",
      "pre",
      "p",
      "ul",
      "li"
    ],
    "operation": [
      "pre"
    ],
    "myrsaproviderimportparameters(privkey);": [
      "pre"
    ],
    "myrsaprovidersigndata(message,": [
      "pre"
    ],
    "sha1cryptoserviceprovider));": [
      "pre"
    ],
    "return": [
      "pre",
      "pre"
    ],
    "signature}": [
      "pre"
    ],
    "problem": [
      "h1"
    ],
    "perhaps": [
      "p",
      "p"
    ],
    "most": [
      "p",
      "p",
      "p"
    ],
    "common": [
      "p",
      "p",
      "p"
    ],
    "pitfall": [
      "p",
      "p"
    ],
    "developers": [
      "p"
    ],
    "encounter": [
      "p"
    ],
    "when": [
      "p",
      "pre",
      "p",
      "pre"
    ],
    "communicating": [
      "p"
    ],
    "remote": [
      "p",
      "pre",
      "p",
      "pre"
    ],
    "node": [
      "p"
    ],
    "communications": [
      "p",
      "ul",
      "li",
      "p"
    ],
    "channel": [
      "p"
    ],
    "failure": [
      "p"
    ],
    "any": [
      "p",
      "p"
    ],
    "such": [
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "pre",
      "p",
      "pre",
      "pre"
    ],
    "implemented": [
      "p"
    ],
    "next": [
      "p"
    ],
    "simply": [
      "p",
      "ul",
      "li"
    ],
    "using": [
      "p",
      "pre"
    ],
    "algortihm": [
      "p"
    ],
    "demonstrated": [
      "p"
    ],
    "below": [
      "p",
      "pre",
      "pre"
    ],
    "string": [
      "pre",
      "pre",
      "pre"
    ],
    "generatedigeststring": [
      "pre"
    ],
    "input{": [
      "pre"
    ],
    "instantiate": [
      "pre"
    ],
    "sha1": [
      "pre",
      "pre"
    ],
    "sha": [
      "pre"
    ],
    "sha1cryptoserviceprovider);": [
      "pre"
    ],
    "asciiencodingascii.getstring(sha.computehash(asciiencoding.ascii.getbytes(input)));}": [
      "pre"
    ],
    "if": [
      "ul",
      "li",
      "pre",
      "pre"
    ],
    "intercepted": [
      "ul",
      "li"
    ],
    "transit": [
      "ul",
      "li"
    ],
    "modified": [
      "ul",
      "li"
    ],
    "storage": [
      "ul",
      "li",
      "p"
    ],
    "attacker": [
      "ul",
      "li"
    ],
    "may": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "their": [
      "ul",
      "li"
    ],
    "own": [
      "ul",
      "li"
    ],
    "representation": [
      "ul",
      "li"
    ],
    "value": [
      "ul",
      "li",
      "pre",
      "pre"
    ],
    "included": [
      "ul",
      "li",
      "p"
    ],
    "along": [
      "ul",
      "li"
    ],
    "file": [
      "ul",
      "li"
    ],
    "disk": [
      "ul",
      "li"
    ],
    "test": [
      "h1",
      "pre",
      "p",
      "p",
      "p"
    ],
    "case": [
      "h1",
      "pre",
      "pre",
      "p",
      "p",
      "p"
    ],
    "following": [
      "p",
      "p",
      "p"
    ],
    "classes": [
      "p"
    ],
    "must": [
      "p"
    ],
    "project": [
      "p"
    ],
    "making": [
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "sample": [
      "p"
    ],
    "provided": [
      "p"
    ],
    "above": [
      "p",
      "p"
    ],
    "systemtext;using": [
      "pre"
    ],
    "systemsecurity;using": [
      "pre"
    ],
    "systemsecurity.cryptography;static": [
      "pre"
    ],
    "void": [
      "pre"
    ],
    "mainstring[]": [
      "pre"
    ],
    "args{": [
      "pre"
    ],
    "keypair": [
      "pre"
    ],
    "strong": [
      "pre"
    ],
    "keysize": [
      "pre"
    ],
    "bits": [
      "pre"
    ],
    "production": [
      "pre"
    ],
    "would": [
      "pre"
    ],
    "load": [
      "pre"
    ],
    "from": [
      "pre",
      "p"
    ],
    "dpapi": [
      "pre"
    ],
    "protected": [
      "pre"
    ],
    "registry": [
      "pre"
    ],
    "rsaprovider": [
      "pre"
    ],
    "rsacryptoserviceprovider2048);": [
      "pre"
    ],
    "exportparameters": [
      "pre",
      "pre"
    ],
    "method": [
      "pre",
      "pre"
    ],
    "takes": [
      "pre",
      "pre"
    ],
    "boolean": [
      "pre",
      "pre"
    ],
    "determines": [
      "pre",
      "pre"
    ],
    "whether": [
      "pre"
    ],
    "export": [
      "pre",
      "pre",
      "p",
      "pre",
      "p"
    ],
    "within": [
      "pre",
      "p",
      "pre"
    ],
    "parameters": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "exporting": [
      "pre"
    ],
    "only": [
      "pre",
      "p",
      "p",
      "p",
      "pre"
    ],
    "parameter": [
      "pre",
      "pre"
    ],
    "shared": [
      "pre",
      "p",
      "pre"
    ],
    "party": [
      "pre",
      "pre"
    ],
    "rsapubkeyparams": [
      "pre",
      "pre"
    ],
    "rsaproviderexportparameters(false);": [
      "pre",
      "pre"
    ],
    "we'll": [
      "pre"
    ],
    "also": [
      "pre"
    ],
    "operations": [
      "pre"
    ],
    "rsaprivkeyparams": [
      "pre"
    ],
    "rsaproviderexportparameters(true);": [
      "pre"
    ],
    "message1": [
      "pre"
    ],
    "\"the": [
      "pre",
      "pre"
    ],
    "quick": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "brown": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "fox": [
      "pre",
      "pre",
      "pre"
    ],
    "jumped": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "lazy": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "dog\"": [
      "pre"
    ],
    "message2": [
      "pre"
    ],
    "dog": [
      "pre",
      "pre"
    ],
    "fox\"": [
      "pre"
    ],
    "sig": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "signmessageasciiencoding.ascii.getbytes(message1),": [
      "pre"
    ],
    "rsaprivkeyparams;": [
      "pre"
    ],
    "consoleout.writeline(\"msg:": [
      "pre"
    ],
    "\"+message1;": [
      "pre"
    ],
    "consoleout.writeline(\"\\nrsa": [
      "pre"
    ],
    "\"": [
      "pre",
      "pre",
      "pre"
    ],
    "+converttobase64string(sig));": [
      "pre"
    ],
    "consoleout.writeline(\"\\ntest": [
      "pre",
      "pre"
    ],
    "#1\");": [
      "pre"
    ],
    "consoleout.writeline(\"validating": [
      "pre",
      "pre"
    ],
    "msg": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "+": [
      "pre",
      "pre"
    ],
    "message1;": [
      "pre"
    ],
    "verifymessagesignature(asciiencoding.ascii.getbytes(message1),": [
      "pre"
    ],
    "rsapubkeyparams)": [
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "consoleout.writeline(\"valid": [
      "pre",
      "pre"
    ],
    "signature\");": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "}": [
      "pre",
      "pre",
      "pre"
    ],
    "else": [
      "pre",
      "pre"
    ],
    "consoleout.writeline(\"invalid": [
      "pre",
      "pre"
    ],
    "#2\");": [
      "pre"
    ],
    "message2;": [
      "pre"
    ],
    "verifymessagesignature(asciiencoding.ascii.getbytes(message2),": [
      "pre"
    ],
    "}}": [
      "pre"
    ],
    "expected": [
      "h1"
    ],
    "result": [
      "h1",
      "p"
    ],
    "running": [
      "p"
    ],
    "will": [
      "p"
    ],
    "output": [
      "p"
    ],
    "dogrsa": [
      "pre"
    ],
    "e1ugw7omhpop9lgnjfla7iwuqhlrxl87tmhnkqgpowcssx70ftt78t4me5lf5iog4eligbtuh5mivjdsqkxztbk64v+w5gcuqsesiqcmjztchpbeyc0e9tqnbaflo+8yisp6aisdss9w5osngnj0tn3vt2vnrqwa8qorlmifvrpxtqu4gm60sho2rkitsimu81m3mfni3is/madln6bwxnnvdnxjfpdadenaihvdbsrideev4cbaqe59gbjjsbbfy15xc5x0ufnske0eg+k3lurjeqdsg03ofnbhmi8zl7otawhw0xrygh/abqzctettjj+rslpxv5nsrxhzsfxldw==": [
      "pre"
    ],
    "#1": [
      "p"
    ],
    "validating": [
      "pre",
      "pre"
    ],
    "dogvalid": [
      "pre"
    ],
    "#2": [
      "p"
    ],
    "foxinvalid": [
      "pre"
    ],
    "more": [
      "h1",
      "p",
      "p"
    ],
    "information": [
      "h1",
      "p"
    ],
    "potential": [
      "p"
    ],
    "pitfalls": [
      "p"
    ],
    "secure": [
      "p",
      "p"
    ],
    "include": [
      "p",
      "p"
    ],
    "session": [
      "p",
      "p",
      "p",
      "p"
    ],
    "replay": [
      "p",
      "p",
      "p"
    ],
    "attacks": [
      "p"
    ],
    "mitigated": [
      "p"
    ],
    "through": [
      "p"
    ],
    "includes": [
      "p"
    ],
    "timestamp": [
      "p"
    ],
    "identifier": [
      "p"
    ],
    "once": [
      "p"
    ],
    "performing": [
      "p"
    ],
    "it": [
      "p"
    ],
    "possible": [
      "p"
    ],
    "protect": [
      "p"
    ],
    "against": [
      "p"
    ],
    "because": [
      "p"
    ],
    "generate": [
      "p",
      "title"
    ],
    "valid": [
      "p"
    ],
    "properties": [
      "p"
    ],
    "asymmetric": [
      "p",
      "p"
    ],
    "encryption": [
      "p",
      "p"
    ],
    "algorithms": [
      "p"
    ],
    "single": [
      "p"
    ],
    "important": [
      "p"
    ],
    "design": [
      "p"
    ],
    "consideration": [
      "p"
    ],
    "communication": [
      "p"
    ],
    "protocol": [
      "p"
    ],
    "altogether": [
      "p"
    ],
    "however": [
      "p"
    ],
    "routines": [
      "p"
    ],
    "are": [
      "p",
      "p"
    ],
    "expensive": [
      "p"
    ],
    "generally": [
      "p"
    ],
    "performed": [
      "p"
    ],
    "during": [
      "p",
      "p"
    ],
    "initial": [
      "p"
    ],
    "exchange": [
      "p"
    ],
    "process": [
      "p"
    ],
    "agree": [
      "p"
    ],
    "secret": [
      "p"
    ],
    "-": [
      "p"
    ],
    "symmetric": [
      "p"
    ],
    "efficient": [
      "p"
    ],
    "hmac": [
      "p"
    ],
    "algorithm": [
      "p"
    ],
    "care": [
      "p"
    ],
    "should": [
      "p"
    ],
    "taken": [
      "p"
    ],
    "keys": [
      "p",
      "p"
    ],
    "container": [
      "p"
    ],
    "please": [
      "p"
    ],
    "refer": [
      "p"
    ],
    "http//msdn2.microsoft.com/en-us/library/system.security.cryptography.cspparameters(vs.80).aspx).": [
      "p"
    ],
    "sharing": [
      "p"
    ],
    "always": [
      "p"
    ],
    "exported": [
      "p"
    ],
    "rather": [
      "p"
    ],
    "than": [
      "p"
    ],
    "full": [
      "p"
    ],
    "one": [
      "p"
    ],
    "call": [
      "p"
    ],
    "methods": [
      "p"
    ],
    "whether//": [
      "pre"
    ],
    "exporting//": [
      "pre"
    ],
    "alternatively": [
      "p"
    ],
    "just": [
      "p"
    ],
    "xml": [
      "p"
    ],
    "setting": [
      "pre"
    ],
    "argument": [
      "pre"
    ],
    "false": [
      "pre"
    ],
    "ensures": [
      "pre"
    ],
    "private//": [
      "pre"
    ],
    "not": [
      "pre"
    ],
    "exportedrsapubstring": [
      "pre"
    ],
    "myrsaprovidertoxmlstring(false);": [
      "pre"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "encrycryption": [
      "ul",
      "li"
    ],
    "http//en.wikipedia.org/wiki/rsa": [
      "ul",
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {},
  "links": [
    {
      "href": "http://en.wikipedia.org/wiki/RSA",
      "text": "http://en.wikipedia.org/wiki/RSA"
    }
  ]
}