{
  "id": "10ae09e5-8136-496c-9772-2390f5eff84c",
  "checksum": "d3bc041485e52fe277469d91c70fe62c98abb931",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "2003": [
      "ol",
      "li",
      "p"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "div",
      "pre",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "div",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "div",
      "pre",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "title"
    ],
    "aspnet": [
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "strong",
      "p"
    ],
    "summary": [
      "h1"
    ],
    "this": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "how": [
      "p",
      "p",
      "title"
    ],
    "shows": [
      "p"
    ],
    "use": [
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "div",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p"
    ],
    "rsa": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "div",
      "pre",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "div",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "div",
      "pre",
      "p",
      "li",
      "li",
      "li",
      "p",
      "div",
      "pre",
      "p",
      "title"
    ],
    "protected": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "div",
      "pre"
    ],
    "configuration": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "div",
      "pre",
      "title"
    ],
    "provider": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "and": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "div",
      "pre",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "div",
      "pre",
      "li",
      "li",
      "p",
      "p"
    ],
    "aspnet_regiisexe": [
      "p",
      "p"
    ],
    "tool": [
      "p",
      "p"
    ],
    "encrypt": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "div",
      "pre",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "title"
    ],
    "sections": [
      "p",
      "p",
      "title"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "files": [
      "p",
      "p",
      "p"
    ],
    "you": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "can": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "sensitive": [
      "p"
    ],
    "data": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "such": [
      "p"
    ],
    "as": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "connection": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "div",
      "pre",
      "p"
    ],
    "strings": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "held": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "webconfig": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "machineconfig": [
      "p"
    ],
    "easily": [
      "p"
    ],
    "export": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "import": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "keys": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "div",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "div",
      "pre",
      "p"
    ],
    "from": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "div",
      "pre",
      "p",
      "p"
    ],
    "server": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "makes": [
      "p"
    ],
    "encryption": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "particularly": [
      "p"
    ],
    "effective": [
      "p"
    ],
    "for": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "div",
      "pre"
    ],
    "encrypting": [
      "p",
      "ol",
      "li",
      "div",
      "pre"
    ],
    "used": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "on": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "multiple": [
      "p"
    ],
    "servers": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "web": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "farm": [
      "p",
      "p"
    ],
    "instructions": [
      "h1"
    ],
    "perform": [
      "p"
    ],
    "following": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "actions": [
      "p"
    ],
    "using": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "div",
      "pre",
      "p"
    ],
    "environment": [
      "p"
    ],
    "create": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "custom": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "key": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "div",
      "pre",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "div",
      "pre",
      "p"
    ],
    "container": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "run": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "command": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "prompt": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "aspnet_regiis": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "pre",
      "li",
      "p",
      "pre",
      "li",
      "p",
      "pre",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "-pc": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "\"customkeys\"": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "pre",
      "li",
      "p",
      "li",
      "p",
      "pre",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "-exp": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "p"
    ],
    "switch": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "indicates": [
      "ol",
      "li",
      "p"
    ],
    "that": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "are": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "exportable": [
      "ol",
      "li",
      "p"
    ],
    "if": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "is": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "div",
      "pre",
      "p"
    ],
    "successful": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "see": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "output": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "creating": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "container..succeeded!": [
      "ol",
      "ol",
      "li",
      "div",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "verify": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "exists": [
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "looking": [
      "ol",
      "li",
      "p"
    ],
    "file": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "checking": [
      "ol",
      "li",
      "p"
    ],
    "timestamps": [
      "ol",
      "li",
      "p"
    ],
    "location": [
      "ol",
      "li",
      "p"
    ],
    "\\documents": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "settings\\all": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "users\\application": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "data\\microsoft\\crypto\\rsa\\machinekeys": [
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "div",
      "pre"
    ],
    "demo": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "project": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "new": [
      "ol",
      "li",
      "p"
    ],
    "named": [
      "ol",
      "li",
      "p"
    ],
    "webfarmrsa": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "directory": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "configured": [
      "ol",
      "li",
      "p"
    ],
    "virtual": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "test": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "add": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "div",
      "pre",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "div",
      "pre",
      "li",
      "p"
    ],
    "sample": [
      "ol",
      "li",
      "p"
    ],
    "connectionstring": [
      "ol",
      "li",
      "p"
    ],
    "similar": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "connectionstrings>": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "name=\"mylocalsqlserver\"": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "connectionstring=\"initial": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "catalog=aspnetdbdata": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "source=localhostintegrated": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "security=sspi\"": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "providername=\"systemdata.sqlclient\"": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "/</connectionstrings>": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "configure": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "do": [
      "ol",
      "li",
      "p"
    ],
    "configprotecteddata>": [
      "ol",
      "li",
      "p"
    ],
    "section": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "note": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "name": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "set": [
      "ol",
      "li",
      "p"
    ],
    "which": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "created": [
      "ol",
      "li",
      "p"
    ],
    "previously": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "..<configprotecteddata>": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "providers>": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "keycontainername=\"customkeys\"": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "usemachinecontainer=\"true\"       description=\"uses": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "rsacryptoserviceprovider": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "decrypt\"       name=\"customprovider\"": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "type=\"systemconfiguration.rsaprotectedconfigurationprovider,system.configuration,": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "version=20.0.0,": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "culture=neutral": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "publickeytoken=b03f5f7f11d50a3a\"": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "/": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "div",
      "pre",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "/providers></configprotecteddata>...": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "an": [
      "ol",
      "li",
      "p"
    ],
    "sdk": [
      "ol",
      "li",
      "p"
    ],
    "connectionstrings": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "div",
      "pre"
    ],
    "-pe": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "\"connectionstrings\"": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "-app": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "\"/webfarmrsa\"": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "-prov": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "\"customprovider\"": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "section..succeeded!": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "review": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "examine": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "changes": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "elements": [
      "ol",
      "li",
      "p"
    ],
    "modified": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "encrypteddata>": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "cipherdata>": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "ciphervalue>": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "with": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "encrypted": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "..": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "configprotectionprovider=\"customprovider\"": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "encrypteddata": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "type=\"http//www.w3.org/2001/04/xmlenc#element\"": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "xmlns=\"http//www.w3.org/2001/04/xmlenc#\">": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "encryptionmethod": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "algorithm=\"http//www.w3.org/2001/04/xmlenc#tripledes-cbc\"": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "keyinfo": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "xmlns=\"http//www.w3.org/2000/09/xmldsig#\">": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "encryptedkey": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "algorithm=\"http//www.w3.org/2001/04/xmlenc#rsa-1_5\"": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "keyname>rsa": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "key/keyname>": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "/keyinfo>": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "ciphervalue>mwoafwkbylrrvogyefupmmn7e9uwc0d7gfeeyxs3obll710dlqvd5xamwcrxg1wwtoe9nyspqrrijuacm0b26lguoa/": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "gigefvwnslu2kig9spiczsqaqusb/inhrckwceb2xdy7tt+ei/vfsu6itjwe2aicmctwx5i828mp8lv4=": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "/ciphervalue>": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "/cipherdata>": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "div",
      "pre",
      "pre"
    ],
    "/encryptedkey>": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "ciphervalue>iko9jezdlj/k1snyw5+e11cd9ivtlvfhbhsiylgicf1enmnd5wxvdzwp1uow2uay3muv7hrszcrbqq6hfa2uh2rxy5qazfp+iu7sg/": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "ku1zvbwfq8p1uwhvpcukeyrbypiv0wpj9tuif7op4emgaoa+ewlnetsn411gow28ekclpbkwjdoc/": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "9o7g503ym4cnivkqoomkyll+mzmb3rc1fslim9nckqlzi+": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "jkrhldixflsrfpkjhdnf5a0sq2p71zli6g6qdcehhyn3kczybmvwj0ueogwxv4y": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "/encrypteddata>": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "/connectionstrings>...": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "net": [
      "ol",
      "li",
      "p"
    ],
    "-px": [
      "ol",
      "li",
      "p",
      "pre"
    ],
    "\"c\\customkeys.xml\"": [
      "ol",
      "ol",
      "li",
      "p",
      "pre",
      "li",
      "pre"
    ],
    "-pri": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "p"
    ],
    "causes": [
      "ol",
      "li",
      "p"
    ],
    "private": [
      "ol",
      "li",
      "p"
    ],
    "public": [
      "ol",
      "li",
      "p"
    ],
    "exported": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "enables": [
      "ol",
      "li",
      "p"
    ],
    "both": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "decryption": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "without": [
      "ol",
      "li",
      "p"
    ],
    "the-pri": [
      "ol",
      "li",
      "p"
    ],
    "would": [
      "ol",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "li",
      "p"
    ],
    "able": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "exporting": [
      "ol",
      "ol",
      "li",
      "div",
      "pre",
      "li",
      "p"
    ],
    "file..succeeded!": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "move": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "another": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "deploy": [
      "ol",
      "li",
      "p"
    ],
    "application": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "different": [
      "ol",
      "li",
      "p"
    ],
    "computer": [
      "ol",
      "li",
      "p"
    ],
    "also": [
      "ol",
      "li",
      "p"
    ],
    "copy": [
      "ol",
      "li",
      "p"
    ],
    "customkeysxml": [
      "ol",
      "li",
      "p"
    ],
    "local": [
      "ol",
      "li",
      "p"
    ],
    "other": [
      "ol",
      "li",
      "p"
    ],
    "c\\": [
      "ol",
      "li",
      "p"
    ],
    "destination": [
      "ol",
      "li",
      "p"
    ],
    "-pi": [
      "ol",
      "li",
      "pre"
    ],
    "importing": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "pre",
      "p"
    ],
    "file.succeeded!": [
      "ol",
      "li",
      "div",
      "pre"
    ],
    "after": [
      "ol",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "finished": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p"
    ],
    "important": [
      "ol",
      "li",
      "p"
    ],
    "security": [
      "ol",
      "li",
      "p"
    ],
    "reasons": [
      "ol",
      "li",
      "p"
    ],
    "delete": [
      "ol",
      "li",
      "p"
    ],
    "customskeysxml": [
      "ol",
      "li",
      "p"
    ],
    "machines": [
      "ol",
      "li",
      "p"
    ],
    "grant": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "access": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "div",
      "pre"
    ],
    "identity": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "account": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "must": [
      "ol",
      "li",
      "p"
    ],
    "read": [
      "ol",
      "li",
      "p"
    ],
    "not": [
      "ol",
      "li",
      "p"
    ],
    "uses": [
      "ol",
      "li",
      "p"
    ],
    "check": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "adding": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "div",
      "pre"
    ],
    "code": [
      "ol",
      "li",
      "p"
    ],
    "page": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "div",
      "pre"
    ],
    "systemsecurity.principal;...protected": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "void": [
      "ol",
      "ol",
      "li",
      "p",
      "div",
      "pre",
      "li",
      "p",
      "div",
      "pre"
    ],
    "page_loadobject": [
      "ol",
      "ol",
      "li",
      "p",
      "div",
      "pre",
      "li",
      "p",
      "div",
      "pre"
    ],
    "sender": [
      "ol",
      "ol",
      "li",
      "p",
      "div",
      "pre",
      "li",
      "p",
      "div",
      "pre"
    ],
    "eventargs": [
      "ol",
      "ol",
      "li",
      "p",
      "div",
      "pre",
      "li",
      "p",
      "div",
      "pre"
    ],
    "e{": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "responsewrite(windowsidentity.getcurrent().name);}": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "default": [
      "ol",
      "li",
      "p"
    ],
    "applications": [
      "ol",
      "li",
      "p"
    ],
    "windows": [
      "ol",
      "li",
      "p"
    ],
    "nt": [
      "ol",
      "li",
      "p"
    ],
    "authority\\network": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre"
    ],
    "service": [
      "ol",
      "li",
      "p"
    ],
    "grants": [
      "ol",
      "li",
      "p"
    ],
    "customkeys": [
      "ol",
      "li",
      "p"
    ],
    "store": [
      "ol",
      "li",
      "p"
    ],
    "-pa": [
      "ol",
      "li",
      "pre"
    ],
    "\"nt": [
      "ol",
      "li",
      "pre"
    ],
    "service\"": [
      "ol",
      "li",
      "pre"
    ],
    "runs": [
      "ol",
      "li",
      "p"
    ],
    "successfully": [
      "ol",
      "li",
      "p"
    ],
    "acl": [
      "ol",
      "ol",
      "li",
      "li",
      "div",
      "pre",
      "p"
    ],
    "folder": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "one": [
      "ol",
      "li",
      "p"
    ],
    "most": [
      "ol",
      "li",
      "p"
    ],
    "recent": [
      "ol",
      "li",
      "p"
    ],
    "timestamp": [
      "ol",
      "li",
      "p"
    ],
    "settings": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "defaultaspx": [
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "li",
      "p"
    ],
    "then": [
      "ol",
      "li",
      "p"
    ],
    "browse": [
      "ol",
      "li",
      "p"
    ],
    "work": [
      "ol",
      "li",
      "p"
    ],
    "correctly": [
      "ol",
      "li",
      "p"
    ],
    "%@": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "language=\"c#\"": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "%<script": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "runat=\"server\"": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "e": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "{": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "responsewrite(\"clear": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "text": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "string": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "div",
      "pre",
      "p"
    ],
    "\"": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "+": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "configurationmanagerconnectionstrings[\"mylocalsqlserver\"].connectionstring);": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "}/script><html>": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "body/></html>": [
      "ol",
      "li",
      "p",
      "div",
      "pre"
    ],
    "mylocalsqlserver": [
      "ol",
      "li",
      "p",
      "i"
    ],
    "specified": [
      "ol",
      "li",
      "p"
    ],
    "-": [
      "strong"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Instructions"
    ],
    "ul": [
      "ASP.NET 4.0",
      "<EncryptedData> <CipherData> <CipherValue>"
    ],
    "li": [
      "ASP.NET 4.0",
      "Create a custom RSA key container. Run the following command from a command prompt to create a custom RSA encryption key container: aspnet_regiis -pc \"CustomKeys\" -exp The -exp switch indicates that the keys are exportable. If the command is successful, you will see the following output: Creating RSA Key container...Succeeded!  You can verify that a custom key container exists by looking for the file and checking timestamps in the following location: \\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys",
      "Create a demo project. Create a new Web project named WebFarmRSA. Make sure that this directory is configured as a virtual directory.",
      "Create a test configuration. Add a Web.config configuration file to this directory. Add a sample connectionString similar to the following example: \n      \n        <connectionStrings>  <add name=\"MyLocalSQLServer\"        connectionString=\"Initial Catalog=aspnetdb;data source=localhost;Integrated Security=SSPI;\"        providerName=\"System.Data.SqlClient\" /></connectionStrings>",
      "Add and configure a custom protected configuration provider. To do this, add the following <configProtectedData> section to the Web.config file. Note that the key container name is set to \"CustomKeys\", which is the name of the key container created previously. ...<configProtectedData>  <providers>  <add keyContainerName=\"CustomKeys\"        useMachineContainer=\"true\"       description=\"Uses RsaCryptoServiceProvider to encrypt and decrypt\"       name=\"CustomProvider\"       type=\"System.Configuration.RsaProtectedConfigurationProvider,System.Configuration,             Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />  </providers></configProtectedData>...",
      "Encrypt connection strings. Run the following command from an SDK Command Prompt to encrypt the connectionStrings section using the custom RSA key: aspnet_regiis -pe \"connectionStrings\" -app \"/WebFarmRSA\" -prov \"CustomProvider\" If the encryption is successful, you will see the following output: Encrypting configuration section...Succeeded!",
      "Review the Web.config file and examine the changes. The following elements are modified: <EncryptedData> <CipherData> <CipherValue> Your modified Web.Config file, with the connectionStrings section encrypted, should be similar to the following example: ...  <connectionStrings configProtectionProvider=\"CustomProvider\">    <EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"                   xmlns=\"http://www.w3.org/2001/04/xmlenc#\">      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\" />      <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">        <EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\">          <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" />          <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">            <KeyName>Rsa Key</KeyName>          </KeyInfo>          <CipherData>            <CipherValue>MWOaFwkByLRrvoGYeFUPMmN7e9uwC0D7gFEeyxs3Obll710dLQvD5XaMWcRxg1WwtOE9nysPQRrIJUaCm0b26LGUoa/                         giGEfvWnslU2kig9SPICzsQAqUSB/inhRckWceb2xdy7TT+EI/vfsu6itJwE2AicMCTwx5I828mP8lV4=            </CipherValue>          </CipherData>        </EncryptedKey>      </KeyInfo>      <CipherData>        <CipherValue>IKO9jezdlJ/k1snyw5+e11cd9IVTlVfHBHSiYLgICf1EnMNd5WxVDZWP1uOW2UaY3Muv7HrSZCRbqq6hfA2uh2rxy5qAzFP+iu7Sg/                     ku1Zvbwfq8p1UWHvPCukeyrBypiv0wpJ9Tuif7oP4Emgaoa+ewLnETSN411Gow28EKcLpbKWJDOC/                     9o7g503YM4cnIvkQOomkYlL+MzMb3Rc1FSLiM9ncKQLZi+                     JkRhlDIxFlsrFpKJhdNf5A0Sq2P71ZLI6G6QDCehHyn3kCZyBmVWJ0ueoGWXV4y        </CipherValue>      </CipherData>    </EncryptedData>  </connectionStrings>...",
      "<EncryptedData>",
      "<CipherData>",
      "<CipherValue>",
      "Export the RSA key. Run the following command from a .NET command prompt to export the custom RSA encryption key: aspnet_regiis -px \"CustomKeys\" \"C:\\CustomKeys.xml\" -pri The -pri switch causes the private and public key to be exported. This enables both encryption and decryption. Without the-pri switch, you would only be able to encrypt data with the exported key. If the command is successful, you will see the following output: Exporting RSA Keys to file...Succeeded!",
      "Move the RSA keys to another server. Deploy the application and the encrypted Web.config file on a different server computer. Also copy the CustomKeys.xml file to a local directory on the other server, for example to the C:\\ directory. On the destination server, run the following command from a command prompt to import the custom RSA encryption keys: \n      aspnet_regiis -pi \"CustomKeys\" \"C:\\CustomKeys.xml\" \n      If the command is successful, you will see the following output: \n      \n        Importing RSA Keys from file..Succeeded!  \n      \n      \n        Note: After you have finished exporting and importing the RSA keys, it is important for security reasons to delete the CustomsKeys.xml file from both machines.",
      "Grant access to the ASP.NET application identity. The account used to run your Web application must be able to read the RSA key container. If you are not sure which identity your application uses, you can check this by adding the following code to a Web page: using System.Security.Principal;...protected void Page_Load(object sender, EventArgs e){    Response.Write(WindowsIdentity.GetCurrent().Name);}  By default, ASP.NET applications on Windows Server 2003 run using the NT Authority\\Network Service account. The following command grants this account access to the CustomKeys store: aspnet_regiis -pa \"CustomKeys\" \"NT Authority\\Network Service\" If the command runs successfully, you will see the following output. Adding ACL for access to the RSA Key container...Succeeded!  You can check the ACL of the file in the following folder: \\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys  Your RSA key container file will be the one in this folder with the most recent timestamp.",
      "Test the settings. Add the following Default.aspx Web page to your application's virtual directory, and then browse to this page to verify that encryption and decryption work correctly. <%@ Page Language=\"C#\" %><script runat=\"server\">    protected void Page_Load(object sender, EventArgs e)    {        Response.Write(\"Clear text connection string is: \" +                        ConfigurationManager.ConnectionStrings[\"MyLocalSQLServer\"].ConnectionString);    }</script><html>  <body/></html>  MyLocalSQLServer is the name of the connection string you specified previously in the Web.config file."
    ],
    "p": [
      "This How to shows how to use the RSA Protected Configuration provider and the Aspnet_regiis.exe tool to encrypt sections of your configuration files. You can use Aspnet_regiis.exe tool to encrypt sensitive data, such as connection strings, held in the Web.config and Machine.config files. You can easily export and import RSA keys from server to server. This makes RSA encryption particularly effective for encrypting configuration files used on multiple servers in a Web farm.",
      "Perform the following actions to encrypt configuration sections using RSA in a web farm environment:",
      "Create a custom RSA key container. Run the following command from a command prompt to create a custom RSA encryption key container: aspnet_regiis -pc \"CustomKeys\" -exp",
      "The -exp switch indicates that the keys are exportable. If the command is successful, you will see the following output:",
      "You can verify that a custom key container exists by looking for the file and checking timestamps in the following location:",
      "Create a demo project. Create a new Web project named WebFarmRSA. Make sure that this directory is configured as a virtual directory.",
      "Create a test configuration. Add a Web.config configuration file to this directory. Add a sample connectionString similar to the following example:",
      "Add and configure a custom protected configuration provider. To do this, add the following <configProtectedData> section to the Web.config file. Note that the key container name is set to \"CustomKeys\", which is the name of the key container created previously. ...<configProtectedData>  <providers>  <add keyContainerName=\"CustomKeys\"        useMachineContainer=\"true\"       description=\"Uses RsaCryptoServiceProvider to encrypt and decrypt\"       name=\"CustomProvider\"       type=\"System.Configuration.RsaProtectedConfigurationProvider,System.Configuration,             Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />  </providers></configProtectedData>...",
      "Encrypt connection strings. Run the following command from an SDK Command Prompt to encrypt the connectionStrings section using the custom RSA key: aspnet_regiis -pe \"connectionStrings\" -app \"/WebFarmRSA\" -prov \"CustomProvider\"",
      "If the encryption is successful, you will see the following output:",
      "Review the Web.config file and examine the changes. The following elements are modified: <EncryptedData> <CipherData> <CipherValue>",
      "Your modified Web.Config file, with the connectionStrings section encrypted, should be similar to the following example:",
      "Export the RSA key. Run the following command from a .NET command prompt to export the custom RSA encryption key: aspnet_regiis -px \"CustomKeys\" \"C:\\CustomKeys.xml\" -pri",
      "The -pri switch causes the private and public key to be exported. This enables both encryption and decryption. Without the-pri switch, you would only be able to encrypt data with the exported key. If the command is successful, you will see the following output:",
      "Move the RSA keys to another server. Deploy the application and the encrypted Web.config file on a different server computer. Also copy the CustomKeys.xml file to a local directory on the other server, for example to the C:\\ directory. On the destination server, run the following command from a command prompt to import the custom RSA encryption keys:",
      "If the command is successful, you will see the following output:",
      "Note: After you have finished exporting and importing the RSA keys, it is important for security reasons to delete the CustomsKeys.xml file from both machines.",
      "Grant access to the ASP.NET application identity. The account used to run your Web application must be able to read the RSA key container. If you are not sure which identity your application uses, you can check this by adding the following code to a Web page: using System.Security.Principal;...protected void Page_Load(object sender, EventArgs e){    Response.Write(WindowsIdentity.GetCurrent().Name);}",
      "By default, ASP.NET applications on Windows Server 2003 run using the NT Authority\\Network Service account. The following command grants this account access to the CustomKeys store:",
      "If the command runs successfully, you will see the following output.",
      "You can check the ACL of the file in the following folder:",
      "Your RSA key container file will be the one in this folder with the most recent timestamp.",
      "Test the settings. Add the following Default.aspx Web page to your application's virtual directory, and then browse to this page to verify that encryption and decryption work correctly. <%@ Page Language=\"C#\" %><script runat=\"server\">    protected void Page_Load(object sender, EventArgs e)    {        Response.Write(\"Clear text connection string is: \" +                        ConfigurationManager.ConnectionStrings[\"MyLocalSQLServer\"].ConnectionString);    }</script><html>  <body/></html>",
      "MyLocalSQLServer is the name of the connection string you specified previously in the Web.config file.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Create a custom RSA key container. Run the following command from a command prompt to create a custom RSA encryption key container: aspnet_regiis -pc \"CustomKeys\" -exp The -exp switch indicates that the keys are exportable. If the command is successful, you will see the following output: Creating RSA Key container...Succeeded!  You can verify that a custom key container exists by looking for the file and checking timestamps in the following location: \\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys \n    \n      \n        Create a demo project. Create a new Web project named WebFarmRSA. Make sure that this directory is configured as a virtual directory. \n    \n    \n      \n        Create a test configuration. Add a Web.config configuration file to this directory. Add a sample connectionString similar to the following example: \n      \n        <connectionStrings>  <add name=\"MyLocalSQLServer\"        connectionString=\"Initial Catalog=aspnetdb;data source=localhost;Integrated Security=SSPI;\"        providerName=\"System.Data.SqlClient\" /></connectionStrings>  \n      \n    \n    \n      \n      Add and configure a custom protected configuration provider. To do this, add the following <configProtectedData> section to the Web.config file. Note that the key container name is set to \"CustomKeys\", which is the name of the key container created previously. ...<configProtectedData>  <providers>  <add keyContainerName=\"CustomKeys\"        useMachineContainer=\"true\"       description=\"Uses RsaCryptoServiceProvider to encrypt and decrypt\"       name=\"CustomProvider\"       type=\"System.Configuration.RsaProtectedConfigurationProvider,System.Configuration,             Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />  </providers></configProtectedData>...  \n    \n      \n      Encrypt connection strings. Run the following command from an SDK Command Prompt to encrypt the connectionStrings section using the custom RSA key: aspnet_regiis -pe \"connectionStrings\" -app \"/WebFarmRSA\" -prov \"CustomProvider\" If the encryption is successful, you will see the following output: Encrypting configuration section...Succeeded!  \n    \n      \n      Review the Web.config file and examine the changes. The following elements are modified: <EncryptedData> <CipherData> <CipherValue> Your modified Web.Config file, with the connectionStrings section encrypted, should be similar to the following example: ...  <connectionStrings configProtectionProvider=\"CustomProvider\">    <EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"                   xmlns=\"http://www.w3.org/2001/04/xmlenc#\">      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\" />      <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">        <EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\">          <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" />          <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">            <KeyName>Rsa Key</KeyName>          </KeyInfo>          <CipherData>            <CipherValue>MWOaFwkByLRrvoGYeFUPMmN7e9uwC0D7gFEeyxs3Obll710dLQvD5XaMWcRxg1WwtOE9nysPQRrIJUaCm0b26LGUoa/                         giGEfvWnslU2kig9SPICzsQAqUSB/inhRckWceb2xdy7TT+EI/vfsu6itJwE2AicMCTwx5I828mP8lV4=            </CipherValue>          </CipherData>        </EncryptedKey>      </KeyInfo>      <CipherData>        <CipherValue>IKO9jezdlJ/k1snyw5+e11cd9IVTlVfHBHSiYLgICf1EnMNd5WxVDZWP1uOW2UaY3Muv7HrSZCRbqq6hfA2uh2rxy5qAzFP+iu7Sg/                     ku1Zvbwfq8p1UWHvPCukeyrBypiv0wpJ9Tuif7oP4Emgaoa+ewLnETSN411Gow28EKcLpbKWJDOC/                     9o7g503YM4cnIvkQOomkYlL+MzMb3Rc1FSLiM9ncKQLZi+                     JkRhlDIxFlsrFpKJhdNf5A0Sq2P71ZLI6G6QDCehHyn3kCZyBmVWJ0ueoGWXV4y        </CipherValue>      </CipherData>    </EncryptedData>  </connectionStrings>...\n    \n      \n      Export the RSA key. Run the following command from a .NET command prompt to export the custom RSA encryption key: aspnet_regiis -px \"CustomKeys\" \"C:\\CustomKeys.xml\" -pri The -pri switch causes the private and public key to be exported. This enables both encryption and decryption. Without the-pri switch, you would only be able to encrypt data with the exported key. If the command is successful, you will see the following output: Exporting RSA Keys to file...Succeeded!  \n    \n      \n        Move the RSA keys to another server. Deploy the application and the encrypted Web.config file on a different server computer. Also copy the CustomKeys.xml file to a local directory on the other server, for example to the C:\\ directory. On the destination server, run the following command from a command prompt to import the custom RSA encryption keys: \n      aspnet_regiis -pi \"CustomKeys\" \"C:\\CustomKeys.xml\" \n      If the command is successful, you will see the following output: \n      \n        Importing RSA Keys from file..Succeeded!  \n      \n      \n        Note: After you have finished exporting and importing the RSA keys, it is important for security reasons to delete the CustomsKeys.xml file from both machines. \n    \n    \n      \n      Grant access to the ASP.NET application identity. The account used to run your Web application must be able to read the RSA key container. If you are not sure which identity your application uses, you can check this by adding the following code to a Web page: using System.Security.Principal;...protected void Page_Load(object sender, EventArgs e){    Response.Write(WindowsIdentity.GetCurrent().Name);}  By default, ASP.NET applications on Windows Server 2003 run using the NT Authority\\Network Service account. The following command grants this account access to the CustomKeys store: aspnet_regiis -pa \"CustomKeys\" \"NT Authority\\Network Service\" If the command runs successfully, you will see the following output. Adding ACL for access to the RSA Key container...Succeeded!  You can check the ACL of the file in the following folder: \\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys  Your RSA key container file will be the one in this folder with the most recent timestamp. \n    \n      \n      Test the settings. Add the following Default.aspx Web page to your application's virtual directory, and then browse to this page to verify that encryption and decryption work correctly. <%@ Page Language=\"C#\" %><script runat=\"server\">    protected void Page_Load(object sender, EventArgs e)    {        Response.Write(\"Clear text connection string is: \" +                        ConfigurationManager.ConnectionStrings[\"MyLocalSQLServer\"].ConnectionString);    }</script><html>  <body/></html>  MyLocalSQLServer is the name of the connection string you specified previously in the Web.config file."
    ],
    "strong": [
      "Create a custom RSA key container.",
      "-",
      "Create a demo project.",
      "Create a test configuration.",
      "Add and configure a custom protected configuration provider.",
      "Encrypt connection strings.",
      "Review the Web.config file and examine the changes.",
      "Export the RSA key.",
      "Move the RSA keys to another server.",
      "Note:",
      "Grant access to the ASP.NET application identity.",
      "Test the settings."
    ],
    "pre": [
      "aspnet_regiis -pc \"CustomKeys\" -exp",
      "Creating RSA Key container...Succeeded!",
      "\\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys",
      "<connectionStrings>  <add name=\"MyLocalSQLServer\"        connectionString=\"Initial Catalog=aspnetdb;data source=localhost;Integrated Security=SSPI;\"        providerName=\"System.Data.SqlClient\" /></connectionStrings>",
      "...<configProtectedData>  <providers>  <add keyContainerName=\"CustomKeys\"        useMachineContainer=\"true\"       description=\"Uses RsaCryptoServiceProvider to encrypt and decrypt\"       name=\"CustomProvider\"       type=\"System.Configuration.RsaProtectedConfigurationProvider,System.Configuration,             Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />  </providers></configProtectedData>...",
      "aspnet_regiis -pe \"connectionStrings\" -app \"/WebFarmRSA\" -prov \"CustomProvider\"",
      "Encrypting configuration section...Succeeded!",
      "...  <connectionStrings configProtectionProvider=\"CustomProvider\">    <EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"                   xmlns=\"http://www.w3.org/2001/04/xmlenc#\">      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\" />      <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">        <EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\">          <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" />          <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">            <KeyName>Rsa Key</KeyName>          </KeyInfo>          <CipherData>            <CipherValue>MWOaFwkByLRrvoGYeFUPMmN7e9uwC0D7gFEeyxs3Obll710dLQvD5XaMWcRxg1WwtOE9nysPQRrIJUaCm0b26LGUoa/                         giGEfvWnslU2kig9SPICzsQAqUSB/inhRckWceb2xdy7TT+EI/vfsu6itJwE2AicMCTwx5I828mP8lV4=            </CipherValue>          </CipherData>        </EncryptedKey>      </KeyInfo>      <CipherData>        <CipherValue>IKO9jezdlJ/k1snyw5+e11cd9IVTlVfHBHSiYLgICf1EnMNd5WxVDZWP1uOW2UaY3Muv7HrSZCRbqq6hfA2uh2rxy5qAzFP+iu7Sg/                     ku1Zvbwfq8p1UWHvPCukeyrBypiv0wpJ9Tuif7oP4Emgaoa+ewLnETSN411Gow28EKcLpbKWJDOC/                     9o7g503YM4cnIvkQOomkYlL+MzMb3Rc1FSLiM9ncKQLZi+                     JkRhlDIxFlsrFpKJhdNf5A0Sq2P71ZLI6G6QDCehHyn3kCZyBmVWJ0ueoGWXV4y        </CipherValue>      </CipherData>    </EncryptedData>  </connectionStrings>...",
      "aspnet_regiis -px \"CustomKeys\" \"C:\\CustomKeys.xml\" -pri",
      "Exporting RSA Keys to file...Succeeded!",
      "aspnet_regiis -pi \"CustomKeys\" \"C:\\CustomKeys.xml\"",
      "Importing RSA Keys from file..Succeeded!",
      "using System.Security.Principal;...protected void Page_Load(object sender, EventArgs e){    Response.Write(WindowsIdentity.GetCurrent().Name);}",
      "aspnet_regiis -pa \"CustomKeys\" \"NT Authority\\Network Service\"",
      "Adding ACL for access to the RSA Key container...Succeeded!",
      "\\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys",
      "<%@ Page Language=\"C#\" %><script runat=\"server\">    protected void Page_Load(object sender, EventArgs e)    {        Response.Write(\"Clear text connection string is: \" +                        ConfigurationManager.ConnectionStrings[\"MyLocalSQLServer\"].ConnectionString);    }</script><html>  <body/></html>"
    ],
    "div": [
      "Creating RSA Key container...Succeeded!",
      "<connectionStrings>  <add name=\"MyLocalSQLServer\"        connectionString=\"Initial Catalog=aspnetdb;data source=localhost;Integrated Security=SSPI;\"        providerName=\"System.Data.SqlClient\" /></connectionStrings>",
      "...<configProtectedData>  <providers>  <add keyContainerName=\"CustomKeys\"        useMachineContainer=\"true\"       description=\"Uses RsaCryptoServiceProvider to encrypt and decrypt\"       name=\"CustomProvider\"       type=\"System.Configuration.RsaProtectedConfigurationProvider,System.Configuration,             Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />  </providers></configProtectedData>...",
      "Encrypting configuration section...Succeeded!",
      "...  <connectionStrings configProtectionProvider=\"CustomProvider\">    <EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"                   xmlns=\"http://www.w3.org/2001/04/xmlenc#\">      <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\" />      <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">        <EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\">          <EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" />          <KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\">            <KeyName>Rsa Key</KeyName>          </KeyInfo>          <CipherData>            <CipherValue>MWOaFwkByLRrvoGYeFUPMmN7e9uwC0D7gFEeyxs3Obll710dLQvD5XaMWcRxg1WwtOE9nysPQRrIJUaCm0b26LGUoa/                         giGEfvWnslU2kig9SPICzsQAqUSB/inhRckWceb2xdy7TT+EI/vfsu6itJwE2AicMCTwx5I828mP8lV4=            </CipherValue>          </CipherData>        </EncryptedKey>      </KeyInfo>      <CipherData>        <CipherValue>IKO9jezdlJ/k1snyw5+e11cd9IVTlVfHBHSiYLgICf1EnMNd5WxVDZWP1uOW2UaY3Muv7HrSZCRbqq6hfA2uh2rxy5qAzFP+iu7Sg/                     ku1Zvbwfq8p1UWHvPCukeyrBypiv0wpJ9Tuif7oP4Emgaoa+ewLnETSN411Gow28EKcLpbKWJDOC/                     9o7g503YM4cnIvkQOomkYlL+MzMb3Rc1FSLiM9ncKQLZi+                     JkRhlDIxFlsrFpKJhdNf5A0Sq2P71ZLI6G6QDCehHyn3kCZyBmVWJ0ueoGWXV4y        </CipherValue>      </CipherData>    </EncryptedData>  </connectionStrings>...",
      "Exporting RSA Keys to file...Succeeded!",
      "Importing RSA Keys from file..Succeeded!",
      "using System.Security.Principal;...protected void Page_Load(object sender, EventArgs e){    Response.Write(WindowsIdentity.GetCurrent().Name);}",
      "Adding ACL for access to the RSA Key container...Succeeded!",
      "\\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys",
      "<%@ Page Language=\"C#\" %><script runat=\"server\">    protected void Page_Load(object sender, EventArgs e)    {        Response.Write(\"Clear text connection string is: \" +                        ConfigurationManager.ConnectionStrings[\"MyLocalSQLServer\"].ConnectionString);    }</script><html>  <body/></html>"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "i": [
      "MyLocalSQLServer"
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>ASP.NET 4.0</li>\n  </ul>\n  <h1>Summary</h1>\n  <p>This How to shows how to use the RSA Protected Configuration provider and the Aspnet_regiis.exe tool to encrypt sections of your configuration files. You can use Aspnet_regiis.exe tool to encrypt sensitive data, such as connection strings, held in the Web.config and Machine.config files. You can easily export and import RSA keys from server to server. This makes RSA encryption particularly effective for encrypting configuration files used on multiple servers in a Web farm.</p>\n  <h1>Instructions</h1>\n  <p>Perform the following actions to encrypt configuration sections using RSA in a web farm environment:</p>\n  <ol>\n    <li>\n      <p />\n      <strong>Create a custom RSA key container.</strong> Run the following command from a command prompt to create a custom RSA encryption key container: <pre>aspnet_regiis -pc \"CustomKeys\" -exp </pre><p>The <strong>-</strong>exp switch indicates that the keys are exportable. If the command is successful, you will see the following output: </p><div><pre>Creating RSA Key container...Succeeded!  </pre></div><p>You can verify that a custom key container exists by looking for the file and checking timestamps in the following location: </p><pre>\\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys </pre></li>\n    <li>\n      <p>\n        <strong>Create a demo project.</strong> Create a new Web project named WebFarmRSA. Make sure that this directory is configured as a virtual directory. </p>\n    </li>\n    <li>\n      <p>\n        <strong>Create a test configuration.</strong> Add a Web.config configuration file to this directory. Add a sample connectionString similar to the following example: </p>\n      <div>\n        <pre>&lt;connectionStrings&gt;<br />&nbsp; &lt;add name=\"MyLocalSQLServer\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionString=\"Initial Catalog=aspnetdb;data source=localhost;Integrated Security=SSPI;\" <br />       providerName=\"System.Data.SqlClient\" /&gt;<br />&lt;/connectionStrings&gt;  </pre>\n      </div>\n    </li>\n    <li>\n      <p />\n      <strong>Add and configure a custom protected configuration provider.</strong> To do this, add the following &lt;configProtectedData&gt; section to the Web.config file. Note that the key container name is set to \"CustomKeys\", which is the name of the key container created previously. <div><pre>...<br />&lt;configProtectedData&gt;<br />&nbsp; &lt;providers&gt;<br />&nbsp; &lt;add keyContainerName=\"CustomKeys\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;useMachineContainer=\"true\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;description=\"Uses RsaCryptoServiceProvider to encrypt and decrypt\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name=\"CustomProvider\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Configuration.RsaProtectedConfigurationProvider,System.Configuration,<br />             Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" /&gt;<br />&nbsp; &lt;/providers&gt;<br />&lt;/configProtectedData&gt;<br />...  </pre></div></li>\n    <li>\n      <p />\n      <strong>Encrypt connection strings.</strong> Run the following command from an SDK Command Prompt to encrypt the connectionStrings section using the custom RSA key: <pre>aspnet_regiis -pe \"connectionStrings\" -app \"/WebFarmRSA\" -prov \"CustomProvider\" </pre><p>If the encryption is successful, you will see the following output: </p><div><pre>Encrypting configuration section...Succeeded!  </pre></div></li>\n    <li>\n      <p />\n      <strong>Review the Web.config file and examine the changes.</strong> The following elements are modified: <ul><li>&lt;EncryptedData&gt; </li><li>&lt;CipherData&gt; </li><li>&lt;CipherValue&gt; </li></ul><p>Your modified Web.Config file, with the connectionStrings section encrypted, should be similar to the following example: </p><div><pre>...<br />  &lt;connectionStrings configProtectionProvider=\"CustomProvider\"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;EncryptedData Type=\"http://www.w3.org/2001/04/xmlenc#Element\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;              xmlns=\"http://www.w3.org/2001/04/xmlenc#\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#tripledes-cbc\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EncryptedKey xmlns=\"http://www.w3.org/2001/04/xmlenc#\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EncryptionMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;KeyInfo xmlns=\"http://www.w3.org/2000/09/xmldsig#\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;KeyName&gt;Rsa Key&lt;/KeyName&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/KeyInfo&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;CipherData&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;CipherValue&gt;MWOaFwkByLRrvoGYeFUPMmN7e9uwC0D7gFEeyxs3Obll710dLQvD5XaMWcRxg1WwtOE9nysPQRrIJUaCm0b26LGUoa/<br />                         giGEfvWnslU2kig9SPICzsQAqUSB/inhRckWceb2xdy7TT+EI/vfsu6itJwE2AicMCTwx5I828mP8lV4=<br />            &lt;/CipherValue&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/CipherData&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/EncryptedKey&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/KeyInfo&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;CipherData&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;CipherValue&gt;IKO9jezdlJ/k1snyw5+e11cd9IVTlVfHBHSiYLgICf1EnMNd5WxVDZWP1uOW2UaY3Muv7HrSZCRbqq6hfA2uh2rxy5qAzFP+iu7Sg/<br />                     ku1Zvbwfq8p1UWHvPCukeyrBypiv0wpJ9Tuif7oP4Emgaoa+ewLnETSN411Gow28EKcLpbKWJDOC/<br />                     9o7g503YM4cnIvkQOomkYlL+MzMb3Rc1FSLiM9ncKQLZi+<br />                     JkRhlDIxFlsrFpKJhdNf5A0Sq2P71ZLI6G6QDCehHyn3kCZyBmVWJ0ueoGWXV4y<br />        &lt;/CipherValue&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/CipherData&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/EncryptedData&gt;<br />&nbsp; &lt;/connectionStrings&gt;<br />...</pre></div></li>\n    <li>\n      <p />\n      <strong>Export the RSA key.</strong> Run the following command from a .NET command prompt to export the custom RSA encryption key: <pre>aspnet_regiis -px \"CustomKeys\" \"C:\\CustomKeys.xml\" -pri </pre><p>The -pri switch causes the private and public key to be exported. This enables both encryption and decryption. Without the-pri switch, you would only be able to encrypt data with the exported key. If the command is successful, you will see the following output: </p><div><pre>Exporting RSA Keys to file...Succeeded!  </pre></div></li>\n    <li>\n      <p>\n        <strong>Move the RSA keys to another server.</strong> Deploy the application and the encrypted Web.config file on a different server computer. Also copy the CustomKeys.xml file to a local directory on the other server, for example to the C:\\ directory. On the destination server, run the following command from a command prompt to import the custom RSA encryption keys: </p>\n      <pre>aspnet_regiis -pi \"CustomKeys\" \"C:\\CustomKeys.xml\" </pre>\n      <p>If the command is successful, you will see the following output: </p>\n      <div>\n        <pre>Importing RSA Keys from file..Succeeded!  </pre>\n      </div>\n      <p>\n        <strong>Note:</strong> After you have finished exporting and importing the RSA keys, it is important for security reasons to delete the CustomsKeys.xml file from both machines. </p>\n    </li>\n    <li>\n      <p />\n      <strong>Grant access to the ASP.NET application identity.</strong> The account used to run your Web application must be able to read the RSA key container. If you are not sure which identity your application uses, you can check this by adding the following code to a Web page: <div><pre>using System.Security.Principal;<br />...<br />protected void Page_Load(object sender, EventArgs e)<br />{<br />&nbsp;&nbsp;&nbsp; Response.Write(WindowsIdentity.GetCurrent().Name);<br />}  </pre></div><p>By default, ASP.NET applications on Windows Server 2003 run using the NT Authority\\Network Service account. The following command grants this account access to the CustomKeys store: </p><pre>aspnet_regiis -pa \"CustomKeys\" \"NT Authority\\Network Service\" </pre><p>If the command runs successfully, you will see the following output. </p><div><pre>Adding ACL for access to the RSA Key container...Succeeded!  </pre></div><p>You can check the ACL of the file in the following folder: </p><div><pre>\\Documents and Settings\\All Users\\Application Data\\Microsoft\\Crypto\\RSA\\MachineKeys  </pre></div><p>Your RSA key container file will be the one in this folder with the most recent timestamp. </p></li>\n    <li>\n      <p />\n      <strong>Test the settings.</strong> Add the following Default.aspx Web page to your application's virtual directory, and then browse to this page to verify that encryption and decryption work correctly. <div><pre>&lt;%@ Page Language=\"C#\" %&gt;<br />&lt;script runat=\"server\"&gt;<br />&nbsp;&nbsp;&nbsp; protected void Page_Load(object sender, EventArgs e)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Response.Write(\"Clear text connection string is: \" + <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       ConfigurationManager.ConnectionStrings[\"MyLocalSQLServer\"].ConnectionString);<br />&nbsp;&nbsp;&nbsp; }<br />&lt;/script&gt;<br />&lt;html&gt;<br />&nbsp; &lt;body/&gt;<br />&lt;/html&gt;  </pre></div><p><i>MyLocalSQLServer </i>is the name of the connection string you specified previously in the Web.config file. </p></li>\n  </ol>\n  <hr />\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}