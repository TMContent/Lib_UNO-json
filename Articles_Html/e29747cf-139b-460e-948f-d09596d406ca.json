{
  "id": "e29747cf-139b-460e-948f-d09596d406ca",
  "checksum": "b71d6edab5aab2ad04ce3c33ce049d1c093579ea",
  "words": {
    "what": [
      "h2"
    ],
    "to": [
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "do": [
      "h2"
    ],
    "consider": [
      "p"
    ],
    "adhering": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "following": [
      "p"
    ],
    "rules": [
      "p"
    ],
    "when": [
      "p",
      "p"
    ],
    "allocating": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p"
    ],
    "managing": [
      "p"
    ],
    "an": [
      "p"
    ],
    "application's": [
      "p"
    ],
    "memory": [
      "p"
    ],
    "double": [
      "p"
    ],
    "check": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p"
    ],
    "your": [
      "p"
    ],
    "buffer": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "is": [
      "p",
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "large": [
      "p"
    ],
    "you": [
      "p",
      "p"
    ],
    "specify": [
      "p"
    ],
    "using": [
      "p"
    ],
    "functions": [
      "p",
      "p"
    ],
    "accept": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p"
    ],
    "number": [
      "p"
    ],
    "of": [
      "p",
      "p"
    ],
    "bytes": [
      "p"
    ],
    "copy": [
      "p",
      "p"
    ],
    "such": [
      "p"
    ],
    "as\rstrncpy(),": [
      "p"
    ],
    "be": [
      "p"
    ],
    "aware": [
      "p"
    ],
    "if": [
      "p",
      "p",
      "p"
    ],
    "destination": [
      "p"
    ],
    "size": [
      "p",
      "p",
      "title"
    ],
    "equal": [
      "p"
    ],
    "source": [
      "p"
    ],
    "it": [
      "p"
    ],
    "may": [
      "p"
    ],
    "not": [
      "p",
      "p"
    ],
    "null-terminate": [
      "p"
    ],
    "string": [
      "p"
    ],
    "boundaries": [
      "p"
    ],
    "accessing": [
      "p"
    ],
    "in": [
      "p",
      "p"
    ],
    "loop": [
      "p"
    ],
    "make": [
      "p"
    ],
    "sure": [
      "p"
    ],
    "are": [
      "p"
    ],
    "danger": [
      "p"
    ],
    "writing": [
      "p"
    ],
    "past": [
      "p"
    ],
    "allocated": [
      "p"
    ],
    "space": [
      "p"
    ],
    "necessary": [
      "p"
    ],
    "truncate": [
      "p"
    ],
    "all": [
      "p"
    ],
    "input": [
      "p"
    ],
    "strings": [
      "p"
    ],
    "reasonable": [
      "p"
    ],
    "length": [
      "p"
    ],
    "before": [
      "p"
    ],
    "passing": [
      "p"
    ],
    "them": [
      "p"
    ],
    "concatenation": [
      "p"
    ],
    "strncpy)": [
      "em"
    ],
    "double-check": [
      "title"
    ]
  },
  "tags": {
    "h2": [
      "What to Do"
    ],
    "p": [
      "Consider adhering to the following rules when allocating and managing an application's memory: Double check that your buffer is as large as you specify. When using functions that accept a number of bytes to copy, such as\r\nstrncpy(), be aware that if the destination buffer size is equal to the source buffer size, it may not NULL-terminate the string. Check buffer boundaries if accessing the buffer in a loop and make sure you are not in danger of writing past the allocated\r\n space. If necessary, truncate all input strings to a reasonable length before passing them to the copy and concatenation functions."
    ],
    "em": [
      "strncpy()"
    ]
  },
  "links": [],
  "html": "\r\n<h2>What to Do</h2>\r\n<p>Consider adhering to the following rules when allocating and managing an application's memory: Double check that your buffer is as large as you specify. When using functions that accept a number of bytes to copy, such as\r\n<em>strncpy()</em>, be aware that if the destination buffer size is equal to the source buffer size, it may not NULL-terminate the string. Check buffer boundaries if accessing the buffer in a loop and make sure you are not in danger of writing past the allocated\r\n space. If necessary, truncate all input strings to a reasonable length before passing them to the copy and concatenation functions.</p>\r\n"
}