{
  "id": "2e732e9d-5677-40cc-8e33-c40ceacc056b",
  "checksum": "da92f8b0e4adaf07796f8e5c2cd926b1ef122015",
  "words": {
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "h1"
    ],
    "c++": [
      "p"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "p",
      "ul",
      "li"
    ],
    "verify": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p"
    ],
    "destructors": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "a",
      "title"
    ],
    "don't": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "throw": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "exceptions": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "if": [
      "p",
      "p"
    ],
    "they": [
      "p",
      "p"
    ],
    "are": [
      "p",
      "p"
    ],
    "called": [
      "p",
      "p",
      "p",
      "p"
    ],
    "when": [
      "p",
      "p",
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "p"
    ],
    "exception": [
      "p",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "thrown": [
      "p",
      "p",
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p"
    ],
    "best": [
      "p"
    ],
    "way": [
      "p",
      "p"
    ],
    "do": [
      "p",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p"
    ],
    "by": [
      "p",
      "p"
    ],
    "not": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "throwing": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "from": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "why": [
      "h1"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p"
    ],
    "destructor": [
      "p",
      "p"
    ],
    "may": [
      "p",
      "p"
    ],
    "be": [
      "p"
    ],
    "throws": [
      "p"
    ],
    "after": [
      "p"
    ],
    "being": [
      "p",
      "p",
      "p"
    ],
    "program": [
      "p"
    ],
    "likely": [
      "p"
    ],
    "terminate": [
      "p"
    ],
    "result": [
      "p",
      "p"
    ],
    "in": [
      "p"
    ],
    "denial-of-service": [
      "p"
    ],
    "vulnerability": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "search": [
      "p"
    ],
    "as": [
      "p"
    ],
    "of": [
      "p"
    ],
    "other": [
      "p"
    ],
    "simplest": [
      "p"
    ],
    "fix": [
      "h1"
    ],
    "identify": [
      "p"
    ],
    "rewrite": [
      "p"
    ],
    "code": [
      "p"
    ],
    "so": [
      "p"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "https//www.securecoding.cert.org/confluence/display/cplusplus/err33-cpp.+destructors+must+not+throw+exceptions": [
      "ul",
      "li",
      "a"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "deallocation": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "functions": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Additional Resources",
      "Related Items"
    ],
    "p": [
      "C++",
      "Verify that destructors don't throw exceptions if they are called when an exception is thrown. The best way to do this is by not throwing exceptions from destructors.",
      "A destructor may be called when an exception is thrown. If a destructor throws an exception after being called from an exception being thrown, the program is likely to terminate. This may result in a denial-of-service vulnerability.",
      "Search for destructors. Verify that destructors don't throw exceptions when they are called as a result of other exceptions being thrown. The simplest way to do this is by not throwing exceptions from destructors.",
      "Identify destructors that throw exceptions. Rewrite code so that destructors don't throw exceptions."
    ],
    "ul": [
      "For more information about not throwing exceptions from destructors, please see https://www.securecoding.cert.org/confluence/display/cplusplus/ERR33-CPP.+Destructors+must+not+throw+exceptions",
      "Don't Throw Exceptions from Destructors\r\n      \r\n        Don't Throw Exceptions from Deallocation Functions\r\n        \r\n          Deallocation functions don't throw exceptions"
    ],
    "li": [
      "For more information about not throwing exceptions from destructors, please see https://www.securecoding.cert.org/confluence/display/cplusplus/ERR33-CPP.+Destructors+must+not+throw+exceptions",
      "Don't Throw Exceptions from Destructors",
      "Don't Throw Exceptions from Deallocation Functions",
      "Deallocation functions don't throw exceptions"
    ],
    "a": [
      "https://www.securecoding.cert.org/confluence/display/cplusplus/ERR33-CPP.+Destructors+must+not+throw+exceptions",
      "Don't Throw Exceptions from Destructors",
      "Don't Throw Exceptions from Deallocation Functions",
      "Deallocation functions don't throw exceptions"
    ],
    "br": [
      ""
    ]
  },
  "links": [
    {
      "href": "https://www.securecoding.cert.org/confluence/display/cplusplus/ERR33-CPP.+Destructors+must+not+throw+exceptions",
      "text": "https://www.securecoding.cert.org/confluence/display/cplusplus/ERR33-CPP.+Destructors+must+not+throw+exceptions"
    },
    {
      "href": "/article/fd06b089-88ea-43df-bc41-f111a1848116",
      "text": "Don't Throw Exceptions from Destructors"
    },
    {
      "href": "/article/441b4138-1866-442f-8abb-6d05236d6fcb",
      "text": "Don't Throw Exceptions from Deallocation Functions"
    },
    {
      "href": "/article/26a68d55-95e2-4007-bfa6-d1eee30740de",
      "text": "Deallocation functions don't throw exceptions"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <p>C&#43;&#43;</p>\r\n  <h1>What to Check For</h1>\r\n  <p>Verify that destructors don't throw exceptions if they are called when an exception is thrown. The best way to do this is by not throwing exceptions from destructors.</p>\r\n  <h1>Why</h1>\r\n  <p>A destructor may be called when an exception is thrown. If a destructor throws an exception after being called from an exception being thrown, the program is likely to terminate. This may result in a denial-of-service vulnerability.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Search for destructors. Verify that destructors don't throw exceptions when they are called as a result of other exceptions being thrown. The simplest way to do this is by not throwing exceptions from destructors.</p>\r\n  <h1>How to Fix</h1>\r\n  <p>Identify destructors that throw exceptions. Rewrite code so that destructors don't throw exceptions.</p>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information about not throwing exceptions from destructors, please see <a href=\"https://www.securecoding.cert.org/confluence/display/cplusplus/ERR33-CPP.&#43;Destructors&#43;must&#43;not&#43;throw&#43;exceptions\">https://www.securecoding.cert.org/confluence/display/cplusplus/ERR33-CPP.&#43;Destructors&#43;must&#43;not&#43;throw&#43;exceptions</a></li>\r\n  </ul>\r\n  <h1>Related Items</h1>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/fd06b089-88ea-43df-bc41-f111a1848116\">Don't Throw Exceptions from Destructors</a>\r\n      <li>\r\n        <a href=\"/article/441b4138-1866-442f-8abb-6d05236d6fcb\">Don't Throw Exceptions from Deallocation Functions</a>\r\n        <li>\r\n          <a href=\"/article/26a68d55-95e2-4007-bfa6-d1eee30740de\">Deallocation functions don't throw exceptions<br /></a>\r\n        </li>\r\n      </li>\r\n    </li>\r\n  </ul>"
}