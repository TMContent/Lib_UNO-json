{
  "id": "757f505d-9e11-45fb-92cd-3fc3a6504d9f",
  "checksum": "fd078632e3aaa0d2c6d1206f2b18c73df3c675a8",
  "words": {
    "35": [
      "ul",
      "li"
    ],
    "2008": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "title",
      "title"
    ],
    "microsoft®": [
      "ul",
      "li"
    ],
    "windows": [
      "ul",
      "li",
      "ol",
      "li"
    ],
    "communication": [
      "ul",
      "li"
    ],
    "foundation": [
      "ul",
      "li"
    ],
    "wcf)": [
      "ul",
      "li"
    ],
    "microsoft": [
      "ul",
      "li",
      "p"
    ],
    "visual": [
      "ul",
      "li"
    ],
    "studio®": [
      "ul",
      "li"
    ],
    "description": [
      "h1"
    ],
    "use": [
      "p",
      "ol",
      "li"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre",
      "ul",
      "li",
      "title"
    ],
    "following": [
      "p"
    ],
    "steps": [
      "p"
    ],
    "impersonate": [
      "p",
      "ol",
      "li",
      "li",
      "ol",
      "pre",
      "ul",
      "li"
    ],
    "original": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "pre",
      "ul",
      "li",
      "title"
    ],
    "caller": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "pre",
      "ul",
      "li",
      "title"
    ],
    "from": [
      "p",
      "ul",
      "li",
      "p",
      "title"
    ],
    "an": [
      "p",
      "title"
    ],
    "aspnet": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "title"
    ],
    "client": [
      "p",
      "title"
    ],
    "a": [
      "p"
    ],
    "wcf": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "title"
    ],
    "service": [
      "p",
      "ol",
      "li",
      "li"
    ],
    "configure": [
      "ol",
      "li",
      "li"
    ],
    "your": [
      "ol",
      "li"
    ],
    "authenticationconfigure": [
      "ol"
    ],
    "application’s": [
      "ol",
      "li"
    ],
    "process": [
      "ol",
      "li"
    ],
    "identity": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "pre"
    ],
    "for": [
      "ol",
      "li",
      "ul",
      "li",
      "li"
    ],
    "constrained": [
      "ol",
      "li"
    ],
    "delegation": [
      "ol",
      "li"
    ],
    "serviceimpersonate": [
      "ol"
    ],
    "in": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "when": [
      "ol",
      "li"
    ],
    "calling": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "serviceusing": [
      "ol",
      "li"
    ],
    "systemsecurity.principal;…protected": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "void": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "button1_clickobject": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "sender": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "eventargs": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "e{": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "//": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "obtain": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "authenticated": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "user's": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "and": [
      "ol",
      "li",
      "ol",
      "pre",
      "ul",
      "li"
    ],
    "using": [
      "ol",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "((windowsidentity)httpcontext.current.user.identity).impersonate())": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "{": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "wcftestserviceserviceclient": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "myservice": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "=": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "new": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "wcftestserviceserviceclient();": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "responsewrite(myservice.getdata(123)": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "+": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "\"br/>\");": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "myserviceclose();": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "}}…": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "authentication": [
      "li"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "more": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "“delegation": [
      "ul",
      "li"
    ],
    "impersonation": [
      "ul",
      "li"
    ],
    "with": [
      "ul",
      "li"
    ],
    "wcf”": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "http//msdn2.microsoft.com/en-us/library/ms730088.aspxfor": [
      "ul"
    ],
    "“how": [
      "ul",
      "li"
    ],
    "web": [
      "ul",
      "li"
    ],
    "application”": [
      "ul",
      "li"
    ],
    "http//www.codeplex.com/wcfsecurityguide/wiki/view.aspx?title=how%20to%20-%20impersonate%20the%20original%20caller%20in%20wcf%20calling%20from%20web%20application&referringtitle=how%20tos": [
      "ul",
      "li",
      "a"
    ],
    "http//msdn2.microsoft.com/en-us/library/ms730088.aspx": [
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "how": [
      "title"
    ],
    "flow": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Description",
      "Additional Resources"
    ],
    "ul": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5 Microsoft Visual Studio® 2008",
      "For more information, see “Delegation and Impersonation with WCF” at http://msdn2.microsoft.com/en-us/library/ms730088.aspxFor more information see “How to Impersonate the Original Caller in WCF calling from Web Application” at http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos"
    ],
    "li": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5",
      "Microsoft Visual Studio® 2008",
      "Configure your WCF Service to Use Windows Authentication",
      "Configure the ASP.NET Application’s process identity for Constrained Delegation to WCF service",
      "Impersonate the Original Caller in ASP.NET when Calling the WCF Serviceusing System.Security.Principal;…protected void Button1_Click(object sender, EventArgs e){    // Obtain the authenticated user's Identity and impersonate the original caller    using (((WindowsIdentity)HttpContext.Current.User.Identity).Impersonate())    {        WCFTestService.ServiceClient myService = new WCFTestService.ServiceClient();        Response.Write(myService.GetData(123) + \"<br/>\");        myService.Close();    }}…",
      "For more information, see “Delegation and Impersonation with WCF” at http://msdn2.microsoft.com/en-us/library/ms730088.aspx",
      "For more information see “How to Impersonate the Original Caller in WCF calling from Web Application” at http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos"
    ],
    "p": [
      "Use the following steps to impersonate the original caller from an ASP.NET client to a WCF Service:",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Configure your WCF Service to Use Windows AuthenticationConfigure the ASP.NET Application’s process identity for Constrained Delegation to WCF serviceImpersonate the Original Caller in ASP.NET when Calling the WCF Serviceusing System.Security.Principal;…protected void Button1_Click(object sender, EventArgs e){    // Obtain the authenticated user's Identity and impersonate the original caller    using (((WindowsIdentity)HttpContext.Current.User.Identity).Impersonate())    {        WCFTestService.ServiceClient myService = new WCFTestService.ServiceClient();        Response.Write(myService.GetData(123) + \"<br/>\");        myService.Close();    }}…",
      "using System.Security.Principal;…protected void Button1_Click(object sender, EventArgs e){    // Obtain the authenticated user's Identity and impersonate the original caller    using (((WindowsIdentity)HttpContext.Current.User.Identity).Impersonate())    {        WCFTestService.ServiceClient myService = new WCFTestService.ServiceClient();        Response.Write(myService.GetData(123) + \"<br/>\");        myService.Close();    }}…"
    ],
    "pre": [
      "using System.Security.Principal;…protected void Button1_Click(object sender, EventArgs e){    // Obtain the authenticated user's Identity and impersonate the original caller    using (((WindowsIdentity)HttpContext.Current.User.Identity).Impersonate())    {        WCFTestService.ServiceClient myService = new WCFTestService.ServiceClient();        Response.Write(myService.GetData(123) + \"<br/>\");        myService.Close();    }}…"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "http://msdn2.microsoft.com/en-us/library/ms730088.aspx",
      "http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://msdn2.microsoft.com/en-us/library/ms730088.aspx",
      "text": "http://msdn2.microsoft.com/en-us/library/ms730088.aspx"
    },
    {
      "href": "http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos",
      "text": "http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How%20To%20-%20Impersonate%20the%20Original%20Caller%20in%20WCF%20calling%20from%20Web%20Application&referringTitle=How%20Tos"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft&#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&#174; 2008</li></li>\r\n  </ul>\r\n  <h1>Description</h1>\r\n  <p>Use the following steps to impersonate the original caller from an ASP.NET client to a WCF Service:</p>\r\n  <ol>\r\n    <li>Configure your WCF Service to Use Windows Authentication<li>Configure the ASP.NET Application&#8217;s process identity for Constrained Delegation to WCF service<li>Impersonate the Original Caller in ASP.NET when Calling the WCF Service<ol><pre>using System.Security.Principal;<br />&#8230;<br />protected void Button1_Click(object sender, EventArgs e)<br />&#123;<br />    // Obtain the authenticated user's Identity and impersonate the original caller<br />    using (((WindowsIdentity)HttpContext.Current.User.Identity).Impersonate())<br />    &#123;<br />        WCFTestService.ServiceClient myService = new WCFTestService.ServiceClient();<br />        Response.Write(myService.GetData(123) &#43; \"&lt;br/&gt;\");<br />        myService.Close();<br />    &#125;<br />&#125;<br />&#8230;</pre></ol></li></li></li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information, see &#8220;Delegation and Impersonation with WCF&#8221; at <a href=\"http://msdn2.microsoft.com/en-us/library/ms730088.aspx\">http://msdn2.microsoft.com/en-us/library/ms730088.aspx</a><li>For more information see &#8220;How to Impersonate the Original Caller in WCF calling from Web Application&#8221; at <a href=\"http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How&#37;20To&#37;20-&#37;20Impersonate&#37;20the&#37;20Original&#37;20Caller&#37;20in&#37;20WCF&#37;20calling&#37;20from&#37;20Web&#37;20Application&referringTitle=How&#37;20Tos\">http://www.codeplex.com/WCFSecurityGuide/Wiki/View.aspx?title=How&#37;20To&#37;20-&#37;20Impersonate&#37;20the&#37;20Original&#37;20Caller&#37;20in&#37;20WCF&#37;20calling&#37;20from&#37;20Web&#37;20Application&referringTitle=How&#37;20Tos</a></li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}