{
  "id": "00000000-0000-0000-0000-0000005f2e4a",
  "checksum": "871215e0274a9a14cfd5498e096b0fb01ac79f41",
  "words": {
    "200": [
      "pre"
    ],
    "443": [
      "p",
      "p"
    ],
    "6455": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "html5": [
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2",
      "ul",
      "li",
      "a"
    ],
    "when": [
      "p",
      "h2",
      "ol",
      "li",
      "p",
      "p"
    ],
    "using": [
      "p",
      "p",
      "p",
      "p"
    ],
    "websockets": [
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "connect": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "pre"
    ],
    "with": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "transport": [
      "p"
    ],
    "layer": [
      "p",
      "p"
    ],
    "security": [
      "p",
      "ol",
      "li",
      "strong"
    ],
    "tls)/secure": [
      "p"
    ],
    "sockets": [
      "p"
    ],
    "ssl).": [
      "p"
    ],
    "why": [
      "h2"
    ],
    "just": [
      "p"
    ],
    "as": [
      "p",
      "ol",
      "li"
    ],
    "tls/ssl": [
      "p",
      "ol",
      "li",
      "strong",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "protects": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong",
      "p"
    ],
    "encrypts": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "a",
      "a",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "communication": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "tunnel": [
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "ul",
      "li",
      "a"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "http": [
      "p",
      "p",
      "p",
      "p"
    ],
    "it": [
      "p",
      "p"
    ],
    "can": [
      "p"
    ],
    "encrypt": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "a": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "protect": [
      "p",
      "p"
    ],
    "against": [
      "p"
    ],
    "eavesdropping": [
      "p"
    ],
    "man-in-the-middle": [
      "p"
    ],
    "attacks": [
      "p"
    ],
    "by": [
      "p"
    ],
    "default": [
      "p"
    ],
    "websocket": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "strong",
      "strong",
      "p",
      "p",
      "p",
      "h2",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "h2",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "protocol": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "pre"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "pre",
      "p",
      "pre",
      "p",
      "p",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a",
      "li",
      "a"
    ],
    "not": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "encrypted)": [
      "p"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "title"
    ],
    "this": [
      "p",
      "p",
      "pre",
      "pre"
    ],
    "guideline": [
      "p"
    ],
    "for": [
      "p",
      "p",
      "p"
    ],
    "applications": [
      "p",
      "ol",
      "li"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "employ": [
      "p"
    ],
    "need": [
      "p"
    ],
    "sensitive": [
      "p"
    ],
    "data": [
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "how": [
      "h2"
    ],
    "specification": [
      "p"
    ],
    "built": [
      "p"
    ],
    "on": [
      "p",
      "ol",
      "li",
      "strong"
    ],
    "mind": [
      "p"
    ],
    "enable": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "strong"
    ],
    "certificates": [
      "ol",
      "li",
      "strong"
    ],
    "keys": [
      "ol",
      "li",
      "strong"
    ],
    "consult": [
      "ol",
      "li"
    ],
    "your": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "pre"
    ],
    "server": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "strong",
      "p",
      "p",
      "p",
      "pre"
    ],
    "documentation": [
      "ol",
      "li"
    ],
    "ensure": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong"
    ],
    "site": [
      "ol",
      "li"
    ],
    "produces": [
      "ol",
      "li"
    ],
    "valid": [
      "ol",
      "li"
    ],
    "certificate": [
      "ol",
      "li",
      "pre"
    ],
    "https": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "connections": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a",
      "title"
    ],
    "configuration": [
      "ol",
      "li"
    ],
    "may": [
      "ol",
      "li"
    ],
    "vary": [
      "ol",
      "li"
    ],
    "depending": [
      "ol",
      "li"
    ],
    "upon": [
      "ol",
      "li"
    ],
    "implementation": [
      "ol",
      "li"
    ],
    "client": [
      "ol",
      "ol",
      "li",
      "li",
      "strong",
      "p",
      "p"
    ],
    "are": [
      "ol",
      "li",
      "strong"
    ],
    "secure": [
      "ol",
      "li",
      "strong",
      "p",
      "pre"
    ],
    "connecting": [
      "ol",
      "li",
      "p"
    ],
    "browsers": [
      "ol",
      "li"
    ],
    "note": [
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "accessing": [
      "ol",
      "li"
    ],
    "should": [
      "ol",
      "li"
    ],
    "wss": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "basically": [
      "ol",
      "li"
    ],
    "ws": [
      "ol",
      "li",
      "p"
    ],
    "over": [
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "tls": [
      "ol",
      "li",
      "p"
    ],
    "such": [
      "ol",
      "li"
    ],
    "wss//<url>": [
      "ol",
      "li",
      "tt"
    ],
    "instead": [
      "ol",
      "li"
    ],
    "of": [
      "ol",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "typical": [
      "ol",
      "li",
      "p"
    ],
    "ws//<url>": [
      "ol",
      "li",
      "tt"
    ],
    "application": [
      "ol",
      "li"
    ],
    "problem": [
      "h2"
    ],
    "example": [
      "h2",
      "h2"
    ],
    "below": [
      "p",
      "p",
      "p"
    ],
    "client-side": [
      "p",
      "p"
    ],
    "connection": [
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "pre"
    ],
    "uses": [
      "p"
    ],
    "standard": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "unencrypted": [
      "p"
    ],
    "an": [
      "p",
      "p"
    ],
    "intruder": [
      "p",
      "p"
    ],
    "who": [
      "p"
    ],
    "has": [
      "p",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "access": [
      "p"
    ],
    "stream": [
      "p",
      "p",
      "p"
    ],
    "network": [
      "p"
    ],
    "could": [
      "p"
    ],
    "easily": [
      "p"
    ],
    "intercept": [
      "p",
      "p"
    ],
    "$\"#open\").click": [
      "pre"
    ],
    "function": [
      "pre"
    ],
    "evt)": [
      "pre"
    ],
    "{evt.preventdefault();\n\nvar": [
      "pre",
      "pre"
    ],
    "host": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "‘examplecom’;\nvar": [
      "pre",
      "pre"
    ],
    "port": [
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "p"
    ],
    "‘8887’\nvar": [
      "pre",
      "pre"
    ],
    "uri": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "‘very_private’\n\nws": [
      "pre",
      "pre"
    ],
    "new": [
      "pre",
      "pre"
    ],
    "websocket\"ws://”": [
      "pre"
    ],
    "+": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "“”": [
      "pre",
      "pre"
    ],
    "“/”": [
      "pre",
      "pre"
    ],
    ";\n\nws.onmessage": [
      "pre"
    ],
    "functionevt)": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "{alert\"non": [
      "pre"
    ],
    "encrypted": [
      "pre",
      "pre",
      "pre"
    ],
    "message": [
      "pre",
      "pre"
    ],
    "been": [
      "pre",
      "pre"
    ],
    "received”};\nws.onclose": [
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "alert\"non": [
      "pre"
    ],
    "closed\";": [
      "pre",
      "pre"
    ],
    "}\nws.onopen": [
      "pre",
      "pre"
    ],
    "alert“non": [
      "pre"
    ],
    "opened”": [
      "pre",
      "pre"
    ],
    "}\n});": [
      "pre",
      "pre"
    ],
    "solution": [
      "h2"
    ],
    "takes": [
      "p"
    ],
    "advantage": [
      "p"
    ],
    "change": [
      "p"
    ],
    "makes": [
      "p"
    ],
    "much": [
      "p"
    ],
    "more": [
      "p"
    ],
    "difficult": [
      "p"
    ],
    "$\"#open\").click(function(evt)": [
      "pre"
    ],
    "websocket\"wss://”": [
      "pre"
    ],
    ";\nws.onmessage": [
      "pre"
    ],
    "{alert\"tls/ssl": [
      "pre"
    ],
    "alert\"tls/ssl": [
      "pre"
    ],
    "alert“tls/ssl": [
      "pre"
    ],
    "handshake": [
      "p",
      "p",
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "performed": [
      "p"
    ],
    "you’ll": [
      "p"
    ],
    "see": [
      "p"
    ],
    "establish": [
      "p"
    ],
    "partial": [
      "p"
    ],
    "seen": [
      "p"
    ],
    "testing": [
      "p"
    ],
    "at": [
      "p"
    ],
    "http//www.websocket.org/echo.html,": [
      "p"
    ],
    "view": [
      "p"
    ],
    "debugging": [
      "p"
    ],
    "tool": [
      "p"
    ],
    "http//www.websocket.org/echo.html": [
      "a"
    ],
    "http/11": [
      "pre"
    ],
    "establishedfiddlergateway:": [
      "pre"
    ],
    "directstarttime:": [
      "pre"
    ],
    "2224:09.760\nconnection:": [
      "pre"
    ],
    "close\nencrypted": [
      "pre"
    ],
    "traffic": [
      "pre"
    ],
    "flows": [
      "pre"
    ],
    "through": [
      "pre"
    ],
    "decryption": [
      "pre"
    ],
    "enabled": [
      "pre"
    ],
    "fiddler": [
      "pre"
    ],
    "so": [
      "pre"
    ],
    "decrypted": [
      "pre"
    ],
    "sessions": [
      "pre",
      "pre"
    ],
    "running": [
      "pre"
    ],
    "will": [
      "pre"
    ],
    "be": [
      "pre"
    ],
    "shown": [
      "pre"
    ],
    "list\n\nsecure": [
      "pre"
    ],
    "tlscipher:": [
      "pre"
    ],
    "rc4": [
      "pre"
    ],
    "128bitshash": [
      "pre"
    ],
    "algorithm": [
      "pre"
    ],
    "sha1": [
      "pre"
    ],
    "160bitskey": [
      "pre"
    ],
    "exchange": [
      "pre"
    ],
    "rsakeyx": [
      "pre"
    ],
    "2048bits\n==": [
      "pre"
    ],
    "==========[subject]": [
      "pre"
    ],
    "cn=*websocket.org,": [
      "pre"
    ],
    "ou=domain": [
      "pre"
    ],
    "control": [
      "pre"
    ],
    "validated": [
      "pre",
      "ul",
      "li",
      "a"
    ],
    "o=*websocket.org\n\n[issuer]": [
      "pre"
    ],
    "serialnumber=07969287": [
      "pre"
    ],
    "cn=go": [
      "pre"
    ],
    "daddy": [
      "pre"
    ],
    "certification": [
      "pre"
    ],
    "authority": [
      "pre"
    ],
    "ou=http//certificates.godaddy.com/repository,": [
      "pre"
    ],
    "o=\"godaddycom,": [
      "pre"
    ],
    "inc\",": [
      "pre"
    ],
    "l=scottsdale": [
      "pre"
    ],
    "s=arizona": [
      "pre"
    ],
    "c=us\n[serial": [
      "pre"
    ],
    "number": [
      "pre"
    ],
    "27f9adf2db9921\n[not": [
      "pre"
    ],
    "before": [
      "pre"
    ],
    "10/19/2012": [
      "pre"
    ],
    "243:55": [
      "pre"
    ],
    "am\n[not": [
      "pre"
    ],
    "after": [
      "pre"
    ],
    "10/28/2014": [
      "pre"
    ],
    "506:24": [
      "pre"
    ],
    "pm\n[thumbprint]": [
      "pre"
    ],
    "8a95feb7be9825fbe3f4f50a6662dc880764c876": [
      "pre"
    ],
    "guidelines": [
      "h2"
    ],
    "validate": [
      "ul",
      "li",
      "a"
    ],
    "coming": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "from": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "check": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "origin": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a",
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "header": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "attribute": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "messages": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "latest": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "rfc": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "tcp": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "via": [
      "ul",
      "li",
      "a",
      "ul",
      "li",
      "a"
    ],
    "checklist": [
      "h2"
    ],
    "items": [
      "h2"
    ],
    "checked": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "used": [
      "ul",
      "ul",
      "li",
      "a",
      "li",
      "a"
    ],
    "tunneled": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {
    "h2": [
      "Applies To",
      "What to Do",
      "Why",
      "When",
      "How",
      "Problem Example",
      "Solution Example",
      "WebSocket Guidelines",
      "WebSocket Checklist Items"
    ],
    "ul": [
      "HTML5",
      "Validate Data Coming from WebSockets\n Check the Origin Header in the WebSocket Handshake\n Use TLS/SSL to Encrypt WebSocket Connections\n Check the Origin Attribute of WebSocket Messages\n Use the Latest WebSocket RFC 6455 Standard\n Do Not Tunnel TCP via WebSockets",
      "Data Coming from WebSockets Is Validated\n The Origin Header in WebSocket Handshake is Checked\n TLS/SSL is Used to Encrypt WebSocket Connections\n The Origin Attribute of WebSocket Messages Is Checked\n Latest RFC 6455 Standard is Used\n TCP Is Not Tunneled via WebSockets"
    ],
    "li": [
      "HTML5",
      "Enable security certificates and keys. Consult your web server documentation to ensure that your web site produces a valid certificate with HTTPS connections.",
      "Enable TLS/SSL on the WebSocket server. The configuration may vary depending upon the Websocket server implementation in use.",
      "Connect the client to the WebSocket server and ensure connections to the WebSocket are secure. When connecting to HTML5 web applications, ensure that client browsers connect with HTTPS. Note that the code accessing the WebSocket server should use the wss protocol, which is basically ws over TLS. As such, use wss://<url> instead of the typical ws://<url> in the HTML5 application code.",
      "Validate Data Coming from WebSockets",
      "Check the Origin Header in the WebSocket Handshake",
      "Use TLS/SSL to Encrypt WebSocket Connections",
      "Check the Origin Attribute of WebSocket Messages",
      "Use the Latest WebSocket RFC 6455 Standard",
      "Do Not Tunnel TCP via WebSockets",
      "Data Coming from WebSockets Is Validated",
      "The Origin Header in WebSocket Handshake is Checked",
      "TLS/SSL is Used to Encrypt WebSocket Connections",
      "The Origin Attribute of WebSocket Messages Is Checked",
      "Latest RFC 6455 Standard is Used",
      "TCP Is Not Tunneled via WebSockets"
    ],
    "p": [
      "When using WebSockets, connect with Transport Layer Security (TLS)/Secure Sockets Layer (SSL).",
      "Just as TLS/SSL protects and encrypts the communication tunnel in HTTP, it can encrypt a WebSockets tunnel to protect against eavesdropping and man-in-the-middle attacks. (By default, the communication tunnel with the WebSocket protocol is not encrypted.)",
      "Use this guideline for applications that employ the WebSocket protocol and need to protect sensitive data.",
      "The WebSockets protocol specification is built on HTTP. With that in mind:",
      "Below is a client-side code connection to a WebSocket server. The connection uses standard ws over standard, unencrypted HTTP. An intruder who has access to the communication stream over the network could easily intercept the communication.",
      "Client Connection:",
      "",
      "Below is a client-side code connection to a WebSocket server using wss, which takes advantage of TLS/SSL over HTTP port 443. This change makes it much more difficult for an intruder to intercept the communication tunnel.",
      "Client Connection:",
      "When the handshake is performed using wss, you’ll see the typical handshake for TLS over port 443 to establish the secure connection.",
      "Below is a partial communication stream seen when connecting to a WebSocket testing server at http://www.websocket.org/echo.html, and the view of the stream using a web debugging tool."
    ],
    "ol": [
      "Enable security certificates and keys. Consult your web server documentation to ensure that your web site produces a valid certificate with HTTPS connections.\n Enable TLS/SSL on the WebSocket server. The configuration may vary depending upon the Websocket server implementation in use. \n Connect the client to the WebSocket server and ensure connections to the WebSocket are secure. When connecting to HTML5 web applications, ensure that client browsers connect with HTTPS. Note that the code accessing the WebSocket server should use the wss protocol, which is basically ws over TLS. As such, use wss://<url> instead of the typical ws://<url> in the HTML5 application code."
    ],
    "strong": [
      "Enable security certificates and keys.",
      "Enable TLS/SSL on the WebSocket server.",
      "Connect the client to the WebSocket server and ensure connections to the WebSocket are secure."
    ],
    "tt": [
      "wss://<url>",
      "ws://<url>"
    ],
    "pre": [
      "$(\"#open\").click (function (evt) {\nevt.preventDefault();\n\nvar host = ‘example.com’;\nvar port = ‘8887’;\nvar uri = ‘very_private’;\n\nws = new WebSocket(\"ws://” + host + “:” + port + “/” + uri );\n\nws.onmessage = function(evt) {alert(\"Non encrypted message has been received”)};\nws.onclose = function(evt) { alert(\"Non encrypted connection is closed\"); };\nws.onopen = function(evt) { alert(“Non encrypted connection has opened”) };\n});",
      "$(\"#open\").click(function(evt) {\nevt.preventDefault();\n\nvar host = ‘example.com’;\nvar port = ‘8887’;\nvar uri = ‘very_private’;\n\nws = new WebSocket(\"wss://” + host + “:” + port + “/” + uri );\nws.onmessage = function(evt) {alert(\"TLS/SSL message has been received”)};\nws.onclose = function(evt) { alert(\"TLS/SSL connection is closed\"); };\nws.onopen = function(evt) { alert(“TLS/SSL connection has opened”) };\n});",
      "HTTP/1.1 200 Connection Established\nFiddlerGateway: Direct\nStartTime: 22:24:09.760\nConnection: close\n\nEncrypted HTTPS traffic flows through this CONNECT tunnel. HTTPS Decryption is enabled in Fiddler, so decrypted sessions running in this tunnel will be shown in the Web Sessions list.\n\nSecure Protocol: Tls\nCipher: Rc4 128bits\nHash Algorithm: Sha1 160bits\nKey Exchange: RsaKeyX 2048bits\n\n== Server Certificate ==========\n[Subject]\n  CN=*.websocket.org, OU=Domain Control Validated, O=*.websocket.org\n\n[Issuer]\n  SERIALNUMBER=07969287, CN=Go Daddy Secure Certification Authority, OU=http://certificates.godaddy.com/repository, O=\"GoDaddy.com, Inc.\", L=Scottsdale, S=Arizona, C=US\n\n[Serial Number]\n  27F9ADF2DB9921\n\n[Not Before]\n  10/19/2012 2:43:55 AM\n\n[Not After]\n  10/28/2014 5:06:24 PM\n\n[Thumbprint]\n  8A95FEB7BE9825FBE3F4F50A6662DC880764C876"
    ],
    "br": [
      ""
    ],
    "a": [
      "http://www.websocket.org/echo.html",
      "Validate Data Coming from WebSockets",
      "Check the Origin Header in the WebSocket Handshake",
      "Use TLS/SSL to Encrypt WebSocket Connections",
      "Check the Origin Attribute of WebSocket Messages",
      "Use the Latest WebSocket RFC 6455 Standard",
      "Do Not Tunnel TCP via WebSockets",
      "Data Coming from WebSockets Is Validated",
      "The Origin Header in WebSocket Handshake is Checked",
      "TLS/SSL is Used to Encrypt WebSocket Connections",
      "The Origin Attribute of WebSocket Messages Is Checked",
      "Latest RFC 6455 Standard is Used",
      "TCP Is Not Tunneled via WebSockets"
    ]
  },
  "links": [
    {
      "href": "http://www.websocket.org/echo.html",
      "text": "http://www.websocket.org/echo.html"
    },
    {
      "href": "00000000-0000-0000-0000-000000869806",
      "text": "Validate Data Coming from WebSockets"
    },
    {
      "href": "00000000-0000-0000-0000-00000093dea4",
      "text": "Check the Origin Header in the WebSocket Handshake"
    },
    {
      "href": "00000000-0000-0000-0000-0000005f2e4a",
      "text": "Use TLS/SSL to Encrypt WebSocket Connections"
    },
    {
      "href": "00000000-0000-0000-0000-000000736a21",
      "text": "Check the Origin Attribute of WebSocket Messages"
    },
    {
      "href": "00000000-0000-0000-0000-0000005326a8",
      "text": "Use the Latest WebSocket RFC 6455 Standard"
    },
    {
      "href": "00000000-0000-0000-0000-00000085bc2f",
      "text": "Do Not Tunnel TCP via WebSockets"
    },
    {
      "href": "00000000-0000-0000-0000-00000086537e",
      "text": "Data Coming from WebSockets Is Validated"
    },
    {
      "href": "00000000-0000-0000-0000-00000077e316",
      "text": "The Origin Header in WebSocket Handshake is Checked"
    },
    {
      "href": "bd870268-f104-4f6f-ba0d-6628dc34eb2a",
      "text": "TLS/SSL is Used to Encrypt WebSocket Connections"
    },
    {
      "href": "00000000-0000-0000-0000-0000002f39d7",
      "text": "The Origin Attribute of WebSocket Messages Is Checked"
    },
    {
      "href": "18d5564d-00a4-4afe-a853-707269df2566",
      "text": "Latest RFC 6455 Standard is Used"
    },
    {
      "href": "00000000-0000-0000-0000-00000091ce5a",
      "text": "TCP Is Not Tunneled via WebSockets"
    }
  ],
  "html": "<h2>Applies To</h2><ul><li> HTML5</li>\n</ul><h2>What to Do</h2><p>When using WebSockets, connect with Transport Layer Security (TLS)/Secure Sockets Layer (SSL).\n</p><h2>Why</h2><p>Just as TLS/SSL protects and encrypts the communication tunnel in HTTP, it can encrypt a WebSockets tunnel to protect against eavesdropping and man-in-the-middle attacks. (By default, the communication tunnel with the WebSocket protocol is not encrypted.) \n</p><h2>When</h2><p>Use this guideline for applications that employ the WebSocket protocol and need to protect sensitive data.\n</p><h2>How</h2><p>The WebSockets protocol specification is built on HTTP. With that in mind:\n</p><ol>\n<li> <strong>Enable security certificates and keys.</strong> Consult your web server documentation to ensure that your web site produces a valid certificate with HTTPS connections.</li>\n<li> <strong>Enable TLS/SSL on the WebSocket server.</strong> The configuration may vary depending upon the Websocket server implementation in use. </li>\n<li> <strong>Connect the client to the WebSocket server and ensure connections to the WebSocket are secure.</strong> When connecting to HTML5 web applications, ensure that client browsers connect with HTTPS. Note that the code accessing the WebSocket server should use the wss protocol, which is basically ws over TLS. As such, use <tt>wss://&lt;url&gt;</tt> instead of the typical <tt>ws://&lt;url&gt;</tt> in the HTML5 application code. </li>\n</ol>\n<h2>Problem Example</h2><p>Below is a client-side code connection to a WebSocket server. The connection uses standard ws over standard, unencrypted HTTP. An intruder who has access to the communication stream over the network could easily intercept the communication.\n</p><p>\nClient Connection:\n</p><pre>\n\n$(\"#open\").click (function (evt) {\nevt.preventDefault();\n\nvar host = ‘example.com’;\nvar port = ‘8887’;\nvar uri = ‘very_private’;\n\nws = new WebSocket(\"ws://” + host + “:” + port + “/” + uri );\n\nws.onmessage = function(evt) {alert(\"Non encrypted message has been received”)};\nws.onclose = function(evt) { alert(\"Non encrypted connection is closed\"); };\nws.onopen = function(evt) { alert(“Non encrypted connection has opened”) };\n});\n\n</pre><p>\n<br></p><h2>Solution Example</h2><p>Below is a client-side code connection to a WebSocket server using wss, which takes advantage of TLS/SSL over HTTP port 443. This change makes it much more difficult for an intruder to intercept the communication tunnel.\n</p><p>\nClient Connection:\n</p><pre>\n\n$(\"#open\").click(function(evt) {\nevt.preventDefault();\n\nvar host = ‘example.com’;\nvar port = ‘8887’;\nvar uri = ‘very_private’;\n\nws = new WebSocket(\"wss://” + host + “:” + port + “/” + uri );\nws.onmessage = function(evt) {alert(\"TLS/SSL message has been received”)};\nws.onclose = function(evt) { alert(\"TLS/SSL connection is closed\"); };\nws.onopen = function(evt) { alert(“TLS/SSL connection has opened”) };\n});\n\n</pre><p>\nWhen the handshake is performed using wss, you’ll see the typical handshake for TLS over port 443 to establish the secure connection.\n</p><p>\nBelow is a partial communication stream seen when connecting to a WebSocket testing server at <a href=\"http://www.websocket.org/echo.html\">http://www.websocket.org/echo.html</a>, and the view of the stream using a web debugging tool.\n</p><pre>\n\nHTTP/1.1 200 Connection Established\nFiddlerGateway: Direct\nStartTime: 22:24:09.760\nConnection: close\n\nEncrypted HTTPS traffic flows through this CONNECT tunnel. HTTPS Decryption is enabled in Fiddler, so decrypted sessions running in this tunnel will be shown in the Web Sessions list.\n\nSecure Protocol: Tls\nCipher: Rc4 128bits\nHash Algorithm: Sha1 160bits\nKey Exchange: RsaKeyX 2048bits\n\n== Server Certificate ==========\n[Subject]\n  CN=*.websocket.org, OU=Domain Control Validated, O=*.websocket.org\n\n[Issuer]\n  SERIALNUMBER=07969287, CN=Go Daddy Secure Certification Authority, OU=http://certificates.godaddy.com/repository, O=\"GoDaddy.com, Inc.\", L=Scottsdale, S=Arizona, C=US\n\n[Serial Number]\n  27F9ADF2DB9921\n\n[Not Before]\n  10/19/2012 2:43:55 AM\n\n[Not After]\n  10/28/2014 5:06:24 PM\n\n[Thumbprint]\n  8A95FEB7BE9825FBE3F4F50A6662DC880764C876\n\n</pre>\n<h2>WebSocket Guidelines</h2><ul><li> <a href=\"00000000-0000-0000-0000-000000869806\">Validate Data Coming from WebSockets</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000093dea4\">Check the Origin Header in the WebSocket Handshake</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000005f2e4a\">Use TLS/SSL to Encrypt WebSocket Connections</a></li>\n<li> <a href=\"00000000-0000-0000-0000-000000736a21\">Check the Origin Attribute of WebSocket Messages</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000005326a8\">Use the Latest WebSocket RFC 6455 Standard</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000085bc2f\">Do Not Tunnel TCP via WebSockets</a></li>\n</ul><h2>WebSocket Checklist Items</h2><ul><li> <a href=\"00000000-0000-0000-0000-00000086537e\">Data Coming from WebSockets Is Validated</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000077e316\">The Origin Header in WebSocket Handshake is Checked</a></li>\n<li> <a href=\"bd870268-f104-4f6f-ba0d-6628dc34eb2a\">TLS/SSL is Used to Encrypt WebSocket Connections</a></li>\n<li> <a href=\"00000000-0000-0000-0000-0000002f39d7\">The Origin Attribute of WebSocket Messages Is Checked</a></li>\n<li> <a href=\"18d5564d-00a4-4afe-a853-707269df2566\">Latest RFC 6455 Standard is Used</a></li>\n<li> <a href=\"00000000-0000-0000-0000-00000091ce5a\">TCP Is Not Tunneled via WebSockets</a></li>\n</ul>"
}