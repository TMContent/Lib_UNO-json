{
  "id": "6791cbf3-4691-4926-b554-925c66446dfe",
  "checksum": "ba5a4f7b50a580dde593071c1e3f52570cb7457e",
  "words": {
    "1": [
      "p",
      "strong"
    ],
    "2": [
      "p",
      "strong"
    ],
    "3": [
      "p",
      "p"
    ],
    "6": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "35": [
      "title"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "pre",
      "p",
      "strong",
      "p",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "c#": [
      "ul",
      "li"
    ],
    "summary": [
      "h1"
    ],
    "this": [
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "code": [
      "p",
      "pre",
      "p",
      "pre",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "pre"
    ],
    "illustrates": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "ul",
      "li",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "use": [
      "p",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "of": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "pre",
      "pre"
    ],
    "secure": [
      "p",
      "pre",
      "pre",
      "p",
      "ul",
      "li",
      "pre"
    ],
    "cookie": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "strong",
      "pre",
      "pre",
      "p",
      "p",
      "strong",
      "strong",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "strong",
      "p",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "modes": [
      "p",
      "p"
    ],
    "within": [
      "p",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "pre"
    ],
    "both": [
      "p",
      "ul",
      "li",
      "pre",
      "p"
    ],
    "application": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "cookies": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "pre",
      "title"
    ],
    "and": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "strong",
      "pre",
      "p",
      "strong",
      "p",
      "pre",
      "p",
      "strong",
      "p",
      "pre",
      "pre",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "title"
    ],
    "aspnet": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "title"
    ],
    "session": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "identifier": [
      "p",
      "ul",
      "li",
      "p",
      "pre"
    ],
    "properly": [
      "p"
    ],
    "setting": [
      "p",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "attributes": [
      "p"
    ],
    "for": [
      "p",
      "pre",
      "p",
      "p",
      "pre",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "ul",
      "li",
      "p",
      "strong",
      "pre",
      "p",
      "strong",
      "p",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "often": [
      "p",
      "ul",
      "li"
    ],
    "vital": [
      "p"
    ],
    "in": [
      "p",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre"
    ],
    "protecting": [
      "p"
    ],
    "against": [
      "p"
    ],
    "hijacking": [
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "objectives": [
      "h1"
    ],
    "provide": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "confidentiality": [
      "ul",
      "li"
    ],
    "ensuring": [
      "ul",
      "li"
    ],
    "that": [
      "ul",
      "li",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "they": [
      "ul",
      "li"
    ],
    "are": [
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "not": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "pre"
    ],
    "exposed": [
      "ul",
      "li"
    ],
    "unauthorized": [
      "ul",
      "li"
    ],
    "users": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "p",
      "strong"
    ],
    "which": [
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "may": [
      "ul",
      "li",
      "pre",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "lead": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "restricting": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p"
    ],
    "access": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "identifiers": [
      "ul",
      "li"
    ],
    "https": [
      "ul",
      "li",
      "p",
      "p",
      "strong",
      "strong",
      "p",
      "pre",
      "p",
      "p",
      "strong",
      "strong"
    ],
    "limit": [
      "ul",
      "li"
    ],
    "scope": [
      "ul",
      "li"
    ],
    "only": [
      "ul",
      "li",
      "pre",
      "pre",
      "p"
    ],
    "desired": [
      "ul",
      "li"
    ],
    "applications": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "scenarios": [
      "ul",
      "li",
      "h1"
    ],
    "prevent": [
      "ul",
      "li"
    ],
    "from": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "being": [
      "ul",
      "li"
    ],
    "accessible": [
      "ul",
      "li",
      "p"
    ],
    "javascript": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "can": [
      "ul",
      "li"
    ],
    "presence": [
      "ul",
      "li"
    ],
    "cross-site": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "scripting": [
      "ul",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "used": [
      "ul",
      "li",
      "pre",
      "pre",
      "ul",
      "li",
      "p"
    ],
    "maintain": [
      "ul",
      "li",
      "p"
    ],
    "a": [
      "ul",
      "li",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "state": [
      "ul",
      "li",
      "p"
    ],
    "uses": [
      "ul",
      "li"
    ],
    "either": [
      "ul",
      "li"
    ],
    "internal": [
      "ul",
      "li"
    ],
    "id": [
      "ul",
      "li"
    ],
    "or": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li"
    ],
    "specific": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "collects": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li",
      "h1"
    ],
    "user": [
      "ul",
      "li",
      "pre",
      "ul",
      "li",
      "pre"
    ],
    "such": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "as": [
      "ul",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p"
    ],
    "authentication": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "other": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "form": [
      "ul",
      "li"
    ],
    "data": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "li"
    ],
    "some": [
      "ul",
      "li",
      "pre",
      "pre"
    ],
    "point": [
      "ul",
      "li"
    ],
    "during": [
      "ul",
      "li"
    ],
    "lifetime": [
      "ul",
      "li"
    ],
    "requires": [
      "ul",
      "li",
      "p",
      "strong"
    ],
    "ssl": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "but": [
      "ul",
      "li",
      "p",
      "strong"
    ],
    "also": [
      "ul",
      "li"
    ],
    "configured": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong"
    ],
    "with": [
      "ul",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "an": [
      "ul",
      "li",
      "p",
      "ul",
      "li"
    ],
    "http": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "pre"
    ],
    "instance": [
      "ul",
      "li",
      "p",
      "strong",
      "p",
      "pre",
      "p",
      "strong",
      "ul",
      "li",
      "pre"
    ],
    "solution": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "example": [
      "h1",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "p",
      "h1",
      "p",
      "strong",
      "p",
      "p",
      "strong",
      "p",
      "p"
    ],
    "scenario": [
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "p",
      "strong",
      "p",
      "strong",
      "p"
    ],
    "#1": [
      "p",
      "strong",
      "p",
      "strong"
    ],
    "alone": [
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong"
    ],
    "multiple": [
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong",
      "p",
      "strong"
    ],
    "deployed": [
      "p",
      "strong",
      "p",
      "pre",
      "p",
      "pre",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "on": [
      "p",
      "strong",
      "p",
      "p",
      "strong",
      "pre",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "strong",
      "p",
      "p"
    ],
    "host": [
      "p",
      "strong",
      "p",
      "strong",
      "pre",
      "pre",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "pre"
    ],
    "path": [
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "p",
      "strong"
    ],
    "protected": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "void": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "setappcookiestring": [
      "pre",
      "pre",
      "pre"
    ],
    "name": [
      "pre",
      "pre",
      "pre"
    ],
    "string": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "value": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "path{": [
      "pre"
    ],
    "httpcookie": [
      "pre",
      "pre",
      "pre"
    ],
    "appcookie": [
      "pre",
      "pre",
      "pre"
    ],
    "=": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "new": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "httpcookiename);": [
      "pre",
      "pre",
      "pre"
    ],
    "//": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "under": [
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "p",
      "pre",
      "p",
      "strong"
    ],
    "our": [
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "ul",
      "li",
      "pre"
    ],
    "permitted": [
      "pre",
      "pre",
      "pre"
    ],
    "be": [
      "pre",
      "pre",
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "accessed": [
      "pre",
      "pre",
      "pre"
    ],
    "paths": [
      "pre",
      "pre",
      "pre"
    ],
    "should": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "possible": [
      "pre",
      "pre",
      "pre",
      "ul",
      "li",
      "pre"
    ],
    "sample": [
      "pre",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "might": [
      "pre",
      "pre",
      "pre"
    ],
    "/secure/": [
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "appcookiepath": [
      "pre",
      "pre",
      "pre"
    ],
    "following": [
      "pre",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre"
    ],
    "ensures": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "made": [
      "pre",
      "pre",
      "pre"
    ],
    "available": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "client-side": [
      "pre",
      "pre",
      "pre"
    ],
    "script": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "thus": [
      "pre",
      "pre",
      "pre"
    ],
    "mitigating": [
      "pre",
      "pre",
      "pre"
    ],
    "risk": [
      "pre",
      "pre",
      "pre"
    ],
    "unsafe": [
      "pre",
      "pre",
      "pre"
    ],
    "through": [
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "attacks": [
      "pre",
      "pre",
      "pre",
      "ul",
      "li"
    ],
    "xss": [
      "pre",
      "pre",
      "pre"
    ],
    "feature": [
      "pre",
      "pre",
      "pre"
    ],
    "generally": [
      "pre",
      "pre",
      "pre"
    ],
    "versions": [
      "pre",
      "pre",
      "pre"
    ],
    "internet": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "explorer": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "above": [
      "pre",
      "pre",
      "pre",
      "p",
      "pre"
    ],
    "appcookiehttponly": [
      "pre",
      "pre",
      "pre"
    ],
    "true": [
      "pre",
      "pre",
      "pre"
    ],
    "set": [
      "pre",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "pre"
    ],
    "appcookievalue": [
      "pre",
      "pre",
      "pre"
    ],
    "responsecookies.add(appcookie);}": [
      "pre",
      "pre"
    ],
    "page_load": [
      "p",
      "p",
      "p"
    ],
    "containing": [
      "p",
      "p",
      "p"
    ],
    "page_loadobject": [
      "pre",
      "pre",
      "pre"
    ],
    "sender": [
      "pre",
      "pre",
      "pre"
    ],
    "eventargs": [
      "pre",
      "pre",
      "pre"
    ],
    "e{": [
      "pre",
      "pre",
      "pre"
    ],
    "..": [
      "pre",
      "pre",
      "pre"
    ],
    "setappcookie\"guid\",": [
      "pre",
      "pre",
      "pre"
    ],
    "guidnewguid().tostring(),": [
      "pre",
      "pre",
      "pre"
    ],
    "\"/secure/\";": [
      "pre"
    ],
    "..}": [
      "pre",
      "pre",
      "pre"
    ],
    "#2": [
      "p",
      "strong",
      "p",
      "strong"
    ],
    "need": [
      "p",
      "strong",
      "p",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "p"
    ],
    "share": [
      "p",
      "strong",
      "pre",
      "pre",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "values": [
      "p",
      "strong",
      "pre",
      "pre",
      "ul",
      "li",
      "p",
      "strong",
      "ul",
      "li"
    ],
    "domain": [
      "p",
      "strong",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "strong",
      "p",
      "ul",
      "li",
      "p",
      "strong",
      "pre",
      "pre"
    ],
    "assumes": [
      "p",
      "p"
    ],
    "wwwcodesamples.microsoft.com": [
      "p"
    ],
    "we": [
      "p",
      "pre"
    ],
    "will": [
      "p",
      "pre",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "securecodesamples.microsoft.com": [
      "p"
    ],
    "domain{": [
      "pre"
    ],
    "when": [
      "pre",
      "pre",
      "p",
      "p",
      "pre"
    ],
    "particular": [
      "pre",
      "pre"
    ],
    "purpose": [
      "pre",
      "pre"
    ],
    "e.g.": [
      "pre",
      "pre"
    ],
    "single": [
      "pre",
      "pre"
    ],
    "sign-on": [
      "pre",
      "pre"
    ],
    "appcookiedomain": [
      "pre",
      "pre"
    ],
    "\"/secure/\"": [
      "pre"
    ],
    "\"codesamples.microsoft.com\");": [
      "pre"
    ],
    "#3": [
      "p",
      "strong",
      "p",
      "strong"
    ],
    "co-exist": [
      "p",
      "strong",
      "p",
      "strong"
    ],
    "same": [
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong"
    ],
    "must": [
      "p",
      "strong",
      "ul",
      "li",
      "p",
      "strong",
      "p"
    ],
    "login": [
      "p",
      "strong",
      "p",
      "p",
      "strong"
    ],
    "site": [
      "p",
      "p",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "pre",
      "pre"
    ],
    "primarily": [
      "p"
    ],
    "welcome": [
      "p"
    ],
    "page": [
      "p",
      "p"
    ],
    "landing": [
      "p"
    ],
    "redirected": [
      "p"
    ],
    "remainder": [
      "p"
    ],
    "their": [
      "p",
      "ul",
      "li"
    ],
    "bool": [
      "pre",
      "pre"
    ],
    "httponly": [
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "secure{": [
      "pre"
    ],
    "if": [
      "pre",
      "pre",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "!=": [
      "pre",
      "pre"
    ],
    "null": [
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "{": [
      "pre",
      "pre"
    ],
    "}": [
      "pre",
      "pre",
      "pre"
    ],
    "mode": [
      "pre",
      "pre",
      "p"
    ],
    "\"secure\"": [
      "pre",
      "p",
      "p"
    ],
    "flag": [
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "makes": [
      "pre"
    ],
    "unavailable": [
      "pre",
      "pre"
    ],
    "standard": [
      "pre"
    ],
    "sites": [
      "pre"
    ],
    "where": [
      "pre"
    ],
    "enabled": [
      "pre"
    ],
    "non-secure": [
      "pre"
    ],
    "leaked": [
      "pre"
    ],
    "event": [
      "pre",
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "browses": [
      "pre"
    ],
    "non-https": [
      "pre"
    ],
    "appcookiesecure": [
      "pre"
    ],
    "responsecookies.add(appcookie);": [
      "pre"
    ],
    "it": [
      "pre",
      "ul",
      "li",
      "p",
      "p",
      "p"
    ],
    "default": [
      "pre",
      "p"
    ],
    "current": [
      "pre"
    ],
    "true;": [
      "pre"
    ],
    "problem": [
      "h1",
      "p",
      "p",
      "p"
    ],
    "demonstrates": [
      "p",
      "p",
      "p",
      "p"
    ],
    "without": [
      "p",
      "p"
    ],
    "guid": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "guidnewguid();httpcookie": [
      "pre",
      "pre",
      "pre"
    ],
    "chocolatechip": [
      "pre",
      "pre",
      "pre"
    ],
    "httpcookie\"guid\");": [
      "pre",
      "pre"
    ],
    "valuechocolatechipvalue": [
      "pre",
      "pre",
      "pre"
    ],
    "guidtostring();response.cookies.add(chocolatechip);": [
      "pre",
      "pre",
      "pre"
    ],
    "exists": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "user's": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "hijacked": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "wasn't": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "limits": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "client": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "languages": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "vbscript": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li"
    ],
    "context": [
      "ul",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "/": [
      "ul",
      "li"
    ],
    "meaning": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "any": [
      "ul",
      "li",
      "ul",
      "li",
      "p"
    ],
    "virtual": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "stored": [
      "ul",
      "li"
    ],
    "by": [
      "ul",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "pre"
    ],
    "present": [
      "ul",
      "li"
    ],
    "pages": [
      "ul",
      "li"
    ],
    "outside": [
      "ul",
      "li"
    ],
    "directory": [
      "ul",
      "li"
    ],
    "hijack": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "luring": [
      "ul",
      "li"
    ],
    "overly": [
      "p"
    ],
    "permissive": [
      "p"
    ],
    "httpcookie\"guid\");chocolatechip.domain": [
      "pre"
    ],
    "\"microsoft.com\";": [
      "pre"
    ],
    "microsoft.com,": [
      "ul",
      "li"
    ],
    "xssmicrosoft.com,": [
      "ul",
      "li"
    ],
    "contain": [
      "ul",
      "li"
    ],
    "vulnerabilities": [
      "ul",
      "li"
    ],
    "able": [
      "ul",
      "li"
    ],
    "potentially": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "leading": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "restrictive": [
      "ul",
      "li"
    ],
    "two": [
      "ul",
      "li"
    ],
    "beneficial": [
      "ul",
      "li"
    ],
    "provision": [
      "ul",
      "li"
    ],
    "dedicated": [
      "ul",
      "li"
    ],
    "sub-domain": [
      "ul",
      "li"
    ],
    "servers": [
      "ul",
      "li"
    ],
    "fails": [
      "p"
    ],
    "get": [
      "p"
    ],
    "using": [
      "p",
      "ul",
      "li",
      "pre"
    ],
    "has": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "bookmarked": [
      "ul",
      "li"
    ],
    "visits": [
      "ul",
      "li"
    ],
    "after": [
      "ul",
      "li"
    ],
    "he/she": [
      "ul",
      "li"
    ],
    "logged": [
      "ul",
      "li"
    ],
    "sent": [
      "ul",
      "li"
    ],
    "clear": [
      "ul",
      "li",
      "pre"
    ],
    "web": [
      "ul",
      "li",
      "pre"
    ],
    "server": [
      "ul",
      "li",
      "p"
    ],
    "eavesdropper": [
      "ul",
      "li"
    ],
    "who": [
      "ul",
      "li"
    ],
    "intercepts": [
      "ul",
      "li"
    ],
    "communication": [
      "ul",
      "li"
    ],
    "bypass": [
      "ul",
      "li"
    ],
    "victim's": [
      "ul",
      "li"
    ],
    "test": [
      "h1"
    ],
    "case": [
      "h1"
    ],
    "classes": [
      "p"
    ],
    "included": [
      "p"
    ],
    "project": [
      "p"
    ],
    "making": [
      "p"
    ],
    "provided": [
      "p",
      "pre"
    ],
    "systemweb;": [
      "pre"
    ],
    "please": [
      "p"
    ],
    "refer": [
      "p"
    ],
    "examples": [
      "p"
    ],
    "invoking": [
      "p"
    ],
    "setappcookie": [
      "p"
    ],
    "method": [
      "p"
    ],
    "depending": [
      "p"
    ],
    "best": [
      "p"
    ],
    "meets": [
      "p"
    ],
    "expected": [
      "h1",
      "p"
    ],
    "result": [
      "h1"
    ],
    "results": [
      "p"
    ],
    "observed": [
      "p"
    ],
    "monitoring": [
      "p"
    ],
    "raw": [
      "p"
    ],
    "tcp": [
      "p"
    ],
    "connection": [
      "p"
    ],
    "-": [
      "p",
      "strong",
      "p",
      "strong",
      "p"
    ],
    "response": [
      "p",
      "strong",
      "p",
      "strong",
      "p"
    ],
    "set-cookie": [
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "guid=3de49a03-9957-4a37-ae37-bd3be473b9cf": [
      "pre"
    ],
    "path=/secure/": [
      "pre",
      "pre"
    ],
    "guid=459d96d9-4b96-4251-9fcf-82a7a769d2f8": [
      "pre"
    ],
    "path=/": [
      "pre",
      "pre",
      "pre"
    ],
    "sharing": [
      "p",
      "strong"
    ],
    "between": [
      "p",
      "strong"
    ],
    "hosts": [
      "p",
      "strong"
    ],
    "guid=4453386a-92b1-4e95-a8d7-99e5b828ebcd": [
      "pre"
    ],
    "domain=codesamples.microsoft.com;": [
      "pre"
    ],
    "guid=173705aa-a1cc-494b-92f3-e83cd0e8fe30": [
      "pre"
    ],
    "domain=microsoft.com;": [
      "pre"
    ],
    "'''": [
      "p"
    ],
    "guid=e4eeedb4-c3a1-44bb-af11-251c3cb10c37": [
      "pre"
    ],
    "guid=7328f6ba-ad56-4327-9cbd-ae4c8e516d17": [
      "pre"
    ],
    "more": [
      "h1"
    ],
    "addition": [
      "p"
    ],
    "advantageous": [
      "p"
    ],
    "securely": [
      "p",
      "title"
    ],
    "\"httponly\"": [
      "p",
      "p"
    ],
    "flags": [
      "p",
      "p"
    ],
    "webconfig": [
      "p",
      "p"
    ],
    "file": [
      "p"
    ],
    "consideration": [
      "p"
    ],
    "relying": [
      "p"
    ],
    "built-in": [
      "p"
    ],
    "object": [
      "p"
    ],
    "important": [
      "p"
    ],
    "ensure": [
      "p",
      "pre"
    ],
    "operate": [
      "p"
    ],
    "similarly": [
      "p"
    ],
    "!--": [
      "pre"
    ],
    "configuration": [
      "pre"
    ],
    "entry": [
      "pre"
    ],
    "specified": [
      "pre"
    ],
    "fully": [
      "pre"
    ],
    "qualified": [
      "pre"
    ],
    "whenever": [
      "pre"
    ],
    "httponlycookies": [
      "pre"
    ],
    "javascript/vbscript).": [
      "pre"
    ],
    "functionality": [
      "pre"
    ],
    "newer": [
      "pre"
    ],
    "browser": [
      "pre"
    ],
    "software": [
      "pre"
    ],
    "including": [
      "pre"
    ],
    "requiressl": [
      "pre"
    ],
    "transmitted": [
      "pre"
    ],
    "accesses": [
      "pre"
    ],
    "via": [
      "pre"
    ],
    "plaintext": [
      "pre"
    ],
    "--": [
      "pre"
    ],
    "httpcookies": [
      "pre"
    ],
    "domain=\"codesamplesmicrosoft.com\"": [
      "pre"
    ],
    "httponlycookies=\"true\"": [
      "pre"
    ],
    "requiressl=\"true\"/": [
      "pre"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Objectives",
      "Scenarios",
      "Solution Example",
      "Problem Example",
      "Test Case",
      "Expected Result",
      "More Information"
    ],
    "ul": [
      "C#",
      "Provide confidentiality of application cookies, ensuring that they are not exposed to unauthorized users which may often lead to session hijacking \r\n    Restricting access to both application cookies and ASP.NET session identifiers to HTTPS \r\n    Limit cookie scope to only desired applications and use scenarios \r\n    Prevent cookies from being accessible from JavaScript (which can lead to session hijacking in the presence of cross-site scripting",
      "Cookies are used to maintain a session state \r\n    Application uses cookies (either internal ASP.NET session id, or application specific cookies) and collects information from user such as authentication, or other form data at some point during session lifetime. \r\n    Application requires SSL, but also is configured with an HTTP instance.",
      "In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript \r\n    Cookies are set in the context of /, meaning any site deployed on the same virtual host may access values stored by our application deployed in /secure/ \r\n    Cross-site scripting, if present on other pages outside of our application directory deployed on the same virtual host may be used to hijack a user's session through luring attacks.",
      "In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript \r\n    Cookies are set in the context of .microsoft.com, meaning any site such as xss.microsoft.com, which may contain application vulnerabilities will be able to access cookies set by our application potentially leading to session hijacking. \r\n    Cookies should be set to a domain which is as restrictive as possible. If two applications must share cookie values it may be beneficial to provision a dedicated sub-domain for use by the application servers.",
      "In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript \r\n    Cookies are not set using the secure cookie flag potentially leading to session hijacking. In the event a user has bookmarked or visits the HTTP instance of the site after he/she has logged in, their session identifier will be sent in the clear to the web server. An eavesdropper who intercepts the communication may use the session cookie to bypass authentication and hijack the victim's session."
    ],
    "li": [
      "C#",
      "Provide confidentiality of application cookies, ensuring that they are not exposed to unauthorized users which may often lead to session hijacking",
      "Restricting access to both application cookies and ASP.NET session identifiers to HTTPS",
      "Limit cookie scope to only desired applications and use scenarios",
      "Prevent cookies from being accessible from JavaScript (which can lead to session hijacking in the presence of cross-site scripting",
      "Cookies are used to maintain a session state",
      "Application uses cookies (either internal ASP.NET session id, or application specific cookies) and collects information from user such as authentication, or other form data at some point during session lifetime.",
      "Application requires SSL, but also is configured with an HTTP instance.",
      "In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript",
      "Cookies are set in the context of /, meaning any site deployed on the same virtual host may access values stored by our application deployed in /secure/",
      "Cross-site scripting, if present on other pages outside of our application directory deployed on the same virtual host may be used to hijack a user's session through luring attacks.",
      "In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript",
      "Cookies are set in the context of .microsoft.com, meaning any site such as xss.microsoft.com, which may contain application vulnerabilities will be able to access cookies set by our application potentially leading to session hijacking.",
      "Cookies should be set to a domain which is as restrictive as possible. If two applications must share cookie values it may be beneficial to provision a dedicated sub-domain for use by the application servers.",
      "In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript",
      "Cookies are not set using the secure cookie flag potentially leading to session hijacking. In the event a user has bookmarked or visits the HTTP instance of the site after he/she has logged in, their session identifier will be sent in the clear to the web server. An eavesdropper who intercepts the communication may use the session cookie to bypass authentication and hijack the victim's session."
    ],
    "p": [
      "This code illustrates the use of secure cookie modes within both application cookies and the ASP.NET session identifier cookie. Properly setting modes and attributes for application cookies is often vital in protecting against session hijacking.",
      "Scenario #1: HTTP alone is configured and multiple applications deployed on host (Restricting Cookie Path Example)",
      "With Page_Load containing the following code",
      "Scenario #2: HTTP alone is configured and multiple applications need to share cookie values (Restricting cookie domain example)",
      "The following example assumes our application is deployed on www.codesamples.microsoft.com and we need to set a cookie that will be accessible from secure.codesamples.microsoft.com",
      "With Page_Load containing the following code",
      "Scenario #3: HTTP and HTTPS co-exist on same host, users must login under HTTPS instance",
      "The following example assumes a site primarily for use under HTTPS with a welcome page deployed under HTTP. From the landing page users are redirected to the SSL site instance for login and the remainder of their session.",
      "With Page_Load containing the following code",
      "Scenario #1: HTTP alone is configured and multiple applications deployed on host (Restricting Cookie Path Example)",
      "The following example demonstrates setting a cookie without a default path value:",
      "Scenario #2: HTTP alone is configured and multiple applications need to share cookie values (Restricting cookie domain example)",
      "The following example demonstrates setting a cookie without an overly permissive domain value:",
      "Scenario #3: HTTP and HTTPS co-exist on same host, users must login under HTTPS instance",
      "The following example demonstrates setting a cookie which fails to get set using the secure cookie flag.",
      "The following classes must be included in any project making use of the sample code provided above:",
      "Please refer to Solution examples for invoking the SetAppCookie method depending on the scenario that best meets the application need.",
      "The following expected results may be observed by monitoring the raw TCP connection:",
      "Scenario 1 - HTTP response (Restricting Cookie Path)",
      "Solution",
      "Problem",
      "Scenario 2 - HTTP response (Restricting cookie domain, but requires sharing cookies between hosts)",
      "Solution",
      "Problem",
      "''' Scenario 3 - HTTP response (Restricting cookie to SSL only)",
      "Solution:",
      "Problem:",
      "In addition to solution 3, it may be advantageous to set the ASP.NET session cookie securely when it is used to maintain session state for the application. The \"secure\" and \"httponly\" cookie flags may be set within the ASP.net web.config file for the specific site in consideration. When relying on the ASP.NET built-in session object it is important to ensure both application and application server cookies operate similarly. As such the following code sample from a web.config demonstrates setting the ASP.NET session identifier with the \"secure\" mode and \"httponly\" cookie flags:",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "strong": [
      "Scenario #1: HTTP alone is configured and multiple applications deployed on host (Restricting Cookie Path Example)",
      "Scenario #2: HTTP alone is configured and multiple applications need to share cookie values (Restricting cookie domain example)",
      "Scenario #3: HTTP and HTTPS co-exist on same host, users must login under HTTPS instance",
      "Scenario #1: HTTP alone is configured and multiple applications deployed on host (Restricting Cookie Path Example)",
      "Scenario #2: HTTP alone is configured and multiple applications need to share cookie values (Restricting cookie domain example)",
      "Scenario #3: HTTP and HTTPS co-exist on same host, users must login under HTTPS instance",
      "Scenario 1 - HTTP response (Restricting Cookie Path)",
      "Scenario 2 - HTTP response (Restricting cookie domain, but requires sharing cookies between hosts)"
    ],
    "pre": [
      "protected void SetAppCookie(string name, string value, string path){    HttpCookie appCookie = new HttpCookie(name);",
      "// Provide a specific path under which our cookies are permitted    // to be accessed    //     // Application paths should be as specific as possible:    //  a sample application path might be: /secure/    appCookie.Path = path;",
      "// The following cookie setting ensures that cookies are not made available within client-side    // script code thus mitigating the risk of unsafe access through attacks such as XSS.",
      "// This feature is generally available in versions of Internet Explorer 6 and above    appCookie.HttpOnly = true;",
      "// Set our cookie value    appCookie.Value = value;    Response.Cookies.Add(appCookie);}",
      "protected void Page_Load(object sender, EventArgs e){    ...    SetAppCookie(\"GUID\", Guid.NewGuid().ToString(), \"/secure/\");    ...}",
      "protected void SetAppCookie(string name, string value, string path, string domain){    HttpCookie appCookie = new HttpCookie(name);",
      "// Provide a specific path under which our cookies are permitted    // to be accessed    //     // Application paths should be as specific as possible:    //  a sample application path might be: /secure/    appCookie.Path = path;",
      "// The following cookie setting ensures that cookies are not made available within client-side    // script code thus mitigating the risk of unsafe access through attacks such as XSS.",
      "// This feature is generally available in versions of Internet Explorer 6 and above    appCookie.HttpOnly = true;",
      "// Set our cookie domain. This should only be used when applications deployed    // in a particular domain need to share values for some purpose (E.g. single sign-on)    appCookie.Domain = domain;",
      "// Set our cookie value    appCookie.Value = value;    Response.Cookies.Add(appCookie);}",
      "protected void Page_Load(object sender, EventArgs e){    ...    SetAppCookie(\"GUID\", Guid.NewGuid().ToString(), \"/secure/\", \".codesamples.microsoft.com\");    ...}",
      "protected void SetAppCookie(string name, string value, string path,\t\t\t\t string domain, bool httponly, bool secure){    HttpCookie appCookie = new HttpCookie(name);",
      "// Provide a specific path under which our cookies are permitted    // to be accessed    //     // Application paths should be as specific as possible:    //  a sample application path might be: /secure/    if (path != null)    {        appCookie.Path = path;    }",
      "// The following cookie setting ensures that cookies are not made available within client-side    // script code thus mitigating the risk of unsafe access through attacks such as XSS.",
      "// This feature is generally available in versions of Internet Explorer 6 and above    appCookie.HttpOnly = httponly;",
      "// The secure cookie mode ensures that cookies are set with the \"secure\" mode cookie flag,    // which makes cookies unavailable through standard HTTP. On sites where both HTTP and HTTPS    // is enabled non-secure cookies may be leaked in the event a user browses to the non-HTTPS    // instance of the site.    appCookie.Secure = secure;",
      "// Set our cookie domain. This should only be used when applications deployed    // in a particular domain need to share values for some purpose (E.g. single sign-on)    if (domain != null)    {        appCookie.Domain = domain;    }",
      "// Set our cookie value    appCookie.Value = value;    Response.Cookies.Add(appCookie);",
      "}",
      "protected void Page_Load(object sender, EventArgs e){    ...    // We need not set the application host as it will default to the current host    SetAppCookie(\"GUID\", Guid.NewGuid().ToString(), null, null, true, true);            ...}",
      "Guid guid = Guid.NewGuid();HttpCookie chocolateChip = new HttpCookie(\"GUID\");",
      "// Set our cookie valuechocolateChip.Value = guid.ToString();Response.Cookies.Add(chocolateChip);",
      "Guid guid = Guid.NewGuid();HttpCookie chocolateChip = new HttpCookie(\"GUID\");chocolateChip.Domain = \".microsoft.com\";",
      "// Set our cookie valuechocolateChip.Value = guid.ToString();Response.Cookies.Add(chocolateChip);",
      "Guid guid = Guid.NewGuid();HttpCookie chocolateChip = new HttpCookie(\"GUID\");",
      "// Set our cookie valuechocolateChip.Value = guid.ToString();Response.Cookies.Add(chocolateChip);",
      "using System.Web;",
      "Set-Cookie: GUID=3de49a03-9957-4a37-ae37-bd3be473b9cf; path=/secure/; HttpOnly",
      "Set-Cookie: GUID=459d96d9-4b96-4251-9fcf-82a7a769d2f8; path=/",
      "Set-Cookie: GUID=4453386a-92b1-4e95-a8d7-99e5b828ebcd; domain=.codesamples.microsoft.com; path=/secure/; HttpOnly",
      "Set-Cookie: GUID=173705aa-a1cc-494b-92f3-e83cd0e8fe30; domain=.microsoft.com; path=/",
      "Set-Cookie: GUID=e4eeedb4-c3a1-44bb-af11-251c3cb10c37; secure; HttpOnly",
      "Set-Cookie: GUID=7328f6ba-ad56-4327-9cbd-ae4c8e516d17; path=/",
      "<!-- The following configuration entry ensures that the ASP.NET session identifier is set         within the context of a specified domain (ensure that the domain is a fully qualified host         whenever possible.",
      "httpOnlyCookies ensures that cookies are unavailable to client script code          (JavaScript/VBScript). This functionality is provided by newer web browser software         including Internet Explorer 6 and above",
      "requireSSL ensures that the ASP.NET session cookie is not transmitted in the clear when         a user accesses the site via the plaintext HTTP instance of the site. -->    <httpCookies domain=\"codesamples.microsoft.com\"                 httpOnlyCookies=\"true\"                 requireSSL=\"true\"/>"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>C#</li>\r\n  </ul>\r\n  <h1>Summary</h1>\r\n  <p>This code illustrates the use of secure cookie modes within both application cookies and the ASP.NET session identifier cookie. Properly setting modes and attributes for application cookies is often vital in protecting against session hijacking.</p>\r\n  <h1>Objectives</h1>\r\n  <ul>\r\n    <li>Provide confidentiality of application cookies, ensuring that they are not exposed to unauthorized users which may often lead to session hijacking </li>\r\n    <li>Restricting access to both application cookies and ASP.NET session identifiers to HTTPS </li>\r\n    <li>Limit cookie scope to only desired applications and use scenarios </li>\r\n    <li>Prevent cookies from being accessible from JavaScript (which can lead to session hijacking in the presence of cross-site scripting</li>\r\n  </ul>\r\n  <h1>Scenarios</h1>\r\n  <ul>\r\n    <li>Cookies are used to maintain a session state </li>\r\n    <li>Application uses cookies (either internal ASP.NET session id, or application specific cookies) and collects information from user such as authentication, or other form data at some point during session lifetime. </li>\r\n    <li>Application requires SSL, but also is configured with an HTTP instance. </li>\r\n  </ul>\r\n  <h1>Solution Example</h1>\r\n  <p>\r\n    <strong>Scenario #1: HTTP alone is configured and multiple applications deployed on host (Restricting Cookie Path Example)</strong>\r\n  </p>\r\n  <pre>protected void SetAppCookie(string name, string value, string path)<br />{<br />&nbsp;&nbsp;&nbsp; HttpCookie appCookie = new HttpCookie(name);</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Provide a specific path under which our cookies are permitted<br />&nbsp;&nbsp;&nbsp; // to be accessed<br />&nbsp;&nbsp;&nbsp; // <br />&nbsp;&nbsp;&nbsp; // Application paths should be as specific as possible:<br />&nbsp;&nbsp;&nbsp; //&nbsp; a sample application path might be: /secure/<br />&nbsp;&nbsp;&nbsp; appCookie.Path = path;</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // The following cookie setting ensures that cookies are not made available within client-side<br />&nbsp;&nbsp;&nbsp; // script code thus mitigating the risk of unsafe access through attacks such as XSS.</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // This feature is generally available in versions of Internet Explorer 6 and above<br />&nbsp;&nbsp;&nbsp; appCookie.HttpOnly = true;</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Set our cookie value<br />&nbsp;&nbsp;&nbsp; appCookie.Value = value;<br />&nbsp;&nbsp;&nbsp; Response.Cookies.Add(appCookie);<br />}</pre>\r\n  <p>\r\n    <br />With Page_Load containing the following code</p>\r\n  <pre>protected void Page_Load(object sender, EventArgs e)<br />{<br />&nbsp;&nbsp;&nbsp; ...<br />&nbsp;&nbsp;&nbsp; SetAppCookie(\"GUID\", Guid.NewGuid().ToString(), \"/secure/\");<br />&nbsp;&nbsp;&nbsp; ...<br />}</pre>\r\n  <p>\r\n    <strong>Scenario #2: HTTP alone is configured and multiple applications need to share cookie values (Restricting cookie domain example)</strong>\r\n  </p>\r\n  <p>The following example assumes our application is deployed on www.codesamples.microsoft.com and we need to set a cookie that will be accessible from secure.codesamples.microsoft.com</p>\r\n  <pre>protected void SetAppCookie(string name, string value, string path, string domain)<br />{<br />&nbsp;&nbsp;&nbsp; HttpCookie appCookie = new HttpCookie(name);</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Provide a specific path under which our cookies are permitted<br />&nbsp;&nbsp;&nbsp; // to be accessed<br />&nbsp;&nbsp;&nbsp; // <br />&nbsp;&nbsp;&nbsp; // Application paths should be as specific as possible:<br />&nbsp;&nbsp;&nbsp; //&nbsp; a sample application path might be: /secure/<br />&nbsp;&nbsp;&nbsp; appCookie.Path = path;</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // The following cookie setting ensures that cookies are not made available within client-side<br />&nbsp;&nbsp;&nbsp; // script code thus mitigating the risk of unsafe access through attacks such as XSS.</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // This feature is generally available in versions of Internet Explorer 6 and above<br />&nbsp;&nbsp;&nbsp; appCookie.HttpOnly = true;</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Set our cookie domain. This should only be used when applications deployed<br />&nbsp;&nbsp;&nbsp; // in a particular domain need to share values for some purpose (E.g. single sign-on)<br />&nbsp;&nbsp;&nbsp; appCookie.Domain = domain;</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Set our cookie value<br />&nbsp;&nbsp;&nbsp; appCookie.Value = value;<br />&nbsp;&nbsp;&nbsp; Response.Cookies.Add(appCookie);<br />}</pre>\r\n  <p>\r\n    <br />With Page_Load containing the following code</p>\r\n  <pre>protected void Page_Load(object sender, EventArgs e)<br />{<br />&nbsp;&nbsp;&nbsp; ...<br />&nbsp;&nbsp;&nbsp; SetAppCookie(\"GUID\", Guid.NewGuid().ToString(), \"/secure/\", \".codesamples.microsoft.com\");<br />&nbsp;&nbsp;&nbsp; ...<br />}</pre>\r\n  <p>\r\n    <strong>Scenario #3: HTTP and HTTPS co-exist on same host, users must login under HTTPS instance</strong>\r\n  </p>\r\n  <p>The following example assumes a site primarily for use under HTTPS with a welcome page deployed under HTTP. From the landing page users are redirected to the SSL site instance for login and the remainder of their session.</p>\r\n  <pre>protected void SetAppCookie(string name, string value, string path,<br />\t\t\t\t string domain, bool httponly, bool secure)<br />{<br />&nbsp;&nbsp;&nbsp; HttpCookie appCookie = new HttpCookie(name);</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Provide a specific path under which our cookies are permitted<br />&nbsp;&nbsp;&nbsp; // to be accessed<br />&nbsp;&nbsp;&nbsp; // <br />&nbsp;&nbsp;&nbsp; // Application paths should be as specific as possible:<br />&nbsp;&nbsp;&nbsp; //&nbsp; a sample application path might be: /secure/<br />&nbsp;&nbsp;&nbsp; if (path != null)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; appCookie.Path = path;<br />&nbsp;&nbsp;&nbsp; }</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // The following cookie setting ensures that cookies are not made available within client-side<br />&nbsp;&nbsp;&nbsp; // script code thus mitigating the risk of unsafe access through attacks such as XSS.</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // This feature is generally available in versions of Internet Explorer 6 and above<br />&nbsp;&nbsp;&nbsp; appCookie.HttpOnly = httponly;</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // The secure cookie mode ensures that cookies are set with the \"secure\" mode cookie flag,<br />&nbsp;&nbsp;&nbsp; // which makes cookies unavailable through standard HTTP. On sites where both HTTP and HTTPS<br />&nbsp;&nbsp;&nbsp; // is enabled non-secure cookies may be leaked in the event a user browses to the non-HTTPS<br />&nbsp;&nbsp;&nbsp; // instance of the site.<br />&nbsp;&nbsp;&nbsp; appCookie.Secure = secure;</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Set our cookie domain. This should only be used when applications deployed<br />&nbsp;&nbsp;&nbsp; // in a particular domain need to share values for some purpose (E.g. single sign-on)<br />&nbsp;&nbsp;&nbsp; if (domain != null)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; appCookie.Domain = domain;<br />&nbsp;&nbsp;&nbsp; }</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp; // Set our cookie value<br />&nbsp;&nbsp;&nbsp; appCookie.Value = value;<br />&nbsp;&nbsp;&nbsp; Response.Cookies.Add(appCookie);</pre>\r\n  <pre>\r\n    <br />}</pre>\r\n  <p>\r\n    <br />With Page_Load containing the following code</p>\r\n  <pre>\r\n    <br />protected void Page_Load(object sender, EventArgs e)<br />{<br />&nbsp;&nbsp;&nbsp; ...<br />&nbsp;&nbsp;&nbsp; // We need not set the application host as it will default to the current host<br />&nbsp;&nbsp;&nbsp; SetAppCookie(\"GUID\", Guid.NewGuid().ToString(), null, null, true, true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; ...<br />}</pre>\r\n  <h1>Problem Example</h1>\r\n  <p>\r\n    <strong>Scenario #1: HTTP alone is configured and multiple applications deployed on host (Restricting Cookie Path Example)</strong>\r\n  </p>\r\n  <p>The following example demonstrates setting a cookie without a default path value:</p>\r\n  <pre>Guid guid = Guid.NewGuid();<br />HttpCookie chocolateChip = new HttpCookie(\"GUID\");</pre>\r\n  <pre>\r\n    <br />// Set our cookie value<br />chocolateChip.Value = guid.ToString();<br />Response.Cookies.Add(chocolateChip);</pre>\r\n  <ul>\r\n    <li>In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript </li>\r\n    <li>Cookies are set in the context of /, meaning any site deployed on the same virtual host may access values stored by our application deployed in /secure/ </li>\r\n    <li>Cross-site scripting, if present on other pages outside of our application directory deployed on the same virtual host may be used to hijack a user's session through luring attacks.</li>\r\n  </ul>\r\n  <p>\r\n    <strong>Scenario #2: HTTP alone is configured and multiple applications need to share cookie values (Restricting cookie domain example)</strong>\r\n  </p>\r\n  <p>The following example demonstrates setting a cookie without an overly permissive domain value:</p>\r\n  <pre>Guid guid = Guid.NewGuid();<br />HttpCookie chocolateChip = new HttpCookie(\"GUID\");<br />chocolateChip.Domain = \".microsoft.com\";</pre>\r\n  <pre>\r\n    <br />// Set our cookie value<br />chocolateChip.Value = guid.ToString();<br />Response.Cookies.Add(chocolateChip);</pre>\r\n  <ul>\r\n    <li>In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript </li>\r\n    <li>Cookies are set in the context of .microsoft.com, meaning any site such as xss.microsoft.com, which may contain application vulnerabilities will be able to access cookies set by our application potentially leading to session hijacking. </li>\r\n    <li>Cookies should be set to a domain which is as restrictive as possible. If two applications must share cookie values it may be beneficial to provision a dedicated sub-domain for use by the application servers.</li>\r\n  </ul>\r\n  <p>\r\n    <strong>Scenario #3: HTTP and HTTPS co-exist on same host, users must login under HTTPS instance</strong>\r\n  </p>\r\n  <p>The following example demonstrates setting a cookie which fails to get set using the secure cookie flag.</p>\r\n  <pre>Guid guid = Guid.NewGuid();<br />HttpCookie chocolateChip = new HttpCookie(\"GUID\");</pre>\r\n  <pre>\r\n    <br />// Set our cookie value<br />chocolateChip.Value = guid.ToString();<br />Response.Cookies.Add(chocolateChip);</pre>\r\n  <ul>\r\n    <li>In the event that Cross-site scripting exists within the deployed application, a user's session may be hijacked as the cookie wasn't set with the HttpOnly cookie flag which limits access to the cookie within client scripting languages such as JavaScript and VBScript </li>\r\n    <li>Cookies are not set using the secure cookie flag potentially leading to session hijacking. In the event a user has bookmarked or visits the HTTP instance of the site after he/she has logged in, their session identifier will be sent in the clear to the web server. An eavesdropper who intercepts the communication may use the session cookie to bypass authentication and hijack the victim's session.</li>\r\n  </ul>\r\n  <h1>Test Case</h1>\r\n  <p>The following classes must be included in any project making use of the sample code provided above:</p>\r\n  <pre>using System.Web;</pre>\r\n  <p>Please refer to Solution examples for invoking the SetAppCookie method depending on the scenario that best meets the application need.</p>\r\n  <h1>Expected Result</h1>\r\n  <p>The following expected results may be observed by monitoring the raw TCP connection:</p>\r\n  <p>\r\n    <strong>Scenario 1 - HTTP response (Restricting Cookie Path)</strong>\r\n  </p>\r\n  <p>Solution</p>\r\n  <pre>Set-Cookie: GUID=3de49a03-9957-4a37-ae37-bd3be473b9cf; path=/secure/; HttpOnly</pre>\r\n  <p>Problem</p>\r\n  <pre>Set-Cookie: GUID=459d96d9-4b96-4251-9fcf-82a7a769d2f8; path=/</pre>\r\n  <p>\r\n    <strong>Scenario 2 - HTTP response (Restricting cookie domain, but requires sharing cookies between hosts)</strong>\r\n  </p>\r\n  <p>Solution</p>\r\n  <pre>Set-Cookie: GUID=4453386a-92b1-4e95-a8d7-99e5b828ebcd;<br /> domain=.codesamples.microsoft.com; path=/secure/; HttpOnly</pre>\r\n  <p>Problem</p>\r\n  <pre>Set-Cookie: GUID=173705aa-a1cc-494b-92f3-e83cd0e8fe30; domain=.microsoft.com; path=/</pre>\r\n  <p>''' Scenario 3 - HTTP response (Restricting cookie to SSL only)</p>\r\n  <p>Solution:</p>\r\n  <pre>Set-Cookie: GUID=e4eeedb4-c3a1-44bb-af11-251c3cb10c37; secure; HttpOnly</pre>\r\n  <p>Problem:</p>\r\n  <pre>Set-Cookie: GUID=7328f6ba-ad56-4327-9cbd-ae4c8e516d17; path=/</pre>\r\n  <h1>More Information</h1>\r\n  <p>In addition to solution 3, it may be advantageous to set the ASP.NET session cookie securely when it is used to maintain session state for the application. The \"secure\" and \"httponly\" cookie flags may be set within the ASP.net web.config file for the specific site in consideration. When relying on the ASP.NET built-in session object it is important to ensure both application and application server cookies operate similarly. As such the following code sample from a web.config demonstrates setting the ASP.NET session identifier with the \"secure\" mode and \"httponly\" cookie flags:</p>\r\n  <pre>   &lt;!-- The following configuration entry ensures that the ASP.NET session identifier is set<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; within the context of a specified domain (ensure that the domain is a fully qualified host<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; whenever possible.</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpOnlyCookies ensures that cookies are unavailable to client script code <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (JavaScript/VBScript). This functionality is provided by newer web browser software<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; including Internet Explorer 6 and above</pre>\r\n  <pre>\r\n    <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; requireSSL ensures that the ASP.NET session cookie is not transmitted in the clear when<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a user accesses the site via the plaintext HTTP instance of the site. --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;httpCookies domain=\"codesamples.microsoft.com\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; httpOnlyCookies=\"true\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; requireSSL=\"true\"/&gt;<br /></pre>\r\n  <br />\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}