{
  "id": "78d58c9a-f1e8-45ba-9fbd-56ab1f6b804a",
  "checksum": "854fff775138f675967e5c06df0fcd1eb32b51d0",
  "words": {
    "what": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "check": [
      "h1"
    ],
    "for": [
      "h1",
      "ul",
      "li"
    ],
    "ensure": [
      "p",
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "impersonation": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "reverted": [
      "p",
      "p",
      "title"
    ],
    "by": [
      "p",
      "p",
      "blockquote",
      "title"
    ],
    "using": [
      "p",
      "p",
      "pre",
      "p",
      "title"
    ],
    "structured": [
      "p",
      "p"
    ],
    "exception": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "handling in": [
      "p"
    ],
    "programmatic": [
      "p",
      "p"
    ],
    "how": [
      "h1",
      "ul",
      "li",
      "a"
    ],
    "fix": [
      "h1"
    ],
    "if": [
      "p",
      "p",
      "p"
    ],
    "you": [
      "p",
      "p"
    ],
    "must": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "handling": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "blockquote",
      "ul",
      "li",
      "a"
    ],
    "put": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "code": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "inside": [
      "p"
    ],
    "try": [
      "p",
      "b"
    ],
    "blocks": [
      "p",
      "title"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "catch": [
      "p",
      "b",
      "p",
      "p"
    ],
    "block": [
      "p",
      "p",
      "p",
      "p"
    ],
    "handle": [
      "p"
    ],
    "exceptions": [
      "p",
      "p"
    ],
    "finally": [
      "p",
      "b",
      "p",
      "p",
      "b",
      "b",
      "title"
    ],
    "as": [
      "p"
    ],
    "shown": [
      "p"
    ],
    "here": [
      "p"
    ],
    "systemsecurity.principal;...windowsidentity": [
      "p",
      "pre"
    ],
    "winidentity": [
      "p",
      "pre"
    ],
    "=": [
      "p",
      "p",
      "pre",
      "pre"
    ],
    "new": [
      "p",
      "pre"
    ],
    "windowsidentityusername@domainname);windowsimpersonationcontext": [
      "p",
      "pre"
    ],
    "ctx": [
      "p",
      "pre"
    ],
    "winidentityimpersonate();try{": [
      "p",
      "pre"
    ],
    "//": [
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre"
    ],
    "do": [
      "p",
      "pre"
    ],
    "work}catchexception": [
      "p",
      "pre"
    ],
    "ex{": [
      "p",
      "pre"
    ],
    "stop": [
      "p",
      "p",
      "pre",
      "pre"
    ],
    "impersonating": [
      "p",
      "p",
      "pre",
      "pre"
    ],
    "ctxundo();}finally{": [
      "p",
      "pre"
    ],
    "ctxundo();}": [
      "p",
      "pre"
    ],
    "username@domainname": [
      "a"
    ],
    "token": [
      "p"
    ],
    "removed": [
      "p"
    ],
    "from": [
      "p",
      "p"
    ],
    "current": [
      "p"
    ],
    "thread": [
      "p"
    ],
    "whether": [
      "p"
    ],
    "an": [
      "p"
    ],
    "generated": [
      "p"
    ],
    "or": [
      "p"
    ],
    "not": [
      "p",
      "p"
    ],
    "also": [
      "p"
    ],
    "be": [
      "p"
    ],
    "aware": [
      "p"
    ],
    "your": [
      "p",
      "p",
      "p",
      "p"
    ],
    "fails": [
      "p"
    ],
    "malicious": [
      "p"
    ],
    "user": [
      "p"
    ],
    "could": [
      "p"
    ],
    "filters": [
      "p",
      "p",
      "blockquote"
    ],
    "execute": [
      "p"
    ],
    "runs": [
      "p"
    ],
    "under": [
      "p"
    ],
    "impersonated": [
      "p"
    ],
    "security": [
      "p"
    ],
    "context": [
      "p"
    ],
    "this": [
      "p"
    ],
    "particularly": [
      "p"
    ],
    "serious": [
      "p"
    ],
    "impersonates": [
      "p"
    ],
    "privileged": [
      "p"
    ],
    "accountif": [
      "p"
    ],
    "does": [
      "p"
    ],
    "higher": [
      "p"
    ],
    "in": [
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "call": [
      "p"
    ],
    "stack": [
      "p"
    ],
    "are": [
      "p",
      "blockquote"
    ],
    "executed": [
      "p",
      "p"
    ],
    "before": [
      "p"
    ],
    "note  exception": [
      "blockquote"
    ],
    "supported": [
      "blockquote"
    ],
    "microsoft": [
      "blockquote",
      "p"
    ],
    "intermediate": [
      "blockquote"
    ],
    "language": [
      "blockquote"
    ],
    "msil)": [
      "blockquote"
    ],
    "visual": [
      "blockquote"
    ],
    "basic": [
      "blockquote"
    ],
    "net.": [
      "blockquote"
    ],
    "note": [
      "b"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "more": [
      "ul",
      "li"
    ],
    "information": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "delegation": [
      "ul",
      "li",
      "a"
    ],
    "aspnet.": [
      "ul",
      "li"
    ],
    "aspnet": [
      "a"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "What to Check For",
      "How to Fix",
      "Additional Resources"
    ],
    "p": [
      "Ensure that impersonation is reverted by using structured exception handling in programmatic impersonation.",
      "If you must use programmatic impersonation, use structured exception handling and put the impersonation code inside try blocks. Use a catch block to handle exceptions and use a finally block to ensure that the impersonation is reverted as shown here:",
      "using System.Security.Principal;...WindowsIdentity winIdentity = new WindowsIdentity(username@domainName);WindowsImpersonationContext ctx = winIdentity.Impersonate();try{  // Do work}catch(Exception ex){  // Stop impersonating  ctx.Undo();}finally{  // Stop impersonating  ctx.Undo();}",
      "By using a finally block, you ensure that the impersonation token is removed from the current thread whether an exception is generated or not. Also be aware that if your code fails to catch exceptions, a malicious user could use exception filters to execute code that runs under the impersonated security context. This is particularly serious if your code impersonates a privileged account.If your code does not catch the exception, exception filters higher in the call stack are executed before code in your finally block is executed.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "b": [
      "try",
      "catch",
      "finally",
      "finally",
      "finally",
      "Note",
      ""
    ],
    "pre": [
      "using System.Security.Principal;...WindowsIdentity winIdentity = new WindowsIdentity(username@domainName);WindowsImpersonationContext ctx = winIdentity.Impersonate();try{  // Do work}catch(Exception ex){  // Stop impersonating  ctx.Undo();}finally{  // Stop impersonating  ctx.Undo();}"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "username@domainName",
      "How To: Use Impersonation and Delegation in ASP.NET"
    ],
    "blockquote": [
      "Note  Exception filters are supported by Microsoft Intermediate Language (MSIL) and Visual Basic .NET."
    ],
    "ul": [
      "For more information, see How To: Use Impersonation and Delegation in ASP.NET."
    ],
    "li": [
      "For more information, see How To: Use Impersonation and Delegation in ASP.NET."
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "mailto:username@domainName",
      "text": "username@domainName"
    },
    {
      "href": "http://msdn2.microsoft.com/en-us/library/ms998351.aspx",
      "text": "How To: Use Impersonation and Delegation in ASP.NET"
    }
  ],
  "html": "<h1>What to Check For</h1>\r\n  <p>Ensure that impersonation is reverted by using structured exception handling&nbsp;in programmatic impersonation.</p>\r\n  <h1>How to Fix</h1>\r\n  <p>If you must use programmatic impersonation, use structured exception handling and put the impersonation code inside <b>try</b> blocks. Use a <b>catch</b> block to handle exceptions and use a <b>finally</b> block to ensure that the impersonation is reverted as shown here:</p>\r\n  <p>\r\n    <pre>using System.Security.Principal;<br />...<br />WindowsIdentity winIdentity = new WindowsIdentity(<a href=\"mailto:username&#64;domainName\">username&#64;domainName</a>);<br />WindowsImpersonationContext ctx = winIdentity.Impersonate();<br />try<br />&#123;<br />  // Do work<br />&#125;<br />catch(Exception ex)<br />&#123;<br />  // Stop impersonating  ctx.Undo();<br />&#125;<br />finally<br />&#123;<br />  // Stop impersonating<br />  ctx.Undo();<br />&#125;</pre>\r\n  </p>\r\n  <p>By using a <b>finally</b> block, you ensure that the impersonation token is removed from the current thread whether an exception is generated or not. Also be aware that if your code fails to catch exceptions, a malicious user could use exception filters to execute code that runs under the impersonated security context. This is particularly serious if your code impersonates a privileged account.If your code does not catch the exception, exception filters higher in the call stack are executed before code in your <b>finally</b> block is executed.</p>\r\n  <blockquote>\r\n    <b>Note</b>&nbsp;&nbsp;Exception filters are supported by Microsoft Intermediate Language (MSIL) and Visual Basic .NET.<b></b></blockquote>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information, see <a href=\"http://msdn2.microsoft.com/en-us/library/ms998351.aspx\">How To: Use Impersonation and Delegation in ASP.NET</a>.</li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>"
}