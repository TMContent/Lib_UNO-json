{
  "id": "05a2cfa6-d015-446b-8c25-3cb13f10d396",
  "checksum": "227aed5a5cedfa9924bda14930b43ef7c962e62a",
  "words": {
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "scala": [
      "p"
    ],
    "and": [
      "p"
    ],
    "play": [
      "p"
    ],
    "framework": [
      "p"
    ],
    "21.0+": [
      "p"
    ],
    "what": [
      "h1"
    ],
    "do": [
      "h1"
    ],
    "invalidate": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "title"
    ],
    "sessions": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "title"
    ],
    "when": [
      "p",
      "p",
      "p",
      "title"
    ],
    "users": [
      "p",
      "p",
      "p",
      "title"
    ],
    "log": [
      "p",
      "p",
      "p",
      "title"
    ],
    "out": [
      "p",
      "p",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "invalidating": [
      "p"
    ],
    "makes": [
      "p"
    ],
    "it": [
      "p"
    ],
    "harder": [
      "p"
    ],
    "hijack": [
      "p"
    ],
    "them": [
      "p"
    ],
    "how": [
      "h1",
      "ol",
      "li",
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "logout": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ul",
      "li"
    ],
    "functionality find": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "that": [
      "ol",
      "li",
      "p"
    ],
    "is": [
      "ol",
      "li",
      "p"
    ],
    "responsible": [
      "ol",
      "li",
      "p"
    ],
    "for": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "the": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "functionality": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "add": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "below": [
      "ol",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "li",
      "p"
    ],
    "shows": [
      "ol",
      "li",
      "p"
    ],
    "session": [
      "ol",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "li",
      "p"
    ],
    "invalidated": [
      "ol",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "li",
      "p"
    ],
    "def": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "gotologoutsucceededimplicit": [
      "ol",
      "li",
      "pre"
    ],
    "request": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "requestheader:": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "result": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "gotologoutsucceededlogoutsucceeded(request))": [
      "ol",
      "li",
      "pre"
    ],
    "}": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "gotologoutsucceededresult:": [
      "ol",
      "li",
      "pre"
    ],
    "result(implicit": [
      "ol",
      "li",
      "pre"
    ],
    "requestcookies.get(cookiename)": [
      "ol",
      "li",
      "pre"
    ],
    "flatmap": [
      "ol",
      "li",
      "pre"
    ],
    "cookieutilverifyhmac": [
      "ol",
      "li",
      "pre"
    ],
    "foreach": [
      "ol",
      "li",
      "pre"
    ],
    "idcontainerremove": [
      "ol",
      "li",
      "pre"
    ],
    "resultdiscardingcookies(discardingcookie(cookiename))": [
      "ol",
      "li",
      "pre"
    ],
    "additional": [
      "h1"
    ],
    "resources": [
      "h1"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "functionlity": [
      "ul",
      "li"
    ],
    "please": [
      "ul",
      "li"
    ],
    "see https//github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/loginlogout.scala": [
      "ul",
      "li"
    ],
    "https//github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/loginlogout.scala": [
      "a"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Do",
      "Why",
      "How",
      "Additional Resources"
    ],
    "p": [
      "Scala and Play Framework 2.1.0+",
      "Invalidate sessions when users log out.",
      "Invalidating sessions when users log out makes it harder to hijack them.",
      "To invalidate sessions when users log out:",
      "Identify logout functionality. Find code that is responsible for the logout functionality.",
      "Add code to invalidate sessions. The below function shows how the session should be invalidated on logout."
    ],
    "br": [
      ""
    ],
    "ol": [
      "Identify logout functionality. Find code that is responsible for the logout functionality.\r\n    \r\n    \r\n      \r\n        Add code to invalidate sessions. The below function shows how the session should be invalidated on logout.\r\n       def gotoLogoutSucceeded(implicit request: RequestHeader): Result = {\r\n    gotoLogoutSucceeded(logoutSucceeded(request))\r\n  }\r\n\r\n  def gotoLogoutSucceeded(result: => Result)(implicit request: RequestHeader): Result = {\r\n    request.cookies.get(cookieName) flatMap CookieUtil.verifyHmac foreach idContainer.remove\r\n    result.discardingCookies(DiscardingCookie(cookieName))\r\n  }"
    ],
    "li": [
      "Identify logout functionality. Find code that is responsible for the logout functionality.",
      "Add code to invalidate sessions. The below function shows how the session should be invalidated on logout.\r\n       def gotoLogoutSucceeded(implicit request: RequestHeader): Result = {\r\n    gotoLogoutSucceeded(logoutSucceeded(request))\r\n  }\r\n\r\n  def gotoLogoutSucceeded(result: => Result)(implicit request: RequestHeader): Result = {\r\n    request.cookies.get(cookieName) flatMap CookieUtil.verifyHmac foreach idContainer.remove\r\n    result.discardingCookies(DiscardingCookie(cookieName))\r\n  }",
      "For information about Logout functionlity, please see https://github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/LoginLogout.scala"
    ],
    "strong": [
      "Identify logout functionality.",
      "Add code to invalidate sessions."
    ],
    "pre": [
      "def gotoLogoutSucceeded(implicit request: RequestHeader): Result = {\r\n    gotoLogoutSucceeded(logoutSucceeded(request))\r\n  }\r\n\r\n  def gotoLogoutSucceeded(result: => Result)(implicit request: RequestHeader): Result = {\r\n    request.cookies.get(cookieName) flatMap CookieUtil.verifyHmac foreach idContainer.remove\r\n    result.discardingCookies(DiscardingCookie(cookieName))\r\n  }"
    ],
    "ul": [
      "For information about Logout functionlity, please see https://github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/LoginLogout.scala"
    ],
    "a": [
      "https://github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/LoginLogout.scala"
    ]
  },
  "links": [
    {
      "href": "https://github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/LoginLogout.scala",
      "text": "https://github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/LoginLogout.scala"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <p>Scala and Play Framework 2.1.0+<br /></p>\r\n  <h1>What to Do</h1>\r\n  <p>Invalidate sessions when users log out.</p>\r\n  <h1>Why</h1>\r\n  <p>Invalidating sessions when users log out makes it harder to hijack them.</p>\r\n  <h1>How</h1>\r\n  <p>To invalidate sessions when users log out:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify logout functionality.</strong>&nbsp;Find code that is responsible for the logout functionality.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Add code to invalidate sessions.</strong> The below function shows how the session should be invalidated on logout.</p>\r\n      <pre> def gotoLogoutSucceeded(implicit request: RequestHeader): Result = {\r\n    gotoLogoutSucceeded(logoutSucceeded(request))\r\n  }\r\n\r\n  def gotoLogoutSucceeded(result: =&gt; Result)(implicit request: RequestHeader): Result = {\r\n    request.cookies.get(cookieName) flatMap CookieUtil.verifyHmac foreach idContainer.remove\r\n    result.discardingCookies(DiscardingCookie(cookieName))\r\n  }</pre>\r\n    </li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For information about Logout functionlity, please see&nbsp;<a href=\"https://github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/LoginLogout.scala\">https://github.com/t2v/play20-auth/blob/master/module/src/main/scala/jp/t2v/lab/play2/auth/LoginLogout.scala</a></li>\r\n  </ul>"
}