{
  "id": "38aaf507-006a-40b4-9d3e-af9a7d7d326c",
  "checksum": "5f68b2c7f363ef1ac9171be09a9e916c030083ad",
  "words": {
    "0": [
      "ol",
      "li",
      "pre"
    ],
    "1": [
      "ul",
      "li",
      "ul",
      "li",
      "h1",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "pre"
    ],
    "2": [
      "ul",
      "li",
      "ul",
      "li",
      "h1"
    ],
    "3": [
      "ul",
      "li",
      "ul",
      "li",
      "h1"
    ],
    "4": [
      "ul",
      "li",
      "ul",
      "li",
      "h1"
    ],
    "5": [
      "ul",
      "li",
      "ul",
      "li",
      "h1",
      "ol",
      "li"
    ],
    "6": [
      "ul",
      "li",
      "ul",
      "li",
      "h1"
    ],
    "10": [
      "ol",
      "li",
      "em"
    ],
    "40": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "b",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "p",
      "b",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "b",
      "b",
      "ol",
      "li",
      "p",
      "b",
      "ol",
      "li",
      "h1",
      "p",
      "p",
      "p",
      "b",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "b",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "aspnet": [
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "h1",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "em"
    ],
    "summary": [
      "h1",
      "ul",
      "li",
      "h1"
    ],
    "this": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "how": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "shows": [
      "p"
    ],
    "you": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "use": [
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "h1",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "title"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "authorization": [
      "p",
      "p",
      "p",
      "em",
      "em",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "em",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "em",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "li",
      "ul",
      "li",
      "h2",
      "em",
      "p",
      "p",
      "em",
      "title"
    ],
    "manager": [
      "p",
      "p",
      "em",
      "em",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "em",
      "h2",
      "p",
      "p",
      "p",
      "em",
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "h1",
      "p",
      "em",
      "title"
    ],
    "azman)": [
      "p",
      "em",
      "p",
      "em"
    ],
    "in": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "h1",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "conjunction": [
      "p"
    ],
    "with": [
      "p",
      "p",
      "p",
      "b",
      "p",
      "b",
      "p",
      "b",
      "p",
      "b",
      "p",
      "p",
      "p",
      "p",
      "b",
      "p"
    ],
    "role": [
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "p",
      "em",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "li",
      "em",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "h1",
      "h1",
      "ul",
      "ul",
      "li",
      "li",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "em"
    ],
    "api": [
      "p",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "manage": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em"
    ],
    "roles": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "em",
      "p",
      "b",
      "p",
      "ul",
      "li",
      "p",
      "h2",
      "p",
      "p",
      "em",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "p",
      "p"
    ],
    "check": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "ol",
      "li",
      "h1",
      "ul",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "pre"
    ],
    "user": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "em",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "membership": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "em",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "authorize": [
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1"
    ],
    "perform": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "p"
    ],
    "specific": [
      "p",
      "p",
      "p"
    ],
    "operations": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "h1",
      "p",
      "p",
      "b",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "em",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre"
    ],
    "against": [
      "p",
      "p"
    ],
    "an": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "b",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "azman": [
      "p",
      "p",
      "em",
      "em",
      "p",
      "em",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "em",
      "em",
      "em",
      "em",
      "p",
      "p",
      "p",
      "em",
      "em",
      "em",
      "p",
      "em",
      "p",
      "em",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "h1",
      "p",
      "p",
      "em",
      "em",
      "p",
      "b",
      "ol",
      "li",
      "em",
      "p",
      "b",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em",
      "h1",
      "p",
      "em",
      "p",
      "b",
      "ol",
      "li",
      "em",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "em",
      "p",
      "p",
      "em",
      "em",
      "h1",
      "p",
      "p",
      "em",
      "em",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "p",
      "em",
      "p",
      "p",
      "em",
      "em"
    ],
    "policy": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "store": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em",
      "li",
      "li",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "also": [
      "p",
      "p",
      "p",
      "p"
    ],
    "explains": [
      "p"
    ],
    "manager's": [
      "p"
    ],
    "model": [
      "p"
    ],
    "of": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "ol",
      "li",
      "p"
    ],
    "tasks": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "b",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "b",
      "ol",
      "li",
      "em"
    ],
    "through": [
      "p"
    ],
    "com": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "em"
    ],
    "benefit": [
      "p"
    ],
    "using": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "ol",
      "li",
      "p"
    ],
    "it": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "enables": [
      "p",
      "p",
      "p"
    ],
    "define": [
      "p",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "b",
      "p",
      "b",
      "p",
      "b",
      "ol",
      "li",
      "p"
    ],
    "group": [
      "p"
    ],
    "them": [
      "p",
      "p",
      "p"
    ],
    "into": [
      "p",
      "p",
      "p"
    ],
    "then": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "provides": [
      "p",
      "p",
      "p"
    ],
    "administrative": [
      "p"
    ],
    "console": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "for": [
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "p",
      "p"
    ],
    "managing": [
      "p"
    ],
    "users": [
      "p",
      "ul",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "h1",
      "ol",
      "li",
      "ol",
      "li",
      "em",
      "p",
      "p",
      "p",
      "b"
    ],
    "contents": [
      "h1"
    ],
    "objectives": [
      "ul",
      "li",
      "h1"
    ],
    "overview": [
      "ul",
      "li",
      "h1"
    ],
    "steps": [
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "p"
    ],
    "step": [
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "h1",
      "p",
      "h1",
      "p",
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "h1",
      "h1",
      "p",
      "ol",
      "li"
    ],
    "create": [
      "ul",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "ul",
      "li",
      "li",
      "h1",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p",
      "b",
      "h1",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "ol",
      "li",
      "em",
      "p"
    ],
    "assign": [
      "ul",
      "li",
      "ul",
      "li",
      "h1",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "p",
      "p",
      "b"
    ],
    "configure": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ul",
      "li",
      "h1",
      "p",
      "ol",
      "li",
      "p"
    ],
    "your": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "h1",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "application": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "li",
      "em",
      "p",
      "ol",
      "li",
      "p",
      "h1",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p"
    ],
    "authorizationstoreroleprovider": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "em",
      "em",
      "ul",
      "li",
      "h1",
      "p",
      "em"
    ],
    "a": [
      "ul",
      "li",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "b",
      "b",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "li",
      "li",
      "pre",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "apis": [
      "ul",
      "li",
      "ul",
      "li",
      "ul",
      "li",
      "h1"
    ],
    "web": [
      "ul",
      "li",
      "ul",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "h1",
      "p",
      "p",
      "b"
    ],
    "site": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "h1",
      "p",
      "p",
      "b"
    ],
    "configuration": [
      "ul",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "pre",
      "h1",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "em"
    ],
    "tool": [
      "ul",
      "li",
      "p",
      "h1",
      "p",
      "p",
      "p",
      "p",
      "b"
    ],
    "security": [
      "ul",
      "li",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "ol",
      "li",
      "em",
      "h1"
    ],
    "considerations": [
      "ul",
      "ul",
      "li",
      "li",
      "h1",
      "h1"
    ],
    "adam": [
      "ul",
      "li",
      "p",
      "p",
      "h1",
      "p"
    ],
    "additional": [
      "ul",
      "li",
      "p"
    ],
    "resources": [
      "ul",
      "li"
    ],
    "identify": [
      "ul",
      "li"
    ],
    "when": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "azman).": [
      "ul",
      "li"
    ],
    "assignments": [
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em"
    ],
    "individual": [
      "p",
      "p",
      "p"
    ],
    "which": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "grouped": [
      "p"
    ],
    "together": [
      "p"
    ],
    "form": [
      "p"
    ],
    "and/or": [
      "p"
    ],
    "administration": [
      "p",
      "p",
      "p",
      "p",
      "b",
      "p",
      "b"
    ],
    "as": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "pre",
      "li"
    ],
    "microsoft": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "management": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "em",
      "p"
    ],
    "mmc)": [
      "p"
    ],
    "snap-in": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "li"
    ],
    "xml": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "em",
      "p",
      "p",
      "p",
      "p"
    ],
    "file": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "active": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "directory": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "mode": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em"
    ],
    "adam)": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "configuring": [
      "p"
    ],
    "does": [
      "p",
      "p",
      "p"
    ],
    "not": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre"
    ],
    "support": [
      "p",
      "p"
    ],
    "business": [
      "p",
      "em"
    ],
    "rules": [
      "p",
      "em",
      "p",
      "p"
    ],
    "\"bizrules\"),": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "scripted": [
      "p"
    ],
    "extensions": [
      "p"
    ],
    "checks": [
      "p",
      "p",
      "p",
      "p"
    ],
    "because": [
      "p",
      "p"
    ],
    "implementation": [
      "p"
    ],
    "have": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre"
    ],
    "concept": [
      "p"
    ],
    "extended": [
      "p"
    ],
    "data": [
      "p"
    ],
    "passed": [
      "p"
    ],
    "along": [
      "p"
    ],
    "during": [
      "p"
    ],
    "bizrules": [
      "p",
      "em"
    ],
    "need": [
      "p",
      "p"
    ],
    "interop": [
      "p"
    ],
    "\"bizrules\")": [
      "em"
    ],
    "vs": [
      "h2"
    ],
    "add": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "em"
    ],
    "remove": [
      "p"
    ],
    "from": [
      "p",
      "p",
      "p"
    ],
    "but": [
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "allow": [
      "p",
      "p",
      "pre"
    ],
    "query": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "whether": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p"
    ],
    "authorized": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "named": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li"
    ],
    "task": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em",
      "em",
      "li",
      "li",
      "li",
      "em",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "em",
      "em",
      "p",
      "p"
    ],
    "operation": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "li",
      "li",
      "em",
      "em",
      "ol",
      "li",
      "em",
      "p",
      "p",
      "p",
      "p",
      "p",
      "b",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "p"
    ],
    "allows": [
      "p",
      "p",
      "p"
    ],
    "combine": [
      "p"
    ],
    "addition": [
      "p"
    ],
    "assignment": [
      "p"
    ],
    "configured": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "outside": [
      "p"
    ],
    "performed": [
      "p"
    ],
    "programmatically": [
      "p",
      "p",
      "ul",
      "li"
    ],
    "within": [
      "p",
      "p"
    ],
    "mmc": [
      "p",
      "ol",
      "li",
      "p",
      "p",
      "b",
      "ol",
      "li",
      "p"
    ],
    "administrators": [
      "p"
    ],
    "change": [
      "p"
    ],
    "may": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "at": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li"
    ],
    "run": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "time": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "each": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "user's": [
      "p",
      "p"
    ],
    "if": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre",
      "pre",
      "pre",
      "p",
      "p",
      "p",
      "p"
    ],
    "accesscheck": [
      "p",
      "em",
      "p",
      "em",
      "ol",
      "li",
      "p",
      "em"
    ],
    "function": [
      "p"
    ],
    "should": [
      "p"
    ],
    "design": [
      "p",
      "p"
    ],
    "implement": [
      "p"
    ],
    "role-based": [
      "p",
      "p"
    ],
    "want": [
      "p",
      "p",
      "p",
      "ol",
      "li"
    ],
    "more": [
      "p"
    ],
    "fine-grained": [
      "p"
    ],
    "approach": [
      "p"
    ],
    "around": [
      "p"
    ],
    "flexibility": [
      "p"
    ],
    "allowing": [
      "p"
    ],
    "administrator": [
      "p",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "p",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "p",
      "em"
    ],
    "delete": [
      "p"
    ],
    "administer": [
      "p"
    ],
    "permissions": [
      "p"
    ],
    "assigned": [
      "p"
    ],
    "following": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "stores": [
      "p",
      "p",
      "p"
    ],
    "windows": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "command": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "prompt": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "enter": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "azmanmsc": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "open": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "on": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "p"
    ],
    "action": [
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "menu": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "click": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li"
    ],
    "options": [
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "em"
    ],
    "developer": [
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "ol",
      "li"
    ],
    "exposes": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "such": [
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "p"
    ],
    "creation": [
      "ol",
      "li"
    ],
    "available": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "new": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "set": [
      "ol",
      "li",
      "p",
      "p",
      "p"
    ],
    "type": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "em"
    ],
    "full": [
      "ol",
      "li"
    ],
    "name": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "example": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "ol",
      "li",
      "li",
      "pre"
    ],
    "c\\rolesdata\\azmanstore.xml.": [
      "ol",
      "li"
    ],
    "locations": [
      "ol",
      "li",
      "em"
    ],
    "button": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "navigate": [
      "ol",
      "li"
    ],
    "folder": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "p"
    ],
    "where": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "will": [
      "ol",
      "li",
      "p"
    ],
    "right-click": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "azmanstorexml,": [
      "ol",
      "li"
    ],
    "properties": [
      "ol",
      "ol",
      "li",
      "li",
      "em"
    ],
    "window": [
      "ol",
      "li"
    ],
    "tab": [
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "under": [
      "ol",
      "li",
      "p"
    ],
    "select": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "account": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "uses": [
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "network": [
      "ol",
      "li",
      "em"
    ],
    "service": [
      "ol",
      "li",
      "em"
    ],
    "c\\rolesdata\\azmanstore.xml": [
      "em",
      "em"
    ],
    "azmanstorexml": [
      "em",
      "ol",
      "li",
      "em"
    ],
    "note if": [
      "p"
    ],
    "impersonation": [
      "p"
    ],
    "impersonate": [
      "p"
    ],
    "original": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "caller": [
      "p"
    ],
    "fixed": [
      "p"
    ],
    "identity": [
      "p"
    ],
    "runs": [
      "p"
    ],
    "different": [
      "p",
      "p"
    ],
    "custom": [
      "p",
      "p"
    ],
    "must": [
      "p",
      "p"
    ],
    "impersonated": [
      "p"
    ],
    "reader": [
      "p",
      "em",
      "p",
      "em"
    ],
    "according": [
      "p"
    ],
    "level": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "ul",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "pre",
      "p",
      "p",
      "p"
    ],
    "required": [
      "p"
    ],
    "note": [
      "b",
      "p",
      "ol",
      "li",
      "p",
      "b",
      "b"
    ],
    "make": [
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li"
    ],
    "selected": [
      "ol",
      "li"
    ],
    "tree": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "actions": [
      "ol",
      "li",
      "em"
    ],
    "azmandemo": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "box": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "li"
    ],
    "leave": [
      "ol",
      "li"
    ],
    "description": [
      "ol",
      "li",
      "em"
    ],
    "version": [
      "ol",
      "li",
      "em"
    ],
    "info": [
      "ol",
      "li",
      "em"
    ],
    "boxes": [
      "ol",
      "li"
    ],
    "empty": [
      "ol",
      "li"
    ],
    "do": [
      "p",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "intend": [
      "p"
    ],
    "only": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "p"
    ],
    "cannot": [
      "p"
    ],
    "these": [
      "p"
    ],
    "expand": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "definitions": [
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "definition": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em"
    ],
    "privileged": [
      "ol",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em"
    ],
    "ok": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "ol",
      "li",
      "em",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em"
    ],
    "sensitive": [
      "ol",
      "li",
      "em",
      "ol",
      "li",
      "em",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "number": [
      "ol",
      "li",
      "em"
    ],
    "associate": [
      "p",
      "b",
      "p",
      "b"
    ],
    "double-click": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "previously": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "created": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "dialog": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "again": [
      "ol",
      "li"
    ],
    "assigns": [
      "ol",
      "li",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "newly": [
      "ol",
      "li"
    ],
    "optional": [
      "ol",
      "li",
      "p"
    ],
    "abstraction": [
      "ol",
      "li",
      "p"
    ],
    "has": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "p"
    ],
    "few": [
      "ol",
      "li",
      "p"
    ],
    "defined": [
      "ol",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "sense": [
      "ol",
      "li",
      "p"
    ],
    "just": [
      "ol",
      "li",
      "p"
    ],
    "previous": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "fewer": [
      "ol",
      "li"
    ],
    "than": [
      "ol",
      "li"
    ],
    "those": [
      "ol",
      "li"
    ],
    "changed": [
      "ol",
      "li"
    ],
    "assigning": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "ui": [
      "p",
      "b"
    ],
    "appears": [
      "ol",
      "li"
    ],
    "listed": [
      "ol",
      "li"
    ],
    "after": [
      "ol",
      "li"
    ],
    "groups": [
      "ol",
      "li",
      "em"
    ],
    "logged": [
      "ol",
      "li"
    ],
    "names": [
      "ol",
      "li",
      "em"
    ],
    "step.": [
      "ol",
      "li"
    ],
    "twice": [
      "ol",
      "li"
    ],
    "connect": [
      "p",
      "b",
      "p",
      "b"
    ],
    "azmanroles": [
      "ol",
      "li",
      "em"
    ],
    "connection": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ol",
      "li"
    ],
    "string": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "connectionstrings>": [
      "ol",
      "ol",
      "li",
      "li",
      "pre"
    ],
    "element": [
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "webconfig": [
      "ol",
      "li",
      "em",
      "p",
      "em",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "c\\rolesdata\\azmanstore.xml,": [
      "ol",
      "li"
    ],
    "configuration>": [
      "ol",
      "li",
      "pre",
      "pre"
    ],
    "name=\"localpolicystore\"": [
      "ol",
      "li",
      "pre"
    ],
    "connectionstring=\"msxml//c:/rolesdata/azmanstore.xml\"": [
      "ol",
      "li",
      "pre"
    ],
    "/": [
      "ol",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "/connectionstrings>": [
      "ol",
      "li",
      "pre"
    ],
    "/configuration>": [
      "ol",
      "li",
      "pre"
    ],
    "provider": [
      "ol",
      "li"
    ],
    "adding": [
      "ol",
      "li"
    ],
    "elements": [
      "ol",
      "li"
    ],
    "children": [
      "ol",
      "li"
    ],
    "system.web>": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "rolemanager": [
      "ol",
      "li",
      "pre"
    ],
    "enabled=\"true\"": [
      "ol",
      "li",
      "pre"
    ],
    "cacherolesincookie=\"true\"": [
      "ol",
      "li",
      "pre"
    ],
    "defaultprovider=\"rolemanagerazmanprovider\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookiename=\"aspxroles\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookiepath=\"/\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookietimeout=\"30\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookierequiressl=\"true\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookieslidingexpiration=\"true\"": [
      "ol",
      "li",
      "pre"
    ],
    "createpersistentcookie=\"false\"": [
      "ol",
      "li",
      "pre"
    ],
    "cookieprotection=\"all\"": [
      "ol",
      "li",
      "pre"
    ],
    "providers>": [
      "ol",
      "li",
      "pre",
      "p"
    ],
    "name=\"rolemanagerazmanprovider\"": [
      "ol",
      "li",
      "pre"
    ],
    "type=\"systemweb.security.authorizationstoreroleprovider,": [
      "ol",
      "li",
      "pre"
    ],
    "systemweb,": [
      "ol",
      "li",
      "pre"
    ],
    "version=20.0.0,": [
      "ol",
      "li",
      "pre"
    ],
    "culture=neutral": [
      "ol",
      "li",
      "pre"
    ],
    "publickeytoken=b03f5f7f11d50a3a\"": [
      "ol",
      "li",
      "pre"
    ],
    "connectionstringname=\"localpolicystore\"": [
      "ol",
      "li",
      "pre"
    ],
    "applicationname=\"azmandemo\"/": [
      "ol",
      "li",
      "pre"
    ],
    "/providers>": [
      "ol",
      "li",
      "pre"
    ],
    "/rolemanager></system.web>": [
      "ol",
      "li",
      "pre"
    ],
    "connectionstrings": [
      "em"
    ],
    "systemweb": [
      "em"
    ],
    "preceding": [
      "p"
    ],
    "fragment": [
      "p"
    ],
    "connectionstringname": [
      "p",
      "em"
    ],
    "attribute": [
      "p",
      "p"
    ],
    "applicationname": [
      "p",
      "em"
    ],
    "providers": [
      "em"
    ],
    "note by": [
      "p"
    ],
    "ensuring": [
      "p"
    ],
    "unique": [
      "p"
    ],
    "values": [
      "p"
    ],
    "cookiename": [
      "p",
      "em"
    ],
    "cookiepath": [
      "p",
      "em"
    ],
    "attributes": [
      "p"
    ],
    "prevent": [
      "p",
      "p"
    ],
    "possible": [
      "p"
    ],
    "problems": [
      "p"
    ],
    "occur": [
      "p"
    ],
    "hosting": [
      "p"
    ],
    "multiple": [
      "p"
    ],
    "applications": [
      "p",
      "p"
    ],
    "same": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "server": [
      "p",
      "p"
    ],
    "best": [
      "p"
    ],
    "practice": [
      "p"
    ],
    "one": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "his": [
      "p"
    ],
    "her": [
      "p"
    ],
    "cookie": [
      "p"
    ],
    "hosted": [
      "p"
    ],
    "two": [
      "p"
    ],
    "ways": [
      "p"
    ],
    "restrict": [
      "ul",
      "li"
    ],
    "pages": [
      "ul",
      "li",
      "p",
      "p"
    ],
    "folders": [
      "ul",
      "li",
      "p"
    ],
    "typical": [
      "p"
    ],
    "establish": [
      "p"
    ],
    "deny": [
      "p",
      "pre"
    ],
    "up": [
      "p"
    ],
    "authorization>": [
      "p",
      "pre"
    ],
    "section": [
      "p"
    ],
    "members": [
      "p"
    ],
    "view": [
      "p"
    ],
    "memberpages": [
      "p",
      "em"
    ],
    "denies": [
      "p"
    ],
    "anyone": [
      "p"
    ],
    "else": [
      "p",
      "ol",
      "li",
      "pre"
    ],
    "location": [
      "pre"
    ],
    "path=\"memberpages\"": [
      "pre"
    ],
    "roles=\"manager\"": [
      "pre"
    ],
    "users=\"*\"": [
      "pre"
    ],
    "/authorization>": [
      "pre"
    ],
    "/system.web>": [
      "pre"
    ],
    "/location>": [
      "pre"
    ],
    "!--": [
      "pre"
    ],
    "other": [
      "pre"
    ],
    "settings": [
      "pre"
    ],
    "here": [
      "pre"
    ],
    "--</configuration>": [
      "pre"
    ],
    "authentication": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "em",
      "li",
      "p",
      "p"
    ],
    "forms": [
      "p",
      "p"
    ],
    "feature": [
      "p"
    ],
    "methods": [
      "p"
    ],
    "rolesisuserinrole(\"rolename\")": [
      "p",
      "em"
    ],
    "test": [
      "p",
      "p",
      "ol",
      "li",
      "pre"
    ],
    "currently": [
      "p"
    ],
    "authenticated": [
      "p",
      "p"
    ],
    "rolesgetrolesforuser()": [
      "p",
      "em"
    ],
    "return": [
      "p"
    ],
    "array": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "pre"
    ],
    "all": [
      "p",
      "p",
      "p"
    ],
    "rolesisuserinrole(\"username\",": [
      "p",
      "em"
    ],
    "\"rolename\"": [
      "p",
      "em"
    ],
    "primary": [
      "p"
    ],
    "mechanism": [
      "p",
      "ol",
      "li",
      "ol",
      "li"
    ],
    "determine": [
      "p",
      "p",
      "ol",
      "li"
    ],
    "given": [
      "p"
    ],
    "current": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ol",
      "li",
      "pre",
      "li",
      "li",
      "pre",
      "pre",
      "p"
    ],
    "ability": [
      "p"
    ],
    "exceeds": [
      "p"
    ],
    "capabilities": [
      "p"
    ],
    "supports": [
      "p"
    ],
    "c#": [
      "ol",
      "li"
    ],
    "accessingtasks": [
      "ol",
      "li",
      "em"
    ],
    "reference": [
      "ol",
      "ol",
      "li",
      "li",
      "em"
    ],
    "library": [
      "ol",
      "ol",
      "li",
      "li",
      "em"
    ],
    "azroles": [
      "ol",
      "li",
      "em"
    ],
    "statements": [
      "ol",
      "li"
    ],
    "code": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "page": [
      "ol",
      "ol",
      "li",
      "li",
      "p"
    ],
    "defaultaspx": [
      "ol",
      "li",
      "em"
    ],
    "azroleslibusing": [
      "ol",
      "li",
      "pre"
    ],
    "systemcollections.specialized;using": [
      "ol",
      "li",
      "pre"
    ],
    "systemsecurity.principal;": [
      "ol",
      "li",
      "pre"
    ],
    "beginning": [
      "ol",
      "li"
    ],
    "azauthorizationstoreclass": [
      "ol",
      "li",
      "pre"
    ],
    "azmanstore": [
      "ol",
      "li",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "li",
      "pre",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "azauthorizationstoreclass);azmanstore.initialize(0,": [
      "ol",
      "li",
      "pre"
    ],
    "configurationmanagerconnectionstrings": [
      "ol",
      "li",
      "pre"
    ],
    "\"localpolicystore\"].connectionstring,": [
      "ol",
      "li",
      "pre"
    ],
    "null;iazapplication": [
      "ol",
      "li",
      "pre"
    ],
    "azapp": [
      "ol",
      "li",
      "pre"
    ],
    "azmanstoreopenapplication(\"azmandemo\",": [
      "ol",
      "li",
      "pre"
    ],
    "null;": [
      "ol",
      "li",
      "pre",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "now": [
      "p"
    ],
    "complete": [
      "p"
    ],
    "sample": [
      "p"
    ],
    "procedure": [
      "p"
    ],
    "construct": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li"
    ],
    "representation": [
      "ol",
      "li"
    ],
    "client's": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "context": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "li",
      "li"
    ],
    "similar": [
      "ol",
      "li"
    ],
    "token": [
      "ol",
      "li"
    ],
    "caches": [
      "ol",
      "li"
    ],
    "mappings": [
      "ol",
      "li"
    ],
    "object": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "pre"
    ],
    "specifies": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "mode='windows'": [
      "ol",
      "li",
      "ol",
      "li",
      "em"
    ],
    "internet": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "information": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "services": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "iis)": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "been": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "require": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "integrated": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "authentication,": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "client": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "follows": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "//": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ol",
      "li",
      "pre",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "get": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "iprincipal": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "userprincipal": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "httpcontextcurrent.user;": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "windowsidentity": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "useridentity": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "userprincipalidentity": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "iazclientcontext": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "clientcontext": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "li",
      "pre",
      "li",
      "pre"
    ],
    "azappinitializeclientcontextfromtoken(": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "ulong)useridentity.token,": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "caller's": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "password": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "shown": [
      "ol",
      "li",
      "ol",
      "li"
    ],
    "azappinitializeclientcontextfromname(name,": [
      "ol",
      "li",
      "ol",
      "li",
      "pre"
    ],
    "domain": [
      "ol",
      "li",
      "ol",
      "li",
      "pre",
      "p",
      "p"
    ],
    "method": [
      "ol",
      "li",
      "p"
    ],
    "returns": [
      "ol",
      "li",
      "p"
    ],
    "actually": [
      "ol",
      "li",
      "p"
    ],
    "integers": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "requested": [
      "ol",
      "li",
      "p"
    ],
    "any": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "nonzero": [
      "ol",
      "li",
      "p"
    ],
    "corresponding": [
      "ol",
      "li",
      "p"
    ],
    "describing": [
      "ol",
      "li",
      "pre"
    ],
    "ids": [
      "ol",
      "li",
      "pre"
    ],
    "simple": [
      "ol",
      "li",
      "pre"
    ],
    "single": [
      "ol",
      "li",
      "pre"
    ],
    "called": [
      "ol",
      "li",
      "pre"
    ],
    "'do": [
      "ol",
      "li",
      "pre"
    ],
    "operation'": [
      "ol",
      "li",
      "pre"
    ],
    "id": [
      "ol",
      "li",
      "pre"
    ],
    "object]": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre"
    ],
    "operationids": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "{1}": [
      "ol",
      "li",
      "pre"
    ],
    "first": [
      "ol",
      "li",
      "pre"
    ],
    "argument": [
      "ol",
      "li",
      "pre"
    ],
    "\"auditstring\"": [
      "ol",
      "li",
      "pre"
    ],
    "used": [
      "ol",
      "li",
      "pre",
      "p",
      "p"
    ],
    "run-time": [
      "ol",
      "li",
      "pre"
    ],
    "auditing": [
      "ol",
      "li",
      "pre"
    ],
    "turned": [
      "ol",
      "li",
      "pre"
    ],
    "result": [
      "ol",
      "li",
      "pre"
    ],
    "object[])clientcontext.accesscheck(\"auditstring\",": [
      "ol",
      "li",
      "pre"
    ],
    "object1],": [
      "ol",
      "li",
      "pre"
    ],
    "null": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "integer": [
      "ol",
      "li",
      "pre"
    ],
    "we": [
      "ol",
      "li",
      "pre"
    ],
    "got": [
      "ol",
      "li",
      "pre"
    ],
    "back": [
      "ol",
      "li",
      "pre"
    ],
    "see": [
      "ol",
      "li",
      "pre"
    ],
    "int": [
      "ol",
      "li",
      "pre"
    ],
    "accessallowed": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "int)result[0];": [
      "ol",
      "li",
      "pre"
    ],
    "!=": [
      "ol",
      "li",
      "pre"
    ],
    "{": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "responsewrite(\"user": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "+": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "pre",
      "pre",
      "pre",
      "pre"
    ],
    "\"do": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "operation\"": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "\"br": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "/\");": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "}": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "save": [
      "p"
    ],
    "resulting": [
      "p"
    ],
    "reports": [
      "p"
    ],
    "built": [
      "p"
    ],
    "visual": [
      "p"
    ],
    "studio": [
      "p"
    ],
    "disabled": [
      "p"
    ],
    "website": [
      "ol",
      "li",
      "em"
    ],
    "table": [
      "ol",
      "li"
    ],
    "next": [
      "ol",
      "li"
    ],
    "locate": [
      "ol",
      "li"
    ],
    "desired": [
      "ol",
      "li"
    ],
    "rights": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "controlled": [
      "p"
    ],
    "ntfs": [
      "p"
    ],
    "acls": [
      "p"
    ],
    "reading": [
      "p"
    ],
    "requires": [
      "p",
      "p"
    ],
    "read": [
      "p",
      "p",
      "em"
    ],
    "writing": [
      "p"
    ],
    "both": [
      "p"
    ],
    "write": [
      "p",
      "em"
    ],
    "had": [
      "p"
    ],
    "scopes": [
      "p"
    ],
    "there": [
      "p"
    ],
    "no": [
      "p"
    ],
    "delegated": [
      "p",
      "p"
    ],
    "expressed": [
      "p"
    ],
    "way": [
      "p"
    ],
    "accounts": [
      "p"
    ],
    "either": [
      "p"
    ],
    "machine": [
      "p"
    ],
    "added": [
      "p"
    ],
    "scope": [
      "p"
    ],
    "supported": [
      "p"
    ],
    "describes": [
      "p"
    ],
    "adapted": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Summary",
      "Contents",
      "Objectives",
      "Overview",
      "Summary of Steps",
      "Step 1. Create an AzMan Policy Store",
      "Step 2. Define Tasks and Operations",
      "Step 3. Create Roles and Assign Users in AzMan",
      "Step 4. Configure Your ASP.NET Application to Use AuthorizationStoreRoleProvider",
      "Step 5. Use Role Manager to Perform a Role Check",
      "Step 6. Use AzMan APIs to Authorize Operations",
      "ASP.NET Web Site Configuration Tool",
      "Security Considerations",
      "ADAM Considerations"
    ],
    "ul": [
      "ASP.NET 4.0",
      "Objectives \r\n    Overview \r\n    Summary of Steps \r\n    Step 1. Create an AzMan Policy Store \r\n    Step 2. Define Tasks and Operations \r\n    Step 3. Create Roles and Assign Users in AzMan \r\n    Step 4. Configure Your ASP.NET Application to Use AuthorizationStoreRoleProvider \r\n    Step 5. Use Role Manager to Perform a Role Check \r\n    Step 6. Use AzMan APIs to Authorize Operations \r\n    ASP.NET Web Site Configuration Tool \r\n    Security Considerations \r\n    ADAM Considerations \r\n    Additional Resources",
      "Identify when to use Authorization Manager (AzMan). \r\n    Create a policy store, define tasks, operations, and role assignments using AzMan. \r\n    Configure your Web application to use AuthorizationStoreRoleProvider. \r\n    Use AzMan APIs to authorize operations.",
      "Step 1. Create an AzMan policy store. \r\n    Step 2. Define tasks and operations. \r\n    Step 3. Create roles and assign users in AzMan. \r\n    Step 4. Configure your ASP.NET application to use AuthorizationStoreRoleProvider. \r\n    Step 5. Use role manager to perform a role check. \r\n    Step 6. Use AzMan APIs to authorize operations.",
      "Use role authorization to restrict access to pages and folders. \r\n    Use the roles API to programmatically check for role membership."
    ],
    "li": [
      "ASP.NET 4.0",
      "Objectives",
      "Overview",
      "Summary of Steps",
      "Step 1. Create an AzMan Policy Store",
      "Step 2. Define Tasks and Operations",
      "Step 3. Create Roles and Assign Users in AzMan",
      "Step 4. Configure Your ASP.NET Application to Use AuthorizationStoreRoleProvider",
      "Step 5. Use Role Manager to Perform a Role Check",
      "Step 6. Use AzMan APIs to Authorize Operations",
      "ASP.NET Web Site Configuration Tool",
      "Security Considerations",
      "ADAM Considerations",
      "Additional Resources",
      "Identify when to use Authorization Manager (AzMan).",
      "Create a policy store, define tasks, operations, and role assignments using AzMan.",
      "Configure your Web application to use AuthorizationStoreRoleProvider.",
      "Use AzMan APIs to authorize operations.",
      "Step 1. Create an AzMan policy store.",
      "Step 2. Define tasks and operations.",
      "Step 3. Create roles and assign users in AzMan.",
      "Step 4. Configure your ASP.NET application to use AuthorizationStoreRoleProvider.",
      "Step 5. Use role manager to perform a role check.",
      "Step 6. Use AzMan APIs to authorize operations.",
      "At the Windows command prompt, enter azman.msc to open the Authorization Manager MMC snap-in.",
      "On the Action menu, click Options, and then click Developer mode. Developer mode exposes options, such as store creation, that are not available in Administrator mode.",
      "On the Action menu, click New Authorization Store. Set the Authorization store type as XML File.",
      "Enter the full store name, for example: C:\\RolesData\\AzManStore.xml. You can click the Locations button to navigate to the AzMan store, or you can create a folder where you will store it.",
      "Right-click AzManStore.xml, and then click Properties. In the Properties window, click the Security tab.",
      "Under Authorization Manager user role, select Administrator. Click the Add button to add the account that ASP.NET uses (the Network Service account) to this role.",
      "Make sure AzManStore.xml is selected in the console tree. On the Actions menu, click New Application.",
      "Enter a name for your application. For this example, enter AzManDemo in the Application Name box, and leave the Description and Version Info boxes empty.",
      "On the console tree, expand AzManDemo, and then expand Definitions.",
      "Right-click Task Definitions, and then click New Task Definition.",
      "In the Name box, type Privileged Task, and then click OK.",
      "On the console tree, expand AzManDemo, and then expand Definitions.",
      "Right-click the Operation Definitions, and then click New Operation Definition.",
      "In the Name box, type Do Sensitive Operation, type 1 in the Operation number box, and then click OK.",
      "In the Task Definitions folder, double-click the Privileged Task, task that you previously created.",
      "Click the Definition tab, and then click Add.",
      "In the Add Definition dialog box, click the Operations tab, and then select the Do Sensitive Operation check box. Click OK, and then click OK again. This assigns the newly created operations to the task named Privileged Task. Note: An AzMan task is an optional abstraction and if an application has only a few operations defined, it may make sense to just use operations.",
      "At the Windows command prompt, type azman.msc to open the Authorization Manager MMC snap-in.",
      "On the Action menu, click Options, and then click Administrator mode. Administrator mode exposes fewer options than developer mode, but it exposes only those configuration options that can be changed at run time, such as assigning tasks to roles and assigning users to roles.",
      "On the AzMan Management Console tree, expand AzManDemo, and then expand Definitions.",
      "Right-click Role Definitions, and then click New Role Definition.",
      "In the Name box, type Manager, and then click OK.",
      "Right-click the Role Assignments folder, and then click Assign Roles.",
      "In the dialog box that appears, click the Manager check box, and then click OK.",
      "Right-click the Manager role listed after the Role Assignments folder in the console tree, and then click Assign Windows Users and Groups.",
      "Type the name of the Windows user account you are logged on as, click Check Names, and then click OK. This assigns your user account to the Manager role.",
      "In the Role Definitions folder, double-click the Manager role you created previously.",
      "Click the Definition tab, and then click Add.",
      "In the Add Definition dialog box, click the Tasks tab, and then click the Privileged Task check box (this is the task you created in the previous step). Click OK twice. This assigns the Privileged Task task to the Manager role.",
      "Create a new ASP.NET Web site named AzManRoles.",
      "Define a connection string to the AzMan policy store in the <connectionStrings> element of the Web.config file. For example, to create a connection string to C:\\RolesData\\AzManStore.xml, use the following configuration. <configuration>   <connectionStrings>     <add name=\"LocalPolicyStore\"          connectionString=\"msxml://c:/RolesData/azmanstore.xml\" />  </connectionStrings> </configuration>",
      "Configure the application to use the role provider by adding the following elements as children of the <system.web> element. <system.web>    <roleManager         enabled=\"true\"         cacheRolesInCookie=\"true\"         defaultProvider=\"RoleManagerAzManProvider\"        cookieName=\".ASPXROLES\"         cookiePath=\"/\"         cookieTimeout=\"30\"         cookieRequireSSL=\"true\"         cookieSlidingExpiration=\"true\"        createPersistentCookie=\"false\"         cookieProtection=\"All\">        <providers>           <add name=\"RoleManagerAzManProvider\"                type=\"System.Web.Security.AuthorizationStoreRoleProvider, System.Web, Version=2.0.0.0,                     Culture=neutral, publicKeyToken=b03f5f7f11d50a3a\"                connectionStringName=\"LocalPolicyStore\"                 applicationName=\"AzManDemo\"/>        </providers>    </roleManager></system.web>",
      "Use role authorization to restrict access to pages and folders.",
      "Use the roles API to programmatically check for role membership.",
      "Create a new C# ASP.NET Web site named AccessingTasks.",
      "Add a reference to the AzMan COM library. In the Add Reference dialog box, click the COM tab, and then select azroles 1.0 Type Library. Click OK.",
      "Add the following using statements to the code page of the Default.aspx page. using AZROLESLib;using System.Collections.Specialized;using System.Security.Principal;",
      "To open the AzMan policy store, add the following code. Use the same connection string as defined at the beginning of step 5. AzAuthorizationStoreClass AzManStore = new AzAuthorizationStoreClass();AzManStore.Initialize(0, ConfigurationManager.ConnectionStrings            [\"LocalPolicyStore\"].ConnectionString, null);IAzApplication azApp = AzManStore.OpenApplication(\"AzManDemo\", null);",
      "Construct a representation of the client's security context. The context is similar to a token in that it caches role mappings for a user. To create the client's context object: If your application uses Windows authentication (the application Web.config file specifies authentication mode='Windows', and Microsoft Internet Information Services (IIS) has been configured to require integrated Windows authentication), construct the client context a follows.     // Get the current user context     IPrincipal userPrincipal = HttpContext.Current.User;    WindowsIdentity userIdentity = userPrincipal.Identity as WindowsIdentity;    IAzClientContext clientContext =        azApp.InitializeClientContextFromToken(               (ulong)userIdentity.Token, null);  If your application uses an authentication mechanism where you only have the original caller's user name available, but you do not have the password, you can construct the client context as shown in the following example. IAzClientContext clientContext =   azApp.InitializeClientContextFromName(name, domain, null);",
      "If your application uses Windows authentication (the application Web.config file specifies authentication mode='Windows', and Microsoft Internet Information Services (IIS) has been configured to require integrated Windows authentication), construct the client context a follows.     // Get the current user context     IPrincipal userPrincipal = HttpContext.Current.User;    WindowsIdentity userIdentity = userPrincipal.Identity as WindowsIdentity;    IAzClientContext clientContext =        azApp.InitializeClientContextFromToken(               (ulong)userIdentity.Token, null);",
      "If your application uses an authentication mechanism where you only have the original caller's user name available, but you do not have the password, you can construct the client context as shown in the following example. IAzClientContext clientContext =   azApp.InitializeClientContextFromName(name, domain, null);",
      "Use the client context object and AzMan to determine whether the user is authorized to perform the operations. The AccessCheck method returns an object array that is actually an array of integers, one for each requested operation. If any of the integers are nonzero, the user is not authorized to perform the corresponding operation in the operations array.     // Create an object array describing the operation IDs to query      // In this simple example, query for the single operation called    // 'Do Sensitive Operation' which has an ID of 1.    object[] operationIds = new object[] {1};    // Check if user has access to the operations    // The first argument, \"Auditstring\", is a string that is used if you     // have run-time auditing turned on    object[] result = (object[])clientContext.AccessCheck(\"Auditstring\",                  new object[1], operationIds, null, null, null, null, null);            // Test the integer array we got back to see which operations are    // authorized    int accessAllowed = (int)result[0];    if (accessAllowed != 0)    {        // current user not authorized to perform operation        Response.Write(\"User not authorized for operation: \" +             \"Do Sensitive Operation\" + \"<br />\");    }    else    {        // current user authorized to perform operation        Response.Write(\"User authorized for operation \" +             \"Do Sensitive Operation\" + \"<br />\");    }",
      "On the Website menu, click ASP.NET Configuration.",
      "Click the Security tab.",
      "Click Create or Manage Roles",
      "In the table of roles, click Manage next to the role that you want to add a user to.",
      "Locate the desired user, and then click Add Role."
    ],
    "p": [
      "This How to shows you how to use the Authorization Manager (AzMan) in conjunction with the ASP.NET role manager API to manage roles, check user role membership, and authorize roles to perform specific operations against an AzMan policy store. The How to also explains how to use Authorization Manager's authorization model of tasks and operations through the AzMan COM API.",
      "The benefit of using AzMan is that it enables you to define operations, group them into tasks, and then authorize roles to perform specific tasks. It also provides an administrative console for managing roles, tasks, operations, and users.",
      "Authorization Manager (AzMan) enables you to define individual operations, which can be grouped together to form tasks. You can then authorize roles to perform specific tasks and/or individual operations. AzMan provides an administration tool as a Microsoft Management Console (MMC) snap-in to manage roles, tasks, operations, and users. You can configure an AzMan policy store in an XML file, Active Directory, or in an Active Directory Application Mode (ADAM) store. By configuring the ASP.NET role manager to use the AuthorizationStoreRoleProvider, you can use the role management API against an AzMan policy store. The AuthorizationStoreRoleProvider does not support AzMan business rules (\"BizRules\"), which are scripted extensions to authorization checks, because the role manager implementation does not have the concept of extended data that can be passed along during an authorization check. To use AzMan BizRules, you need to use COM interop.",
      "ASP.NET role manager provides an API that enables you to manage application roles, add and remove users from roles, and check role membership, but it does not allow you to query whether a user is authorized to perform a named task or operation. AzMan allows you to define individual operations and combine them into tasks. With AZMan, in addition to role checks, you can also check whether a user can perform a task. Role assignment and task authorization can be configured outside of the application or performed programmatically within the application. The AzMan administration MMC snap-in allows administrators to change the tasks a role may perform at run time and to manage each user's membership of roles.",
      "At run time, if you are using the ASP.NET roles API, you programmatically query a user's role membership. Using the AzMan COM API and the AccessCheck function, you query whether a user is authorized to perform a named task.",
      "You should use AzMan to design and implement role-based authorization if you want to design a more fine-grained role-based authorization approach around operations and tasks, and if you want the additional flexibility of allowing an administrator to create, delete, and administer the permissions assigned to a role at run time.",
      "To use the ASP.NET role manager to check user role membership in an Authorization Manager policy store, perform the following steps:",
      "You can create AzMan policy stores in an XML file, Active Directory, or ADAM. In this step, you create an AzMan policy store in an XML file.",
      "To create an AzMan Policy store",
      "Note: If your ASP.NET application uses impersonation to impersonate the original caller or a fixed identity, or if it runs under a different custom account, you must add the impersonated account or custom account as an Administrator, or Reader, according to the level of access required.",
      "To create the AzMan application",
      "Use the following steps to define tasks and operations. Note that you do not need to perform this step if you intend to use only the ASP.NET Role Manager API, which can only authorize users on role membership; it cannot authorize users by application task or operation. Perform these steps if you want to use the AzMan COM API to authorize by task or operation.",
      "To define tasks",
      "To define operations",
      "To associate operations with tasks",
      "Note: An AzMan task is an optional abstraction and if an application has only a few operations defined, it may make sense to just use operations.",
      "In this step, you use the AzMan administration MMC snap-in to create a role named Manager. You then assign the task that you created in the previous step to the role.",
      "To define roles with the AzMan administration MMC snap-in",
      "To assign a user to a role with the Administration UI",
      "To associate tasks with roles",
      "In this step, you configure role management in an ASP.NET application to use the AzMan store.",
      "To connect to the AzMan store",
      "In the preceding configuration file fragment, you define a <providers> element that uses the AuthorizationStoreRoleProvider, with the connectionStringName attribute set to the name of the connection string you defined in the previous step, and you must set the applicationName attribute to the name of the AzMan application you created in the AzMan store.",
      "Note: By ensuring unique values for the cookieName and cookiePath attributes, you prevent possible problems that can occur when hosting multiple applications on the same server. This best practice will prevent a user on one site from using his or her role cookie on a different site hosted on the same server.",
      "At run time, you can use roles to authorize access in two ways:",
      "A typical use for roles is to establish rules that allow or deny access to pages or folders. You can set up such access rules in the <authorization> section of the Web.config file. The following example allows users in the role of members to view pages in the folder named memberPages and denies access to anyone else.",
      "If you are using Windows authentication in your application, or if you are using Forms authentication with the ASP.NET membership feature, you can use Roles API methods such as Roles.IsUserInRole(\"roleName\") to test for role membership for the currently authenticated user or Roles.GetRolesForUser() to return a string array of all roles for the user.",
      "You can use Roles.IsUserInRole(\"username\", \"roleName\") to test for role membership for a named user.",
      "With AzMan, the primary mechanism to determine access to a given operation is the AccessCheck API. In this step, you use the Authorization Manager API in an ASP.NET application to query the operations that are in a task to determine whether the current user is authorized to perform them. The ability in the AzMan API to query for authorization to perform an operation or task exceeds the capabilities of the ASP.NET Role Management API, which only supports role membership checks.",
      "To connect to the AzMan store",
      "Now check whether a user is authorized to complete the operation. The sample code in the following procedure checks if the authenticated user is authorized to perform an operation.",
      "To check whether a user is authorized to perform an operation",
      "The AccessCheck method returns an object array that is actually an array of integers, one for each requested operation. If any of the integers are nonzero, the user is not authorized to perform the corresponding operation in the operations array.",
      "When you save and run this code, the resulting page reports whether the current user is authorized to perform the operation.",
      "The ASP.NET Web Site Configuration tool is built into Visual Studio. You can use this tool to assign users to roles, but only if your application uses forms authentication, because user management is disabled in this tool if you are using Windows authentication.",
      "To assign users to roles with the ASP.NET Web Site Configuration tool",
      "If an XML policy store is used, access rights are controlled by NTFS ACLs. Reading a policy store requires Read access. Writing a policy store requires both Read and Write access. Any account that had rights to the XML file has rights to all applications and all scopes within the file. There is no support for delegated rights with the XML policy store.",
      "If an Active Directory or ADAM policy store is used, rights are expressed by way of roles defined in the store. Domain accounts (either a domain user or a machine account) can be added to the Reader and Administrator roles on the policy store, application, or scope using the AzMan MMC. Delegated rights are supported for Active Directory policy stores.",
      "This How to describes how to configure an AzMan policy store in an XML file. You can also create AzMan stores in Active Directory or in ADAM.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "em": [
      "Authorization Manager (AzMan)",
      "AzMan",
      "Authorization Manager",
      "AzMan",
      "AzMan",
      "Authorization Manager (AzMan)",
      "AzMan",
      "AzMan",
      "AuthorizationStoreRoleProvider",
      "AuthorizationStoreRoleProvider",
      "AzMan business rules (\"BizRules\")",
      "AzMan BizRules",
      "AzMan",
      "AZMan",
      "AzMan",
      "AzMan",
      "AccessCheck",
      "AzMan",
      "Authorization Manager",
      "AzMan",
      "AzMan",
      "azman.msc",
      "Action",
      "Options",
      "Developer mode",
      "Developer mode",
      "Administrator",
      "Action",
      "New Authorization Store",
      "XML File",
      "C:\\RolesData\\AzManStore.xml",
      "Locations",
      "AzMan",
      "AzManStore.xml",
      "Properties",
      "Security",
      "Authorization Manager user role",
      "Administrator",
      "Add",
      "Network Service",
      "Administrator",
      "Reader",
      "AzManStore.xml",
      "Actions",
      "New Application",
      "AzManDemo",
      "Application Name",
      "Description",
      "Version Info",
      "Role Manager",
      "AzMan",
      "AzManDemo",
      "Definitions",
      "Task Definitions",
      "New Task Definition",
      "Name",
      "Privileged Task",
      "OK",
      "AzManDemo",
      "Definitions",
      "Operation Definitions",
      "New Operation Definition",
      "Name",
      "Do Sensitive Operation",
      "1",
      "Operation number",
      "OK",
      "Task Definitions",
      "Privileged Task",
      "Definition",
      "Add",
      "Add Definition",
      "Operations",
      "Do Sensitive Operation",
      "OK",
      "OK",
      "Privileged Task",
      "AzMan",
      "AzMan",
      "Manager",
      "azman.msc",
      "Action",
      "Options",
      "Administrator mode",
      "AzMan",
      "AzManDemo",
      "Definitions",
      "Role Definitions",
      "New Role Definition",
      "Name",
      "Manager",
      "OK",
      "Role Assignments",
      "Assign Roles",
      "Manager",
      "OK",
      "Manager",
      "Role Assignments",
      "Assign Windows Users and Groups",
      "Check Names",
      "OK",
      "Manager",
      "Role Definitions",
      "Manager",
      "Definition",
      "Add",
      "Add Definition",
      "Tasks",
      "Privileged Task",
      "OK",
      "Privileged Task",
      "Manager",
      "AzManRoles",
      "AzMan",
      "connectionStrings",
      "Web.config",
      "C:\\RolesData\\AzManStore.xml",
      "system.web",
      "providers",
      "AuthorizationStoreRoleProvider",
      "connectionStringName",
      "applicationName",
      "AzMan",
      "AzMan",
      "cookieName",
      "cookiePath",
      "authorization",
      "Web.config",
      "memberPages",
      "Roles",
      "Roles.IsUserInRole(\"roleName\")",
      "Roles.GetRolesForUser()",
      "Roles.IsUserInRole(\"username\", \"roleName\")",
      "AzMan",
      "AccessCheck",
      "Authorization Manager",
      "AzMan",
      "Role Management",
      "AccessingTasks",
      "AzMan",
      "Add Reference",
      "COM",
      "azroles 1.0 Type Library",
      "OK",
      "Default.aspx",
      "AzMan",
      "authentication mode='Windows'",
      "AzMan",
      "AccessCheck",
      "Website",
      "ASP.NET Configuration",
      "Security",
      "Create",
      "Manage Roles",
      "Manage",
      "Add Role",
      "Read",
      "Write",
      "Reader",
      "Administrator",
      "AzMan",
      "AzMan",
      "AzMan"
    ],
    "h2": [
      "Roles API vs. Authorization Manager",
      "Role Authorization",
      "Roles API"
    ],
    "b": [
      "To create an AzMan Policy store",
      "Note:",
      "To create the AzMan application",
      "To define tasks",
      "To define operations",
      "To associate operations with tasks",
      "Note:",
      "To define roles with the AzMan administration MMC snap-in",
      "To assign a user to a role with the Administration UI",
      "To associate tasks with roles",
      "To connect to the AzMan store",
      "Note:",
      "To connect to the AzMan store",
      "To check whether a user is authorized to perform an operation",
      "To assign users to roles with the ASP.NET Web Site Configuration tool"
    ],
    "ol": [
      "At the Windows command prompt, enter azman.msc to open the Authorization Manager MMC snap-in. \r\n    On the Action menu, click Options, and then click Developer mode. Developer mode exposes options, such as store creation, that are not available in Administrator mode. \r\n    On the Action menu, click New Authorization Store. Set the Authorization store type as XML File. \r\n    Enter the full store name, for example: C:\\RolesData\\AzManStore.xml. You can click the Locations button to navigate to the AzMan store, or you can create a folder where you will store it. \r\n    Right-click AzManStore.xml, and then click Properties. In the Properties window, click the Security tab. \r\n    Under Authorization Manager user role, select Administrator. Click the Add button to add the account that ASP.NET uses (the Network Service account) to this role.",
      "Make sure AzManStore.xml is selected in the console tree. On the Actions menu, click New Application. \r\n    Enter a name for your application. For this example, enter AzManDemo in the Application Name box, and leave the Description and Version Info boxes empty.",
      "On the console tree, expand AzManDemo, and then expand Definitions. \r\n    Right-click Task Definitions, and then click New Task Definition. \r\n    In the Name box, type Privileged Task, and then click OK.",
      "On the console tree, expand AzManDemo, and then expand Definitions. \r\n    Right-click the Operation Definitions, and then click New Operation Definition. \r\n    In the Name box, type Do Sensitive Operation, type 1 in the Operation number box, and then click OK.",
      "In the Task Definitions folder, double-click the Privileged Task, task that you previously created. \r\n    Click the Definition tab, and then click Add. \r\n    In the Add Definition dialog box, click the Operations tab, and then select the Do Sensitive Operation check box. Click OK, and then click OK again. This assigns the newly created operations to the task named Privileged Task. Note: An AzMan task is an optional abstraction and if an application has only a few operations defined, it may make sense to just use operations.",
      "At the Windows command prompt, type azman.msc to open the Authorization Manager MMC snap-in. \r\n    On the Action menu, click Options, and then click Administrator mode. Administrator mode exposes fewer options than developer mode, but it exposes only those configuration options that can be changed at run time, such as assigning tasks to roles and assigning users to roles. \r\n    On the AzMan Management Console tree, expand AzManDemo, and then expand Definitions. \r\n    Right-click Role Definitions, and then click New Role Definition. \r\n    In the Name box, type Manager, and then click OK.",
      "Right-click the Role Assignments folder, and then click Assign Roles. \r\n    In the dialog box that appears, click the Manager check box, and then click OK. \r\n    Right-click the Manager role listed after the Role Assignments folder in the console tree, and then click Assign Windows Users and Groups. \r\n    Type the name of the Windows user account you are logged on as, click Check Names, and then click OK. This assigns your user account to the Manager role.",
      "In the Role Definitions folder, double-click the Manager role you created previously. \r\n    Click the Definition tab, and then click Add. \r\n    In the Add Definition dialog box, click the Tasks tab, and then click the Privileged Task check box (this is the task you created in the previous step). Click OK twice. This assigns the Privileged Task task to the Manager role.",
      "Create a new ASP.NET Web site named AzManRoles. \r\n    Define a connection string to the AzMan policy store in the <connectionStrings> element of the Web.config file. For example, to create a connection string to C:\\RolesData\\AzManStore.xml, use the following configuration. <configuration>   <connectionStrings>     <add name=\"LocalPolicyStore\"          connectionString=\"msxml://c:/RolesData/azmanstore.xml\" />  </connectionStrings> </configuration>   \r\n    Configure the application to use the role provider by adding the following elements as children of the <system.web> element. <system.web>    <roleManager         enabled=\"true\"         cacheRolesInCookie=\"true\"         defaultProvider=\"RoleManagerAzManProvider\"        cookieName=\".ASPXROLES\"         cookiePath=\"/\"         cookieTimeout=\"30\"         cookieRequireSSL=\"true\"         cookieSlidingExpiration=\"true\"        createPersistentCookie=\"false\"         cookieProtection=\"All\">        <providers>           <add name=\"RoleManagerAzManProvider\"                type=\"System.Web.Security.AuthorizationStoreRoleProvider, System.Web, Version=2.0.0.0,                     Culture=neutral, publicKeyToken=b03f5f7f11d50a3a\"                connectionStringName=\"LocalPolicyStore\"                 applicationName=\"AzManDemo\"/>        </providers>    </roleManager></system.web>",
      "Create a new C# ASP.NET Web site named AccessingTasks. \r\n    Add a reference to the AzMan COM library. In the Add Reference dialog box, click the COM tab, and then select azroles 1.0 Type Library. Click OK. \r\n    Add the following using statements to the code page of the Default.aspx page. using AZROLESLib;using System.Collections.Specialized;using System.Security.Principal;   \r\n    To open the AzMan policy store, add the following code. Use the same connection string as defined at the beginning of step 5. AzAuthorizationStoreClass AzManStore = new AzAuthorizationStoreClass();AzManStore.Initialize(0, ConfigurationManager.ConnectionStrings            [\"LocalPolicyStore\"].ConnectionString, null);IAzApplication azApp = AzManStore.OpenApplication(\"AzManDemo\", null);",
      "Construct a representation of the client's security context. The context is similar to a token in that it caches role mappings for a user. To create the client's context object: If your application uses Windows authentication (the application Web.config file specifies authentication mode='Windows', and Microsoft Internet Information Services (IIS) has been configured to require integrated Windows authentication), construct the client context a follows.     // Get the current user context     IPrincipal userPrincipal = HttpContext.Current.User;    WindowsIdentity userIdentity = userPrincipal.Identity as WindowsIdentity;    IAzClientContext clientContext =        azApp.InitializeClientContextFromToken(               (ulong)userIdentity.Token, null);  If your application uses an authentication mechanism where you only have the original caller's user name available, but you do not have the password, you can construct the client context as shown in the following example. IAzClientContext clientContext =   azApp.InitializeClientContextFromName(name, domain, null);  \r\n    Use the client context object and AzMan to determine whether the user is authorized to perform the operations. The AccessCheck method returns an object array that is actually an array of integers, one for each requested operation. If any of the integers are nonzero, the user is not authorized to perform the corresponding operation in the operations array.     // Create an object array describing the operation IDs to query      // In this simple example, query for the single operation called    // 'Do Sensitive Operation' which has an ID of 1.    object[] operationIds = new object[] {1};    // Check if user has access to the operations    // The first argument, \"Auditstring\", is a string that is used if you     // have run-time auditing turned on    object[] result = (object[])clientContext.AccessCheck(\"Auditstring\",                  new object[1], operationIds, null, null, null, null, null);            // Test the integer array we got back to see which operations are    // authorized    int accessAllowed = (int)result[0];    if (accessAllowed != 0)    {        // current user not authorized to perform operation        Response.Write(\"User not authorized for operation: \" +             \"Do Sensitive Operation\" + \"<br />\");    }    else    {        // current user authorized to perform operation        Response.Write(\"User authorized for operation \" +             \"Do Sensitive Operation\" + \"<br />\");    }",
      "If your application uses Windows authentication (the application Web.config file specifies authentication mode='Windows', and Microsoft Internet Information Services (IIS) has been configured to require integrated Windows authentication), construct the client context a follows.     // Get the current user context     IPrincipal userPrincipal = HttpContext.Current.User;    WindowsIdentity userIdentity = userPrincipal.Identity as WindowsIdentity;    IAzClientContext clientContext =        azApp.InitializeClientContextFromToken(               (ulong)userIdentity.Token, null);  If your application uses an authentication mechanism where you only have the original caller's user name available, but you do not have the password, you can construct the client context as shown in the following example. IAzClientContext clientContext =   azApp.InitializeClientContextFromName(name, domain, null);",
      "On the Website menu, click ASP.NET Configuration. \r\n    Click the Security tab. \r\n    Click Create or Manage Roles \r\n    In the table of roles, click Manage next to the role that you want to add a user to. \r\n    Locate the desired user, and then click Add Role."
    ],
    "pre": [
      "<configuration>   <connectionStrings>     <add name=\"LocalPolicyStore\"          connectionString=\"msxml://c:/RolesData/azmanstore.xml\" />  </connectionStrings> </configuration>",
      "<system.web>    <roleManager         enabled=\"true\"         cacheRolesInCookie=\"true\"         defaultProvider=\"RoleManagerAzManProvider\"        cookieName=\".ASPXROLES\"         cookiePath=\"/\"         cookieTimeout=\"30\"         cookieRequireSSL=\"true\"         cookieSlidingExpiration=\"true\"        createPersistentCookie=\"false\"         cookieProtection=\"All\">        <providers>           <add name=\"RoleManagerAzManProvider\"                type=\"System.Web.Security.AuthorizationStoreRoleProvider, System.Web, Version=2.0.0.0,                     Culture=neutral, publicKeyToken=b03f5f7f11d50a3a\"                connectionStringName=\"LocalPolicyStore\"                 applicationName=\"AzManDemo\"/>        </providers>    </roleManager></system.web>",
      "<configuration>   <location path=\"memberPages\">       <system.web>            <authorization>               <allow roles=\"Manager\" />               <deny users=\"*\" />            </authorization>          </system.web>        </location>   <!-- other configuration settings here --></configuration>",
      "using AZROLESLib;using System.Collections.Specialized;using System.Security.Principal;",
      "AzAuthorizationStoreClass AzManStore = new AzAuthorizationStoreClass();AzManStore.Initialize(0, ConfigurationManager.ConnectionStrings            [\"LocalPolicyStore\"].ConnectionString, null);IAzApplication azApp = AzManStore.OpenApplication(\"AzManDemo\", null);",
      "// Get the current user context     IPrincipal userPrincipal = HttpContext.Current.User;    WindowsIdentity userIdentity = userPrincipal.Identity as WindowsIdentity;    IAzClientContext clientContext =        azApp.InitializeClientContextFromToken(               (ulong)userIdentity.Token, null);",
      "IAzClientContext clientContext =   azApp.InitializeClientContextFromName(name, domain, null);",
      "// Create an object array describing the operation IDs to query      // In this simple example, query for the single operation called    // 'Do Sensitive Operation' which has an ID of 1.    object[] operationIds = new object[] {1};    // Check if user has access to the operations    // The first argument, \"Auditstring\", is a string that is used if you     // have run-time auditing turned on    object[] result = (object[])clientContext.AccessCheck(\"Auditstring\",                  new object[1], operationIds, null, null, null, null, null);            // Test the integer array we got back to see which operations are    // authorized    int accessAllowed = (int)result[0];    if (accessAllowed != 0)    {        // current user not authorized to perform operation        Response.Write(\"User not authorized for operation: \" +             \"Do Sensitive Operation\" + \"<br />\");    }    else    {        // current user authorized to perform operation        Response.Write(\"User authorized for operation \" +             \"Do Sensitive Operation\" + \"<br />\");    }"
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "hr": [
      ""
    ]
  },
  "links": [],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>Summary</h1>\r\n  <p>This How to shows you how to use the <em>Authorization Manager (AzMan)</em> in conjunction with the ASP.NET role manager API to manage roles, check user role membership, and authorize roles to perform specific operations against an <em>AzMan</em> policy store. The How to also explains how to use <em>Authorization Manager</em>'s authorization model of tasks and operations through the <em>AzMan</em> COM API. </p>\r\n  <p>The benefit of using <em>AzMan</em> is that it enables you to define operations, group them into tasks, and then authorize roles to perform specific tasks. It also provides an administrative console for managing roles, tasks, operations, and users.</p>\r\n  <h1>Contents</h1>\r\n  <ul>\r\n    <li>Objectives </li>\r\n    <li>Overview </li>\r\n    <li>Summary of Steps </li>\r\n    <li>Step 1. Create an AzMan Policy Store </li>\r\n    <li>Step 2. Define Tasks and Operations </li>\r\n    <li>Step 3. Create Roles and Assign Users in AzMan </li>\r\n    <li>Step 4. Configure Your ASP.NET Application to Use AuthorizationStoreRoleProvider </li>\r\n    <li>Step 5. Use Role Manager to Perform a Role Check </li>\r\n    <li>Step 6. Use AzMan APIs to Authorize Operations </li>\r\n    <li>ASP.NET Web Site Configuration Tool </li>\r\n    <li>Security Considerations </li>\r\n    <li>ADAM Considerations </li>\r\n    <li>Additional Resources</li>\r\n  </ul>\r\n  <h1>Objectives</h1>\r\n  <ul>\r\n    <li>Identify when to use Authorization Manager (AzMan). </li>\r\n    <li>Create a policy store, define tasks, operations, and role assignments using AzMan. </li>\r\n    <li>Configure your Web application to use AuthorizationStoreRoleProvider. </li>\r\n    <li>Use AzMan APIs to authorize operations. </li>\r\n  </ul>\r\n  <h1>Overview</h1>\r\n  <p>\r\n    <em>Authorization Manager (AzMan)</em> enables you to define individual operations, which can be grouped together to form tasks. You can then authorize roles to perform specific tasks and/or individual operations. <em>AzMan</em> provides an administration tool as a Microsoft Management Console (MMC) snap-in to manage roles, tasks, operations, and users. You can configure an <em>AzMan</em> policy store in an XML file, Active Directory, or in an Active Directory Application Mode (ADAM) store. By configuring the ASP.NET role manager to use the <em>AuthorizationStoreRoleProvider</em>, you can use the role management API against an AzMan policy store. The <em>AuthorizationStoreRoleProvider</em> does not support <em>AzMan business rules (\"BizRules\")</em>, which are scripted extensions to authorization checks, because the role manager implementation does not have the concept of extended data that can be passed along during an authorization check. To use <em>AzMan BizRules</em>, you need to use COM interop.</p>\r\n  <h2>Roles API vs. Authorization Manager</h2>\r\n  <p>ASP.NET role manager provides an API that enables you to manage application roles, add and remove users from roles, and check role membership, but it does not allow you to query whether a user is authorized to perform a named task or operation. <em>AzMan</em> allows you to define individual operations and combine them into tasks. With <em>AZMan</em>, in addition to role checks, you can also check whether a user can perform a task. Role assignment and task authorization can be configured outside of the application or performed programmatically within the application. The <em>AzMan</em> administration MMC snap-in allows administrators to change the tasks a role may perform at run time and to manage each user's membership of roles.</p>\r\n  <p>At run time, if you are using the ASP.NET roles API, you programmatically query a user's role membership. Using the <em>AzMan</em> COM API and the <em>AccessCheck</em> function, you query whether a user is authorized to perform a named task.</p>\r\n  <p>You should use <em>AzMan</em> to design and implement role-based authorization if you want to design a more fine-grained role-based authorization approach around operations and tasks, and if you want the additional flexibility of allowing an administrator to create, delete, and administer the permissions assigned to a role at run time.</p>\r\n  <h1>Summary of Steps</h1>\r\n  <p>To use the ASP.NET role manager to check user role membership in an <em>Authorization Manager</em> policy store, perform the following steps: </p>\r\n  <ul>\r\n    <li>Step 1. Create an AzMan policy store. </li>\r\n    <li>Step 2. Define tasks and operations. </li>\r\n    <li>Step 3. Create roles and assign users in AzMan. </li>\r\n    <li>Step 4. Configure your ASP.NET application to use AuthorizationStoreRoleProvider. </li>\r\n    <li>Step 5. Use role manager to perform a role check. </li>\r\n    <li>Step 6. Use AzMan APIs to authorize operations.</li>\r\n  </ul>\r\n  <h1>Step 1. Create an AzMan Policy Store</h1>\r\n  <p>You can create <em>AzMan</em> policy stores in an XML file, Active Directory, or ADAM. In this step, you create an <em>AzMan</em> policy store in an XML file.</p>\r\n  <p>\r\n    <b>To create an AzMan Policy store</b>\r\n  </p>\r\n  <ol>\r\n    <li>At the Windows command prompt, enter <em>azman.msc</em> to open the Authorization Manager MMC snap-in. </li>\r\n    <li>On the <em>Action</em> menu, click <em>Options</em>, and then click <em>Developer mode</em>. <em>Developer mode</em> exposes options, such as store creation, that are not available in <em>Administrator</em> mode. </li>\r\n    <li>On the <em>Action</em> menu, click <em>New Authorization Store</em>. Set the Authorization store type as <em>XML File</em>. </li>\r\n    <li>Enter the full store name, for example: <em>C:\\RolesData\\AzManStore.xml</em>. You can click the <em>Locations</em> button to navigate to the <em>AzMan</em> store, or you can create a folder where you will store it. </li>\r\n    <li>Right-click <em>AzManStore.xml</em>, and then click <em>Properties</em>. In the Properties window, click the <em>Security</em> tab. </li>\r\n    <li>Under <em>Authorization Manager user role</em>, select <em>Administrator</em>. Click the <em>Add</em> button to add the account that ASP.NET uses (the <em>Network Service</em> account) to this role. </li>\r\n  </ol>\r\n  <p>\r\n    <b>Note:</b>&nbsp;If your ASP.NET application uses impersonation to impersonate the original caller or a fixed identity, or if it runs under a different custom account, you must add the impersonated account or custom account as an <em>Administrator</em>, or <em>Reader</em>, according to the level of access required.</p>\r\n  <p>\r\n    <b>To create the AzMan application</b>\r\n  </p>\r\n  <ol>\r\n    <li>Make sure <em>AzManStore.xml</em> is selected in the console tree. On the <em>Actions</em> menu, click <em>New Application</em>. </li>\r\n    <li>Enter a name for your application. For this example, enter <em>AzManDemo</em> in the <em>Application Name</em> box, and leave the <em>Description</em> and <em>Version Info</em> boxes empty. </li>\r\n  </ol>\r\n  <h1>Step 2. Define Tasks and Operations</h1>\r\n  <p>Use the following steps to define tasks and operations. Note that you do not need to perform this step if you intend to use only the ASP.NET <em>Role Manager</em> API, which can only authorize users on role membership; it cannot authorize users by application task or operation. Perform these steps if you want to use the <em>AzMan</em> COM API to authorize by task or operation.</p>\r\n  <p>\r\n    <b>To define tasks</b>\r\n  </p>\r\n  <ol>\r\n    <li>On the console tree, expand <em>AzManDemo</em>, and then expand <em>Definitions</em>. </li>\r\n    <li>Right-click <em>Task Definitions</em>, and then click <em>New Task Definition</em>. </li>\r\n    <li>In the <em>Name</em> box, type<em> Privileged Task</em>, and then click <em>OK</em>. </li>\r\n  </ol>\r\n  <p>\r\n    <b>To define operations </b>\r\n  </p>\r\n  <ol>\r\n    <li>On the console tree, expand <em>AzManDemo</em>, and then expand <em>Definitions</em>. </li>\r\n    <li>Right-click the <em>Operation Definitions</em>, and then click <em>New Operation Definition</em>. </li>\r\n    <li>In the <em>Name</em> box, type <em>Do Sensitive Operation</em>, type <em>1</em> in the <em>Operation number</em> box, and then click <em>OK</em>. </li>\r\n  </ol>\r\n  <p>\r\n    <b>To associate operations with tasks</b>\r\n  </p>\r\n  <ol>\r\n    <li>In the <em>Task Definitions</em> folder, double-click the <em>Privileged Task</em>, task that you previously created. </li>\r\n    <li>Click the <em>Definition</em> tab, and then click <em>Add</em>. </li>\r\n    <li>In the <em>Add Definition</em> dialog box, click the <em>Operations</em> tab, and then select the <em>Do Sensitive Operation</em> check box. Click <em>OK</em>, and then click <em>OK</em> again. This assigns the newly created operations to the task named <em>Privileged Task</em>. <p><b>Note: </b>An <em>AzMan</em> task is an optional abstraction and if an application has only a few operations defined, it may make sense to just use operations.</p></li>\r\n  </ol>\r\n  <h1>Step 3. Create Roles and Assign Users in AzMan</h1>\r\n  <p>In this step, you use the <em>AzMan</em> administration MMC snap-in to create a role named <em>Manager</em>. You then assign the task that you created in the previous step to the role.</p>\r\n  <p>\r\n    <b>To define roles with the AzMan administration MMC snap-in</b>\r\n  </p>\r\n  <ol>\r\n    <li>At the Windows command prompt, type <em>azman.msc</em> to open the Authorization Manager MMC snap-in. </li>\r\n    <li>On the <em>Action</em> menu, click <em>Options</em>, and then click <em>Administrator mode</em>. Administrator mode exposes fewer options than developer mode, but it exposes only those configuration options that can be changed at run time, such as assigning tasks to roles and assigning users to roles. </li>\r\n    <li>On the <em>AzMan</em> Management Console tree, expand <em>AzManDemo</em>, and then expand <em>Definitions</em>. </li>\r\n    <li>Right-click <em>Role Definitions</em>, and then click <em>New Role Definition</em>. </li>\r\n    <li>In the <em>Name</em> box, type <em>Manager</em>, and then click <em>OK</em>. </li>\r\n  </ol>\r\n  <p>\r\n    <b>To assign a user to a role with the Administration UI</b>\r\n  </p>\r\n  <ol>\r\n    <li>Right-click the <em>Role Assignments</em> folder, and then click <em>Assign Roles</em>. </li>\r\n    <li>In the dialog box that appears, click the <em>Manager</em> check box, and then click <em>OK</em>. </li>\r\n    <li>Right-click the <em>Manager</em> role listed after the <em>Role Assignments</em> folder in the console tree, and then click <em>Assign Windows Users and Groups</em>. </li>\r\n    <li>Type the name of the Windows user account you are logged on as, click <em>Check Names</em>, and then click <em>OK</em>. This assigns your user account to the <em>Manager</em> role. </li>\r\n  </ol>\r\n  <p>\r\n    <b>To associate tasks with roles</b>\r\n  </p>\r\n  <ol>\r\n    <li>In the <em>Role Definitions</em> folder, double-click the <em>Manager</em> role you created previously. </li>\r\n    <li>Click the <em>Definition</em> tab, and then click <em>Add</em>. </li>\r\n    <li>In the <em>Add Definition</em> dialog box, click the <em>Tasks</em> tab, and then click the <em>Privileged Task</em> check box (this is the task you created in the previous step). Click <em>OK</em> twice. This assigns the <em>Privileged Task</em> task to the <em>Manager</em> role. </li>\r\n  </ol>\r\n  <h1>Step 4. Configure Your ASP.NET Application to Use AuthorizationStoreRoleProvider</h1>\r\n  <p>In this step, you configure role management in an ASP.NET application to use the AzMan store.</p>\r\n  <p>\r\n    <b>To connect to the AzMan store</b>\r\n  </p>\r\n  <ol>\r\n    <li>Create a new ASP.NET Web site named <em>AzManRoles</em>. </li>\r\n    <li>Define a connection string to the <em>AzMan</em> policy store in the &lt;<em>connectionStrings</em>&gt; element of the <em>Web.config</em> file. For example, to create a connection string to <em>C:\\RolesData\\AzManStore.xml</em>, use the following configuration. <pre>&lt;configuration&gt; <br />&nbsp; &lt;connectionStrings&gt; <br />&nbsp;&nbsp;&nbsp; &lt;add name=\"LocalPolicyStore\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionString=\"msxml://c:/RolesData/azmanstore.xml\" /&gt;<br />&nbsp; &lt;/connectionStrings&gt; <br />&lt;/configuration&gt;   </pre></li>\r\n    <li>Configure the application to use the role provider by adding the following elements as children of the &lt;<em>system.web</em>&gt; element. <pre>&lt;system.web&gt;<br />&nbsp;&nbsp;&nbsp; &lt;roleManager <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled=\"true\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cacheRolesInCookie=\"true\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; defaultProvider=\"RoleManagerAzManProvider\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cookieName=\".ASPXROLES\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cookiePath=\"/\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cookieTimeout=\"30\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cookieRequireSSL=\"true\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cookieSlidingExpiration=\"true\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; createPersistentCookie=\"false\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cookieProtection=\"All\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;providers&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;add name=\"RoleManagerAzManProvider\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type=\"System.Web.Security.AuthorizationStoreRoleProvider, System.Web, Version=2.0.0.0, <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Culture=neutral, publicKeyToken=b03f5f7f11d50a3a\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connectionStringName=\"LocalPolicyStore\" <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; applicationName=\"AzManDemo\"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/providers&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/roleManager&gt;<br />&lt;/system.web&gt;  </pre></li>\r\n  </ol>\r\n  <p>In the preceding configuration file fragment, you define a &lt;<em>providers</em>&gt; element that uses the <em>AuthorizationStoreRoleProvider</em>, with the <em>connectionStringName</em> attribute set to the name of the connection string you defined in the previous step, and you must set the <em>applicationName</em> attribute to the name of the <em>AzMan</em> application you created in the <em>AzMan</em> store.</p>\r\n  <p>\r\n    <b>Note:</b>&nbsp;By ensuring unique values for the <em>cookieName</em> and <em>cookiePath</em> attributes, you prevent possible problems that can occur when hosting multiple applications on the same server. This best practice will prevent a user on one site from using his or her role cookie on a different site hosted on the same server.</p>\r\n  <h1>Step 5. Use Role Manager to Perform a Role Check</h1>\r\n  <p>At run time, you can use roles to authorize access in two ways: </p>\r\n  <ul>\r\n    <li>Use role authorization to restrict access to pages and folders. </li>\r\n    <li>Use the roles API to programmatically check for role membership. </li>\r\n  </ul>\r\n  <h2>Role Authorization</h2>\r\n  <p>A typical use for roles is to establish rules that allow or deny access to pages or folders. You can set up such access rules in the &lt;<em>authorization</em>&gt; section of the <em>Web.config</em> file. The following example allows users in the role of members to view pages in the folder named <em>memberPages</em> and denies access to anyone else.</p>\r\n  <pre>&lt;configuration&gt;<br />&nbsp;&nbsp; &lt;location path=\"memberPages\"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;system.web&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;authorization&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;allow roles=\"Manager\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;deny users=\"*\" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/authorization&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/system.web&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/location&gt;<br />&nbsp;&nbsp; &lt;!-- other configuration settings here --&gt;<br />&lt;/configuration&gt;  </pre>\r\n  <h2>Roles API</h2>\r\n  <p>If you are using Windows authentication in your application, or if you are using Forms authentication with the ASP.NET membership feature, you can use <em>Roles</em> API methods such as <em>Roles.IsUserInRole(\"roleName\")</em> to test for role membership for the currently authenticated user or <em>Roles.GetRolesForUser() </em>to return a string array of all roles for the user. </p>\r\n  <p>You can use <em>Roles.IsUserInRole(\"username\", \"roleName\")</em> to test for role membership for a named user. </p>\r\n  <h1>Step 6. Use AzMan APIs to Authorize Operations</h1>\r\n  <p>With <em>AzMan</em>, the primary mechanism to determine access to a given operation is the <em>AccessCheck</em> API. In this step, you use the <em>Authorization Manager</em> API in an ASP.NET application to query the operations that are in a task to determine whether the current user is authorized to perform them. The ability in the <em>AzMan</em> API to query for authorization to perform an operation or task exceeds the capabilities of the ASP.NET <em>Role Management</em> API, which only supports role membership checks.</p>\r\n  <p>\r\n    <b>To connect to the AzMan store</b>\r\n  </p>\r\n  <ol>\r\n    <li>Create a new C# ASP.NET Web site named <em>AccessingTasks</em>. </li>\r\n    <li>Add a reference to the <em>AzMan</em> COM library. In the <em>Add Reference</em> dialog box, click the <em>COM</em> tab, and then select <em>azroles 1.0 Type Library</em>. Click <em>OK</em>. </li>\r\n    <li>Add the following using statements to the code page of the <em>Default.aspx</em> page. <pre>using AZROLESLib;<br />using System.Collections.Specialized;<br />using System.Security.Principal;   </pre></li>\r\n    <li>To open the <em>AzMan</em> policy store, add the following code. Use the same connection string as defined at the beginning of step 5. <pre>AzAuthorizationStoreClass AzManStore = new AzAuthorizationStoreClass();<br />AzManStore.Initialize(0, ConfigurationManager.ConnectionStrings<br />            [\"LocalPolicyStore\"].ConnectionString, null);<br />IAzApplication azApp = AzManStore.OpenApplication(\"AzManDemo\", null);  </pre></li>\r\n  </ol>\r\n  <p>Now check whether a user is authorized to complete the operation. The sample code in the following procedure checks if the authenticated user is authorized to perform an operation.</p>\r\n  <p>\r\n    <b>To check whether a user is authorized to perform an operation</b>\r\n  </p>\r\n  <ol>\r\n    <li>Construct a representation of the client's security context. The context is similar to a token in that it caches role mappings for a user. To create the client's context object: <ol><li>If your application uses Windows authentication (the application Web.config file specifies <em>authentication mode='Windows'</em>, and Microsoft Internet Information Services (IIS) has been configured to require integrated Windows authentication), construct the client context a follows. <pre>    // Get the current user context <br />&nbsp;&nbsp;&nbsp; IPrincipal userPrincipal = HttpContext.Current.User;<br />&nbsp;&nbsp;&nbsp; WindowsIdentity userIdentity = userPrincipal.Identity as WindowsIdentity;<br />&nbsp;&nbsp;&nbsp; IAzClientContext clientContext =<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; azApp.InitializeClientContextFromToken(<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (ulong)userIdentity.Token, null);  </pre></li><li>If your application uses an authentication mechanism where you only have the original caller's user name available, but you do not have the password, you can construct the client context as shown in the following example. <pre>IAzClientContext clientContext =<br />   azApp.InitializeClientContextFromName(name, domain, null);  </pre></li></ol></li>\r\n    <li>Use the client context object and <em>AzMan</em> to determine whether the user is authorized to perform the operations. <p>The <em>AccessCheck</em> method returns an object array that is actually an array of integers, one for each requested operation. If any of the integers are nonzero, the user is not authorized to perform the corresponding operation in the operations array. </p><pre>    // Create an object array describing the operation IDs to query&nbsp; <br />&nbsp;&nbsp;&nbsp; // In this simple example, query for the single operation called<br />&nbsp;&nbsp;&nbsp; // 'Do Sensitive Operation' which has an ID of 1.<br />&nbsp;&nbsp;&nbsp; object[] operationIds = new object[] {1};<br /><br />&nbsp;&nbsp;&nbsp; // Check if user has access to the operations<br />&nbsp;&nbsp;&nbsp; // The first argument, \"Auditstring\", is a string that is used if you <br />&nbsp;&nbsp;&nbsp; // have run-time auditing turned on<br />&nbsp;&nbsp;&nbsp; object[] result = (object[])clientContext.AccessCheck(\"Auditstring\",<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new object[1], operationIds, null, null, null, null, null);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; // Test the integer array we got back to see which operations are<br />&nbsp;&nbsp;&nbsp; // authorized<br />&nbsp;&nbsp;&nbsp; int accessAllowed = (int)result[0];<br />&nbsp;&nbsp;&nbsp; if (accessAllowed != 0)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // current user not authorized to perform operation<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Response.Write(\"User not authorized for operation: \" +<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Do Sensitive Operation\" + \"&lt;br /&gt;\");<br />&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // current user authorized to perform operation<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Response.Write(\"User authorized for operation \" +<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Do Sensitive Operation\" + \"&lt;br /&gt;\");<br />&nbsp;&nbsp;&nbsp; }      </pre></li>\r\n  </ol>\r\n  <p>When you save and run this code, the resulting page reports whether the current user is authorized to perform the operation.</p>\r\n  <h1>ASP.NET Web Site Configuration Tool</h1>\r\n  <p>The ASP.NET Web Site Configuration tool is built into Visual Studio. You can use this tool to assign users to roles, but only if your application uses forms authentication, because user management is disabled in this tool if you are using Windows authentication.</p>\r\n  <p>\r\n    <b>To assign users to roles with the ASP.NET Web Site Configuration tool</b>\r\n  </p>\r\n  <ol>\r\n    <li>On the <em>Website</em> menu, click <em>ASP.NET Configuration</em>. </li>\r\n    <li>Click the <em>Security</em> tab. </li>\r\n    <li>Click <em>Create</em> or <em>Manage Roles </em></li>\r\n    <li>In the table of roles, click <em>Manage</em> next to the role that you want to add a user to. </li>\r\n    <li>Locate the desired user, and then click <em>Add Role</em>. </li>\r\n  </ol>\r\n  <h1>Security Considerations</h1>\r\n  <p>If an XML policy store is used, access rights are controlled by NTFS ACLs. Reading a policy store requires Read access. Writing a policy store requires both <em>Read</em> and <em>Write</em> access. Any account that had rights to the XML file has rights to all applications and all scopes within the file. There is no support for delegated rights with the XML policy store.</p>\r\n  <p>If an Active Directory or ADAM policy store is used, rights are expressed by way of roles defined in the store. Domain accounts (either a domain user or a machine account) can be added to the <em>Reader</em> and <em>Administrator</em> roles on the policy store, application, or scope using the <em>AzMan</em> MMC. Delegated rights are supported for Active Directory policy stores.</p>\r\n  <h1>ADAM Considerations</h1>\r\n  <p>This How to describes how to configure an <em>AzMan</em> policy store in an XML file. You can also create <em>AzMan</em> stores in Active Directory or in ADAM. </p>\r\n  <br />\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}