{
  "id": "c62fb9d2-95f1-4e36-b10f-cdf9451d15ce",
  "checksum": "049c1e47ac604fc5aaaeda247da2d9c4",
  "words": {
    "2": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "applies": [
      "h2"
    ],
    "to": [
      "h2",
      "h2",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "p",
      "pre",
      "code",
      "p",
      "ul",
      "li"
    ],
    "c": [
      "ul",
      "li",
      "ul",
      "li"
    ],
    "and": [
      "ul",
      "li",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "c++": [
      "ul",
      "li"
    ],
    "what": [
      "h2"
    ],
    "do": [
      "h2",
      "ol",
      "li",
      "p"
    ],
    "only": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "copy": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "code",
      "code",
      "code",
      "code",
      "p",
      "pre",
      "pre",
      "pre",
      "code",
      "code",
      "code",
      "p",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "pre",
      "pre",
      "code",
      "code",
      "code",
      "code"
    ],
    "amount": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "code",
      "pre",
      "code",
      "p",
      "p",
      "pre",
      "code",
      "ul",
      "li"
    ],
    "data": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "p",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "ul",
      "li",
      "title"
    ],
    "that": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "pre",
      "code",
      "p",
      "pre",
      "code",
      "p",
      "p",
      "pre",
      "code",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "can": [
      "p",
      "p"
    ],
    "fit": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "pre",
      "code",
      "p",
      "pre",
      "code",
      "p",
      "pre",
      "code"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "pre",
      "code",
      "p",
      "pre",
      "code",
      "p",
      "p",
      "pre",
      "code"
    ],
    "array": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "string": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "make": [
      "p",
      "ol",
      "li",
      "p",
      "pre",
      "code"
    ],
    "sure": [
      "p",
      "ol",
      "li",
      "p",
      "pre",
      "code"
    ],
    "is": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "pre",
      "code",
      "p",
      "pre",
      "code",
      "p",
      "p",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "ul",
      "li"
    ],
    "large": [
      "p",
      "ul",
      "li"
    ],
    "enough": [
      "p",
      "p",
      "p",
      "title"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "including": [
      "p"
    ],
    "possible": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "trailing": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "null": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "why": [
      "h2"
    ],
    "copying": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "title"
    ],
    "more": [
      "p",
      "ul",
      "li"
    ],
    "than": [
      "p"
    ],
    "an": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "results": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "buffer": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "title"
    ],
    "overflow": [
      "p",
      "p",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "when": [
      "h2",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "allocate": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "title"
    ],
    "space": [
      "p",
      "p",
      "title"
    ],
    "for": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "being": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "pre",
      "code",
      "pre",
      "code",
      "p",
      "pre",
      "code"
    ],
    "copied": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "pre",
      "code",
      "ul",
      "li"
    ],
    "how": [
      "h2"
    ],
    "perform": [
      "p"
    ],
    "following": [
      "p"
    ],
    "steps": [
      "p"
    ],
    "assure": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "your": [
      "p"
    ],
    "code": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "allocates": [
      "p"
    ],
    "prevent": [
      "p"
    ],
    "overflows": [
      "p"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "functions": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "strings": [
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "arrays": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "list": [
      "ol",
      "li",
      "p"
    ],
    "components": [
      "ol",
      "li",
      "p"
    ],
    "modules": [
      "ol",
      "li",
      "p"
    ],
    "libraries": [
      "ol",
      "li",
      "p"
    ],
    "most": [
      "ol",
      "li",
      "p"
    ],
    "handling": [
      "ol",
      "li",
      "p"
    ],
    "usually": [
      "ol",
      "li",
      "p"
    ],
    "there": [
      "ol",
      "li",
      "p"
    ],
    "exists": [
      "ol",
      "li",
      "p"
    ],
    "some": [
      "ol",
      "li",
      "p"
    ],
    "heavy": [
      "ol",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "li",
      "p"
    ],
    "manipulating": [
      "ol",
      "li",
      "p"
    ],
    "copies": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "many": [
      "ol",
      "li",
      "p"
    ],
    "buffers": [
      "ol",
      "li",
      "p"
    ],
    "constructs": [
      "ol",
      "li",
      "p"
    ],
    "various": [
      "ol",
      "li",
      "p"
    ],
    "strings\n\n\ncalculate": [
      "ol"
    ],
    "memory": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "p"
    ],
    "used": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "by": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "set": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "maximum": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "size": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "pre",
      "pre",
      "code",
      "code",
      "pre",
      "pre",
      "code",
      "code",
      "p",
      "pre",
      "pre",
      "code",
      "code"
    ],
    "limit": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "valid": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "include": [
      "ol",
      "li",
      "p"
    ],
    "if": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "terminated": [
      "ol",
      "li",
      "p"
    ],
    "calculating": [
      "ol",
      "li",
      "p"
    ],
    "count": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "uses": [
      "ol",
      "li",
      "p"
    ],
    "not": [
      "ol",
      "li",
      "p",
      "pre",
      "code",
      "p",
      "pre",
      "code",
      "p"
    ],
    "elements": [
      "ol",
      "li",
      "p"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "p"
    ],
    "careful": [
      "ol",
      "li",
      "p"
    ],
    "using": [
      "ol",
      "li",
      "p"
    ],
    "sizeof)": [
      "ol",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "because": [
      "ol",
      "li",
      "p"
    ],
    "returns": [
      "ol",
      "li",
      "p"
    ],
    "pointer": [
      "ol",
      "li",
      "p"
    ],
    "containing": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "passed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "as": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "pre",
      "code"
    ],
    "parameter": [
      "ol",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p",
      "pre",
      "code"
    ],
    "calculated": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "beforehand": [
      "ol",
      "li",
      "p"
    ],
    "ideally": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p",
      "pre",
      "code"
    ],
    "scope": [
      "ol",
      "li",
      "p"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "structure": [
      "ol",
      "li",
      "p"
    ],
    "declared": [
      "ol",
      "li",
      "p"
    ],
    "argument": [
      "ol",
      "li",
      "p",
      "pre",
      "code"
    ],
    "does": [
      "ol",
      "li",
      "p",
      "pre",
      "code",
      "p",
      "pre",
      "code",
      "p"
    ],
    "copying\n\n\nallocate": [
      "ol"
    ],
    "once": [
      "ol",
      "li",
      "p"
    ],
    "needed": [
      "ol",
      "li",
      "p"
    ],
    "determined": [
      "ol",
      "li",
      "p"
    ],
    "sufficient": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "write": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "handle": [
      "ol",
      "li",
      "p"
    ],
    "allocation": [
      "ol",
      "li",
      "p"
    ],
    "errors\n\n\ncheck": [
      "ol"
    ],
    "bounds": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "use": [
      "ol",
      "li",
      "p"
    ],
    "allocated": [
      "ol",
      "li",
      "p"
    ],
    "fits": [
      "ol",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "this": [
      "ol",
      "li",
      "p"
    ],
    "always": [
      "ol",
      "li",
      "p"
    ],
    "case": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "correctly": [
      "ol",
      "li",
      "p"
    ],
    "but": [
      "ol",
      "li",
      "p"
    ],
    "extra": [
      "ol",
      "li",
      "p"
    ],
    "security": [
      "ol",
      "li",
      "p"
    ],
    "good": [
      "ol",
      "li",
      "p"
    ],
    "idea": [
      "ol",
      "li",
      "p"
    ],
    "way": [
      "ol",
      "li",
      "p"
    ],
    "truncates": [
      "ol",
      "li",
      "p"
    ],
    "doesn't": [
      "ol",
      "li",
      "p",
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "calculate": [
      "li",
      "p",
      "strong",
      "p"
    ],
    "errors": [
      "li",
      "p"
    ],
    "check": [
      "li",
      "p",
      "strong"
    ],
    "problem": [
      "h2"
    ],
    "example": [
      "h2",
      "p",
      "h2"
    ],
    "here": [
      "p"
    ],
    "classic": [
      "p"
    ],
    "#include": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "stdio.h>\n#include": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "string.h>\n\nint": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "mainint": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "argc": [
      "pre",
      "pre",
      "code",
      "code",
      "pre",
      "pre",
      "code",
      "code",
      "pre",
      "pre",
      "code",
      "code"
    ],
    "char": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "*argv])\n{\n//": [
      "pre",
      "code"
    ],
    "one": [
      "pre",
      "code",
      "p"
    ],
    "supplied": [
      "pre",
      "code"
    ],
    "executableif": [
      "pre",
      "code"
    ],
    "!=": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "return": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "0\n\n//": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "correspond": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "copiedchar": [
      "pre",
      "code"
    ],
    "buffer8];\n//": [
      "pre",
      "code"
    ],
    "overflowsstrcpy(buffer,": [
      "pre",
      "code"
    ],
    "argv1]);\nreturn": [
      "pre",
      "code"
    ],
    "1\n}": [
      "pre",
      "code",
      "pre",
      "code",
      "pre",
      "code"
    ],
    "solution": [
      "h2",
      "p"
    ],
    "simply": [
      "p"
    ],
    "truncate": [
      "p"
    ],
    "any": [
      "p",
      "p"
    ],
    "*argv])\n{\nif": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "copiedint": [
      "pre",
      "code"
    ],
    "buffersize": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "=": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "8\nchar": [
      "pre",
      "code"
    ],
    "bufferbuffersize];\n//": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "truncated": [
      "pre",
      "code",
      "p",
      "pre",
      "code"
    ],
    "so": [
      "pre",
      "code",
      "pre",
      "pre",
      "code",
      "code"
    ],
    "no": [
      "pre",
      "code",
      "pre",
      "pre",
      "code",
      "code"
    ],
    "occursstrncpy(buffer,": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "argv1],": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "buffersize;\nreturn": [
      "pre",
      "code",
      "pre",
      "code"
    ],
    "better": [
      "p"
    ],
    "actually": [
      "p"
    ],
    "correct": [
      "p"
    ],
    "however": [
      "p"
    ],
    "just": [
      "p"
    ],
    "calculation": [
      "p"
    ],
    "somehow": [
      "p"
    ],
    "incorrect": [
      "p"
    ],
    "truncation": [
      "pre",
      "code"
    ],
    "occurint": [
      "pre",
      "code"
    ],
    "sizeofargv[1]);\nchar": [
      "pre",
      "code"
    ],
    "additional": [
      "h2"
    ],
    "resources": [
      "h2"
    ],
    "information": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "assuring": [
      "ul",
      "li"
    ],
    "sufficiently": [
      "ul",
      "li"
    ],
    "storage": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "please": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "\"arr33": [
      "ul",
      "li"
    ],
    "guarantee": [
      "ul",
      "li"
    ],
    "are": [
      "ul",
      "li"
    ],
    "made": [
      "ul",
      "li"
    ],
    "size\"": [
      "ul",
      "li"
    ],
    "at": [
      "ul",
      "li"
    ],
    "https//www.securecoding.cert.org/confluence/display/c/void+arr33": [
      "ul",
      "li",
      "a"
    ],
    "c.+guarantee+that+copies+are+made+into+storage+of+sufficient+size": [
      "ul",
      "li",
      "a"
    ]
  },
  "tags": {},
  "links": [
    {
      "href": "https://www.securecoding.cert.org/confluence/display/c/void+ARR33-C.+Guarantee+that+copies+are+made+into+storage+of+sufficient+size",
      "text": "https://www.securecoding.cert.org/confluence/display/c/void+ARR33-C.+Guarantee+that+copies+are+made+into+storage+of+sufficient+size"
    }
  ]
}