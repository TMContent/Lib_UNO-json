{
  "id": "fe0a7400-2140-4e9e-bcc7-f185acce6974",
  "checksum": "a9fdb420c07b009ce38763b2c2c60dfcb7bef74c",
  "words": {
    "10": [
      "ol",
      "li",
      "p"
    ],
    "15": [
      "p"
    ],
    "20": [
      "ol",
      "li",
      "p"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p"
    ],
    "scala": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p"
    ],
    "play": [
      "p"
    ],
    "framework": [
      "p"
    ],
    "21.0+": [
      "p"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "ensure": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "em",
      "em",
      "span",
      "span",
      "p"
    ],
    "confidentiality": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "session": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "title"
    ],
    "cookies": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "title"
    ],
    "is": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "protected": [
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "are": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p",
      "title"
    ],
    "used": [
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "by": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "an": [
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "identify": [
      "p"
    ],
    "associated": [
      "p"
    ],
    "with": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "particular": [
      "p"
    ],
    "user": [
      "p",
      "p"
    ],
    "protecting": [
      "p"
    ],
    "can": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "help": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "prevent": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "attacker": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "from": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "hijacking": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "using": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "posing": [
      "p"
    ],
    "as": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "strong",
      "li",
      "p"
    ],
    "legitimate": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "following": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p"
    ],
    "verify": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "handled": [
      "p"
    ],
    "securely": [
      "p"
    ],
    "identifiers": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "li",
      "ol",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "cannot": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "be": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "p"
    ],
    "guessed ensure": [
      "ol",
      "li",
      "p"
    ],
    "guessed": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "ids": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "meet": [
      "ol",
      "li",
      "p"
    ],
    "requirements": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "length": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "strong"
    ],
    "uses": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "long": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "e.g.": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "string": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "32.": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "triviality": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "randomly": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "generated": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "lifetime": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "application expires": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "inactive sessions": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "recycling": [
      "ol",
      "li",
      "ul",
      "li",
      "strong"
    ],
    "does": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "not": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "reuse": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "previously": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "sessions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "p"
    ],
    "users": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "invalidate": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "their": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "own": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "sessions ensure": [
      "ol",
      "li",
      "p"
    ],
    "uses resultdiscardingcookies to": [
      "ol",
      "li",
      "p"
    ],
    "allow": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "its": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "sent": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "over": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "encrypted": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "channels ensure": [
      "ol",
      "li",
      "p"
    ],
    "transmits": [
      "ol",
      "li",
      "p"
    ],
    "channels": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "although": [
      "ol",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "required": [
      "ol",
      "li",
      "p"
    ],
    "non-sensitive": [
      "ol",
      "li",
      "p"
    ],
    "transactions": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "it": [
      "ol",
      "li",
      "p"
    ],
    "mandatory": [
      "ol",
      "li",
      "p"
    ],
    "any": [
      "ol",
      "li",
      "p"
    ],
    "sensitive": [
      "ol",
      "li",
      "p"
    ],
    "in": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "em",
      "span"
    ],
    "nature": [
      "ol",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "the httponly flag": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "set": [
      "ol",
      "li",
      "p",
      "strong",
      "strong"
    ],
    "prevents": [
      "ol",
      "li",
      "p"
    ],
    "client": [
      "ol",
      "li",
      "p"
    ],
    "side": [
      "ol",
      "li",
      "p"
    ],
    "scripts": [
      "ol",
      "li",
      "p"
    ],
    "gaining": [
      "ol",
      "li",
      "p"
    ],
    "access": [
      "ol",
      "li",
      "p"
    ],
    "cookie": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "em",
      "span"
    ],
    "the secure flag": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "set the": [
      "ol",
      "li",
      "p"
    ],
    "\"secure\"": [
      "ol",
      "li",
      "p"
    ],
    "flag": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "em",
      "span"
    ],
    "forces": [
      "ol",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "li",
      "p"
    ],
    "ssl": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "invalidated": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "on": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "em",
      "span"
    ],
    "login": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "fixation": [
      "ol",
      "li",
      "p"
    ],
    "or": [
      "ol",
      "li",
      "p"
    ],
    "hijacking.": [
      "ol",
      "li",
      "p"
    ],
    "resultdiscardingcookies": [
      "i",
      "i"
    ],
    "httponly": [
      "em"
    ],
    "secure": [
      "em",
      "em",
      "p",
      "ol",
      "li",
      "p",
      "em",
      "em",
      "span"
    ],
    "fix": [
      "h1"
    ],
    "do": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "choose": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "identifiers use": [
      "ol",
      "li",
      "p"
    ],
    "feature": [
      "ol",
      "li",
      "p"
    ],
    "automatically": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "assigns": [
      "ol",
      "li",
      "p"
    ],
    "random": [
      "ol",
      "li",
      "p"
    ],
    "which": [
      "ol",
      "li",
      "p"
    ],
    "minimizes": [
      "ol",
      "li",
      "p"
    ],
    "risk": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "another": [
      "ol",
      "li",
      "p"
    ],
    "user's": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p"
    ],
    "id": [
      "ol",
      "li",
      "p"
    ],
    "invoke playapi.mvc.cookie.": [
      "ol",
      "li",
      "p"
    ],
    "identifier": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "well": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "logout": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "reused this": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "after": [
      "ol",
      "li",
      "p"
    ],
    "has": [
      "ol",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "li",
      "p"
    ],
    "call": [
      "ol",
      "li",
      "p"
    ],
    "generate": [
      "ol",
      "li",
      "p"
    ],
    "new": [
      "ol",
      "li",
      "p"
    ],
    "time-out": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "sessions set": [
      "ol",
      "li",
      "p"
    ],
    "expiration": [
      "ol",
      "li",
      "p"
    ],
    "time": [
      "ol",
      "li",
      "p"
    ],
    "helps": [
      "ol",
      "li",
      "p"
    ],
    "minimize": [
      "ol",
      "li",
      "p"
    ],
    "threat": [
      "ol",
      "li",
      "p"
    ],
    "giving": [
      "ol",
      "li",
      "p"
    ],
    "smaller": [
      "ol",
      "li",
      "p"
    ],
    "window": [
      "ol",
      "li",
      "p"
    ],
    "opportunity": [
      "ol",
      "li",
      "p"
    ],
    "depending": [
      "ol",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "li",
      "p"
    ],
    "timeout": [
      "ol",
      "li",
      "p"
    ],
    "anywhere": [
      "ol",
      "li",
      "p"
    ],
    "minutes": [
      "ol",
      "li",
      "p",
      "p"
    ],
    "terminate": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "sessions allowing": [
      "ol",
      "li",
      "p"
    ],
    "reduces": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "li",
      "p"
    ],
    "hijacked": [
      "ol",
      "li",
      "p"
    ],
    "use resultdiscardingcookies to": [
      "ol",
      "li",
      "p"
    ],
    "accomplish": [
      "ol",
      "li",
      "p"
    ],
    "channels mark": [
      "ol",
      "li",
      "p"
    ],
    "as secure": [
      "ol",
      "li",
      "p"
    ],
    "enable": [
      "ol",
      "li",
      "p",
      "em",
      "span"
    ],
    "setting": [
      "ol",
      "li",
      "p",
      "em",
      "span"
    ],
    "“applicationsession.secure=true”": [
      "ol",
      "li",
      "p",
      "em",
      "span"
    ],
    "“applicationconf”": [
      "ol",
      "li",
      "p",
      "em",
      "span"
    ],
    "file": [
      "ol",
      "li",
      "p",
      "em",
      "span"
    ],
    "send": [
      "ol",
      "li",
      "p"
    ],
    "unencrypted": [
      "ol",
      "li",
      "p"
    ],
    "made": [
      "ol",
      "li",
      "p"
    ],
    "much": [
      "ol",
      "li",
      "p"
    ],
    "easier": [
      "ol",
      "li",
      "p"
    ],
    "playapi.mvc.cookie.": [
      "i"
    ],
    "reused": [
      "strong"
    ],
    "note pci": [
      "p"
    ],
    "dss": [
      "p"
    ],
    "state": [
      "p"
    ],
    "idle": [
      "p"
    ],
    "should": [
      "p"
    ],
    "locked": [
      "p"
    ],
    "require": [
      "p"
    ],
    "password": [
      "p"
    ],
    "unlock": [
      "p"
    ],
    "note": [
      "strong"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix"
    ],
    "p": [
      "Scala and Play Framework 2.1.0+",
      "Ensure that the confidentiality of session cookies is protected.",
      "Session cookies are used by an application to identify the session associated with a particular user. Protecting session cookies can help prevent an attacker from hijacking the session and using the application posing as a legitimate user.",
      "Use the following steps to verify that your application's session cookies are handled securely:",
      "Verify that session identifiers cannot be guessed. Ensure that your application's session identifiers cannot be guessed by an attacker. Verify that your application's session IDs meet the following requirements:",
      "Verify that users can invalidate their own sessions. Ensure that your application uses result.discardingCookies to allow its users to invalidate their own sessions.",
      "Verify that session cookies are sent over encrypted channels. Ensure your application transmits session cookies over encrypted channels. Although this is not required for non-sensitive transactions, it is mandatory for any transactions that are sensitive in nature.",
      "Verify that session cookies have the HttpOnly flag set. This prevents client side scripts from gaining access to the cookie.",
      "Verify that session cookies have the Secure flag set. The \"Secure\" flag forces sessions cookies to be sent only over SSL.",
      "Verify that sessions are invalidated on login. This can help prevent session fixation (or hijacking).",
      "",
      "To secure session cookies:",
      "Do not allow users to choose their own session identifiers. Use Scala cookie feature to automatically assigns random IDs to its sessions which minimizes the risk of an attacker hijacking another user's session by using the same session ID. To use sessions in Scala, invoke play.api.mvc.Cookie.",
      "Invalidate the session identifier on login (as well as logout) to ensure session identifiers are not reused. This is necessary to prevent session hijacking. After the session has been invalidated, make a call to generate a new session identifier.",
      "Time-out sessions. Set an expiration time for sessions. This helps minimize the threat of session hijacking by giving an attacker a smaller window of opportunity. Depending on your application, an appropriate timeout can be anywhere from 10 to 20 minutes.",
      "",
      "Allow users to terminate their sessions. Allowing users to invalidate their sessions reduces the risk of session being hijacked. Use result.discardingCookies to accomplish this.",
      "Ensure cookies are sent over encrypted channels. Mark cookies sent over SSL as Secure. Use the  Enable Secure flag on the cookie, setting “application.session.secure=true” in the “application.conf” file. Do not send session cookies over unencrypted channels as session hijacking is made much easier.",
      "Note: PCI DSS requirements state that sessions that are idle for 15 minutes should be locked automatically and require the user's password to unlock.",
      ""
    ],
    "br": [
      "",
      ""
    ],
    "ol": [
      "Verify that session identifiers cannot be guessed. Ensure that your application's session identifiers cannot be guessed by an attacker. Verify that your application's session IDs meet the following requirements:\r\n      \r\n        \r\n          Length: Your application uses long session identifiers (e.g. string of length 32).\r\n        \r\n          Triviality: Your application uses randomly generated session identifiers.\r\n        \r\n          Lifetime: Your application expires inactive sessions.\r\n        \r\n          Recycling: Your application does not reuse previously used sessions.\r\n      \r\n    \r\n    \r\n      \r\n        Verify that users can invalidate their own sessions. Ensure that your application uses result.discardingCookies to allow its users to invalidate their own sessions.\r\n    \r\n    \r\n      \r\n        Verify that session cookies are sent over encrypted channels. Ensure your application transmits session cookies over encrypted channels. Although this is not required for non-sensitive transactions, it is mandatory for any transactions that are sensitive in nature.\r\n    \r\n    \r\n      \r\n        Verify that session cookies have the HttpOnly flag set. This prevents client side scripts from gaining access to the cookie.\r\n    \r\n    \r\n      \r\n        Verify that session cookies have the Secure flag set. The \"Secure\" flag forces sessions cookies to be sent only over SSL.\r\n    \r\n    \r\n      \r\n        Verify that sessions are invalidated on login. This can help prevent session fixation (or hijacking).",
      "Do not allow users to choose their own session identifiers. Use Scala cookie feature to automatically assigns random IDs to its sessions which minimizes the risk of an attacker hijacking another user's session by using the same session ID. To use sessions in Scala, invoke play.api.mvc.Cookie.\r\n    \r\n    \r\n      \r\n        Invalidate the session identifier on login (as well as logout) to ensure session identifiers are not reused. This is necessary to prevent session hijacking. After the session has been invalidated, make a call to generate a new session identifier.\r\n    \r\n    \r\n      \r\n      Time-out sessions. Set an expiration time for sessions. This helps minimize the threat of session hijacking by giving an attacker a smaller window of opportunity. Depending on your application, an appropriate timeout can be anywhere from 10 to 20 minutes.\r\n    \r\n      \r\n        Allow users to terminate their sessions. Allowing users to invalidate their sessions reduces the risk of session being hijacked. Use result.discardingCookies to accomplish this.\r\n    \r\n    \r\n      \r\n      Ensure cookies are sent over encrypted channels. Mark cookies sent over SSL as Secure. Use the  Enable Secure flag on the cookie, setting “application.session.secure=true” in the “application.conf” file. Do not send session cookies over unencrypted channels as session hijacking is made much easier."
    ],
    "li": [
      "Verify that session identifiers cannot be guessed. Ensure that your application's session identifiers cannot be guessed by an attacker. Verify that your application's session IDs meet the following requirements:\r\n      \r\n        \r\n          Length: Your application uses long session identifiers (e.g. string of length 32).\r\n        \r\n          Triviality: Your application uses randomly generated session identifiers.\r\n        \r\n          Lifetime: Your application expires inactive sessions.\r\n        \r\n          Recycling: Your application does not reuse previously used sessions.",
      "Length: Your application uses long session identifiers (e.g. string of length 32).",
      "Triviality: Your application uses randomly generated session identifiers.",
      "Lifetime: Your application expires inactive sessions.",
      "Recycling: Your application does not reuse previously used sessions.",
      "Verify that users can invalidate their own sessions. Ensure that your application uses result.discardingCookies to allow its users to invalidate their own sessions.",
      "Verify that session cookies are sent over encrypted channels. Ensure your application transmits session cookies over encrypted channels. Although this is not required for non-sensitive transactions, it is mandatory for any transactions that are sensitive in nature.",
      "Verify that session cookies have the HttpOnly flag set. This prevents client side scripts from gaining access to the cookie.",
      "Verify that session cookies have the Secure flag set. The \"Secure\" flag forces sessions cookies to be sent only over SSL.",
      "Verify that sessions are invalidated on login. This can help prevent session fixation (or hijacking).",
      "Do not allow users to choose their own session identifiers. Use Scala cookie feature to automatically assigns random IDs to its sessions which minimizes the risk of an attacker hijacking another user's session by using the same session ID. To use sessions in Scala, invoke play.api.mvc.Cookie.",
      "Invalidate the session identifier on login (as well as logout) to ensure session identifiers are not reused. This is necessary to prevent session hijacking. After the session has been invalidated, make a call to generate a new session identifier.",
      "Time-out sessions. Set an expiration time for sessions. This helps minimize the threat of session hijacking by giving an attacker a smaller window of opportunity. Depending on your application, an appropriate timeout can be anywhere from 10 to 20 minutes.",
      "Allow users to terminate their sessions. Allowing users to invalidate their sessions reduces the risk of session being hijacked. Use result.discardingCookies to accomplish this.",
      "Ensure cookies are sent over encrypted channels. Mark cookies sent over SSL as Secure. Use the  Enable Secure flag on the cookie, setting “application.session.secure=true” in the “application.conf” file. Do not send session cookies over unencrypted channels as session hijacking is made much easier."
    ],
    "strong": [
      "Verify that session identifiers cannot be guessed.",
      "Length",
      "Triviality",
      "Lifetime",
      "Recycling",
      "Verify that users can invalidate their own sessions.",
      "Verify that session cookies are sent over encrypted channels.",
      "Verify that session cookies have the HttpOnly flag set",
      "Verify that session cookies have the Secure flag set.",
      "Verify that sessions are invalidated on login",
      "Do not allow users to choose their own session identifiers.",
      "Invalidate the session identifier on login (as well as logout) to ensure session identifiers are not reused.",
      "Time-out sessions.",
      "Allow users to terminate their sessions.",
      "Ensure cookies are sent over encrypted channels.",
      "Note:"
    ],
    "ul": [
      "Length: Your application uses long session identifiers (e.g. string of length 32).\r\n        \r\n          Triviality: Your application uses randomly generated session identifiers.\r\n        \r\n          Lifetime: Your application expires inactive sessions.\r\n        \r\n          Recycling: Your application does not reuse previously used sessions."
    ],
    "i": [
      "result.discardingCookies",
      "play.api.mvc.Cookie.",
      "result.discardingCookies"
    ],
    "em": [
      "HttpOnly",
      "Secure",
      "Secure",
      "Secure",
      "Enable Secure flag on the cookie, setting “application.session.secure=true” in the “application.conf” file"
    ],
    "span": [
      "Enable Secure flag on the cookie, setting “application.session.secure=true” in the “application.conf” file"
    ]
  },
  "links": [],
  "html": "<h1>Applies To</h1>\r\n  <p>Scala and Play Framework 2.1.0+<br /></p>\r\n  <h1>What to Check For</h1>\r\n  <p>Ensure that the confidentiality of session cookies is protected.</p>\r\n  <h1>Why</h1>\r\n  <p>Session cookies are used by an application to identify the session associated with a particular user. Protecting session cookies can help prevent an attacker from hijacking the session and using the application posing as a legitimate user.</p>\r\n  <h1>How to Check</h1>\r\n  <p>Use the following steps to verify that your application's session cookies are handled securely:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that session identifiers cannot be guessed.&nbsp;</strong>Ensure that your application's session identifiers cannot be guessed by an attacker. Verify that your application's session IDs meet the following requirements:</p>\r\n      <ul>\r\n        <li>\r\n          <strong>Length</strong>: Your application uses long session identifiers (e.g. string of length 32).</li>\r\n        <li>\r\n          <strong>Triviality</strong>: Your application uses randomly generated session identifiers.</li>\r\n        <li>\r\n          <strong>Lifetime</strong>: Your application&nbsp;expires inactive&nbsp;sessions.</li>\r\n        <li>\r\n          <strong>Recycling</strong>: Your application does not reuse previously used sessions.</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that users can invalidate their own sessions.&nbsp;</strong>Ensure that your application uses&nbsp;<i>result.discardingCookies</i>&nbsp;to allow its users to invalidate their own sessions.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that session cookies are sent over encrypted channels.&nbsp;</strong>Ensure your application transmits session cookies over encrypted channels. Although this is not required for non-sensitive transactions, it is mandatory for any transactions that are sensitive in nature.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that session cookies have the&nbsp;<em>HttpOnly</em>&nbsp;flag set</strong>. This prevents client side scripts from gaining access to the cookie.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that session cookies have the&nbsp;<em>Secure</em>&nbsp;flag set.</strong>&nbsp;The \"<em>Secure</em>\" flag forces sessions cookies to be sent only over SSL.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that sessions are invalidated on login</strong>. This can help prevent session fixation (or hijacking).</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How to Fix</h1>\r\n  <p />\r\n  <p>To secure session cookies:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Do not allow users to choose their own session identifiers.&nbsp;</strong>Use Scala cookie feature to automatically assigns random IDs to its sessions which minimizes the risk of an attacker hijacking another user's session by using the same session ID. To use sessions in Scala, invoke&nbsp;<i>play.api.mvc.Cookie.</i></p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Invalidate the session identifier on login (as well as logout) to ensure session identifiers are not reused.</strong>&nbsp;This is necessary to prevent session hijacking. After the session has been invalidated, make a call to generate a new session identifier.</p>\r\n    </li>\r\n    <li>\r\n      <p />\r\n      <strong>Time-out sessions.&nbsp;</strong>Set an expiration time for sessions. This helps minimize the threat of session hijacking by giving an attacker a smaller window of opportunity. Depending on your application, an appropriate timeout can be anywhere from 10 to 20 minutes.<p /></li>\r\n    <li>\r\n      <p>\r\n        <strong>Allow users to terminate their sessions.&nbsp;</strong>Allowing users to invalidate their sessions reduces the risk of session being hijacked. Use&nbsp;<i>result.discardingCookies</i>&nbsp;to accomplish this.</p>\r\n    </li>\r\n    <li>\r\n      <p />\r\n      <strong>Ensure cookies are sent over encrypted channels.&nbsp;</strong>Mark cookies sent over SSL as&nbsp;<em>Secure</em>. Use the&nbsp; <em><span style=\"font-style: normal;\">Enable Secure flag on the cookie, setting “application.session.secure=true” in the “application.conf” file</span></em>. Do not send session cookies over unencrypted channels as session hijacking is made much easier.</li>\r\n  </ol>\r\n  <p>\r\n    <strong>Note:</strong>&nbsp;PCI DSS requirements state that sessions that are idle for 15 minutes should be locked automatically and require the user's password to unlock.</p>\r\n  <p />\r\n  <br />"
}