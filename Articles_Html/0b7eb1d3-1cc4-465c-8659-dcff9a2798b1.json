{
  "id": "0b7eb1d3-1cc4-465c-8659-dcff9a2798b1",
  "checksum": "ddb001560690f7504ad8b782c9659764a7e6c41a",
  "words": {
    "description": [
      "h2"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "software": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "allows": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "attacker": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "to": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "upload": [
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "or": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "transfer": [
      "p"
    ],
    "files": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "dangerous": [
      "p",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "types": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "that": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "can": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "automatically": [
      "p"
    ],
    "processed": [
      "p"
    ],
    "within": [
      "p"
    ],
    "product's": [
      "p"
    ],
    "environment": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "\"unrestricted": [
      "p"
    ],
    "file": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "title"
    ],
    "upload\"": [
      "p"
    ],
    "term": [
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "used": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "vulnerability": [
      "p"
    ],
    "databases": [
      "p"
    ],
    "and": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "elsewhere": [
      "p"
    ],
    "but": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "it": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "insufficiently": [
      "p"
    ],
    "precise": [
      "p"
    ],
    "phrase": [
      "p"
    ],
    "could": [
      "p",
      "p"
    ],
    "interpreted": [
      "p"
    ],
    "as": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "lack": [
      "p"
    ],
    "restrictions": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "on": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "size": [
      "p"
    ],
    "number": [
      "p"
    ],
    "uploaded": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "which": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "resource": [
      "p"
    ],
    "consumption": [
      "p"
    ],
    "issue": [
      "p"
    ],
    "discussion": [
      "h2"
    ],
    "you": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "may": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "think": [
      "p"
    ],
    "you're": [
      "p"
    ],
    "allowing": [
      "p"
    ],
    "uploads": [
      "p"
    ],
    "innocent": [
      "p",
      "p"
    ],
    "images": [
      "p",
      "p"
    ],
    "rather,": [
      "p"
    ],
    "won't": [
      "p"
    ],
    "damage": [
      "p"
    ],
    "your": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "system": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "-": [
      "p"
    ],
    "interweb's": [
      "p"
    ],
    "not": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "so": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "some": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "places.": [
      "p"
    ],
    "name": [
      "p"
    ],
    "contain": [
      "p"
    ],
    "extension": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "such": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "php": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "instead": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "gif,": [
      "p"
    ],
    "other": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "information": [
      "p",
      "h2",
      "ul",
      "li"
    ],
    "content": [
      "p"
    ],
    "type": [
      "p",
      "ol",
      "li",
      "p",
      "title"
    ],
    "cause": [
      "p"
    ],
    "server": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "treat": [
      "p"
    ],
    "image": [
      "p"
    ],
    "like": [
      "p"
    ],
    "big": [
      "p"
    ],
    "honkin'": [
      "p"
    ],
    "program": [
      "p"
    ],
    "seeing": [
      "p"
    ],
    "latest": [
      "p"
    ],
    "paparazzi": [
      "p"
    ],
    "shot": [
      "p"
    ],
    "favorite": [
      "p"
    ],
    "hollywood": [
      "p"
    ],
    "celebrity": [
      "p"
    ],
    "compromising": [
      "p"
    ],
    "position": [
      "p"
    ],
    "you'll": [
      "p"
    ],
    "one": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "whose": [
      "p"
    ],
    "gets": [
      "p"
    ],
    "compromised": [
      "p"
    ],
    "mitigation": [
      "h2",
      "p",
      "ol",
      "li",
      "p"
    ],
    "methods": [
      "p"
    ],
    "for": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ul",
      "li"
    ],
    "vulnerabilities": [
      "p",
      "ul",
      "li"
    ],
    "are": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "don't": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "let": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "user": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "specify": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "names": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "generate": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "own": [
      "ol",
      "li",
      "p"
    ],
    "filename": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "an": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "user-supplied": [
      "ol",
      "li",
      "p"
    ],
    "no": [
      "ol",
      "li",
      "p"
    ],
    "external": [
      "ol",
      "li",
      "p"
    ],
    "input": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "at": [
      "ol",
      "li",
      "p"
    ],
    "all": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "use": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "reference": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "maps": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "when": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "set": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "acceptable": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "objects": [
      "ol",
      "li",
      "p"
    ],
    "filenames": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "urls": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "limited": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "known": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "create": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "mapping": [
      "ol",
      "li",
      "p"
    ],
    "from": [
      "ol",
      "li",
      "p"
    ],
    "fixed": [
      "ol",
      "li",
      "p"
    ],
    "values": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "numeric": [
      "ol",
      "li",
      "p"
    ],
    "ids": [
      "ol",
      "li",
      "p"
    ],
    "actual": [
      "ol",
      "li",
      "p"
    ],
    "reject": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "inputs": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "store": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "outside": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "root": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "consider": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "storing": [
      "ol",
      "li",
      "p"
    ],
    "document": [
      "ol",
      "li",
      "p"
    ],
    "entirely": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "then": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "mechanisms": [
      "ol",
      "li",
      "p"
    ],
    "deliver": [
      "ol",
      "li",
      "p"
    ],
    "dynamically": [
      "ol",
      "li",
      "p"
    ],
    "assume": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "malicious": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "\"accept": [
      "ol",
      "li",
      "p"
    ],
    "good\"": [
      "ol",
      "li",
      "p"
    ],
    "validation": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong"
    ],
    "strategy": [
      "ol",
      "li",
      "p"
    ],
    "ie.,": [
      "ol",
      "li",
      "p"
    ],
    "whitelist": [
      "ol",
      "li",
      "p"
    ],
    "strictly": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "conform": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "specifications": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "any": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "does": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "transform": [
      "ol",
      "li",
      "p"
    ],
    "into": [
      "ol",
      "li",
      "p"
    ],
    "something": [
      "ol",
      "li",
      "p"
    ],
    "do": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "rely": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "exclusively": [
      "ol",
      "li",
      "p"
    ],
    "looking": [
      "ol",
      "li",
      "p"
    ],
    "malformed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "i.e.,": [
      "ol",
      "li",
      "p"
    ],
    "blacklist.": [
      "ol",
      "li",
      "p"
    ],
    "however": [
      "ol",
      "li",
      "p"
    ],
    "blacklists": [
      "ol",
      "li",
      "p"
    ],
    "useful": [
      "ol",
      "li",
      "p"
    ],
    "detecting": [
      "ol",
      "li",
      "p"
    ],
    "potential": [
      "ol",
      "li",
      "p"
    ],
    "attacks": [
      "ol",
      "li",
      "p"
    ],
    "determining": [
      "ol",
      "li",
      "p"
    ],
    "they": [
      "ol",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "li",
      "p"
    ],
    "rejected": [
      "ol",
      "li",
      "p"
    ],
    "outright": [
      "ol",
      "li",
      "p"
    ],
    "performing": [
      "ol",
      "li",
      "p"
    ],
    "potentially": [
      "ol",
      "li",
      "p"
    ],
    "relevant": [
      "ol",
      "li",
      "p"
    ],
    "properties": [
      "ol",
      "li",
      "p"
    ],
    "including": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "length": [
      "ol",
      "li",
      "p"
    ],
    "full": [
      "ol",
      "li",
      "p"
    ],
    "range": [
      "ol",
      "li",
      "p"
    ],
    "missing": [
      "ol",
      "li",
      "p"
    ],
    "extra": [
      "ol",
      "li",
      "p"
    ],
    "syntax": [
      "ol",
      "li",
      "p"
    ],
    "consistency": [
      "ol",
      "li",
      "p"
    ],
    "across": [
      "ol",
      "li",
      "p"
    ],
    "related": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "fields": [
      "ol",
      "li",
      "p"
    ],
    "conformance": [
      "ol",
      "li",
      "p"
    ],
    "business": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "rules": [
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "rule": [
      "ol",
      "li",
      "p"
    ],
    "logic": [
      "ol",
      "li",
      "p"
    ],
    "\"boat\"": [
      "ol",
      "li",
      "p"
    ],
    "syntactically": [
      "ol",
      "li",
      "p"
    ],
    "valid": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "because": [
      "ol",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "contains": [
      "ol",
      "li",
      "p"
    ],
    "alphanumeric": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "characters": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "if": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "expecting": [
      "ol",
      "li",
      "p"
    ],
    "colors": [
      "ol",
      "li",
      "p"
    ],
    "\"red\"": [
      "ol",
      "li",
      "p"
    ],
    "\"blue\"": [
      "ol",
      "li",
      "p"
    ],
    "limiting": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "help": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "restrict": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "introduction": [
      "ol",
      "li",
      "p"
    ],
    "unintended": [
      "ol",
      "li",
      "p"
    ],
    "extensions": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "white-list": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "define": [
      "ol",
      "li",
      "p"
    ],
    "very": [
      "ol",
      "li",
      "p"
    ],
    "allowable": [
      "ol",
      "li",
      "p"
    ],
    "end": [
      "ol",
      "li",
      "p"
    ],
    "these": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "possibility": [
      "ol",
      "li",
      "p"
    ],
    "xss": [
      "ol",
      "li",
      "p"
    ],
    "cwe-79)": [
      "ol",
      "li",
      "p"
    ],
    "before": [
      "ol",
      "li",
      "p"
    ],
    "allow": [
      "ol",
      "li",
      "p"
    ],
    "html": [
      "ol",
      "li",
      "p"
    ],
    "htm": [
      "ol",
      "li",
      "p"
    ],
    "ensure": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "servers": [
      "ol",
      "li",
      "p"
    ],
    "versions": [
      "ol",
      "li",
      "p"
    ],
    "apache": [
      "ol",
      "li",
      "p"
    ],
    "process": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "based": [
      "ol",
      "li",
      "p"
    ],
    "inner": [
      "ol",
      "li",
      "p"
    ],
    "\"filenamephp.gif\"": [
      "ol",
      "li",
      "p"
    ],
    "fed": [
      "ol",
      "li",
      "p"
    ],
    "interpreter": [
      "ol",
      "li",
      "p"
    ],
    "running": [
      "ol",
      "li",
      "p"
    ],
    "supports": [
      "ol",
      "li",
      "p"
    ],
    "case-insensitive": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "perform": [
      "ol",
      "li",
      "p"
    ],
    "evaluations": [
      "ol",
      "li",
      "p"
    ],
    "provided": [
      "ol",
      "li",
      "p"
    ],
    "server-side": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "security": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "controls": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "checks": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "performed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "client": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "side": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "duplicated": [
      "ol",
      "li",
      "p"
    ],
    "order": [
      "ol",
      "li",
      "p"
    ],
    "avoid": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "cwe-602": [
      "ol",
      "li",
      "p"
    ],
    "attackers": [
      "ol",
      "li",
      "p"
    ],
    "bypass": [
      "ol",
      "li",
      "p"
    ],
    "client-side": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "by": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "modifying": [
      "ol",
      "li",
      "p"
    ],
    "after": [
      "ol",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "li",
      "p"
    ],
    "changing": [
      "ol",
      "li",
      "p"
    ],
    "remove": [
      "ol",
      "li",
      "p"
    ],
    "modified": [
      "ol",
      "li",
      "p"
    ],
    "would": [
      "ol",
      "li",
      "p"
    ],
    "submitted": [
      "ol",
      "li",
      "p"
    ],
    "principle": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "least": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "privilege": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "run": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "using": [
      "ol",
      "li",
      "p"
    ],
    "lowest": [
      "ol",
      "li",
      "p"
    ],
    "privileges": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "required": [
      "ol",
      "li",
      "p"
    ],
    "accomplish": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "tasks": [
      "ol",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "li",
      "p"
    ],
    "isolated": [
      "ol",
      "li",
      "p"
    ],
    "accounts": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "li",
      "p",
      "title"
    ],
    "single": [
      "ol",
      "li",
      "p"
    ],
    "task": [
      "ol",
      "li",
      "p"
    ],
    "way": [
      "ol",
      "li",
      "p"
    ],
    "successful": [
      "ol",
      "li",
      "p"
    ],
    "attack": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "li",
      "p"
    ],
    "immediately": [
      "ol",
      "li",
      "p"
    ],
    "give": [
      "ol",
      "li",
      "p"
    ],
    "access": [
      "ol",
      "li",
      "p"
    ],
    "rest": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "li",
      "p"
    ],
    "database": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "applications": [
      "ol",
      "li",
      "p"
    ],
    "rarely": [
      "ol",
      "li",
      "p"
    ],
    "need": [
      "ol",
      "li",
      "p"
    ],
    "administrator": [
      "ol",
      "li",
      "p"
    ],
    "especially": [
      "ol",
      "li",
      "p"
    ],
    "day-to-day": [
      "ol",
      "li",
      "p"
    ],
    "operations": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sandbox": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "\"jail\"": [
      "ol",
      "li",
      "p"
    ],
    "similar": [
      "ol",
      "li",
      "p"
    ],
    "enforces": [
      "ol",
      "li",
      "p"
    ],
    "strict": [
      "ol",
      "li",
      "p"
    ],
    "boundaries": [
      "ol",
      "li",
      "p"
    ],
    "between": [
      "ol",
      "li",
      "p"
    ],
    "operating": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "effectively": [
      "ol",
      "li",
      "p"
    ],
    "accessed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "particular": [
      "ol",
      "li",
      "p"
    ],
    "directory": [
      "ol",
      "li",
      "p"
    ],
    "commands": [
      "ol",
      "li",
      "p"
    ],
    "executed": [
      "ol",
      "li",
      "p"
    ],
    "os-level": [
      "ol",
      "li",
      "p"
    ],
    "examples": [
      "ol",
      "li",
      "p"
    ],
    "include": [
      "ol",
      "li",
      "p"
    ],
    "unixchroot": [
      "ol",
      "li",
      "p"
    ],
    "jail": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "apparmor": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "selinux": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "general": [
      "ol",
      "li",
      "p"
    ],
    "managed": [
      "ol",
      "li",
      "p"
    ],
    "provide": [
      "ol",
      "li",
      "p"
    ],
    "protection": [
      "ol",
      "li",
      "p"
    ],
    "example\njava.io.filepermission": [
      "ol",
      "li",
      "p"
    ],
    "java": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "securitymanager": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "feasible": [
      "ol",
      "li",
      "p"
    ],
    "solution": [
      "ol",
      "li",
      "p"
    ],
    "limits": [
      "ol",
      "li",
      "p"
    ],
    "impact": [
      "ol",
      "li",
      "p"
    ],
    "application": [
      "ol",
      "li",
      "p"
    ],
    "still": [
      "ol",
      "li",
      "p"
    ],
    "subject": [
      "ol",
      "li",
      "p"
    ],
    "compromise": [
      "ol",
      "li",
      "p"
    ],
    "careful": [
      "ol",
      "li",
      "p"
    ],
    "cwe-243": [
      "ol",
      "li",
      "p"
    ],
    "weaknesses": [
      "ol",
      "li",
      "p"
    ],
    "jails\nnote:": [
      "ol",
      "li",
      "p"
    ],
    "effectiveness": [
      "ol",
      "li",
      "p"
    ],
    "depends": [
      "ol",
      "li",
      "p"
    ],
    "prevention": [
      "ol",
      "li",
      "p"
    ],
    "capabilities": [
      "ol",
      "li",
      "p"
    ],
    "specific": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "li",
      "p"
    ],
    "might": [
      "ol",
      "li",
      "p"
    ],
    "reduce": [
      "ol",
      "li",
      "p"
    ],
    "scope": [
      "ol",
      "li",
      "p"
    ],
    "restricting": [
      "ol",
      "li",
      "p"
    ],
    "certain": [
      "ol",
      "li",
      "p"
    ],
    "calls": [
      "ol",
      "li",
      "p"
    ],
    "portion": [
      "ol",
      "li",
      "p"
    ],
    "filenamephp.gif": [
      "em"
    ],
    "chroot": [
      "em"
    ],
    "javaio.filepermission": [
      "em"
    ],
    "note": [
      "strong"
    ],
    "additional": [
      "h2"
    ],
    "more": [
      "ul",
      "li"
    ],
    "about": [
      "ul",
      "li"
    ],
    "unrestricted": [
      "ul",
      "li",
      "title"
    ],
    "please": [
      "ul",
      "li"
    ],
    "seehttp://cwe.mitre.org/top25/index.html#cwe-434": [
      "ul",
      "li"
    ],
    "http//cwe.mitre.org/top25/index.html#cwe-434": [
      "a"
    ],
    "cwe-434": [
      "title"
    ]
  },
  "tags": {
    "h2": [
      "Description",
      "Discussion",
      "Mitigation",
      "Additional Information"
    ],
    "p": [
      "The software allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.",
      "The \"unrestricted file upload\" term is used in vulnerability databases and elsewhere, but it is insufficiently precise. The phrase could be interpreted as the lack of restrictions on the size or number of uploaded files, which is a resource consumption issue.",
      "You may think you're allowing uploads of innocent images (rather, images that won't damage your system - the Interweb's not so innocent in some places). But the name of the uploaded file could contain a dangerous extension such as .php instead of .gif, or\n other information (such as content type) may cause your server to treat the image like a big honkin' program. So, instead of seeing the latest paparazzi shot of your favorite Hollywood celebrity in a compromising position, you'll be the one whose server gets\n compromised.",
      "The mitigation methods for dangerous file upload vulnerabilities are:",
      "Don't let the user specify the file names of the uploaded files. Generate your own filename for an uploaded file instead of the user-supplied filename, so that no external input is used at all.",
      "Use reference maps. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.",
      "Store uploaded files outside of the web root. Consider storing the uploaded files outside of the web document root entirely. Then, use other mechanisms to deliver the files dynamically.",
      "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that\n they should be rejected outright. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and\n conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if you are expecting colors such as \"red\" or \"blue.\" For example, limiting filenames\n to alphanumeric characters can help to restrict the introduction of unintended file extensions.",
      "Use white-list input validation. Define a very limited set of allowable extensions and only generate filenames that end in these extensions. Consider the possibility of XSS (CWE-79) before you allow .html or .htm file types. Ensure that\n only one extension is used in the filename. Some web servers, including some versions of Apache, may process files based on inner extensions so that \"filename.php.gif\" is fed to the PHP interpreter. When running on a web server that supports case-insensitive\n filenames, ensure that you perform case-insensitive evaluations of the extensions that are provided.",
      "Use server-side security controls. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.",
      "Use the principle of least privilege. Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.",
      "Use a sandbox. Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\nchroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example,\njava.io.FilePermission in the Java SecurityManager allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\nNote: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed."
    ],
    "ol": [
      "Don't let the user specify the file names of the uploaded files. Generate your own filename for an uploaded file instead of the user-supplied filename, so that no external input is used at all.\n    \n    \n      \n        Use reference maps. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.\n    \n    \n      \n        Store uploaded files outside of the web root. Consider storing the uploaded files outside of the web document root entirely. Then, use other mechanisms to deliver the files dynamically.\n    \n    \n      \n        Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that\n they should be rejected outright. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and\n conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if you are expecting colors such as \"red\" or \"blue.\" For example, limiting filenames\n to alphanumeric characters can help to restrict the introduction of unintended file extensions.\n    \n    \n      \n        Use white-list input validation. Define a very limited set of allowable extensions and only generate filenames that end in these extensions. Consider the possibility of XSS (CWE-79) before you allow .html or .htm file types. Ensure that\n only one extension is used in the filename. Some web servers, including some versions of Apache, may process files based on inner extensions so that \"filename.php.gif\" is fed to the PHP interpreter. When running on a web server that supports case-insensitive\n filenames, ensure that you perform case-insensitive evaluations of the extensions that are provided.\n\n    \n    \n      \n        Use server-side security controls. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.\n    \n    \n      \n        Use the principle of least privilege. Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.\n    \n    \n      \n        Use a sandbox. Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\nchroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example,\njava.io.FilePermission in the Java SecurityManager allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\nNote: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed."
    ],
    "li": [
      "Don't let the user specify the file names of the uploaded files. Generate your own filename for an uploaded file instead of the user-supplied filename, so that no external input is used at all.",
      "Use reference maps. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.",
      "Store uploaded files outside of the web root. Consider storing the uploaded files outside of the web document root entirely. Then, use other mechanisms to deliver the files dynamically.",
      "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that\n they should be rejected outright. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and\n conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if you are expecting colors such as \"red\" or \"blue.\" For example, limiting filenames\n to alphanumeric characters can help to restrict the introduction of unintended file extensions.",
      "Use white-list input validation. Define a very limited set of allowable extensions and only generate filenames that end in these extensions. Consider the possibility of XSS (CWE-79) before you allow .html or .htm file types. Ensure that\n only one extension is used in the filename. Some web servers, including some versions of Apache, may process files based on inner extensions so that \"filename.php.gif\" is fed to the PHP interpreter. When running on a web server that supports case-insensitive\n filenames, ensure that you perform case-insensitive evaluations of the extensions that are provided.",
      "Use server-side security controls. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.",
      "Use the principle of least privilege. Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.",
      "Use a sandbox. Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\nchroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example,\njava.io.FilePermission in the Java SecurityManager allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\nNote: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed.",
      "For more information about unrestricted dangerous file upload vulnerabilities, please see\nhttp://cwe.mitre.org/top25/index.html#CWE-434"
    ],
    "strong": [
      "Don't let the user specify the file names of the uploaded files.",
      "Use reference maps.",
      "Store uploaded files outside of the web root.",
      "Assume all input is malicious.",
      "Use white-list input validation.",
      "Use server-side security controls.",
      "Use the principle of least privilege.",
      "Use a sandbox.",
      "Note:"
    ],
    "em": [
      "filename.php.gif",
      "chroot",
      "AppArmor",
      "SELinux",
      "java.io.FilePermission",
      "Java SecurityManager"
    ],
    "br": [
      ""
    ],
    "ul": [
      "For more information about unrestricted dangerous file upload vulnerabilities, please see\nhttp://cwe.mitre.org/top25/index.html#CWE-434"
    ],
    "a": [
      "http://cwe.mitre.org/top25/index.html#CWE-434"
    ]
  },
  "links": [
    {
      "href": "http://cwe.mitre.org/top25/index.html#CWE-434",
      "text": "http://cwe.mitre.org/top25/index.html#CWE-434"
    }
  ],
  "html": "<h2>Description</h2>\n  <p>The software allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.</p>\n  <p>The \"unrestricted file upload\" term is used in vulnerability databases and elsewhere, but it is insufficiently precise. The phrase could be interpreted as the lack of restrictions on the size or number of uploaded files, which is a resource consumption issue.</p>\n  <h2>Discussion</h2>\n  <p>You may think you're allowing uploads of innocent images (rather, images that won't damage your system - the Interweb's not so innocent in some places). But the name of the uploaded file could contain a dangerous extension such as .php instead of .gif, or\n other information (such as content type) may cause your server to treat the image like a big honkin' program. So, instead of seeing the latest paparazzi shot of your favorite Hollywood celebrity in a compromising position, you'll be the one whose server gets\n compromised.</p>\n  <h2>Mitigation</h2>\n  <p>The mitigation methods for dangerous file upload vulnerabilities are:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Don't let the user specify the file names of the uploaded files.</strong> Generate your own filename for an uploaded file instead of the user-supplied filename, so that no external input is used at all.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use reference maps.</strong> When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Store uploaded files outside of the web root.</strong> Consider storing the uploaded files outside of the web document root entirely. Then, use other mechanisms to deliver the files dynamically.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Assume all input is malicious.</strong> Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that\n they should be rejected outright. When performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and\n conformance to business rules. As an example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if you are expecting colors such as \"red\" or \"blue.\" For example, limiting filenames\n to alphanumeric characters can help to restrict the introduction of unintended file extensions.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use white-list input validation.</strong> Define a very limited set of allowable extensions and only generate filenames that end in these extensions. Consider the possibility of XSS (CWE-79) before you allow .html or .htm file types. Ensure that\n only one extension is used in the filename. Some web servers, including some versions of Apache, may process files based on inner extensions so that \"<em>filename.php.gif</em>\" is fed to the PHP interpreter. When running on a web server that supports case-insensitive\n filenames, ensure that you perform case-insensitive evaluations of the extensions that are provided.\n</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use server-side security controls.</strong> For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use the principle of least privilege.</strong> Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use a sandbox.</strong> Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\n<em>chroot</em> jail, <em>AppArmor</em>, and <em>SELinux</em>. In general, managed code may provide some protection. For example,\n<em>java.io.FilePermission</em> in the <em>Java SecurityManager</em> allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\n<br /><strong>Note:</strong> The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed.</p>\n    </li>\n  </ol>\n  <h2>Additional Information</h2>\n  <ul>\n    <li>For more information about unrestricted dangerous file upload vulnerabilities, please see\n<a href=\"http://cwe.mitre.org/top25/index.html#CWE-434\">http://cwe.mitre.org/top25/index.html#CWE-434</a></li>\n  </ul>"
}