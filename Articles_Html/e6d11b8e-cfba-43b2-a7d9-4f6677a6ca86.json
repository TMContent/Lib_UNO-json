{
  "id": "e6d11b8e-cfba-43b2-a7d9-4f6677a6ca86",
  "checksum": "4bb094cf2a97a0562174b1b22fd66b02ea0c212f",
  "words": {
    "0": [
      "p"
    ],
    "1": [
      "ol",
      "li",
      "p"
    ],
    "2": [
      "ol",
      "li",
      "p"
    ],
    "description": [
      "h2"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "software": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "uses": [
      "p"
    ],
    "external": [
      "p"
    ],
    "input": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "to": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "title"
    ],
    "construct": [
      "p"
    ],
    "a": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "title",
      "title"
    ],
    "pathname": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "title"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "is": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "intended": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "identify": [
      "p"
    ],
    "file": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "or": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "directory": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "located": [
      "p"
    ],
    "underneath": [
      "p"
    ],
    "restricted": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "parent": [
      "p",
      "p"
    ],
    "but": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "does": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "not": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "properly": [
      "p"
    ],
    "neutralize": [
      "p"
    ],
    "special": [
      "p",
      "p",
      "p"
    ],
    "elements": [
      "p",
      "p",
      "p"
    ],
    "within": [
      "p",
      "p",
      "p"
    ],
    "can": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "cause": [
      "p",
      "p"
    ],
    "resolve": [
      "p"
    ],
    "location": [
      "p",
      "p",
      "p"
    ],
    "outside": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "of": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "title"
    ],
    "many": [
      "p",
      "p"
    ],
    "operations": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "are": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "take": [
      "p"
    ],
    "place": [
      "p"
    ],
    "by": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "using": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "such": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "as": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "\".\"": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "\"/\"": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "separators": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "attackers": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "escape": [
      "p"
    ],
    "access": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "files": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "directories": [
      "p"
    ],
    "elsewhere": [
      "p"
    ],
    "on": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "system": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "one": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "most": [
      "p",
      "p"
    ],
    "common": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "\"./\"": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "sequence": [
      "p"
    ],
    "which": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "in": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "modern": [
      "p"
    ],
    "operating": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "systems": [
      "p"
    ],
    "interpreted": [
      "p"
    ],
    "current": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "this": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "referred": [
      "p",
      "p"
    ],
    "relative": [
      "p"
    ],
    "path": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li"
    ],
    "traversal": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "also": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "covers": [
      "p"
    ],
    "use": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "absolute": [
      "p",
      "p"
    ],
    "pathnames": [
      "p"
    ],
    "\"/usr/local/bin\"": [
      "p"
    ],
    "may": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p"
    ],
    "be": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "useful": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "accessing": [
      "p"
    ],
    "unexpected": [
      "p"
    ],
    "/usr/local/bin": [
      "em"
    ],
    "programming": [
      "p"
    ],
    "languages": [
      "p"
    ],
    "injection": [
      "p",
      "p"
    ],
    "null": [
      "p",
      "p"
    ],
    "byte": [
      "p"
    ],
    "nul": [
      "p"
    ],
    "allow": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "an": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "attacker": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "truncate": [
      "p"
    ],
    "generated": [
      "p"
    ],
    "filename": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "widen": [
      "p"
    ],
    "scope": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "attack": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "for": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li"
    ],
    "example": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "add": [
      "p"
    ],
    "\"txt\"": [
      "p"
    ],
    "any": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "thus": [
      "p",
      "p"
    ],
    "limiting": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "text": [
      "p"
    ],
    "effectively": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "remove": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "restriction": [
      "p"
    ],
    "discussion": [
      "h2"
    ],
    "while": [
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "data": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "often": [
      "p"
    ],
    "exchanged": [
      "p"
    ],
    "sometimes": [
      "p"
    ],
    "you": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "don't": [
      "p"
    ],
    "intend": [
      "p"
    ],
    "expose": [
      "p"
    ],
    "every": [
      "p"
    ],
    "your": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "doing": [
      "p"
    ],
    "so": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "when": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "outsider's": [
      "p"
    ],
    "constructing": [
      "p"
    ],
    "resulting": [
      "p"
    ],
    "could": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "point": [
      "p"
    ],
    "combine": [
      "p"
    ],
    "multiple": [
      "p"
    ],
    "similar": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sequences": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "navigate": [
      "p"
    ],
    "out": [
      "p"
    ],
    "into": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "rest": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "detection": [
      "h2"
    ],
    "automated": [
      "p"
    ],
    "techniques": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "find": [
      "p"
    ],
    "areas": [
      "p"
    ],
    "where": [
      "p"
    ],
    "weaknesses": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "exist": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "however": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "tuning": [
      "p"
    ],
    "customization": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "required": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "de-prioritize": [
      "p"
    ],
    "path-traversal": [
      "p"
    ],
    "problems": [
      "p"
    ],
    "only": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "exploitable": [
      "p"
    ],
    "software's": [
      "p"
    ],
    "administrator": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "-": [
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "other": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "privileged": [
      "p"
    ],
    "users": [
      "p"
    ],
    "potentially": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "valid": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "behavior": [
      "p"
    ],
    "at": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "worst": [
      "p"
    ],
    "bug": [
      "p"
    ],
    "instead": [
      "p"
    ],
    "vulnerability": [
      "p"
    ],
    "manual": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "white": [
      "p"
    ],
    "box": [
      "p"
    ],
    "able": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "provide": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "sufficient": [
      "p"
    ],
    "code": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "coverage": [
      "p"
    ],
    "reduction": [
      "p"
    ],
    "false": [
      "p"
    ],
    "positives": [
      "p"
    ],
    "if": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "all": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "assessed": [
      "p"
    ],
    "limited": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "time": [
      "p"
    ],
    "constraints": [
      "p"
    ],
    "mitigation": [
      "h2",
      "p",
      "ol",
      "li",
      "p"
    ],
    "following": [
      "p"
    ],
    "methods": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "vulnerabilities": [
      "p",
      "ul",
      "li"
    ],
    "available": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "assume": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "malicious": [
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "\"accept": [
      "ol",
      "li",
      "p"
    ],
    "known": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "good\"": [
      "ol",
      "li",
      "p"
    ],
    "validation": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "strategy": [
      "ol",
      "li",
      "p"
    ],
    "ie.,": [
      "ol",
      "li",
      "p"
    ],
    "whitelist": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "acceptable": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "inputs": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "strictly": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "conform": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "specifications": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "reject": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "transform": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "something": [
      "ol",
      "li",
      "p"
    ],
    "does\nwhen": [
      "ol",
      "li",
      "p"
    ],
    "performing": [
      "ol",
      "li",
      "p"
    ],
    "consider": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "relevant": [
      "ol",
      "li",
      "p"
    ],
    "properties": [
      "ol",
      "li",
      "p"
    ],
    "including": [
      "ol",
      "li",
      "p"
    ],
    "length": [
      "ol",
      "li",
      "p"
    ],
    "type": [
      "ol",
      "li",
      "p"
    ],
    "full": [
      "ol",
      "li",
      "p"
    ],
    "range": [
      "ol",
      "li",
      "p"
    ],
    "values": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "missing": [
      "ol",
      "li",
      "p"
    ],
    "extra": [
      "ol",
      "li",
      "p"
    ],
    "syntax": [
      "ol",
      "li",
      "p"
    ],
    "consistency": [
      "ol",
      "li",
      "p"
    ],
    "across": [
      "ol",
      "li",
      "p"
    ],
    "related": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "fields": [
      "ol",
      "li",
      "p"
    ],
    "conformance": [
      "ol",
      "li",
      "p"
    ],
    "business": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "rules": [
      "ol",
      "li",
      "p"
    ],
    "rule": [
      "ol",
      "li",
      "p"
    ],
    "logic": [
      "ol",
      "li",
      "p"
    ],
    "\"boat\"": [
      "ol",
      "li",
      "p"
    ],
    "syntactically": [
      "ol",
      "li",
      "p"
    ],
    "because": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "contains": [
      "ol",
      "li",
      "p"
    ],
    "alphanumeric": [
      "ol",
      "li",
      "p"
    ],
    "characters": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "expected": [
      "ol",
      "li",
      "p"
    ],
    "contain": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "colors": [
      "ol",
      "li",
      "p"
    ],
    "\"red\"": [
      "ol",
      "li",
      "p"
    ],
    "\"blue\"": [
      "ol",
      "li",
      "p"
    ],
    "white-list": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "do": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "strong"
    ],
    "rely": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p"
    ],
    "exclusively": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "looking": [
      "ol",
      "li",
      "p"
    ],
    "malformed": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "i.e.,": [
      "ol",
      "li",
      "p"
    ],
    "blacklist.": [
      "ol",
      "li",
      "p"
    ],
    "blacklist": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "likely": [
      "ol",
      "li",
      "p"
    ],
    "miss": [
      "ol",
      "li",
      "p"
    ],
    "least": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "undesirable": [
      "ol",
      "li",
      "p"
    ],
    "especially": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "code's": [
      "ol",
      "li",
      "p"
    ],
    "environment": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "changes": [
      "ol",
      "li",
      "p"
    ],
    "give": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "enough": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "room": [
      "ol",
      "li",
      "p"
    ],
    "bypass": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "blacklists": [
      "ol",
      "li",
      "p"
    ],
    "detecting": [
      "ol",
      "li",
      "p"
    ],
    "potential": [
      "ol",
      "li",
      "p"
    ],
    "attacks": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "determining": [
      "ol",
      "li",
      "p"
    ],
    "they": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "should": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "rejected": [
      "ol",
      "li",
      "p"
    ],
    "outright": [
      "ol",
      "li",
      "p"
    ],
    "validating": [
      "ol",
      "li",
      "p"
    ],
    "filenames": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "stringent": [
      "ol",
      "li",
      "p"
    ],
    "whitelists": [
      "ol",
      "li",
      "p"
    ],
    "limit": [
      "ol",
      "li",
      "p"
    ],
    "character": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "set": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "used": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "feasible": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "single": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "\"\"": [
      "ol",
      "li",
      "p"
    ],
    "avoid": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "cwe-23": [
      "ol",
      "li",
      "p"
    ],
    "exclude": [
      "ol",
      "li",
      "p"
    ],
    "cwe-36": [
      "ol",
      "li",
      "p"
    ],
    "allowable": [
      "ol",
      "li",
      "p"
    ],
    "extensions": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "help": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "cwe-434": [
      "ol",
      "li",
      "p"
    ],
    "filtering": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "mechanism": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "removes": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "dangerous": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "equivalent": [
      "ol",
      "li",
      "p"
    ],
    "incomplete": [
      "ol",
      "li",
      "p"
    ],
    "cwe-184).": [
      "ol",
      "li",
      "p"
    ],
    "insufficient": [
      "ol",
      "li",
      "p"
    ],
    "protection": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "filesystem": [
      "ol",
      "li",
      "p"
    ],
    "supports": [
      "ol",
      "li",
      "p"
    ],
    "\"\\\"": [
      "ol",
      "li",
      "p"
    ],
    "separator": [
      "ol",
      "li",
      "p"
    ],
    "another": [
      "ol",
      "li",
      "p"
    ],
    "possible": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "error": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "occur": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "applied": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "way": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "still": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "produces": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "cwe-182).": [
      "ol",
      "li",
      "p"
    ],
    "removed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "from": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "\"../...//\"": [
      "ol",
      "li",
      "p"
    ],
    "string": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "sequential": [
      "ol",
      "li",
      "p"
    ],
    "fashion": [
      "ol",
      "li",
      "p"
    ],
    "two": [
      "ol",
      "li",
      "p"
    ],
    "instances": [
      "ol",
      "li",
      "p"
    ],
    "would": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "original": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "remaining": [
      "ol",
      "li",
      "p"
    ],
    "form": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "server-side": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "security": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "controls": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "checks": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "performed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "client": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "side": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "ensure": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "these": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "duplicated": [
      "ol",
      "li",
      "p"
    ],
    "server": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "order": [
      "ol",
      "li",
      "p"
    ],
    "cwe-602": [
      "ol",
      "li",
      "p"
    ],
    "client-side": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "modifying": [
      "ol",
      "li",
      "p"
    ],
    "after": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "have": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "been": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "changing": [
      "ol",
      "li",
      "p"
    ],
    "entirely": [
      "ol",
      "li",
      "p"
    ],
    "then": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "modified": [
      "ol",
      "li",
      "p"
    ],
    "submitted": [
      "ol",
      "li",
      "p"
    ],
    "canonicalize": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "decoded": [
      "ol",
      "li",
      "p"
    ],
    "canonicalized": [
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "ol",
      "li",
      "p"
    ],
    "internal": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "representation": [
      "ol",
      "li",
      "p"
    ],
    "before": [
      "ol",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "validated": [
      "ol",
      "li",
      "p"
    ],
    "cwe-180).": [
      "ol",
      "li",
      "p"
    ],
    "make": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "sure": [
      "ol",
      "li",
      "p"
    ],
    "application": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p"
    ],
    "decode": [
      "ol",
      "li",
      "p"
    ],
    "same": [
      "ol",
      "li",
      "p"
    ],
    "twice": [
      "ol",
      "li",
      "p"
    ],
    "cwe-174).": [
      "ol",
      "li",
      "p"
    ],
    "errors": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "schemes": [
      "ol",
      "li",
      "p"
    ],
    "introducing": [
      "ol",
      "li",
      "p"
    ],
    "checked": [
      "ol",
      "li",
      "p"
    ],
    "built-in": [
      "ol",
      "li",
      "p"
    ],
    "canonicalization": [
      "ol",
      "li",
      "p"
    ],
    "function": [
      "ol",
      "li",
      "p"
    ],
    "realpath)": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "em",
      "li",
      "em",
      "li",
      "em"
    ],
    "c": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "canonical": [
      "ol",
      "li",
      "p"
    ],
    "version": [
      "ol",
      "li",
      "p"
    ],
    "symbolic": [
      "ol",
      "li",
      "p"
    ],
    "links": [
      "ol",
      "li",
      "p"
    ],
    "cwe-23,": [
      "ol",
      "li",
      "p"
    ],
    "cwe-59.": [
      "ol",
      "li",
      "p"
    ],
    "includes": [
      "ol",
      "li",
      "p"
    ],
    "getcanonicalpath)": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "java": [
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "p",
      "em"
    ],
    "getfullpath)": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "aspnet": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "abs_path)": [
      "ol",
      "li",
      "ul",
      "li",
      "em"
    ],
    "perl": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "php": [
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "secure": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "framework": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "vetted": [
      "ol",
      "li",
      "p"
    ],
    "library": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "weakness": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "provides": [
      "ol",
      "li",
      "p"
    ],
    "constructs": [
      "ol",
      "li",
      "p"
    ],
    "easier": [
      "ol",
      "li",
      "p"
    ],
    "optional)": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "web": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "firewall": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "detect": [
      "ol",
      "li",
      "p"
    ],
    "against": [
      "ol",
      "li",
      "p"
    ],
    "beneficial": [
      "ol",
      "li",
      "p"
    ],
    "cases": [
      "ol",
      "li",
      "p"
    ],
    "cannot": [
      "ol",
      "li",
      "p"
    ],
    "fixed": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "controlled": [
      "ol",
      "li",
      "p"
    ],
    "third": [
      "ol",
      "li",
      "p"
    ],
    "party,": [
      "ol",
      "li",
      "p"
    ],
    "emergency": [
      "ol",
      "li",
      "p"
    ],
    "prevention": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "measure": [
      "ol",
      "li",
      "p"
    ],
    "more": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "comprehensive": [
      "ol",
      "li",
      "p"
    ],
    "assurance": [
      "ol",
      "li",
      "p"
    ],
    "measures": [
      "ol",
      "li",
      "p"
    ],
    "defense": [
      "ol",
      "li",
      "p"
    ],
    "depth\nnote:": [
      "ol",
      "li",
      "p"
    ],
    "might": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "cover": [
      "ol",
      "li",
      "p"
    ],
    "vectors": [
      "ol",
      "li",
      "p"
    ],
    "addition": [
      "ol",
      "li",
      "p"
    ],
    "processed": [
      "ol",
      "li",
      "p"
    ],
    "component": [
      "ol",
      "li",
      "p"
    ],
    "receives": [
      "ol",
      "li",
      "p"
    ],
    "those": [
      "ol",
      "li",
      "p"
    ],
    "depending": [
      "ol",
      "li",
      "p"
    ],
    "functionality": [
      "ol",
      "li",
      "p"
    ],
    "inadvertently": [
      "ol",
      "li",
      "p"
    ],
    "modify": [
      "ol",
      "li",
      "p"
    ],
    "legitimate": [
      "ol",
      "li",
      "p"
    ],
    "requests": [
      "ol",
      "li",
      "p"
    ],
    "finally": [
      "ol",
      "li",
      "p"
    ],
    "some": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "effort": [
      "ol",
      "li",
      "p"
    ],
    "principle": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "privilege": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "run": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "lowest": [
      "ol",
      "li",
      "p"
    ],
    "privileges": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "accomplish": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "tasks": [
      "ol",
      "li",
      "p"
    ],
    "create": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "isolated": [
      "ol",
      "li",
      "p"
    ],
    "accounts": [
      "ol",
      "li",
      "p"
    ],
    "with": [
      "ol",
      "li",
      "p"
    ],
    "task": [
      "ol",
      "li",
      "p"
    ],
    "successful": [
      "ol",
      "li",
      "p"
    ],
    "immediately": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "li",
      "p"
    ],
    "database": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "applications": [
      "ol",
      "li",
      "p"
    ],
    "rarely": [
      "ol",
      "li",
      "p"
    ],
    "need": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "day-to-day": [
      "ol",
      "li",
      "p"
    ],
    "reference": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "maps": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "objects": [
      "ol",
      "li",
      "p"
    ],
    "urls": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "mapping": [
      "ol",
      "li",
      "p"
    ],
    "numeric": [
      "ol",
      "li",
      "p"
    ],
    "ids": [
      "ol",
      "li",
      "p"
    ],
    "actual": [
      "ol",
      "li",
      "p"
    ],
    "id": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "map": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "\"inboxtxt\"": [
      "ol",
      "li",
      "p"
    ],
    "\"profiletxt\".": [
      "ol",
      "li",
      "p"
    ],
    "features": [
      "ol",
      "li",
      "p"
    ],
    "theesapi": [
      "ol",
      "li",
      "p"
    ],
    "accessreferencemap": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "capability": [
      "ol",
      "li",
      "p"
    ],
    "sandbox": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "\"jail\"": [
      "ol",
      "li",
      "p"
    ],
    "enforces": [
      "ol",
      "li",
      "p"
    ],
    "strict": [
      "ol",
      "li",
      "p"
    ],
    "boundaries": [
      "ol",
      "li",
      "p"
    ],
    "between": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "process": [
      "ol",
      "li",
      "p"
    ],
    "restrict": [
      "ol",
      "li",
      "p"
    ],
    "accessed": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "particular": [
      "ol",
      "li",
      "p"
    ],
    "commands": [
      "ol",
      "li",
      "p"
    ],
    "executed": [
      "ol",
      "li",
      "p"
    ],
    "os-level": [
      "ol",
      "li",
      "p"
    ],
    "examples": [
      "ol",
      "li",
      "p"
    ],
    "include": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "unixchroot": [
      "ol",
      "li",
      "p"
    ],
    "jail": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "apparmor": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "selinux": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "general": [
      "ol",
      "li",
      "p"
    ],
    "managed": [
      "ol",
      "li",
      "p"
    ],
    "example\njava.io.filepermission": [
      "ol",
      "li",
      "p"
    ],
    "securitymanager": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "allows": [
      "ol",
      "li",
      "p"
    ],
    "specify": [
      "ol",
      "li",
      "p"
    ],
    "restrictions": [
      "ol",
      "li",
      "p"
    ],
    "solution": [
      "ol",
      "li",
      "p"
    ],
    "limits": [
      "ol",
      "li",
      "p"
    ],
    "impact": [
      "ol",
      "li",
      "p"
    ],
    "subject": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "compromise": [
      "ol",
      "li",
      "p"
    ],
    "careful": [
      "ol",
      "li",
      "p"
    ],
    "cwe-243": [
      "ol",
      "li",
      "p"
    ],
    "jails\nnote:": [
      "ol",
      "li",
      "p"
    ],
    "effectiveness": [
      "ol",
      "li",
      "p"
    ],
    "depends": [
      "ol",
      "li",
      "p"
    ],
    "capabilities": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "specific": [
      "ol",
      "li",
      "p"
    ],
    "reduce": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "restricting": [
      "ol",
      "li",
      "p"
    ],
    "certain": [
      "ol",
      "li",
      "p"
    ],
    "calls": [
      "ol",
      "li",
      "p"
    ],
    "portion": [
      "ol",
      "li",
      "p"
    ],
    "store": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "root": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "utility": [
      "ol",
      "li",
      "p"
    ],
    "document": [
      "ol",
      "li",
      "p"
    ],
    "otherwise": [
      "ol",
      "li",
      "p"
    ],
    "them": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "separate": [
      "ol",
      "li",
      "p"
    ],
    "server's": [
      "ol",
      "li",
      "p"
    ],
    "control": [
      "ol",
      "li",
      "p"
    ],
    "prevent": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong"
    ],
    "directly": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "requesting": [
      "ol",
      "li",
      "p"
    ],
    "practice": [
      "ol",
      "li",
      "p"
    ],
    "define": [
      "ol",
      "li",
      "p"
    ],
    "constant": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p"
    ],
    "each": [
      "ol",
      "li",
      "p"
    ],
    "calling": [
      "ol",
      "li",
      "p"
    ],
    "program": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "check": [
      "ol",
      "li",
      "p"
    ],
    "existence": [
      "ol",
      "li",
      "p"
    ],
    "library/include": [
      "ol",
      "li",
      "p"
    ],
    "was": [
      "ol",
      "li",
      "p"
    ],
    "requested": [
      "ol",
      "li",
      "p"
    ],
    "exit": [
      "ol",
      "li",
      "p"
    ],
    "significantly": [
      "ol",
      "li",
      "p"
    ],
    "reduces": [
      "ol",
      "li",
      "p"
    ],
    "chance": [
      "ol",
      "li",
      "p"
    ],
    "mechanisms": [
      "ol",
      "li",
      "p"
    ],
    "base": [
      "ol",
      "li",
      "p"
    ],
    "surface": [
      "ol",
      "li",
      "p"
    ],
    "information": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "h2",
      "ul",
      "li"
    ],
    "disclosure": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "messages": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong"
    ],
    "minimal": [
      "ol",
      "li",
      "p"
    ],
    "details": [
      "ol",
      "li",
      "p"
    ],
    "audience": [
      "ol",
      "li",
      "p"
    ],
    "nobody": [
      "ol",
      "li",
      "p"
    ],
    "else": [
      "ol",
      "li",
      "p"
    ],
    "strike": [
      "ol",
      "li",
      "p"
    ],
    "balance": [
      "ol",
      "li",
      "p"
    ],
    "too": [
      "ol",
      "li",
      "p"
    ],
    "cryptic": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "necessarily": [
      "ol",
      "li",
      "p"
    ],
    "reveal": [
      "ol",
      "li",
      "p"
    ],
    "were": [
      "ol",
      "li",
      "p"
    ],
    "determine": [
      "ol",
      "li",
      "p"
    ],
    "detailed": [
      "ol",
      "li",
      "p"
    ],
    "refine": [
      "ol",
      "li",
      "p"
    ],
    "increase": [
      "ol",
      "li",
      "p"
    ],
    "chances": [
      "ol",
      "li",
      "p"
    ],
    "success\nif": [
      "ol",
      "li",
      "p"
    ],
    "must": [
      "ol",
      "li",
      "p"
    ],
    "tracked": [
      "ol",
      "li",
      "p"
    ],
    "detail": [
      "ol",
      "li",
      "p"
    ],
    "capture": [
      "ol",
      "li",
      "p"
    ],
    "log": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "what": [
      "ol",
      "li",
      "p"
    ],
    "viewed": [
      "ol",
      "li",
      "p"
    ],
    "recording": [
      "ol",
      "li",
      "p"
    ],
    "highly": [
      "ol",
      "li",
      "p"
    ],
    "sensitive": [
      "ol",
      "li",
      "p"
    ],
    "passwords": [
      "ol",
      "li",
      "p"
    ],
    "inconsistent": [
      "ol",
      "li",
      "p"
    ],
    "messaging": [
      "ol",
      "li",
      "p"
    ],
    "accidentally": [
      "ol",
      "li",
      "p"
    ],
    "tip": [
      "ol",
      "li",
      "p"
    ],
    "off": [
      "ol",
      "li",
      "p"
    ],
    "about": [
      "ol",
      "li",
      "p",
      "ul",
      "li"
    ],
    "state": [
      "ol",
      "li",
      "p"
    ],
    "whether": [
      "ol",
      "li",
      "p"
    ],
    "username": [
      "ol",
      "li",
      "p"
    ],
    "context": [
      "ol",
      "li",
      "p"
    ],
    "disclose": [
      "ol",
      "li",
      "p"
    ],
    "craft": [
      "ol",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "li",
      "p"
    ],
    "strings": [
      "ol",
      "li",
      "p"
    ],
    "move": [
      "ol",
      "li",
      "p"
    ],
    "through": [
      "ol",
      "li",
      "p"
    ],
    "hierarchy": [
      "ol",
      "li",
      "p"
    ],
    "register_globals": [
      "ol",
      "li",
      "p",
      "strong",
      "em",
      "em"
    ],
    "configure": [
      "ol",
      "li",
      "p"
    ],
    "useregister_globals.": [
      "ol",
      "li",
      "p"
    ],
    "during": [
      "ol",
      "li",
      "p"
    ],
    "implementation": [
      "ol",
      "li",
      "p"
    ],
    "develop": [
      "ol",
      "li",
      "p"
    ],
    "feature": [
      "ol",
      "li",
      "p"
    ],
    "wary": [
      "ol",
      "li",
      "p"
    ],
    "implementing": [
      "ol",
      "li",
      "p"
    ],
    "aregister_globals": [
      "ol",
      "li",
      "p"
    ],
    "emulation": [
      "ol",
      "li",
      "p"
    ],
    "cwe-95": [
      "ol",
      "li",
      "p"
    ],
    "cwe-621": [
      "ol",
      "li",
      "p"
    ],
    "issues": [
      "ol",
      "li",
      "p"
    ],
    "note": [
      "strong",
      "strong"
    ],
    "inboxtxt": [
      "em"
    ],
    "profiletxt": [
      "em"
    ],
    "esapi": [
      "em"
    ],
    "chroot": [
      "em"
    ],
    "javaio.filepermission": [
      "em"
    ],
    "additional": [
      "h2"
    ],
    "please": [
      "ul",
      "li"
    ],
    "see": [
      "ul",
      "li"
    ],
    "http//cwe.mitre.org/top25/index.html#cwe-22": [
      "ul",
      "li",
      "a"
    ],
    "cwe-22": [
      "title"
    ],
    "improper": [
      "title"
    ],
    "limitation": [
      "title"
    ],
    "'path": [
      "title"
    ],
    "traversal'": [
      "title"
    ]
  },
  "tags": {
    "h2": [
      "Description",
      "Discussion",
      "Detection",
      "Mitigation",
      "Additional Information"
    ],
    "p": [
      "The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can\n cause the pathname to resolve to a location that is outside of the restricted directory.",
      "Many file operations are intended to take place within a restricted directory. By using special elements such as \"..\" and \"/\" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system.\n One of the most common special elements is the \"../\" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal. Path traversal also covers the use of absolute\n pathnames such as \"/usr/local/bin\", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal.",
      "In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add \".txt\" to any pathname, thus limiting the attacker to text files,\n but a null injection may effectively remove this restriction.",
      "While data is often exchanged using files, sometimes you don't intend to expose every file on your system while doing so. When you use an outsider's input while constructing a filename, the resulting path could point outside of the intended directory. An\n attacker could combine multiple \"..\" or similar sequences to cause the operating system to navigate out of the restricted directory, and into the rest of the system.",
      "Automated techniques can find areas where path traversal weaknesses exist. However, tuning or customization may be required to remove or de-prioritize path-traversal problems that are only exploitable by the software's administrator - or other privileged\n users - and thus potentially valid behavior or, at worst, a bug instead of a vulnerability. Manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all file access operations can be assessed within limited\n time constraints.",
      "The following mitigation methods for path traversal vulnerabilities are available:",
      "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does.\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an\n example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
      "Use white-list input validation. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment\n changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames,\n use stringent whitelists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a whitelist of allowable\n file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a blacklist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient\n protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the\n \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.",
      "Use server-side security controls. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.",
      "Canonicalize input. Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors\n could be used to bypass whitelist validation schemes by introducing dangerous inputs after they have been checked. Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively\n removes \"..\" sequences and symbolic links (CWE-23, CWE-59). This includes:",
      "Use a secure framework. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
      "(Optional) Use a web application firewall. Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency\n prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.\nNote: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that\n receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization.",
      "Use the principle of least privilege. Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.",
      "Use reference maps. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.\n For example, ID 1 could map to \"inbox.txt\" and ID 2 could map to \"profile.txt\". Features such as the\nESAPI AccessReferenceMap provide this capability.",
      "Use a sandbox. Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\nchroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example,\njava.io.FilePermission in the Java SecurityManager allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\nNote: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed.",
      "Store application files outside of the web root. Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities\n to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly\n requested, and it can exit immediately. This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce your attack surface.",
      "Prevent information disclosure in error messages. Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not\n being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success.\nIf errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that\n might accidentally tip off an attacker about internal state, such as whether a username is valid or not. In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through\n the file system hierarchy.",
      "(PHP only) Do not use register_globals. If you are using PHP, configure your application so that it does not use\nregister_globals. During implementation, develop your application so that it does not rely on this feature, but be wary of implementing a\nregister_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
    ],
    "em": [
      "/usr/local/bin",
      "realpath()",
      "getCanonicalPath()",
      "GetFullPath()",
      "realpath()",
      "abs_path()",
      "realpath()",
      "inbox.txt",
      "profile.txt",
      "ESAPI AccessReferenceMap",
      "chroot",
      "AppArmor",
      "SELinux",
      "java.io.FilePermission",
      "Java SecurityManager",
      "register_globals",
      "register_globals"
    ],
    "ol": [
      "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does.\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an\n example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"\n    \n    \n      \n        Use white-list input validation. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment\n changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames,\n use stringent whitelists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a whitelist of allowable\n file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a blacklist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient\n protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the\n \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.\n    \n    \n      \n        Use server-side security controls. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.\n    \n    \n      \n        Canonicalize input. Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors\n could be used to bypass whitelist validation schemes by introducing dangerous inputs after they have been checked. Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively\n removes \"..\" sequences and symbolic links (CWE-23, CWE-59). This includes: \n      \n        \n          realpath() in C \n        \n          getCanonicalPath() in Java \n        \n          GetFullPath() in ASP.NET \n        \n          realpath() or abs_path() in Perl \n        \n          realpath() in PHP\n      \n    \n    \n      \n        Use a secure framework. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.\n    \n    \n      \n        (Optional) Use a web application firewall. Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency\n prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.\nNote: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that\n receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization.\n    \n    \n      \n        Use the principle of least privilege. Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.\n    \n    \n      \n        Use reference maps. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.\n For example, ID 1 could map to \"inbox.txt\" and ID 2 could map to \"profile.txt\". Features such as the\nESAPI AccessReferenceMap provide this capability.\n    \n    \n      \n        Use a sandbox. Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\nchroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example,\njava.io.FilePermission in the Java SecurityManager allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\nNote: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed.\n    \n    \n      \n        Store application files outside of the web root. Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities\n to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly\n requested, and it can exit immediately. This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce your attack surface.\n    \n    \n      \n        Prevent information disclosure in error messages. Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not\n being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success.\nIf errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that\n might accidentally tip off an attacker about internal state, such as whether a username is valid or not. In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through\n the file system hierarchy.\n    \n    \n      \n        (PHP only) Do not use register_globals. If you are using PHP, configure your application so that it does not use\nregister_globals. During implementation, develop your application so that it does not rely on this feature, but be wary of implementing a\nregister_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues."
    ],
    "li": [
      "Assume all input is malicious. Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does.\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an\n example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"",
      "Use white-list input validation. Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment\n changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames,\n use stringent whitelists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a whitelist of allowable\n file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a blacklist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient\n protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the\n \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.",
      "Use server-side security controls. For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.",
      "Canonicalize input. Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors\n could be used to bypass whitelist validation schemes by introducing dangerous inputs after they have been checked. Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively\n removes \"..\" sequences and symbolic links (CWE-23, CWE-59). This includes: \n      \n        \n          realpath() in C \n        \n          getCanonicalPath() in Java \n        \n          GetFullPath() in ASP.NET \n        \n          realpath() or abs_path() in Perl \n        \n          realpath() in PHP",
      "realpath() in C",
      "getCanonicalPath() in Java",
      "GetFullPath() in ASP.NET",
      "realpath() or abs_path() in Perl",
      "realpath() in PHP",
      "Use a secure framework. Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.",
      "(Optional) Use a web application firewall. Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency\n prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.\nNote: An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that\n receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization.",
      "Use the principle of least privilege. Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.",
      "Use reference maps. When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.\n For example, ID 1 could map to \"inbox.txt\" and ID 2 could map to \"profile.txt\". Features such as the\nESAPI AccessReferenceMap provide this capability.",
      "Use a sandbox. Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\nchroot jail, AppArmor, and SELinux. In general, managed code may provide some protection. For example,\njava.io.FilePermission in the Java SecurityManager allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\nNote: The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed.",
      "Store application files outside of the web root. Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities\n to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly\n requested, and it can exit immediately. This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce your attack surface.",
      "Prevent information disclosure in error messages. Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not\n being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success.\nIf errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that\n might accidentally tip off an attacker about internal state, such as whether a username is valid or not. In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through\n the file system hierarchy.",
      "(PHP only) Do not use register_globals. If you are using PHP, configure your application so that it does not use\nregister_globals. During implementation, develop your application so that it does not rely on this feature, but be wary of implementing a\nregister_globals emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.",
      "For more information about path traversal vulnerabilities, please see \nhttp://cwe.mitre.org/top25/index.html#CWE-22"
    ],
    "strong": [
      "Assume all input is malicious.",
      "Use white-list input validation.",
      "Use server-side security controls.",
      "Canonicalize input.",
      "Use a secure framework.",
      "(Optional) Use a web application firewall.",
      "Note:",
      "Use the principle of least privilege.",
      "Use reference maps.",
      "Use a sandbox.",
      "Note:",
      "Store application files outside of the web root.",
      "Prevent information disclosure in error messages.",
      "(PHP only) Do not use register_globals."
    ],
    "br": [
      "",
      "",
      "",
      ""
    ],
    "ul": [
      "realpath() in C \n        \n          getCanonicalPath() in Java \n        \n          GetFullPath() in ASP.NET \n        \n          realpath() or abs_path() in Perl \n        \n          realpath() in PHP",
      "For more information about path traversal vulnerabilities, please see \nhttp://cwe.mitre.org/top25/index.html#CWE-22"
    ],
    "a": [
      "http://cwe.mitre.org/top25/index.html#CWE-22"
    ]
  },
  "links": [
    {
      "href": "http://cwe.mitre.org/top25/index.html#CWE-22",
      "text": "\nhttp://cwe.mitre.org/top25/index.html#CWE-22"
    }
  ],
  "html": "<h2>Description</h2>\n  <p>The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can\n cause the pathname to resolve to a location that is outside of the restricted directory.</p>\n  <p>Many file operations are intended to take place within a restricted directory. By using special elements such as \"..\" and \"/\" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system.\n One of the most common special elements is the \"../\" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal. Path traversal also covers the use of absolute\n pathnames such as \"<em>/usr/local/bin</em>\", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal.</p>\n  <p>In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add \".txt\" to any pathname, thus limiting the attacker to text files,\n but a null injection may effectively remove this restriction.</p>\n  <h2>Discussion</h2>\n  <p>While data is often exchanged using files, sometimes you don't intend to expose every file on your system while doing so. When you use an outsider's input while constructing a filename, the resulting path could point outside of the intended directory. An\n attacker could combine multiple \"..\" or similar sequences to cause the operating system to navigate out of the restricted directory, and into the rest of the system.</p>\n  <h2>Detection</h2>\n  <p>Automated techniques can find areas where path traversal weaknesses exist. However, tuning or customization may be required to remove or de-prioritize path-traversal problems that are only exploitable by the software's administrator - or other privileged\n users - and thus potentially valid behavior or, at worst, a bug instead of a vulnerability. Manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all file access operations can be assessed within limited\n time constraints.</p>\n  <h2>Mitigation</h2>\n  <p>The following mitigation methods for path traversal vulnerabilities are available:</p>\n  <ol>\n    <li>\n      <p>\n        <strong>Assume all input is malicious.</strong> Use an \"accept known good\" input validation strategy, i.e., use a whitelist of acceptable inputs that strictly conform to specifications. Reject any input that does not strictly conform to specifications, or\n transform it into something that does.<br />\nWhen performing input validation, consider all potentially relevant properties, including length, type of input, the full range of acceptable values, missing or extra inputs, syntax, consistency across related fields, and conformance to business rules. As an\n example of business rule logic, \"boat\" may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as \"red\" or \"blue.\"</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use white-list input validation.</strong> Do not rely exclusively on looking for malicious or malformed inputs (i.e., do not rely on a blacklist). A blacklist is likely to miss at least one undesirable input, especially if the code's environment\n changes. This can give attackers enough room to bypass the intended validation. However, blacklists can be useful for detecting potential attacks or determining which inputs are so malformed that they should be rejected outright. When validating filenames,\n use stringent whitelists that limit the character set to be used. If feasible, only allow a single \".\" character in the filename to avoid weaknesses such as CWE-23, and exclude directory separators such as \"/\" to avoid CWE-36. Use a whitelist of allowable\n file extensions, which will help to avoid CWE-434. Do not rely exclusively on a filtering mechanism that removes potentially dangerous characters. This is equivalent to a blacklist, which may be incomplete (CWE-184). For example, filtering \"/\" is insufficient\n protection if the filesystem also supports the use of \"\\\" as a directory separator. Another possible error could occur when the filtering is applied in a way that still produces dangerous data (CWE-182). For example, if \"../\" sequences are removed from the\n \".../...//\" string in a sequential fashion, two instances of \"../\" would be removed from the original string, but the remaining characters would still form the \"../\" string.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use server-side security controls.</strong> For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side, in order to avoid CWE-602. Attackers can bypass the client-side checks by modifying\n values after the checks have been performed, or by changing the client to remove the client-side checks entirely. Then, these modified values would be submitted to the server.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Canonicalize input.</strong> Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same input twice (CWE-174). Such errors\n could be used to bypass whitelist validation schemes by introducing dangerous inputs after they have been checked. Use a built-in path canonicalization function (such as realpath() in C) that produces the canonical version of the pathname, which effectively\n removes \"..\" sequences and symbolic links (CWE-23, CWE-59). This includes: </p>\n      <ul>\n        <li>\n          <em>realpath()</em> in C </li>\n        <li>\n          <em>getCanonicalPath()</em> in Java </li>\n        <li>\n          <em>GetFullPath()</em> in ASP.NET </li>\n        <li>\n          <em>realpath()</em> or <em>abs_path()</em> in Perl </li>\n        <li>\n          <em>realpath()</em> in PHP</li>\n      </ul>\n    </li>\n    <li>\n      <p>\n        <strong>Use a secure framework.</strong> Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.</p>\n    </li>\n    <li>\n      <p>\n        <strong>(Optional) Use a web application firewall.</strong> Use an application firewall that can detect attacks against this weakness. It can be beneficial in cases in which the code cannot be fixed (because it is controlled by a third party), as an emergency\n prevention measure while more comprehensive software assurance measures are applied, or to provide defense in depth.\n<br /><strong>Note:</strong> An application firewall might not cover all possible input vectors. In addition, attack techniques might be available to bypass the protection mechanism, such as using malformed inputs that can still be processed by the component that\n receives those inputs. Depending on functionality, an application firewall might inadvertently reject or modify legitimate requests. Finally, some manual effort may be required for customization.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use the principle of least privilege.</strong> Run your code using the lowest privileges that are required to accomplish the necessary tasks. If possible, create isolated accounts with limited privileges that are only used for a single task. That\n way, a successful attack will not immediately give the attacker access to the rest of the software or its environment. For example, database applications rarely need to run as the database administrator, especially in day-to-day operations.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use reference maps.</strong> When the set of acceptable objects, such as filenames or URLs, is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames or URLs, and reject all other inputs.\n For example, ID 1 could map to \"<em>inbox.txt</em>\" and ID 2 could map to \"<em>profile.txt</em>\". Features such as the\n<em>ESAPI AccessReferenceMap</em> provide this capability.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Use a sandbox.</strong> Run your code in a \"jail\" or similar sandbox environment that enforces strict boundaries between the process and the operating system. This may effectively restrict which files can be accessed in a particular directory or\n which commands can be executed by your software. OS-level examples include the Unix\n<em>chroot</em> jail, <em>AppArmor</em>, and <em>SELinux</em>. In general, managed code may provide some protection. For example,\n<em>java.io.FilePermission</em> in the<em> Java SecurityManager</em> allows you to specify restrictions on file operations. This may not be a feasible solution, and it only limits the impact to the operating system; the rest of your application may still be\n subject to compromise. Be careful to avoid CWE-243 and other weaknesses related to jails.\n<br /><strong>Note:</strong> The effectiveness of this mitigation depends on the prevention capabilities of the specific sandbox or jail being used and might only help to reduce the scope of an attack, such as restricting the attacker to certain system calls or limiting\n the portion of the file system that can be accessed.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Store application files outside of the web root.</strong> Store library, include, and utility files outside of the web document root, if possible. Otherwise, store them in a separate directory and use the web server's access control capabilities\n to prevent attackers from directly requesting them. One common practice is to define a fixed constant in each calling program, then check for the existence of the constant in the library/include file; if the constant does not exist, then the file was directly\n requested, and it can exit immediately. This significantly reduces the chance of an attacker being able to bypass any protection mechanisms that are in the base program but not in the include files. It will also reduce your attack surface.</p>\n    </li>\n    <li>\n      <p>\n        <strong>Prevent information disclosure in error messages.</strong> Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not\n being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success.<br />\nIf errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that\n might accidentally tip off an attacker about internal state, such as whether a username is valid or not. In the context of path traversal, error messages which disclose path information can help attackers craft the appropriate attack strings to move through\n the file system hierarchy.</p>\n    </li>\n    <li>\n      <p>\n        <strong>(PHP only) Do not use register_globals.</strong> If you are using PHP, configure your application so that it does not use\n<em>register_globals</em>. During implementation, develop your application so that it does not rely on this feature, but be wary of implementing a\n<em>register_globals</em> emulation that is subject to weaknesses such as CWE-95, CWE-621, and similar issues.</p>\n    </li>\n  </ol>\n  <h2>Additional Information</h2>\n  <ul>\n    <li>For more information about path traversal vulnerabilities, please see <a href=\"http://cwe.mitre.org/top25/index.html#CWE-22\">\nhttp://cwe.mitre.org/top25/index.html#CWE-22</a></li>\n  </ul>"
}