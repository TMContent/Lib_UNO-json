{
  "id": "f66201bc-1d81-44d7-90b1-f6192ce3ffe4",
  "checksum": "ff308c7e705920160e26dc580dca937c03a05393",
  "words": {
    "40": [
      "ul",
      "li"
    ],
    "326902": [
      "ol",
      "li",
      "p",
      "a"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "p",
      "p",
      "h1",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "aspnet": [
      "ul",
      "li",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "for": [
      "h1",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p"
    ],
    "ensure": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "application": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "keys": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "are": [
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "stored": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "in": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p"
    ],
    "a": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "well": [
      "p"
    ],
    "defined": [
      "p"
    ],
    "location": [
      "p",
      "p",
      "p"
    ],
    "such": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "as": [
      "p",
      "p"
    ],
    "the": [
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "encrypted": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "sections": [
      "p"
    ],
    "of": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "application's": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "pre"
    ],
    "webconfig": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "strong",
      "li",
      "p",
      "em"
    ],
    "or": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "windows": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "registry": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "verify": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "they": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "not": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "hard": [
      "p",
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "coded": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "into": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "plaintext": [
      "p"
    ],
    "inside": [
      "p"
    ],
    "configuration": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "files": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "why": [
      "h1"
    ],
    "when": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "faced": [
      "p"
    ],
    "with": [
      "p",
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li"
    ],
    "encryption": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "intruders": [
      "p"
    ],
    "attack": [
      "p"
    ],
    "most": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "vulnerable": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "aspect": [
      "p"
    ],
    "key": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ul",
      "li",
      "a",
      "title"
    ],
    "management": [
      "p"
    ],
    "because": [
      "p"
    ],
    "used": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "li",
      "p"
    ],
    "generate": [
      "p"
    ],
    "protects": [
      "p"
    ],
    "sensitive": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "data": [
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "ul",
      "li"
    ],
    "themselves": [
      "p"
    ],
    "become": [
      "p"
    ],
    "need": [
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "be": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "protected": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "how": [
      "h1",
      "ol",
      "li",
      "p",
      "h1"
    ],
    "use": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "following": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "steps": [
      "p",
      "p"
    ],
    "secure": [
      "p",
      "ol",
      "li",
      "p"
    ],
    "storage": [
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "p"
    ],
    "is": [
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "title"
    ],
    "identify": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "mechanism": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p"
    ],
    "handling": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "should": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "either": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "file": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "your": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "li",
      "li",
      "p",
      "ul",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "li",
      "p",
      "pre",
      "li",
      "p"
    ],
    "using": [
      "ol",
      "li",
      "p"
    ],
    "appropriate": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "if": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "locations": [
      "ol",
      "li",
      "p"
    ],
    "properly": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "documented": [
      "ol",
      "li",
      "p"
    ],
    "look": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "functions": [
      "ol",
      "li",
      "p"
    ],
    "code": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "trace": [
      "ol",
      "li",
      "p"
    ],
    "material": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "back": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "see": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "where": [
      "ol",
      "li",
      "p"
    ],
    "it": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "both": [
      "ol",
      "li",
      "p"
    ],
    "temporarily": [
      "ol",
      "li",
      "p"
    ],
    "permanently": [
      "ol",
      "li",
      "p"
    ],
    "you": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "em"
    ],
    "do": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "strong"
    ],
    "have": [
      "ol",
      "li",
      "p"
    ],
    "documentation": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "conforms": [
      "ol",
      "li",
      "p"
    ],
    "tracing": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "through": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "at": [
      "ol",
      "li",
      "p"
    ],
    "entire": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "lifetime": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "system": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "may": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "em"
    ],
    "written": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "out": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "insecurely": [
      "ol",
      "li",
      "p"
    ],
    "after": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "even": [
      "ol",
      "li",
      "p"
    ],
    "path": [
      "ol",
      "li",
      "p"
    ],
    "from": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "p"
    ],
    "initial": [
      "ol",
      "li",
      "p"
    ],
    "source": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "correct": [
      "ol",
      "li",
      "p"
    ],
    "store": [
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "strong",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "ul",
      "li",
      "a",
      "title"
    ],
    "dpapi": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "protect": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ul",
      "li",
      "a"
    ],
    "them": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "ul",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "gives": [
      "ol",
      "li",
      "p"
    ],
    "an": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "li",
      "p"
    ],
    "example": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "p",
      "li",
      "p"
    ],
    "this": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "can": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "doneenckey": [
      "ol",
      "li"
    ],
    "=": [
      "ol",
      "ol",
      "li",
      "li",
      "pre",
      "pre",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "pre",
      "pre"
    ],
    "protecteddataprotect(enckey,": [
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "salt": [
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "dataprotectionscopecurrentuser);registrykey": [
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "rk": [
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "registrylocalmachine.opensubkey(\"software\\\\myapp\\\\keystore\",": [
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "true;rk.setvalue(\"enckey\",": [
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "wbuff": [
      "ol",
      "li",
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "registryvaluekindbinary);if": [
      "ol",
      "li"
    ],
    "webconfig,": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "appsettings": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "em",
      "em",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "strong"
    ],
    "section": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "p"
    ],
    "aspnet_regiis": [
      "ol",
      "ol",
      "li",
      "p",
      "em",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "p",
      "strong",
      "pre"
    ],
    "utility": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "being": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "permissions": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "set": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "ol",
      "li",
      "p",
      "strong"
    ],
    "on": [
      "ol",
      "li",
      "p"
    ],
    "so": [
      "ol",
      "li",
      "p"
    ],
    "only": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p"
    ],
    "accessed": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "by": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "p"
    ],
    "its": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "administrators": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "access": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "li",
      "p"
    ],
    "iis": [
      "ol",
      "li",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "metabase": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "controlled": [
      "ol",
      "li",
      "p"
    ],
    "acls": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "similar": [
      "ol",
      "li",
      "p"
    ],
    "normal": [
      "ol",
      "li",
      "p"
    ],
    "authorized": [
      "ol",
      "li",
      "p"
    ],
    "accounts": [
      "ol",
      "li",
      "p"
    ],
    "listed": [
      "ol",
      "li",
      "p"
    ],
    "builtin\\administrators": [
      "ol",
      "li",
      "p",
      "em"
    ],
    "group": [
      "ol",
      "li",
      "p"
    ],
    "other": [
      "ol",
      "li",
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li",
      "p"
    ],
    "up": [
      "ol",
      "li",
      "p"
    ],
    "signing": [
      "ol",
      "li",
      "p"
    ],
    "operation": [
      "ol",
      "li",
      "p"
    ],
    "private": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "included": [
      "ol",
      "li",
      "p"
    ],
    "literally": [
      "ol",
      "li",
      "p"
    ],
    "body": [
      "ol",
      "li",
      "p"
    ],
    "have found": [
      "ol",
      "li",
      "p"
    ],
    "hard-coded": [
      "ol",
      "li",
      "p"
    ],
    "key that": [
      "ol",
      "li",
      "p"
    ],
    "needs": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "moved": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "keystore": [
      "ol",
      "li",
      "p"
    ],
    "placed": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "unprotected": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "read": [
      "ol",
      "li",
      "p"
    ],
    "manual": [
      "ol",
      "li",
      "p"
    ],
    "inspection": [
      "ol",
      "li",
      "p"
    ],
    "show": [
      "ol",
      "li",
      "p"
    ],
    "unloaded": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "memory": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "p",
      "p",
      "p",
      "strong"
    ],
    "left": [
      "ol",
      "li",
      "p"
    ],
    "instead": [
      "ol",
      "li",
      "p"
    ],
    "cleared": [
      "ol",
      "li",
      "p"
    ],
    "no": [
      "ol",
      "li",
      "p"
    ],
    "longer": [
      "ol",
      "li",
      "p"
    ],
    "needed": [
      "ol",
      "li",
      "p"
    ],
    "any": [
      "ol",
      "li",
      "p"
    ],
    "form": [
      "ol",
      "li",
      "p"
    ],
    "temporary": [
      "ol",
      "li",
      "p"
    ],
    "without": [
      "ol",
      "li",
      "p"
    ],
    "protection": [
      "ol",
      "li",
      "p"
    ],
    "theft": [
      "ol",
      "li",
      "p"
    ],
    "insecure": [
      "ol",
      "li",
      "p"
    ],
    "checking": [
      "ol",
      "li",
      "p"
    ],
    "important": [
      "ol",
      "li",
      "p"
    ],
    "finding": [
      "ol",
      "li",
      "p"
    ],
    "class": [
      "ol",
      "li",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "problem": [
      "ol",
      "li",
      "p"
    ],
    "done": [
      "p"
    ],
    "enckey": [
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "registryvaluekindbinary);": [
      "pre",
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "fix": [
      "h1"
    ],
    "follow": [
      "p"
    ],
    "these": [
      "p",
      "ol",
      "li",
      "p",
      "em"
    ],
    "considering": [
      "p"
    ],
    "encrypts": [
      "ol",
      "li",
      "p"
    ],
    "decrypts": [
      "ol",
      "li",
      "p"
    ],
    "common": [
      "ol",
      "li",
      "p"
    ],
    "components": [
      "ol",
      "li",
      "p"
    ],
    "will": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p"
    ],
    "require": [
      "ol",
      "li",
      "p"
    ],
    "include": [
      "ol",
      "li",
      "p"
    ],
    "storing": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "exchange": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "systems": [
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "certificates": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "authenticate": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "sign": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "documents": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "choose": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "carefully": [
      "ol",
      "li",
      "p"
    ],
    "available": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "protectdata": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "webconfig:": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "additionally": [
      "ol",
      "li",
      "ul",
      "li",
      "p"
    ],
    "-pe": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"appsettings\"": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "-app": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"/": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "name": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "-prov": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "\"dataprotectionconfigurationprovider\"": [
      "ol",
      "li",
      "ul",
      "li",
      "pre"
    ],
    "apply": [
      "ol",
      "li",
      "p"
    ],
    "filesystem": [
      "ol",
      "li",
      "p"
    ],
    "grant": [
      "ol",
      "li",
      "p"
    ],
    "necessary": [
      "ol",
      "li",
      "p"
    ],
    "users": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "account": [
      "ol",
      "li",
      "p"
    ],
    "microsoft's": [
      "ol",
      "li",
      "p",
      "a"
    ],
    "kb": [
      "ol",
      "li",
      "p",
      "a"
    ],
    "more": [
      "ol",
      "li",
      "p"
    ],
    "information": [
      "ol",
      "li",
      "p"
    ],
    "hard-code": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "hard-coding": [
      "ol",
      "li",
      "p"
    ],
    "hoping": [
      "ol",
      "li",
      "p"
    ],
    "attacker": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "reverse": [
      "ol",
      "li",
      "p"
    ],
    "engineer": [
      "ol",
      "li",
      "p"
    ],
    "security": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "obscurity": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "determined": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "usually": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "find": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p",
      "em"
    ],
    "way": [
      "ol",
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p",
      "li",
      "p"
    ],
    "defeat": [
      "ol",
      "ol",
      "li",
      "p",
      "li",
      "p"
    ],
    "place": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "obfuscating": [
      "ol",
      "li",
      "p"
    ],
    "placing": [
      "ol",
      "li",
      "p"
    ],
    "than": [
      "ol",
      "li",
      "p"
    ],
    "unload": [
      "ol",
      "li",
      "p",
      "strong"
    ],
    "their": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p",
      "strong"
    ],
    "leaving": [
      "ol",
      "li",
      "p"
    ],
    "final": [
      "ol",
      "li",
      "p"
    ],
    "allows": [
      "ol",
      "li",
      "p"
    ],
    "operating": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "page": [
      "ol",
      "ol",
      "li",
      "li",
      "p",
      "p"
    ],
    "onto": [
      "ol",
      "li",
      "p"
    ],
    "drive": [
      "ol",
      "li",
      "p"
    ],
    "obtain": [
      "ol",
      "li",
      "p"
    ],
    "system's": [
      "ol",
      "li",
      "p"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "additional": [
      "em"
    ],
    "articles": [
      "em"
    ],
    "useful": [
      "em"
    ],
    "adapted": [
      "p"
    ],
    "microsoft": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ]
  },
  "tags": {
    "h1": [
      "Applies To",
      "What to Check For",
      "Why",
      "How To Check",
      "How To Fix",
      "Related Items",
      "",
      ""
    ],
    "ul": [
      "ASP.NET 4.0",
      "Storing encryption keys used to exchange encrypted sensitive data with other systems \r\n        Storing keys or certificates used to authenticate to other systems \r\n        Storing keys used to sign documents",
      "Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\r\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);\r\n        \r\n        \r\n          \r\n            web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\r\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"",
      "Protect the Encryption Key Store"
    ],
    "li": [
      "ASP.NET 4.0",
      "Identify the mechanism used for handling encryption keys. The mechanism used should be either the Windows Registry or the application's web.config file. Ensure that your application is using the most appropriate mechanism. If the storage locations for keys are not properly documented, look for encryption functions in the code and trace the key material back to see where it is stored, both temporarily and permanently. If you do have documentation, check that the code conforms to the documentation. When tracing through code, ensure that you look at the entire lifetime of the key in the system; keys may be written out insecurely after they are used, even if the path from a secure initial source to use is correct. If you store your application's encryption keys into the Windows Registry, ensure that DPAPI is used to protect them. The following code gives an example of how this can be done:encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);If you store your application's encryption keys in web.config, ensure that they are stored into the appSettings section. Use the aspnet_regiis utility to check that the appSettings section is encrypted.",
      "Ensure the key store is protected. Ensure that either DPAPI or ASP.NET protected configuration files are being used. Verify that the appropriate permissions are set on the configuration files and registry keys so they can be only accessed by your application and its administrators.",
      "Verify that only the application and its administrators can access the IIS metabase.\r\n        Access to the metabase is controlled with ACLs, similar to normal files or registry keys. Verify that only authorized accounts are listed in the BUILTIN\\Administrators group and that other ACLs are properly set up.",
      "Ensure that keys are not hard coded into the source code. When tracing back from an encryption or signing operation, if you see private key material included literally in the body of an application's source code, you have found a hard-coded key that needs to be moved to a protected keystore.",
      "Ensure that keys are not placed into unprotected configuration files. If a private key is read from a configuration file and the aspnet_regiis utility (or manual inspection) show that it is not encrypted, the key needs to be moved to a protected key store.",
      "Ensure that keys are unloaded from memory after use. If keys are left in memory instead of being cleared out when no longer needed, or if they are written to any form of temporary storage without protection, they are vulnerable to theft from memory or from the insecure store. Checking the entire lifetime of key material is important for finding this class of problem.",
      "Identify the need for a key store. Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:\r\n      \r\n        Storing encryption keys used to exchange encrypted sensitive data with other systems \r\n        Storing keys or certificates used to authenticate to other systems \r\n        Storing keys used to sign documents",
      "Storing encryption keys used to exchange encrypted sensitive data with other systems",
      "Storing keys or certificates used to authenticate to other systems",
      "Storing keys used to sign documents",
      "Choose the appropriate mechanism for handling encryption keys. Carefully choose the appropriate mechanism for handling your application's encryption keys.\r\n      \r\n        \r\n          \r\n            Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\r\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);\r\n        \r\n        \r\n          \r\n            web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\r\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"",
      "Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\r\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);",
      "web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\r\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"",
      "Set appropriate permissions. Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "Protect the IIS metabase. Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See Microsoft's KB 326902 for more information.",
      "Do not hard-code keys in the application. Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Do not place keys into configuration files. Obfuscating the encryption keys and placing them into configuration files other than web.config is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Unload keys from memory after their use. Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file.",
      "Protect the Encryption Key Store"
    ],
    "p": [
      "Ensure that application keys are stored in a well defined location, such as the encrypted sections of the application's web.config or encrypted in the Windows Registry. Verify that they are not hard coded into the application or stored as plaintext inside configuration files.",
      "When faced with encryption, intruders attack the most vulnerable aspect: key management. Because keys are used to generate the encryption that protects sensitive data, the keys themselves become sensitive data that need to be protected.",
      "Use the following steps to verify a secure key storage location is used.",
      "Identify the mechanism used for handling encryption keys. The mechanism used should be either the Windows Registry or the application's web.config file. Ensure that your application is using the most appropriate mechanism. If the storage locations for keys are not properly documented, look for encryption functions in the code and trace the key material back to see where it is stored, both temporarily and permanently. If you do have documentation, check that the code conforms to the documentation. When tracing through code, ensure that you look at the entire lifetime of the key in the system; keys may be written out insecurely after they are used, even if the path from a secure initial source to use is correct.",
      "If you store your application's encryption keys into the Windows Registry, ensure that DPAPI is used to protect them. The following code gives an example of how this can be done:",
      "If you store your application's encryption keys in web.config, ensure that they are stored into the appSettings section. Use the aspnet_regiis utility to check that the appSettings section is encrypted.",
      "Ensure the key store is protected. Ensure that either DPAPI or ASP.NET protected configuration files are being used. Verify that the appropriate permissions are set on the configuration files and registry keys so they can be only accessed by your application and its administrators.",
      "Verify that only the application and its administrators can access the IIS metabase.\r\n        Access to the metabase is controlled with ACLs, similar to normal files or registry keys. Verify that only authorized accounts are listed in the BUILTIN\\Administrators group and that other ACLs are properly set up.",
      "Ensure that keys are not hard coded into the source code. When tracing back from an encryption or signing operation, if you see private key material included literally in the body of an application's source code, you have found a hard-coded key that needs to be moved to a protected keystore.",
      "Ensure that keys are not placed into unprotected configuration files. If a private key is read from a configuration file and the aspnet_regiis utility (or manual inspection) show that it is not encrypted, the key needs to be moved to a protected key store.",
      "Ensure that keys are unloaded from memory after use. If keys are left in memory instead of being cleared out when no longer needed, or if they are written to any form of temporary storage without protection, they are vulnerable to theft from memory or from the insecure store. Checking the entire lifetime of key material is important for finding this class of problem.",
      "Follow these steps when considering a key storage location:",
      "Identify the need for a key store. Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:",
      "Choose the appropriate mechanism for handling encryption keys. Carefully choose the appropriate mechanism for handling your application's encryption keys.",
      "Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:",
      "web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:",
      "Set appropriate permissions. Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.",
      "Protect the IIS metabase. Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See Microsoft's KB 326902 for more information.",
      "Do not hard-code keys in the application. Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Do not place keys into configuration files. Obfuscating the encryption keys and placing them into configuration files other than web.config is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.",
      "Unload keys from memory after their use. Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file.",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Identify the mechanism used for handling encryption keys. The mechanism used should be either the Windows Registry or the application's web.config file. Ensure that your application is using the most appropriate mechanism. If the storage locations for keys are not properly documented, look for encryption functions in the code and trace the key material back to see where it is stored, both temporarily and permanently. If you do have documentation, check that the code conforms to the documentation. When tracing through code, ensure that you look at the entire lifetime of the key in the system; keys may be written out insecurely after they are used, even if the path from a secure initial source to use is correct. If you store your application's encryption keys into the Windows Registry, ensure that DPAPI is used to protect them. The following code gives an example of how this can be done:encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);If you store your application's encryption keys in web.config, ensure that they are stored into the appSettings section. Use the aspnet_regiis utility to check that the appSettings section is encrypted. \r\n    \r\n      \r\n        Ensure the key store is protected. Ensure that either DPAPI or ASP.NET protected configuration files are being used. Verify that the appropriate permissions are set on the configuration files and registry keys so they can be only accessed by your application and its administrators. \r\n    \r\n    \r\n      \r\n        Verify that only the application and its administrators can access the IIS metabase.\r\n        Access to the metabase is controlled with ACLs, similar to normal files or registry keys. Verify that only authorized accounts are listed in the BUILTIN\\Administrators group and that other ACLs are properly set up.\r\n    \r\n    \r\n      \r\n        Ensure that keys are not hard coded into the source code. When tracing back from an encryption or signing operation, if you see private key material included literally in the body of an application's source code, you have found a hard-coded key that needs to be moved to a protected keystore.\r\n    \r\n    \r\n      \r\n        Ensure that keys are not placed into unprotected configuration files. If a private key is read from a configuration file and the aspnet_regiis utility (or manual inspection) show that it is not encrypted, the key needs to be moved to a protected key store.\r\n    \r\n    \r\n      \r\n        Ensure that keys are unloaded from memory after use. If keys are left in memory instead of being cleared out when no longer needed, or if they are written to any form of temporary storage without protection, they are vulnerable to theft from memory or from the insecure store. Checking the entire lifetime of key material is important for finding this class of problem.",
      "Identify the need for a key store. Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:\r\n      \r\n        Storing encryption keys used to exchange encrypted sensitive data with other systems \r\n        Storing keys or certificates used to authenticate to other systems \r\n        Storing keys used to sign documents\r\n      \r\n    \r\n    \r\n      \r\n        Choose the appropriate mechanism for handling encryption keys. Carefully choose the appropriate mechanism for handling your application's encryption keys.\r\n      \r\n        \r\n          \r\n            Windows Registry: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:\r\n          encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);\r\n        \r\n        \r\n          \r\n            web.config: If you store your application's encryption keys into web.config, ensure that they are stored into the appSettings section. Additionally, use the aspnet_regiis utility to ensure that the appSettings section is encrypted. Example:\r\n          aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\"\r\n        \r\n      \r\n    \r\n    \r\n      \r\n        Set appropriate permissions. Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.\r\n    \r\n    \r\n      \r\n        Protect the IIS metabase. Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See Microsoft's KB 326902 for more information.\r\n    \r\n    \r\n      \r\n        Do not hard-code keys in the application. Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.\r\n    \r\n    \r\n      \r\n        Do not place keys into configuration files. Obfuscating the encryption keys and placing them into configuration files other than web.config is security through obscurity. A determined attacker will usually find a way to defeat such mechanism. \r\n    \r\n    \r\n      \r\n        Unload keys from memory after their use. Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file."
    ],
    "strong": [
      "Identify the mechanism used for handling encryption keys.",
      "Ensure the key store is protected.",
      "Verify that only the application and its administrators can access the IIS metabase.",
      "Ensure that keys are not hard coded into the source code.",
      "Ensure that keys are not placed into unprotected configuration files.",
      "Ensure that keys are unloaded from memory after use.",
      "Identify the need for a key store.",
      "Choose the appropriate mechanism for handling encryption keys.",
      "Windows Registry",
      "web.config",
      "appSettings",
      "aspnet_regiis",
      "appSettings",
      "Set appropriate permissions.",
      "Protect the IIS metabase.",
      "Do not hard-code keys in the application.",
      "Do not place keys into configuration files.",
      "Unload keys from memory after their use."
    ],
    "pre": [
      "encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);",
      "encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);RegistryKey rk = Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);",
      "aspnet_regiis -pe \"appSettings\" -app \"/< your application's name >\"  -prov \"DataProtectionConfigurationProvider\""
    ],
    "br": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
    ],
    "em": [
      "appSettings",
      "aspnet_regiis",
      "appSettings",
      "BUILTIN\\Administrators",
      "web.config",
      "You may find these additional articles useful"
    ],
    "a": [
      "Microsoft's KB 326902",
      "Protect the Encryption Key Store"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://support.microsoft.com/kb/326902",
      "text": "Microsoft's KB 326902"
    },
    {
      "href": "/article/74484c71-2a60-49b0-a968-5570ec1a3b96",
      "text": "Protect the Encryption Key Store"
    }
  ],
  "html": "<h1>Applies To</h1>\r\n  <ul>\r\n    <li>ASP.NET 4.0</li>\r\n  </ul>\r\n  <h1>What to Check For</h1>\r\n  <p>Ensure that application keys are stored in a well defined location, such as the encrypted sections of the application's web.config or encrypted in the Windows Registry. Verify that they are not hard coded into the application or stored as plaintext inside configuration files.</p>\r\n  <h1>Why</h1>\r\n  <p>When faced with encryption, intruders attack the most vulnerable aspect: key management. Because keys are used to generate the encryption that protects sensitive data, the keys themselves become sensitive data that need to be protected. </p>\r\n  <h1>How To Check</h1>\r\n  <p>Use the following steps to verify a secure key storage location is used.</p>\r\n  <ol>\r\n    <li>\r\n      <p />\r\n      <strong>Identify the mechanism used for handling encryption keys.</strong> The mechanism used should be either the Windows Registry or the application's web.config file. Ensure that your application is using the most appropriate mechanism. If the storage locations for keys are not properly documented, look for encryption functions in the code and trace the key material back to see where it is stored, both temporarily and permanently. If you do have documentation, check that the code conforms to the documentation. When tracing through code, ensure that you look at the entire lifetime of the key in the system; keys may be written out insecurely after they are used, even if the path from a secure initial source to use is correct. <p>If you store your application's encryption keys into the Windows Registry, ensure that DPAPI is used to protect them. The following code gives an example of how this can be done:</p><pre>encKey = ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);<br /><br />RegistryKey rk =<br /> Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);<br />rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);</pre><p>If you store your application's encryption keys in web.config, ensure that they are stored into the <em>appSettings</em> section. Use the <em>aspnet_regiis</em> utility to check that the <em>appSettings</em> section is encrypted. </p></li>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure the key store is protected. </strong>Ensure that either DPAPI or ASP.NET protected configuration files are being used. Verify that the appropriate permissions are set on the configuration files and registry keys so they can be only accessed by your application and its administrators. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Verify that only the application and its administrators can access the IIS metabase.</strong>\r\n        <br />Access to the metabase is controlled with ACLs, similar to normal files or registry keys. Verify that only authorized accounts are listed in the <em>BUILTIN\\Administrators</em> group and that other ACLs are properly set up.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure that keys are not hard coded into the source code.</strong> When tracing back from an encryption or signing operation, if you see private key material included literally in the body of an application's source code, you have&nbsp;found a hard-coded key&nbsp;that needs to be moved to a protected keystore.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure that keys are not placed into unprotected configuration files.</strong> If a private key is read from a configuration file and the aspnet_regiis utility (or manual inspection) show that it is not encrypted, the key needs to be moved to a protected key store.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Ensure that keys are unloaded from memory after use.</strong> If keys are left in memory instead of being cleared out when no longer needed, or if they are written to any form of temporary storage without protection, they are vulnerable to theft from memory or from the insecure store. Checking the entire lifetime of key material is important for finding this class of problem.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>How To Fix</h1>\r\n  <p>Follow these steps when considering a key storage location:</p>\r\n  <ol>\r\n    <li>\r\n      <p>\r\n        <strong>Identify the need for a key store.</strong> Your application should use a key store only when it encrypts and decrypts sensitive data. Common components that will require the use of a key store include:</p>\r\n      <ul>\r\n        <li>Storing encryption keys used to exchange encrypted sensitive data with other systems </li>\r\n        <li>Storing keys or certificates used to authenticate to other systems </li>\r\n        <li>Storing keys used to sign documents</li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Choose the appropriate mechanism for handling encryption keys.</strong> Carefully choose the appropriate mechanism for handling your application's encryption keys.</p>\r\n      <ul>\r\n        <li>\r\n          <p>\r\n            <strong>Windows Registry</strong>: If you store your application's encryption keys into the Windows Registry, ensure that DPAPI, available through the ProtectData class, is used to protect them. Example:</p>\r\n          <pre>encKey =<br /> ProtectedData.Protect(encKey, salt, DataProtectionScope.CurrentUser);<br />RegistryKey rk =<br /> Registry.LocalMachine.OpenSubKey(\"SOFTWARE\\\\MyApp\\\\KeyStore\", true);<br />rk.SetValue(\"encKey\", wBuff, RegistryValueKind.Binary);</pre>\r\n        </li>\r\n        <li>\r\n          <p>\r\n            <strong>web.config</strong>: If you store your application's encryption keys into web.config, ensure that they are stored into the <strong>appSettings</strong> section. Additionally, use the <strong>aspnet_regiis</strong> utility to ensure that the <strong>appSettings</strong> section is encrypted. Example:</p>\r\n          <pre>aspnet_regiis -pe \"appSettings\" -app \"/&lt; your application's name &gt;\"<br />  -prov \"DataProtectionConfigurationProvider\"</pre>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Set appropriate permissions.</strong> Apply the appropriate filesystem permissions such that the configuration files can be only accessed by your application and its administrators.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Protect the IIS metabase.</strong> Grant only the necessary users access to the IIS metabase. These users should be the administrators and the ASP.NET account only. See <a href=\"http://support.microsoft.com/kb/326902\">Microsoft's KB 326902</a> for more information.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Do not hard-code keys in the application.</strong> Hard-coding the encryption keys into the source code, hoping that an attacker will not reverse engineer the application, is security through obscurity. A determined attacker will usually find a way to defeat such mechanism.</p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Do not place keys into configuration files.</strong> Obfuscating the encryption keys and placing them into configuration files other than <em>web.config</em> is security through obscurity. A determined attacker will usually find a way to defeat such mechanism. </p>\r\n    </li>\r\n    <li>\r\n      <p>\r\n        <strong>Unload keys from memory after their use.</strong> Leaving the encryption keys in memory after their final use allows the operating system to page them from memory and onto the hard drive. A determined attacker may find a way to obtain the encryption keys from the operating system's page file.</p>\r\n    </li>\r\n  </ol>\r\n  <h1>Related Items</h1>\r\n  <em>You may find these additional articles useful</em>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/article/74484c71-2a60-49b0-a968-5570ec1a3b96\">Protect the Encryption Key Store</a>\r\n    </li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance. </p>\r\n  <h1>\r\n  </h1>\r\n  <h1>\r\n  </h1>"
}