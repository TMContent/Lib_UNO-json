{
  "id": "73d6152f-e9c7-4002-af0b-635870277b69",
  "checksum": "5af8e54d774920f2289b40741e40f326c26054f7",
  "words": {
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "h1",
      "h1",
      "h1"
    ],
    "c++": [
      "ul",
      "li"
    ],
    "what": [
      "h1"
    ],
    "check": [
      "h1",
      "h1"
    ],
    "for": [
      "h1"
    ],
    "verify": [
      "p",
      "p"
    ],
    "that": [
      "p",
      "p",
      "p",
      "p",
      "p"
    ],
    "error": [
      "p",
      "p",
      "p",
      "p",
      "ul",
      "li",
      "a"
    ],
    "codes": [
      "p",
      "p",
      "p"
    ],
    "returned": [
      "p",
      "p"
    ],
    "by": [
      "p"
    ],
    "memory": [
      "p",
      "p",
      "p",
      "p",
      "title"
    ],
    "allocation": [
      "p",
      "p",
      "title"
    ],
    "functions": [
      "p"
    ],
    "are": [
      "p",
      "p",
      "title"
    ],
    "checked": [
      "p"
    ],
    "and": [
      "p",
      "p",
      "p",
      "p"
    ],
    "handled": [
      "p",
      "p",
      "p",
      "title"
    ],
    "why": [
      "h1"
    ],
    "if": [
      "p"
    ],
    "fails": [
      "p"
    ],
    "the": [
      "p",
      "p",
      "p"
    ],
    "is": [
      "p"
    ],
    "not": [
      "p"
    ],
    "result": [
      "p"
    ],
    "may": [
      "p"
    ],
    "be": [
      "p"
    ],
    "unpredictable": [
      "p"
    ],
    "dangerous": [
      "p"
    ],
    "behavior": [
      "p"
    ],
    "of": [
      "p"
    ],
    "program": [
      "p"
    ],
    "how": [
      "h1",
      "h1"
    ],
    "identify": [
      "p",
      "p"
    ],
    "code": [
      "p",
      "p",
      "p"
    ],
    "allocates": [
      "p",
      "p"
    ],
    "or": [
      "p",
      "p"
    ],
    "thrown": [
      "p",
      "p"
    ],
    "exceptions": [
      "p",
      "p"
    ],
    "fix": [
      "h1"
    ],
    "add": [
      "p"
    ],
    "checks": [
      "p"
    ],
    "handles": [
      "p",
      "p"
    ],
    "errors": [
      "p",
      "title"
    ],
    "related": [
      "h1"
    ],
    "items": [
      "h1"
    ],
    "centralize": [
      "ul",
      "li",
      "a"
    ],
    "handling": [
      "ul",
      "li",
      "a"
    ],
    "during": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "What to Check For",
      "Why",
      "How to Check",
      "How to Fix",
      "Related Items"
    ],
    "ul": [
      "C++",
      "Centralize Error Handling"
    ],
    "li": [
      "C++",
      "Centralize Error Handling"
    ],
    "p": [
      "Verify that error codes returned by memory allocation functions are checked and handled.",
      "If memory allocation fails and the error is not handled, the result may be unpredictable and dangerous behavior of the program.",
      "Identify code that allocates memory. Verify that returned error codes or thrown exceptions are handled.",
      "Identify code that allocates memory. Add code that checks error codes and handles errors or handles thrown exceptions."
    ],
    "a": [
      "Centralize Error Handling"
    ]
  },
  "links": [
    {
      "href": "/article/e4a3052e-13f2-4062-9a83-49185ff14b0a",
      "text": "Centralize Error Handling"
    }
  ],
  "html": "<h1>Applies to</h1>\n  <ul>\n    <li>C&#43;&#43;</li>\n  </ul>\n  <h1>What to Check For</h1>\n  <p>Verify that error codes returned by memory allocation functions are checked and handled.</p>\n  <h1>Why</h1>\n  <p>If memory allocation fails and the error is not handled, the result may be unpredictable and dangerous behavior of the program.</p>\n  <h1>How to Check</h1>\n  <p>Identify code that allocates memory. Verify that returned error codes or thrown exceptions are handled.</p>\n  <h1>How to Fix</h1>\n  <p>Identify code that allocates memory. Add code that checks error codes and handles errors or handles thrown exceptions.</p>\n  <h1>Related Items</h1>\n  <ul>\n    <li>\n      <a href=\"/article/e4a3052e-13f2-4062-9a83-49185ff14b0a\">Centralize Error Handling</a>\n    </li>\n  </ul>"
}