{
  "id": "2b7b05e8-743e-4634-abe9-598f075dad86",
  "checksum": "752ef6856f1e1a3a1ae2441ff028573e5a4ef601",
  "words": {
    "35": [
      "ul",
      "li"
    ],
    "2008": [
      "ul",
      "li"
    ],
    "applies": [
      "h1"
    ],
    "to": [
      "h1",
      "p",
      "ol",
      "li",
      "ul",
      "li",
      "title"
    ],
    "microsoft®": [
      "ul",
      "li"
    ],
    "windows": [
      "ul",
      "li"
    ],
    "communication": [
      "ul",
      "li"
    ],
    "foundation": [
      "ul",
      "li"
    ],
    "wcf)": [
      "ul",
      "li"
    ],
    "microsoft": [
      "ul",
      "li",
      "p"
    ],
    "visual": [
      "ul",
      "li"
    ],
    "studio®": [
      "ul",
      "li"
    ],
    "description": [
      "h1"
    ],
    "use": [
      "p",
      "li",
      "ul",
      "li"
    ],
    "the": [
      "p",
      "p",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre",
      "li",
      "li",
      "li",
      "title"
    ],
    "following": [
      "p",
      "ol",
      "li"
    ],
    "steps": [
      "p"
    ],
    "impersonate": [
      "p",
      "ol",
      "li",
      "title"
    ],
    "original": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ol",
      "pre",
      "ul",
      "li",
      "title"
    ],
    "caller": [
      "p",
      "ol",
      "ol",
      "li",
      "li",
      "ul",
      "li",
      "title"
    ],
    "using": [
      "p",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "pre",
      "li",
      "title"
    ],
    "s4u": [
      "p",
      "title"
    ],
    "kerberos": [
      "p",
      "title"
    ],
    "extensions": [
      "p",
      "title"
    ],
    "grant": [
      "ol",
      "li"
    ],
    "your": [
      "ol",
      "li"
    ],
    "wcf": [
      "ol",
      "li"
    ],
    "process": [
      "ol",
      "li"
    ],
    "account": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "act": [
      "ol",
      "li",
      "strong"
    ],
    "as": [
      "ol",
      "ol",
      "li",
      "strong",
      "li"
    ],
    "part": [
      "ol",
      "li",
      "strong"
    ],
    "of": [
      "ol",
      "ol",
      "li",
      "strong",
      "li",
      "ol",
      "pre"
    ],
    "operating": [
      "ol",
      "li",
      "strong"
    ],
    "system": [
      "ol",
      "li",
      "strong"
    ],
    "user": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li"
    ],
    "right": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "if": [
      "ol",
      "li"
    ],
    "you": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "are": [
      "ol",
      "li"
    ],
    "running": [
      "ol",
      "li"
    ],
    "network": [
      "ol",
      "li"
    ],
    "service": [
      "ol",
      "li"
    ],
    "-": [
      "ol",
      "li"
    ],
    "by": [
      "ol",
      "li"
    ],
    "default": [
      "ol",
      "li"
    ],
    "it": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "has": [
      "ol",
      "li"
    ],
    "this": [
      "ol",
      "li"
    ],
    "get": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "name": [
      "ol",
      "li"
    ],
    "for": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li",
      "li"
    ],
    "and": [
      "ol",
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "li",
      "ul",
      "ul",
      "li",
      "li"
    ],
    "create": [
      "ol",
      "li"
    ],
    "a": [
      "ol",
      "li"
    ],
    "upn": [
      "ol",
      "ol",
      "li",
      "li"
    ],
    "like": [
      "ol",
      "li"
    ],
    "format": [
      "ol",
      "li"
    ],
    "username@fullyqualifieddomainnamecomuse": [
      "ol"
    ],
    "windowsidentity": [
      "ol",
      "ol",
      "ol",
      "li",
      "li",
      "li",
      "strong",
      "ol",
      "pre"
    ],
    "constructor": [
      "ol",
      "li"
    ],
    "pass": [
      "ol",
      "li"
    ],
    "string": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "pre"
    ],
    "parameter": [
      "ol",
      "li"
    ],
    "token": [
      "ol",
      "li"
    ],
    "username": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "=": [
      "ol",
      "ol",
      "li",
      "li",
      "ol",
      "ol",
      "pre",
      "pre"
    ],
    "“username@fullyqualifieddomainnamecom”;": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "winid": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "new": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "windowsidentityusername);": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "winid.impersonate())": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "{": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "//": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "access": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "local": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "resources": [
      "ol",
      "li",
      "ol",
      "pre",
      "h1"
    ],
    "on": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "behalf": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "callers": [
      "ol",
      "li",
      "ol",
      "pre"
    ],
    "}make": [
      "ol"
    ],
    "sure": [
      "ol",
      "li"
    ],
    "revert": [
      "ol",
      "li"
    ],
    "impersonation": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "in": [
      "ol",
      "li",
      "ul",
      "li"
    ],
    "above": [
      "ol",
      "li"
    ],
    "example": [
      "ol",
      "li"
    ],
    "statement": [
      "ol",
      "li"
    ],
    "does": [
      "ol",
      "li"
    ],
    "automatically": [
      "ol",
      "li"
    ],
    "username@fullyqualifieddomainnamecom": [
      "li",
      "strong"
    ],
    "}": [
      "li",
      "ol",
      "pre"
    ],
    "make": [
      "li"
    ],
    "additional": [
      "h1"
    ],
    "more": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "information": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "see": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "“delegation": [
      "ul",
      "li"
    ],
    "with": [
      "ul",
      "li"
    ],
    "wcf”": [
      "ul",
      "ul",
      "li",
      "li"
    ],
    "at": [
      "ul",
      "li"
    ],
    "http//msdn2.microsoft.com/en-us/library/ms730088.aspxfor": [
      "ul"
    ],
    "“how": [
      "ul",
      "li"
    ],
    "protocol": [
      "ul",
      "li"
    ],
    "transition": [
      "ul",
      "li"
    ],
    "impersonating": [
      "ul",
      "li"
    ],
    "delegating": [
      "ul",
      "li"
    ],
    "http//msdn2.microsoft.com/en-us/library/ms730088.aspx": [
      "li",
      "a"
    ],
    "adapted": [
      "p"
    ],
    "from": [
      "p"
    ],
    "patterns": [
      "p"
    ],
    "&": [
      "p"
    ],
    "practices": [
      "p"
    ],
    "guidance": [
      "p"
    ],
    "how": [
      "title"
    ]
  },
  "tags": {
    "h1": [
      "Applies to",
      "Description",
      "Additional Resources"
    ],
    "ul": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5 Microsoft Visual Studio® 2008",
      "For more information, see “Delegation and Impersonation with WCF” at http://msdn2.microsoft.com/en-us/library/ms730088.aspxFor more information, see “How to Use Protocol Transition for Impersonating and Delegating Original Caller in WCF”."
    ],
    "li": [
      "Microsoft® Windows Communication Foundation (WCF) 3.5",
      "Microsoft Visual Studio® 2008",
      "Grant your WCF process account the Act as part of the operating system user right. If you are running using the network service account - by default it has this right.",
      "Get the user name for the original caller and create a UPN for the user like the following format username@FullyQualifiedDomainName.com",
      "Use the WindowsIdentity constructor and pass the UPN string as the parameter and get the WindowsIdentity token and impersonate the original caller.   String username = “username@FullyQualifiedDomainName.com”;   WindowsIdentity winId = new WindowsIdentity(userName);   using (winId.Impersonate())   {       // access the local resources on behalf of the original callers          }",
      "Make sure to revert the impersonation, in the above example the using statement does it automatically for you.",
      "For more information, see “Delegation and Impersonation with WCF” at http://msdn2.microsoft.com/en-us/library/ms730088.aspx",
      "For more information, see “How to Use Protocol Transition for Impersonating and Delegating Original Caller in WCF”."
    ],
    "p": [
      "Use the following steps to impersonate the original caller using S4U Kerberos extensions:",
      "Adapted from Microsoft patterns & practices guidance."
    ],
    "ol": [
      "Grant your WCF process account the Act as part of the operating system user right. If you are running using the network service account - by default it has this right. Get the user name for the original caller and create a UPN for the user like the following format username@FullyQualifiedDomainName.comUse the WindowsIdentity constructor and pass the UPN string as the parameter and get the WindowsIdentity token and impersonate the original caller.   String username = “username@FullyQualifiedDomainName.com”;   WindowsIdentity winId = new WindowsIdentity(userName);   using (winId.Impersonate())   {       // access the local resources on behalf of the original callers          }Make sure to revert the impersonation, in the above example the using statement does it automatically for you.",
      "String username = “username@FullyQualifiedDomainName.com”;   WindowsIdentity winId = new WindowsIdentity(userName);   using (winId.Impersonate())   {       // access the local resources on behalf of the original callers          }"
    ],
    "strong": [
      "Act as part of the operating system",
      "username@FullyQualifiedDomainName.com",
      "WindowsIdentity"
    ],
    "pre": [
      "String username = “username@FullyQualifiedDomainName.com”;   WindowsIdentity winId = new WindowsIdentity(userName);   using (winId.Impersonate())   {       // access the local resources on behalf of the original callers          }"
    ],
    "br": [
      "",
      "",
      "",
      "",
      ""
    ],
    "a": [
      "http://msdn2.microsoft.com/en-us/library/ms730088.aspx"
    ],
    "hr": [
      ""
    ]
  },
  "links": [
    {
      "href": "http://msdn2.microsoft.com/en-us/library/ms730088.aspx",
      "text": "http://msdn2.microsoft.com/en-us/library/ms730088.aspx"
    }
  ],
  "html": "<h1>Applies to</h1>\r\n  <ul>\r\n    <li>Microsoft&#174; Windows Communication Foundation (WCF) 3.5 <li>Microsoft Visual Studio&#174; 2008</li></li>\r\n  </ul>\r\n  <h1>Description</h1>\r\n  <p>Use the following steps to impersonate the original caller using S4U Kerberos extensions:</p>\r\n  <ol>\r\n    <li>Grant your WCF process account the <strong>Act as part of the operating system</strong> user right. If you are running using the network service account - by default it has this right. <li>Get the user name for the original caller and create a UPN for the user like the following format <strong>username&#64;FullyQualifiedDomainName.com</strong><li>Use the WindowsIdentity constructor and pass the UPN string as the parameter and get the <strong>WindowsIdentity</strong> token and impersonate the original caller.<ol><pre>   String username = &#8220;username&#64;FullyQualifiedDomainName.com&#8221;;<br />   WindowsIdentity winId = new WindowsIdentity(userName);<br />   using (winId.Impersonate())<br />   &#123;<br />       // access the local resources on behalf of the original callers       <br />   &#125;</pre></ol><li>Make sure to revert the impersonation, in the above example the using statement does it automatically for you.</li></li></li></li>\r\n  </ol>\r\n  <h1>Additional Resources</h1>\r\n  <ul>\r\n    <li>For more information, see &#8220;Delegation and Impersonation with WCF&#8221; at <a href=\"http://msdn2.microsoft.com/en-us/library/ms730088.aspx\">http://msdn2.microsoft.com/en-us/library/ms730088.aspx</a><li>For more information, see &#8220;How to Use Protocol Transition for Impersonating and Delegating Original Caller in WCF&#8221;.</li></li>\r\n  </ul>\r\n  <hr />\r\n  <p>Adapted from Microsoft patterns & practices guidance.</p>"
}